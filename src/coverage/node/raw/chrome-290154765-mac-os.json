{
    "build/node-base/node-base.js": {
        "path": "build/node-base/node-base.js",
        "s": {
            "1": 1,
            "2": 2,
            "3": 2,
            "4": 2,
            "5": 2,
            "6": 2,
            "7": 118,
            "8": 1,
            "9": 118,
            "10": 2,
            "11": 32,
            "12": 32,
            "13": 81,
            "14": 81,
            "15": 10,
            "16": 71,
            "17": 8,
            "18": 81,
            "19": 42,
            "20": 81,
            "21": 81,
            "22": 6,
            "23": 12,
            "24": 20,
            "25": 8,
            "26": 7,
            "27": 7,
            "28": 21,
            "29": 21,
            "30": 4,
            "31": 4,
            "32": 1,
            "33": 4,
            "34": 2,
            "35": 2,
            "36": 2,
            "37": 2,
            "38": 2,
            "39": 9,
            "40": 2,
            "41": 2,
            "42": 1,
            "43": 0,
            "44": 0,
            "45": 1,
            "46": 23,
            "47": 23,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 23,
            "54": 11,
            "55": 2,
            "56": 2,
            "57": 2,
            "58": 2,
            "59": 2,
            "60": 2,
            "61": 2,
            "62": 2,
            "63": 2,
            "64": 25,
            "65": 25,
            "66": 2,
            "67": 12,
            "68": 12,
            "69": 1,
            "70": 11,
            "71": 12,
            "72": 12,
            "73": 6,
            "74": 1,
            "75": 4,
            "76": 1,
            "77": 2,
            "78": 2,
            "79": 2,
            "80": 2,
            "81": 27,
            "82": 2,
            "83": 2,
            "84": 3,
            "85": 2,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 2,
            "93": 2,
            "94": 3,
            "95": 3,
            "96": 3,
            "97": 7,
            "98": 7,
            "99": 2,
            "100": 12,
            "101": 12,
            "102": 12,
            "103": 12,
            "104": 2,
            "105": 12,
            "106": 7,
            "107": 5,
            "108": 12,
            "109": 7,
            "110": 12,
            "111": 3,
            "112": 3,
            "113": 3,
            "114": 5,
            "115": 5,
            "116": 2,
            "117": 2,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 2,
            "124": 1,
            "125": 1,
            "126": 1,
            "127": 2,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 2,
            "138": 0,
            "139": 0,
            "140": 2,
            "141": 76,
            "142": 37,
            "143": 49,
            "144": 49,
            "145": 49,
            "146": 39,
            "147": 19,
            "148": 20,
            "149": 10,
            "150": 5,
            "151": 5,
            "152": 3,
            "153": 5,
            "154": 49,
            "155": 5,
            "156": 5,
            "157": 5,
            "158": 9,
            "159": 9,
            "160": 9,
            "161": 9,
            "162": 9,
            "163": 9,
            "164": 5,
            "165": 29,
            "166": 29,
            "167": 29,
            "168": 27,
            "169": 27,
            "170": 13,
            "171": 14,
            "172": 27,
            "173": 37,
            "174": 12,
            "175": 6,
            "176": 6,
            "177": 37,
            "178": 2,
            "179": 1,
            "180": 1,
            "181": 4,
            "182": 4,
            "183": 2,
            "184": 2
        },
        "b": {
            "1": [
                1,
                117
            ],
            "2": [
                118,
                1
            ],
            "3": [
                10,
                71
            ],
            "4": [
                8,
                63
            ],
            "5": [
                71,
                31
            ],
            "6": [
                42,
                39
            ],
            "7": [
                81,
                71
            ],
            "8": [
                42,
                10,
                6
            ],
            "9": [
                1,
                3
            ],
            "10": [
                0,
                23
            ],
            "11": [
                0,
                0
            ],
            "12": [
                1,
                11
            ],
            "13": [
                12,
                9
            ],
            "14": [
                0,
                0
            ],
            "15": [
                2,
                0
            ],
            "16": [
                2,
                10
            ],
            "17": [
                2,
                0
            ],
            "18": [
                7,
                5
            ],
            "19": [
                7,
                5
            ],
            "20": [
                0,
                2
            ],
            "21": [
                0,
                0
            ],
            "22": [
                0,
                0
            ],
            "23": [
                0,
                0
            ],
            "24": [
                0,
                0
            ],
            "25": [
                0,
                0
            ],
            "26": [
                0,
                2
            ],
            "27": [
                37,
                39
            ],
            "28": [
                39,
                10
            ],
            "29": [
                19,
                20
            ],
            "30": [
                5,
                5
            ],
            "31": [
                10,
                6
            ],
            "32": [
                5,
                0
            ],
            "33": [
                9,
                0
            ],
            "34": [
                9,
                0
            ],
            "35": [
                29,
                29,
                17
            ],
            "36": [
                13,
                14
            ],
            "37": [
                12,
                25
            ],
            "38": [
                6,
                6
            ],
            "39": [
                0,
                1
            ],
            "40": [
                1,
                3
            ],
            "41": [
                1,
                1
            ]
        },
        "f": {
            "1": 2,
            "2": 118,
            "3": 32,
            "4": 81,
            "5": 6,
            "6": 12,
            "7": 20,
            "8": 8,
            "9": 7,
            "10": 21,
            "11": 4,
            "12": 9,
            "13": 2,
            "14": 1,
            "15": 0,
            "16": 1,
            "17": 23,
            "18": 11,
            "19": 2,
            "20": 25,
            "21": 12,
            "22": 6,
            "23": 1,
            "24": 4,
            "25": 1,
            "26": 2,
            "27": 27,
            "28": 2,
            "29": 3,
            "30": 0,
            "31": 3,
            "32": 7,
            "33": 2,
            "34": 12,
            "35": 12,
            "36": 3,
            "37": 5,
            "38": 0,
            "39": 1,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 76,
            "44": 49,
            "45": 3,
            "46": 5,
            "47": 29,
            "48": 27,
            "49": 37,
            "50": 1,
            "51": 4,
            "52": 2
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 21
                    },
                    "end": {
                        "line": 1,
                        "column": 40
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 117,
                "loc": {
                    "start": {
                        "line": 117,
                        "column": 16
                    },
                    "end": {
                        "line": 117,
                        "column": 36
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 162,
                "loc": {
                    "start": {
                        "line": 162,
                        "column": 12
                    },
                    "end": {
                        "line": 162,
                        "column": 37
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 167,
                "loc": {
                    "start": {
                        "line": 167,
                        "column": 13
                    },
                    "end": {
                        "line": 167,
                        "column": 38
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 193,
                "loc": {
                    "start": {
                        "line": 193,
                        "column": 13
                    },
                    "end": {
                        "line": 193,
                        "column": 31
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 205,
                "loc": {
                    "start": {
                        "line": 205,
                        "column": 12
                    },
                    "end": {
                        "line": 205,
                        "column": 30
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 216,
                "loc": {
                    "start": {
                        "line": 216,
                        "column": 17
                    },
                    "end": {
                        "line": 216,
                        "column": 32
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 228,
                "loc": {
                    "start": {
                        "line": 228,
                        "column": 18
                    },
                    "end": {
                        "line": 228,
                        "column": 45
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 238,
                "loc": {
                    "start": {
                        "line": 238,
                        "column": 14
                    },
                    "end": {
                        "line": 238,
                        "column": 29
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 253,
                "loc": {
                    "start": {
                        "line": 253,
                        "column": 16
                    },
                    "end": {
                        "line": 253,
                        "column": 34
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 264,
                "loc": {
                    "start": {
                        "line": 264,
                        "column": 16
                    },
                    "end": {
                        "line": 264,
                        "column": 27
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 394,
                "loc": {
                    "start": {
                        "line": 394,
                        "column": 16
                    },
                    "end": {
                        "line": 394,
                        "column": 27
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 398,
                "loc": {
                    "start": {
                        "line": 398,
                        "column": 16
                    },
                    "end": {
                        "line": 398,
                        "column": 34
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 411,
                "loc": {
                    "start": {
                        "line": 411,
                        "column": 16
                    },
                    "end": {
                        "line": 411,
                        "column": 27
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 415,
                "loc": {
                    "start": {
                        "line": 415,
                        "column": 16
                    },
                    "end": {
                        "line": 415,
                        "column": 30
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 422,
                "loc": {
                    "start": {
                        "line": 422,
                        "column": 16
                    },
                    "end": {
                        "line": 422,
                        "column": 27
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 434,
                "loc": {
                    "start": {
                        "line": 434,
                        "column": 16
                    },
                    "end": {
                        "line": 434,
                        "column": 27
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 454,
                "loc": {
                    "start": {
                        "line": 454,
                        "column": 16
                    },
                    "end": {
                        "line": 454,
                        "column": 27
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 458,
                "loc": {
                    "start": {
                        "line": 458,
                        "column": 16
                    },
                    "end": {
                        "line": 458,
                        "column": 30
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 566,
                "loc": {
                    "start": {
                        "line": 566,
                        "column": 11
                    },
                    "end": {
                        "line": 566,
                        "column": 35
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 574,
                "loc": {
                    "start": {
                        "line": 574,
                        "column": 18
                    },
                    "end": {
                        "line": 574,
                        "column": 46
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 633,
                "loc": {
                    "start": {
                        "line": 633,
                        "column": 8
                    },
                    "end": {
                        "line": 633,
                        "column": 36
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 648,
                "loc": {
                    "start": {
                        "line": 648,
                        "column": 10
                    },
                    "end": {
                        "line": 648,
                        "column": 38
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 665,
                "loc": {
                    "start": {
                        "line": 665,
                        "column": 11
                    },
                    "end": {
                        "line": 665,
                        "column": 39
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 683,
                "loc": {
                    "start": {
                        "line": 683,
                        "column": 15
                    },
                    "end": {
                        "line": 683,
                        "column": 43
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 747,
                "loc": {
                    "start": {
                        "line": 747,
                        "column": 16
                    },
                    "end": {
                        "line": 747,
                        "column": 28
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 752,
                "loc": {
                    "start": {
                        "line": 752,
                        "column": 16
                    },
                    "end": {
                        "line": 752,
                        "column": 27
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 758,
                "loc": {
                    "start": {
                        "line": 758,
                        "column": 16
                    },
                    "end": {
                        "line": 758,
                        "column": 28
                    }
                }
            },
            "29": {
                "name": "(anonymous_29)",
                "line": 763,
                "loc": {
                    "start": {
                        "line": 763,
                        "column": 16
                    },
                    "end": {
                        "line": 763,
                        "column": 27
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 770,
                "loc": {
                    "start": {
                        "line": 770,
                        "column": 12
                    },
                    "end": {
                        "line": 770,
                        "column": 27
                    }
                }
            },
            "31": {
                "name": "(anonymous_31)",
                "line": 804,
                "loc": {
                    "start": {
                        "line": 804,
                        "column": 10
                    },
                    "end": {
                        "line": 804,
                        "column": 29
                    }
                }
            },
            "32": {
                "name": "(anonymous_32)",
                "line": 817,
                "loc": {
                    "start": {
                        "line": 817,
                        "column": 11
                    },
                    "end": {
                        "line": 817,
                        "column": 22
                    }
                }
            },
            "33": {
                "name": "(anonymous_33)",
                "line": 827,
                "loc": {
                    "start": {
                        "line": 827,
                        "column": 15
                    },
                    "end": {
                        "line": 827,
                        "column": 26
                    }
                }
            },
            "34": {
                "name": "(anonymous_34)",
                "line": 842,
                "loc": {
                    "start": {
                        "line": 842,
                        "column": 16
                    },
                    "end": {
                        "line": 842,
                        "column": 39
                    }
                }
            },
            "35": {
                "name": "(anonymous_35)",
                "line": 847,
                "loc": {
                    "start": {
                        "line": 847,
                        "column": 17
                    },
                    "end": {
                        "line": 847,
                        "column": 40
                    }
                }
            },
            "36": {
                "name": "(anonymous_36)",
                "line": 879,
                "loc": {
                    "start": {
                        "line": 879,
                        "column": 10
                    },
                    "end": {
                        "line": 879,
                        "column": 29
                    }
                }
            },
            "37": {
                "name": "(anonymous_37)",
                "line": 892,
                "loc": {
                    "start": {
                        "line": 892,
                        "column": 11
                    },
                    "end": {
                        "line": 892,
                        "column": 22
                    }
                }
            },
            "38": {
                "name": "(anonymous_38)",
                "line": 944,
                "loc": {
                    "start": {
                        "line": 944,
                        "column": 36
                    },
                    "end": {
                        "line": 944,
                        "column": 51
                    }
                }
            },
            "39": {
                "name": "(anonymous_39)",
                "line": 957,
                "loc": {
                    "start": {
                        "line": 957,
                        "column": 25
                    },
                    "end": {
                        "line": 957,
                        "column": 37
                    }
                }
            },
            "40": {
                "name": "(anonymous_40)",
                "line": 969,
                "loc": {
                    "start": {
                        "line": 969,
                        "column": 12
                    },
                    "end": {
                        "line": 969,
                        "column": 26
                    }
                }
            },
            "41": {
                "name": "(anonymous_41)",
                "line": 986,
                "loc": {
                    "start": {
                        "line": 986,
                        "column": 12
                    },
                    "end": {
                        "line": 986,
                        "column": 23
                    }
                }
            },
            "42": {
                "name": "(anonymous_42)",
                "line": 996,
                "loc": {
                    "start": {
                        "line": 996,
                        "column": 20
                    },
                    "end": {
                        "line": 996,
                        "column": 31
                    }
                }
            },
            "43": {
                "name": "(anonymous_43)",
                "line": 1011,
                "loc": {
                    "start": {
                        "line": 1011,
                        "column": 15
                    },
                    "end": {
                        "line": 1011,
                        "column": 26
                    }
                }
            },
            "44": {
                "name": "(anonymous_44)",
                "line": 1029,
                "loc": {
                    "start": {
                        "line": 1029,
                        "column": 13
                    },
                    "end": {
                        "line": 1029,
                        "column": 28
                    }
                }
            },
            "45": {
                "name": "(anonymous_45)",
                "line": 1042,
                "loc": {
                    "start": {
                        "line": 1042,
                        "column": 32
                    },
                    "end": {
                        "line": 1042,
                        "column": 47
                    }
                }
            },
            "46": {
                "name": "(anonymous_46)",
                "line": 1053,
                "loc": {
                    "start": {
                        "line": 1053,
                        "column": 24
                    },
                    "end": {
                        "line": 1053,
                        "column": 38
                    }
                }
            },
            "47": {
                "name": "(anonymous_47)",
                "line": 1077,
                "loc": {
                    "start": {
                        "line": 1077,
                        "column": 23
                    },
                    "end": {
                        "line": 1077,
                        "column": 38
                    }
                }
            },
            "48": {
                "name": "(anonymous_48)",
                "line": 1097,
                "loc": {
                    "start": {
                        "line": 1097,
                        "column": 13
                    },
                    "end": {
                        "line": 1097,
                        "column": 33
                    }
                }
            },
            "49": {
                "name": "(anonymous_49)",
                "line": 1116,
                "loc": {
                    "start": {
                        "line": 1116,
                        "column": 15
                    },
                    "end": {
                        "line": 1116,
                        "column": 30
                    }
                }
            },
            "50": {
                "name": "(anonymous_50)",
                "line": 1141,
                "loc": {
                    "start": {
                        "line": 1141,
                        "column": 13
                    },
                    "end": {
                        "line": 1141,
                        "column": 28
                    }
                }
            },
            "51": {
                "name": "(anonymous_51)",
                "line": 1156,
                "loc": {
                    "start": {
                        "line": 1156,
                        "column": 13
                    },
                    "end": {
                        "line": 1156,
                        "column": 33
                    }
                }
            },
            "52": {
                "name": "(anonymous_52)",
                "line": 1169,
                "loc": {
                    "start": {
                        "line": 1169,
                        "column": 15
                    },
                    "end": {
                        "line": 1169,
                        "column": 30
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 1176,
                    "column": 84
                }
            },
            "2": {
                "start": {
                    "line": 8,
                    "column": 0
                },
                "end": {
                    "line": 52,
                    "column": 2
                }
            },
            "3": {
                "start": {
                    "line": 54,
                    "column": 0
                },
                "end": {
                    "line": 54,
                    "column": 36
                }
            },
            "4": {
                "start": {
                    "line": 97,
                    "column": 0
                },
                "end": {
                    "line": 97,
                    "column": 51
                }
            },
            "5": {
                "start": {
                    "line": 103,
                    "column": 0
                },
                "end": {
                    "line": 104,
                    "column": 18
                }
            },
            "6": {
                "start": {
                    "line": 117,
                    "column": 0
                },
                "end": {
                    "line": 122,
                    "column": 2
                }
            },
            "7": {
                "start": {
                    "line": 118,
                    "column": 4
                },
                "end": {
                    "line": 120,
                    "column": 5
                }
            },
            "8": {
                "start": {
                    "line": 119,
                    "column": 8
                },
                "end": {
                    "line": 119,
                    "column": 24
                }
            },
            "9": {
                "start": {
                    "line": 121,
                    "column": 4
                },
                "end": {
                    "line": 121,
                    "column": 42
                }
            },
            "10": {
                "start": {
                    "line": 124,
                    "column": 0
                },
                "end": {
                    "line": 276,
                    "column": 3
                }
            },
            "11": {
                "start": {
                    "line": 163,
                    "column": 8
                },
                "end": {
                    "line": 163,
                    "column": 37
                }
            },
            "12": {
                "start": {
                    "line": 164,
                    "column": 8
                },
                "end": {
                    "line": 164,
                    "column": 20
                }
            },
            "13": {
                "start": {
                    "line": 168,
                    "column": 8
                },
                "end": {
                    "line": 169,
                    "column": 23
                }
            },
            "14": {
                "start": {
                    "line": 171,
                    "column": 8
                },
                "end": {
                    "line": 175,
                    "column": 9
                }
            },
            "15": {
                "start": {
                    "line": 172,
                    "column": 12
                },
                "end": {
                    "line": 172,
                    "column": 49
                }
            },
            "16": {
                "start": {
                    "line": 173,
                    "column": 15
                },
                "end": {
                    "line": 175,
                    "column": 9
                }
            },
            "17": {
                "start": {
                    "line": 174,
                    "column": 12
                },
                "end": {
                    "line": 174,
                    "column": 32
                }
            },
            "18": {
                "start": {
                    "line": 177,
                    "column": 8
                },
                "end": {
                    "line": 179,
                    "column": 9
                }
            },
            "19": {
                "start": {
                    "line": 178,
                    "column": 12
                },
                "end": {
                    "line": 178,
                    "column": 65
                }
            },
            "20": {
                "start": {
                    "line": 180,
                    "column": 8
                },
                "end": {
                    "line": 180,
                    "column": 50
                }
            },
            "21": {
                "start": {
                    "line": 182,
                    "column": 8
                },
                "end": {
                    "line": 182,
                    "column": 19
                }
            },
            "22": {
                "start": {
                    "line": 194,
                    "column": 8
                },
                "end": {
                    "line": 194,
                    "column": 39
                }
            },
            "23": {
                "start": {
                    "line": 206,
                    "column": 8
                },
                "end": {
                    "line": 206,
                    "column": 42
                }
            },
            "24": {
                "start": {
                    "line": 217,
                    "column": 8
                },
                "end": {
                    "line": 217,
                    "column": 51
                }
            },
            "25": {
                "start": {
                    "line": 229,
                    "column": 8
                },
                "end": {
                    "line": 229,
                    "column": 63
                }
            },
            "26": {
                "start": {
                    "line": 239,
                    "column": 8
                },
                "end": {
                    "line": 239,
                    "column": 33
                }
            },
            "27": {
                "start": {
                    "line": 240,
                    "column": 8
                },
                "end": {
                    "line": 240,
                    "column": 20
                }
            },
            "28": {
                "start": {
                    "line": 254,
                    "column": 8
                },
                "end": {
                    "line": 254,
                    "column": 41
                }
            },
            "29": {
                "start": {
                    "line": 255,
                    "column": 8
                },
                "end": {
                    "line": 255,
                    "column": 20
                }
            },
            "30": {
                "start": {
                    "line": 265,
                    "column": 8
                },
                "end": {
                    "line": 265,
                    "column": 24
                }
            },
            "31": {
                "start": {
                    "line": 267,
                    "column": 8
                },
                "end": {
                    "line": 272,
                    "column": 9
                }
            },
            "32": {
                "start": {
                    "line": 271,
                    "column": 12
                },
                "end": {
                    "line": 271,
                    "column": 70
                }
            },
            "33": {
                "start": {
                    "line": 274,
                    "column": 8
                },
                "end": {
                    "line": 274,
                    "column": 37
                }
            },
            "34": {
                "start": {
                    "line": 286,
                    "column": 0
                },
                "end": {
                    "line": 286,
                    "column": 55
                }
            },
            "35": {
                "start": {
                    "line": 293,
                    "column": 0
                },
                "end": {
                    "line": 293,
                    "column": 55
                }
            },
            "36": {
                "start": {
                    "line": 295,
                    "column": 0
                },
                "end": {
                    "line": 371,
                    "column": 3
                }
            },
            "37": {
                "start": {
                    "line": 377,
                    "column": 0
                },
                "end": {
                    "line": 378,
                    "column": 18
                }
            },
            "38": {
                "start": {
                    "line": 386,
                    "column": 0
                },
                "end": {
                    "line": 463,
                    "column": 2
                }
            },
            "39": {
                "start": {
                    "line": 395,
                    "column": 12
                },
                "end": {
                    "line": 395,
                    "column": 45
                }
            },
            "40": {
                "start": {
                    "line": 399,
                    "column": 12
                },
                "end": {
                    "line": 399,
                    "column": 47
                }
            },
            "41": {
                "start": {
                    "line": 400,
                    "column": 12
                },
                "end": {
                    "line": 400,
                    "column": 27
                }
            },
            "42": {
                "start": {
                    "line": 412,
                    "column": 12
                },
                "end": {
                    "line": 412,
                    "column": 57
                }
            },
            "43": {
                "start": {
                    "line": 416,
                    "column": 12
                },
                "end": {
                    "line": 416,
                    "column": 55
                }
            },
            "44": {
                "start": {
                    "line": 417,
                    "column": 12
                },
                "end": {
                    "line": 417,
                    "column": 23
                }
            },
            "45": {
                "start": {
                    "line": 423,
                    "column": 12
                },
                "end": {
                    "line": 423,
                    "column": 61
                }
            },
            "46": {
                "start": {
                    "line": 435,
                    "column": 12
                },
                "end": {
                    "line": 437,
                    "column": 35
                }
            },
            "47": {
                "start": {
                    "line": 439,
                    "column": 12
                },
                "end": {
                    "line": 448,
                    "column": 13
                }
            },
            "48": {
                "start": {
                    "line": 440,
                    "column": 16
                },
                "end": {
                    "line": 440,
                    "column": 45
                }
            },
            "49": {
                "start": {
                    "line": 441,
                    "column": 16
                },
                "end": {
                    "line": 441,
                    "column": 30
                }
            },
            "50": {
                "start": {
                    "line": 443,
                    "column": 16
                },
                "end": {
                    "line": 447,
                    "column": 17
                }
            },
            "51": {
                "start": {
                    "line": 444,
                    "column": 20
                },
                "end": {
                    "line": 446,
                    "column": 21
                }
            },
            "52": {
                "start": {
                    "line": 445,
                    "column": 24
                },
                "end": {
                    "line": 445,
                    "column": 66
                }
            },
            "53": {
                "start": {
                    "line": 449,
                    "column": 12
                },
                "end": {
                    "line": 449,
                    "column": 35
                }
            },
            "54": {
                "start": {
                    "line": 455,
                    "column": 12
                },
                "end": {
                    "line": 455,
                    "column": 46
                }
            },
            "55": {
                "start": {
                    "line": 459,
                    "column": 12
                },
                "end": {
                    "line": 459,
                    "column": 44
                }
            },
            "56": {
                "start": {
                    "line": 460,
                    "column": 12
                },
                "end": {
                    "line": 460,
                    "column": 23
                }
            },
            "57": {
                "start": {
                    "line": 465,
                    "column": 0
                },
                "end": {
                    "line": 488,
                    "column": 3
                }
            },
            "58": {
                "start": {
                    "line": 494,
                    "column": 0
                },
                "end": {
                    "line": 494,
                    "column": 20
                }
            },
            "59": {
                "start": {
                    "line": 495,
                    "column": 0
                },
                "end": {
                    "line": 495,
                    "column": 28
                }
            },
            "60": {
                "start": {
                    "line": 503,
                    "column": 0
                },
                "end": {
                    "line": 547,
                    "column": 2
                }
            },
            "61": {
                "start": {
                    "line": 552,
                    "column": 0
                },
                "end": {
                    "line": 552,
                    "column": 44
                }
            },
            "62": {
                "start": {
                    "line": 554,
                    "column": 0
                },
                "end": {
                    "line": 554,
                    "column": 33
                }
            },
            "63": {
                "start": {
                    "line": 556,
                    "column": 0
                },
                "end": {
                    "line": 571,
                    "column": 3
                }
            },
            "64": {
                "start": {
                    "line": 567,
                    "column": 8
                },
                "end": {
                    "line": 567,
                    "column": 56
                }
            },
            "65": {
                "start": {
                    "line": 568,
                    "column": 8
                },
                "end": {
                    "line": 568,
                    "column": 20
                }
            },
            "66": {
                "start": {
                    "line": 573,
                    "column": 0
                },
                "end": {
                    "line": 686,
                    "column": 3
                }
            },
            "67": {
                "start": {
                    "line": 576,
                    "column": 8
                },
                "end": {
                    "line": 576,
                    "column": 47
                }
            },
            "68": {
                "start": {
                    "line": 578,
                    "column": 8
                },
                "end": {
                    "line": 582,
                    "column": 9
                }
            },
            "69": {
                "start": {
                    "line": 579,
                    "column": 12
                },
                "end": {
                    "line": 579,
                    "column": 34
                }
            },
            "70": {
                "start": {
                    "line": 581,
                    "column": 12
                },
                "end": {
                    "line": 581,
                    "column": 43
                }
            },
            "71": {
                "start": {
                    "line": 584,
                    "column": 8
                },
                "end": {
                    "line": 584,
                    "column": 34
                }
            },
            "72": {
                "start": {
                    "line": 586,
                    "column": 8
                },
                "end": {
                    "line": 586,
                    "column": 20
                }
            },
            "73": {
                "start": {
                    "line": 634,
                    "column": 8
                },
                "end": {
                    "line": 634,
                    "column": 71
                }
            },
            "74": {
                "start": {
                    "line": 649,
                    "column": 8
                },
                "end": {
                    "line": 649,
                    "column": 73
                }
            },
            "75": {
                "start": {
                    "line": 666,
                    "column": 8
                },
                "end": {
                    "line": 666,
                    "column": 74
                }
            },
            "76": {
                "start": {
                    "line": 684,
                    "column": 8
                },
                "end": {
                    "line": 684,
                    "column": 78
                }
            },
            "77": {
                "start": {
                    "line": 688,
                    "column": 0
                },
                "end": {
                    "line": 703,
                    "column": 3
                }
            },
            "78": {
                "start": {
                    "line": 745,
                    "column": 0
                },
                "end": {
                    "line": 767,
                    "column": 3
                }
            },
            "79": {
                "start": {
                    "line": 748,
                    "column": 12
                },
                "end": {
                    "line": 748,
                    "column": 43
                }
            },
            "80": {
                "start": {
                    "line": 749,
                    "column": 12
                },
                "end": {
                    "line": 749,
                    "column": 21
                }
            },
            "81": {
                "start": {
                    "line": 753,
                    "column": 12
                },
                "end": {
                    "line": 753,
                    "column": 43
                }
            },
            "82": {
                "start": {
                    "line": 759,
                    "column": 12
                },
                "end": {
                    "line": 759,
                    "column": 42
                }
            },
            "83": {
                "start": {
                    "line": 760,
                    "column": 12
                },
                "end": {
                    "line": 760,
                    "column": 21
                }
            },
            "84": {
                "start": {
                    "line": 764,
                    "column": 12
                },
                "end": {
                    "line": 764,
                    "column": 42
                }
            },
            "85": {
                "start": {
                    "line": 769,
                    "column": 0
                },
                "end": {
                    "line": 783,
                    "column": 3
                }
            },
            "86": {
                "start": {
                    "line": 771,
                    "column": 8
                },
                "end": {
                    "line": 771,
                    "column": 17
                }
            },
            "87": {
                "start": {
                    "line": 772,
                    "column": 8
                },
                "end": {
                    "line": 776,
                    "column": 9
                }
            },
            "88": {
                "start": {
                    "line": 773,
                    "column": 12
                },
                "end": {
                    "line": 773,
                    "column": 28
                }
            },
            "89": {
                "start": {
                    "line": 774,
                    "column": 12
                },
                "end": {
                    "line": 774,
                    "column": 40
                }
            },
            "90": {
                "start": {
                    "line": 775,
                    "column": 12
                },
                "end": {
                    "line": 775,
                    "column": 41
                }
            },
            "91": {
                "start": {
                    "line": 778,
                    "column": 8
                },
                "end": {
                    "line": 781,
                    "column": 11
                }
            },
            "92": {
                "start": {
                    "line": 789,
                    "column": 0
                },
                "end": {
                    "line": 789,
                    "column": 20
                }
            },
            "93": {
                "start": {
                    "line": 791,
                    "column": 0
                },
                "end": {
                    "line": 900,
                    "column": 3
                }
            },
            "94": {
                "start": {
                    "line": 805,
                    "column": 8
                },
                "end": {
                    "line": 805,
                    "column": 51
                }
            },
            "95": {
                "start": {
                    "line": 806,
                    "column": 8
                },
                "end": {
                    "line": 806,
                    "column": 40
                }
            },
            "96": {
                "start": {
                    "line": 807,
                    "column": 8
                },
                "end": {
                    "line": 807,
                    "column": 20
                }
            },
            "97": {
                "start": {
                    "line": 818,
                    "column": 8
                },
                "end": {
                    "line": 818,
                    "column": 39
                }
            },
            "98": {
                "start": {
                    "line": 823,
                    "column": 8
                },
                "end": {
                    "line": 823,
                    "column": 37
                }
            },
            "99": {
                "start": {
                    "line": 828,
                    "column": 8
                },
                "end": {
                    "line": 828,
                    "column": 104
                }
            },
            "100": {
                "start": {
                    "line": 843,
                    "column": 8
                },
                "end": {
                    "line": 843,
                    "column": 48
                }
            },
            "101": {
                "start": {
                    "line": 844,
                    "column": 8
                },
                "end": {
                    "line": 844,
                    "column": 20
                }
            },
            "102": {
                "start": {
                    "line": 848,
                    "column": 8
                },
                "end": {
                    "line": 848,
                    "column": 51
                }
            },
            "103": {
                "start": {
                    "line": 851,
                    "column": 8
                },
                "end": {
                    "line": 853,
                    "column": 9
                }
            },
            "104": {
                "start": {
                    "line": 852,
                    "column": 12
                },
                "end": {
                    "line": 852,
                    "column": 44
                }
            },
            "105": {
                "start": {
                    "line": 855,
                    "column": 8
                },
                "end": {
                    "line": 859,
                    "column": 9
                }
            },
            "106": {
                "start": {
                    "line": 856,
                    "column": 12
                },
                "end": {
                    "line": 856,
                    "column": 25
                }
            },
            "107": {
                "start": {
                    "line": 858,
                    "column": 12
                },
                "end": {
                    "line": 858,
                    "column": 25
                }
            },
            "108": {
                "start": {
                    "line": 861,
                    "column": 8
                },
                "end": {
                    "line": 863,
                    "column": 9
                }
            },
            "109": {
                "start": {
                    "line": 862,
                    "column": 12
                },
                "end": {
                    "line": 862,
                    "column": 32
                }
            },
            "110": {
                "start": {
                    "line": 865,
                    "column": 8
                },
                "end": {
                    "line": 865,
                    "column": 20
                }
            },
            "111": {
                "start": {
                    "line": 880,
                    "column": 8
                },
                "end": {
                    "line": 880,
                    "column": 51
                }
            },
            "112": {
                "start": {
                    "line": 881,
                    "column": 8
                },
                "end": {
                    "line": 881,
                    "column": 41
                }
            },
            "113": {
                "start": {
                    "line": 882,
                    "column": 8
                },
                "end": {
                    "line": 882,
                    "column": 20
                }
            },
            "114": {
                "start": {
                    "line": 893,
                    "column": 8
                },
                "end": {
                    "line": 893,
                    "column": 40
                }
            },
            "115": {
                "start": {
                    "line": 898,
                    "column": 8
                },
                "end": {
                    "line": 898,
                    "column": 41
                }
            },
            "116": {
                "start": {
                    "line": 902,
                    "column": 0
                },
                "end": {
                    "line": 941,
                    "column": 3
                }
            },
            "117": {
                "start": {
                    "line": 943,
                    "column": 0
                },
                "end": {
                    "line": 953,
                    "column": 1
                }
            },
            "118": {
                "start": {
                    "line": 944,
                    "column": 4
                },
                "end": {
                    "line": 952,
                    "column": 6
                }
            },
            "119": {
                "start": {
                    "line": 945,
                    "column": 8
                },
                "end": {
                    "line": 949,
                    "column": 9
                }
            },
            "120": {
                "start": {
                    "line": 946,
                    "column": 12
                },
                "end": {
                    "line": 948,
                    "column": 13
                }
            },
            "121": {
                "start": {
                    "line": 947,
                    "column": 16
                },
                "end": {
                    "line": 947,
                    "column": 28
                }
            },
            "122": {
                "start": {
                    "line": 950,
                    "column": 8
                },
                "end": {
                    "line": 951,
                    "column": 55
                }
            },
            "123": {
                "start": {
                    "line": 957,
                    "column": 0
                },
                "end": {
                    "line": 964,
                    "column": 2
                }
            },
            "124": {
                "start": {
                    "line": 958,
                    "column": 4
                },
                "end": {
                    "line": 961,
                    "column": 5
                }
            },
            "125": {
                "start": {
                    "line": 959,
                    "column": 8
                },
                "end": {
                    "line": 959,
                    "column": 27
                }
            },
            "126": {
                "start": {
                    "line": 963,
                    "column": 4
                },
                "end": {
                    "line": 963,
                    "column": 16
                }
            },
            "127": {
                "start": {
                    "line": 968,
                    "column": 0
                },
                "end": {
                    "line": 991,
                    "column": 2
                }
            },
            "128": {
                "start": {
                    "line": 970,
                    "column": 8
                },
                "end": {
                    "line": 982,
                    "column": 9
                }
            },
            "129": {
                "start": {
                    "line": 971,
                    "column": 12
                },
                "end": {
                    "line": 976,
                    "column": 13
                }
            },
            "130": {
                "start": {
                    "line": 972,
                    "column": 16
                },
                "end": {
                    "line": 972,
                    "column": 43
                }
            },
            "131": {
                "start": {
                    "line": 974,
                    "column": 16
                },
                "end": {
                    "line": 974,
                    "column": 49
                }
            },
            "132": {
                "start": {
                    "line": 975,
                    "column": 16
                },
                "end": {
                    "line": 975,
                    "column": 43
                }
            },
            "133": {
                "start": {
                    "line": 978,
                    "column": 12
                },
                "end": {
                    "line": 981,
                    "column": 13
                }
            },
            "134": {
                "start": {
                    "line": 979,
                    "column": 16
                },
                "end": {
                    "line": 979,
                    "column": 38
                }
            },
            "135": {
                "start": {
                    "line": 983,
                    "column": 8
                },
                "end": {
                    "line": 983,
                    "column": 19
                }
            },
            "136": {
                "start": {
                    "line": 987,
                    "column": 8
                },
                "end": {
                    "line": 987,
                    "column": 50
                }
            },
            "137": {
                "start": {
                    "line": 993,
                    "column": 0
                },
                "end": {
                    "line": 1000,
                    "column": 1
                }
            },
            "138": {
                "start": {
                    "line": 995,
                    "column": 4
                },
                "end": {
                    "line": 999,
                    "column": 6
                }
            },
            "139": {
                "start": {
                    "line": 997,
                    "column": 16
                },
                "end": {
                    "line": 997,
                    "column": 67
                }
            },
            "140": {
                "start": {
                    "line": 1010,
                    "column": 0
                },
                "end": {
                    "line": 1127,
                    "column": 3
                }
            },
            "141": {
                "start": {
                    "line": 1012,
                    "column": 8
                },
                "end": {
                    "line": 1014,
                    "column": 9
                }
            },
            "142": {
                "start": {
                    "line": 1013,
                    "column": 12
                },
                "end": {
                    "line": 1013,
                    "column": 28
                }
            },
            "143": {
                "start": {
                    "line": 1030,
                    "column": 8
                },
                "end": {
                    "line": 1030,
                    "column": 25
                }
            },
            "144": {
                "start": {
                    "line": 1031,
                    "column": 8
                },
                "end": {
                    "line": 1032,
                    "column": 23
                }
            },
            "145": {
                "start": {
                    "line": 1034,
                    "column": 8
                },
                "end": {
                    "line": 1047,
                    "column": 9
                }
            },
            "146": {
                "start": {
                    "line": 1035,
                    "column": 12
                },
                "end": {
                    "line": 1039,
                    "column": 13
                }
            },
            "147": {
                "start": {
                    "line": 1036,
                    "column": 16
                },
                "end": {
                    "line": 1036,
                    "column": 33
                }
            },
            "148": {
                "start": {
                    "line": 1038,
                    "column": 16
                },
                "end": {
                    "line": 1038,
                    "column": 51
                }
            },
            "149": {
                "start": {
                    "line": 1040,
                    "column": 15
                },
                "end": {
                    "line": 1047,
                    "column": 9
                }
            },
            "150": {
                "start": {
                    "line": 1041,
                    "column": 12
                },
                "end": {
                    "line": 1041,
                    "column": 21
                }
            },
            "151": {
                "start": {
                    "line": 1042,
                    "column": 12
                },
                "end": {
                    "line": 1044,
                    "column": 15
                }
            },
            "152": {
                "start": {
                    "line": 1043,
                    "column": 16
                },
                "end": {
                    "line": 1043,
                    "column": 27
                }
            },
            "153": {
                "start": {
                    "line": 1046,
                    "column": 12
                },
                "end": {
                    "line": 1046,
                    "column": 47
                }
            },
            "154": {
                "start": {
                    "line": 1049,
                    "column": 8
                },
                "end": {
                    "line": 1049,
                    "column": 19
                }
            },
            "155": {
                "start": {
                    "line": 1054,
                    "column": 8
                },
                "end": {
                    "line": 1054,
                    "column": 24
                }
            },
            "156": {
                "start": {
                    "line": 1055,
                    "column": 8
                },
                "end": {
                    "line": 1060,
                    "column": 17
                }
            },
            "157": {
                "start": {
                    "line": 1062,
                    "column": 8
                },
                "end": {
                    "line": 1072,
                    "column": 9
                }
            },
            "158": {
                "start": {
                    "line": 1063,
                    "column": 12
                },
                "end": {
                    "line": 1063,
                    "column": 33
                }
            },
            "159": {
                "start": {
                    "line": 1064,
                    "column": 12
                },
                "end": {
                    "line": 1069,
                    "column": 13
                }
            },
            "160": {
                "start": {
                    "line": 1065,
                    "column": 16
                },
                "end": {
                    "line": 1065,
                    "column": 49
                }
            },
            "161": {
                "start": {
                    "line": 1066,
                    "column": 16
                },
                "end": {
                    "line": 1068,
                    "column": 17
                }
            },
            "162": {
                "start": {
                    "line": 1067,
                    "column": 20
                },
                "end": {
                    "line": 1067,
                    "column": 61
                }
            },
            "163": {
                "start": {
                    "line": 1071,
                    "column": 12
                },
                "end": {
                    "line": 1071,
                    "column": 19
                }
            },
            "164": {
                "start": {
                    "line": 1074,
                    "column": 8
                },
                "end": {
                    "line": 1074,
                    "column": 19
                }
            },
            "165": {
                "start": {
                    "line": 1078,
                    "column": 8
                },
                "end": {
                    "line": 1078,
                    "column": 39
                }
            },
            "166": {
                "start": {
                    "line": 1080,
                    "column": 8
                },
                "end": {
                    "line": 1082,
                    "column": 61
                }
            },
            "167": {
                "start": {
                    "line": 1084,
                    "column": 8
                },
                "end": {
                    "line": 1084,
                    "column": 20
                }
            },
            "168": {
                "start": {
                    "line": 1098,
                    "column": 8
                },
                "end": {
                    "line": 1098,
                    "column": 25
                }
            },
            "169": {
                "start": {
                    "line": 1099,
                    "column": 8
                },
                "end": {
                    "line": 1103,
                    "column": 9
                }
            },
            "170": {
                "start": {
                    "line": 1100,
                    "column": 12
                },
                "end": {
                    "line": 1100,
                    "column": 35
                }
            },
            "171": {
                "start": {
                    "line": 1102,
                    "column": 12
                },
                "end": {
                    "line": 1102,
                    "column": 30
                }
            },
            "172": {
                "start": {
                    "line": 1105,
                    "column": 7
                },
                "end": {
                    "line": 1105,
                    "column": 19
                }
            },
            "173": {
                "start": {
                    "line": 1117,
                    "column": 8
                },
                "end": {
                    "line": 1123,
                    "column": 9
                }
            },
            "174": {
                "start": {
                    "line": 1118,
                    "column": 12
                },
                "end": {
                    "line": 1122,
                    "column": 13
                }
            },
            "175": {
                "start": {
                    "line": 1119,
                    "column": 16
                },
                "end": {
                    "line": 1119,
                    "column": 40
                }
            },
            "176": {
                "start": {
                    "line": 1121,
                    "column": 16
                },
                "end": {
                    "line": 1121,
                    "column": 34
                }
            },
            "177": {
                "start": {
                    "line": 1125,
                    "column": 8
                },
                "end": {
                    "line": 1125,
                    "column": 20
                }
            },
            "178": {
                "start": {
                    "line": 1129,
                    "column": 0
                },
                "end": {
                    "line": 1173,
                    "column": 3
                }
            },
            "179": {
                "start": {
                    "line": 1142,
                    "column": 8
                },
                "end": {
                    "line": 1142,
                    "column": 52
                }
            },
            "180": {
                "start": {
                    "line": 1143,
                    "column": 8
                },
                "end": {
                    "line": 1143,
                    "column": 51
                }
            },
            "181": {
                "start": {
                    "line": 1157,
                    "column": 8
                },
                "end": {
                    "line": 1157,
                    "column": 65
                }
            },
            "182": {
                "start": {
                    "line": 1158,
                    "column": 8
                },
                "end": {
                    "line": 1158,
                    "column": 45
                }
            },
            "183": {
                "start": {
                    "line": 1170,
                    "column": 8
                },
                "end": {
                    "line": 1170,
                    "column": 52
                }
            },
            "184": {
                "start": {
                    "line": 1171,
                    "column": 8
                },
                "end": {
                    "line": 1171,
                    "column": 49
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 118,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 118,
                            "column": 4
                        },
                        "end": {
                            "line": 118,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 118,
                            "column": 4
                        },
                        "end": {
                            "line": 118,
                            "column": 4
                        }
                    }
                ]
            },
            "2": {
                "line": 118,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 118,
                            "column": 8
                        },
                        "end": {
                            "line": 118,
                            "column": 11
                        }
                    },
                    {
                        "start": {
                            "line": 118,
                            "column": 15
                        },
                        "end": {
                            "line": 118,
                            "column": 24
                        }
                    }
                ]
            },
            "3": {
                "line": 171,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 171,
                            "column": 8
                        },
                        "end": {
                            "line": 171,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 171,
                            "column": 8
                        },
                        "end": {
                            "line": 171,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 173,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 173,
                            "column": 15
                        },
                        "end": {
                            "line": 173,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 173,
                            "column": 15
                        },
                        "end": {
                            "line": 173,
                            "column": 15
                        }
                    }
                ]
            },
            "5": {
                "line": 173,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 173,
                            "column": 19
                        },
                        "end": {
                            "line": 173,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 173,
                            "column": 28
                        },
                        "end": {
                            "line": 173,
                            "column": 39
                        }
                    }
                ]
            },
            "6": {
                "line": 177,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 177,
                            "column": 8
                        },
                        "end": {
                            "line": 177,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 177,
                            "column": 8
                        },
                        "end": {
                            "line": 177,
                            "column": 8
                        }
                    }
                ]
            },
            "7": {
                "line": 177,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 177,
                            "column": 12
                        },
                        "end": {
                            "line": 177,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 177,
                            "column": 23
                        },
                        "end": {
                            "line": 177,
                            "column": 49
                        }
                    }
                ]
            },
            "8": {
                "line": 178,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 178,
                            "column": 22
                        },
                        "end": {
                            "line": 178,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 178,
                            "column": 39
                        },
                        "end": {
                            "line": 178,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 178,
                            "column": 57
                        },
                        "end": {
                            "line": 178,
                            "column": 64
                        }
                    }
                ]
            },
            "9": {
                "line": 267,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 267,
                            "column": 8
                        },
                        "end": {
                            "line": 267,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 267,
                            "column": 8
                        },
                        "end": {
                            "line": 267,
                            "column": 8
                        }
                    }
                ]
            },
            "10": {
                "line": 439,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 439,
                            "column": 12
                        },
                        "end": {
                            "line": 439,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 439,
                            "column": 12
                        },
                        "end": {
                            "line": 439,
                            "column": 12
                        }
                    }
                ]
            },
            "11": {
                "line": 444,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 444,
                            "column": 20
                        },
                        "end": {
                            "line": 444,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 444,
                            "column": 20
                        },
                        "end": {
                            "line": 444,
                            "column": 20
                        }
                    }
                ]
            },
            "12": {
                "line": 578,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 578,
                            "column": 8
                        },
                        "end": {
                            "line": 578,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 578,
                            "column": 8
                        },
                        "end": {
                            "line": 578,
                            "column": 8
                        }
                    }
                ]
            },
            "13": {
                "line": 584,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 584,
                            "column": 18
                        },
                        "end": {
                            "line": 584,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 584,
                            "column": 29
                        },
                        "end": {
                            "line": 584,
                            "column": 33
                        }
                    }
                ]
            },
            "14": {
                "line": 772,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 772,
                            "column": 8
                        },
                        "end": {
                            "line": 772,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 772,
                            "column": 8
                        },
                        "end": {
                            "line": 772,
                            "column": 8
                        }
                    }
                ]
            },
            "15": {
                "line": 828,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 828,
                            "column": 16
                        },
                        "end": {
                            "line": 828,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 828,
                            "column": 47
                        },
                        "end": {
                            "line": 828,
                            "column": 103
                        }
                    }
                ]
            },
            "16": {
                "line": 851,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 851,
                            "column": 8
                        },
                        "end": {
                            "line": 851,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 851,
                            "column": 8
                        },
                        "end": {
                            "line": 851,
                            "column": 8
                        }
                    }
                ]
            },
            "17": {
                "line": 852,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 852,
                            "column": 38
                        },
                        "end": {
                            "line": 852,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 852,
                            "column": 42
                        },
                        "end": {
                            "line": 852,
                            "column": 43
                        }
                    }
                ]
            },
            "18": {
                "line": 855,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 855,
                            "column": 8
                        },
                        "end": {
                            "line": 855,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 855,
                            "column": 8
                        },
                        "end": {
                            "line": 855,
                            "column": 8
                        }
                    }
                ]
            },
            "19": {
                "line": 861,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 861,
                            "column": 8
                        },
                        "end": {
                            "line": 861,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 861,
                            "column": 8
                        },
                        "end": {
                            "line": 861,
                            "column": 8
                        }
                    }
                ]
            },
            "20": {
                "line": 943,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 943,
                            "column": 0
                        },
                        "end": {
                            "line": 943,
                            "column": 0
                        }
                    },
                    {
                        "start": {
                            "line": 943,
                            "column": 0
                        },
                        "end": {
                            "line": 943,
                            "column": 0
                        }
                    }
                ]
            },
            "21": {
                "line": 945,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 945,
                            "column": 8
                        },
                        "end": {
                            "line": 945,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 945,
                            "column": 8
                        },
                        "end": {
                            "line": 945,
                            "column": 8
                        }
                    }
                ]
            },
            "22": {
                "line": 946,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 946,
                            "column": 12
                        },
                        "end": {
                            "line": 946,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 946,
                            "column": 12
                        },
                        "end": {
                            "line": 946,
                            "column": 12
                        }
                    }
                ]
            },
            "23": {
                "line": 950,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 950,
                            "column": 18
                        },
                        "end": {
                            "line": 950,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 951,
                            "column": 16
                        },
                        "end": {
                            "line": 951,
                            "column": 53
                        }
                    }
                ]
            },
            "24": {
                "line": 970,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 970,
                            "column": 8
                        },
                        "end": {
                            "line": 970,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 970,
                            "column": 8
                        },
                        "end": {
                            "line": 970,
                            "column": 8
                        }
                    }
                ]
            },
            "25": {
                "line": 987,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 987,
                            "column": 15
                        },
                        "end": {
                            "line": 987,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 987,
                            "column": 34
                        },
                        "end": {
                            "line": 987,
                            "column": 49
                        }
                    }
                ]
            },
            "26": {
                "line": 993,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 993,
                            "column": 0
                        },
                        "end": {
                            "line": 993,
                            "column": 0
                        }
                    },
                    {
                        "start": {
                            "line": 993,
                            "column": 0
                        },
                        "end": {
                            "line": 993,
                            "column": 0
                        }
                    }
                ]
            },
            "27": {
                "line": 1012,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1012,
                            "column": 8
                        },
                        "end": {
                            "line": 1012,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1012,
                            "column": 8
                        },
                        "end": {
                            "line": 1012,
                            "column": 8
                        }
                    }
                ]
            },
            "28": {
                "line": 1034,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1034,
                            "column": 8
                        },
                        "end": {
                            "line": 1034,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1034,
                            "column": 8
                        },
                        "end": {
                            "line": 1034,
                            "column": 8
                        }
                    }
                ]
            },
            "29": {
                "line": 1035,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1035,
                            "column": 12
                        },
                        "end": {
                            "line": 1035,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1035,
                            "column": 12
                        },
                        "end": {
                            "line": 1035,
                            "column": 12
                        }
                    }
                ]
            },
            "30": {
                "line": 1040,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1040,
                            "column": 15
                        },
                        "end": {
                            "line": 1040,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 1040,
                            "column": 15
                        },
                        "end": {
                            "line": 1040,
                            "column": 15
                        }
                    }
                ]
            },
            "31": {
                "line": 1040,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1040,
                            "column": 19
                        },
                        "end": {
                            "line": 1040,
                            "column": 42
                        }
                    },
                    {
                        "start": {
                            "line": 1040,
                            "column": 46
                        },
                        "end": {
                            "line": 1040,
                            "column": 59
                        }
                    }
                ]
            },
            "32": {
                "line": 1054,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1054,
                            "column": 14
                        },
                        "end": {
                            "line": 1054,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 1054,
                            "column": 21
                        },
                        "end": {
                            "line": 1054,
                            "column": 23
                        }
                    }
                ]
            },
            "33": {
                "line": 1064,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1064,
                            "column": 12
                        },
                        "end": {
                            "line": 1064,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1064,
                            "column": 12
                        },
                        "end": {
                            "line": 1064,
                            "column": 12
                        }
                    }
                ]
            },
            "34": {
                "line": 1066,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1066,
                            "column": 16
                        },
                        "end": {
                            "line": 1066,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 1066,
                            "column": 16
                        },
                        "end": {
                            "line": 1066,
                            "column": 16
                        }
                    }
                ]
            },
            "35": {
                "line": 1082,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1082,
                            "column": 19
                        },
                        "end": {
                            "line": 1082,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 1082,
                            "column": 28
                        },
                        "end": {
                            "line": 1082,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 1082,
                            "column": 43
                        },
                        "end": {
                            "line": 1082,
                            "column": 60
                        }
                    }
                ]
            },
            "36": {
                "line": 1099,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1099,
                            "column": 8
                        },
                        "end": {
                            "line": 1099,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1099,
                            "column": 8
                        },
                        "end": {
                            "line": 1099,
                            "column": 8
                        }
                    }
                ]
            },
            "37": {
                "line": 1117,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1117,
                            "column": 8
                        },
                        "end": {
                            "line": 1117,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1117,
                            "column": 8
                        },
                        "end": {
                            "line": 1117,
                            "column": 8
                        }
                    }
                ]
            },
            "38": {
                "line": 1118,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1118,
                            "column": 12
                        },
                        "end": {
                            "line": 1118,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1118,
                            "column": 12
                        },
                        "end": {
                            "line": 1118,
                            "column": 12
                        }
                    }
                ]
            },
            "39": {
                "line": 1142,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1142,
                            "column": 40
                        },
                        "end": {
                            "line": 1142,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 1142,
                            "column": 49
                        },
                        "end": {
                            "line": 1142,
                            "column": 51
                        }
                    }
                ]
            },
            "40": {
                "line": 1157,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1157,
                            "column": 44
                        },
                        "end": {
                            "line": 1157,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 1157,
                            "column": 58
                        },
                        "end": {
                            "line": 1157,
                            "column": 64
                        }
                    }
                ]
            },
            "41": {
                "line": 1170,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1170,
                            "column": 40
                        },
                        "end": {
                            "line": 1170,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 1170,
                            "column": 49
                        },
                        "end": {
                            "line": 1170,
                            "column": 51
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('node-base', function (Y, NAME) {",
            "",
            "/**",
            " * @module node",
            " * @submodule node-base",
            " */",
            "",
            "var methods = [",
            "/**",
            " * Determines whether each node has the given className.",
            " * @method hasClass",
            " * @for Node",
            " * @param {String} className the class name to search for",
            " * @return {Boolean} Whether or not the element has the specified class",
            " */",
            " 'hasClass',",
            "",
            "/**",
            " * Adds a class name to each node.",
            " * @method addClass",
            " * @param {String} className the class name to add to the node's class attribute",
            " * @chainable",
            " */",
            " 'addClass',",
            "",
            "/**",
            " * Removes a class name from each node.",
            " * @method removeClass",
            " * @param {String} className the class name to remove from the node's class attribute",
            " * @chainable",
            " */",
            " 'removeClass',",
            "",
            "/**",
            " * Replace a class with another class for each node.",
            " * If no oldClassName is present, the newClassName is simply added.",
            " * @method replaceClass",
            " * @param {String} oldClassName the class name to be replaced",
            " * @param {String} newClassName the class name that will be replacing the old class name",
            " * @chainable",
            " */",
            " 'replaceClass',",
            "",
            "/**",
            " * If the className exists on the node it is removed, if it doesn't exist it is added.",
            " * @method toggleClass",
            " * @param {String} className the class name to be toggled",
            " * @param {Boolean} force Option to force adding or removing the class.",
            " * @chainable",
            " */",
            " 'toggleClass'",
            "];",
            "",
            "Y.Node.importMethod(Y.DOM, methods);",
            "/**",
            " * Determines whether each node has the given className.",
            " * @method hasClass",
            " * @see Node.hasClass",
            " * @for NodeList",
            " * @param {String} className the class name to search for",
            " * @return {Array} An array of booleans for each node bound to the NodeList.",
            " */",
            "",
            "/**",
            " * Adds a class name to each node.",
            " * @method addClass",
            " * @see Node.addClass",
            " * @param {String} className the class name to add to the node's class attribute",
            " * @chainable",
            " */",
            "",
            "/**",
            " * Removes a class name from each node.",
            " * @method removeClass",
            " * @see Node.removeClass",
            " * @param {String} className the class name to remove from the node's class attribute",
            " * @chainable",
            " */",
            "",
            "/**",
            " * Replace a class with another class for each node.",
            " * If no oldClassName is present, the newClassName is simply added.",
            " * @method replaceClass",
            " * @see Node.replaceClass",
            " * @param {String} oldClassName the class name to be replaced",
            " * @param {String} newClassName the class name that will be replacing the old class name",
            " * @chainable",
            " */",
            "",
            "/**",
            " * If the className exists on the node it is removed, if it doesn't exist it is added.",
            " * @method toggleClass",
            " * @see Node.toggleClass",
            " * @param {String} className the class name to be toggled",
            " * @chainable",
            " */",
            "Y.NodeList.importMethod(Y.Node.prototype, methods);",
            "/**",
            " * @module node",
            " * @submodule node-base",
            " */",
            "",
            "var Y_Node = Y.Node,",
            "    Y_DOM = Y.DOM;",
            "",
            "/**",
            " * Returns a new dom node using the provided markup string.",
            " * @method create",
            " * @static",
            " * @param {String} html The markup used to create the element",
            " * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            " * to escape html content.",
            " * @param {HTMLDocument} doc An optional document context",
            " * @return {Node} A Node instance bound to a DOM node or fragment",
            " * @for Node",
            " */",
            "Y_Node.create = function(html, doc) {",
            "    if (doc && doc._node) {",
            "        doc = doc._node;",
            "    }",
            "    return Y.one(Y_DOM.create(html, doc));",
            "};",
            "",
            "Y.mix(Y_Node.prototype, {",
            "    /**",
            "     * Creates a new Node using the provided markup string.",
            "     * @method create",
            "     * @param {String} html The markup used to create the element.",
            "     * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            "     * to escape html content.",
            "     * @param {HTMLDocument} doc An optional document context",
            "     * @return {Node} A Node instance bound to a DOM node or fragment",
            "     */",
            "    create: Y_Node.create,",
            "",
            "    /**",
            "     * Inserts the content before the reference node.",
            "     * @method insert",
            "     * @param {String | Node | HTMLElement | NodeList | HTMLCollection} content The content to insert",
            "     * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            "     * to escape html content.",
            "     * @param {Int | Node | HTMLElement | String} where The position to insert at.",
            "     * Possible \"where\" arguments",
            "     * <dl>",
            "     * <dt>Y.Node</dt>",
            "     * <dd>The Node to insert before</dd>",
            "     * <dt>HTMLElement</dt>",
            "     * <dd>The element to insert before</dd>",
            "     * <dt>Int</dt>",
            "     * <dd>The index of the child element to insert before</dd>",
            "     * <dt>\"replace\"</dt>",
            "     * <dd>Replaces the existing HTML</dd>",
            "     * <dt>\"before\"</dt>",
            "     * <dd>Inserts before the existing HTML</dd>",
            "     * <dt>\"before\"</dt>",
            "     * <dd>Inserts content before the node</dd>",
            "     * <dt>\"after\"</dt>",
            "     * <dd>Inserts content after the node</dd>",
            "     * </dl>",
            "     * @chainable",
            "     */",
            "    insert: function(content, where) {",
            "        this._insert(content, where);",
            "        return this;",
            "    },",
            "",
            "    _insert: function(content, where) {",
            "        var node = this._node,",
            "            ret = null;",
            "",
            "        if (typeof where == 'number') { // allow index",
            "            where = this._node.childNodes[where];",
            "        } else if (where && where._node) { // Node",
            "            where = where._node;",
            "        }",
            "",
            "        if (content && typeof content != 'string') { // allow Node or NodeList/Array instances",
            "            content = content._node || content._nodes || content;",
            "        }",
            "        ret = Y_DOM.addHTML(node, content, where);",
            "",
            "        return ret;",
            "    },",
            "",
            "    /**",
            "     * Inserts the content as the firstChild of the node.",
            "     * @method prepend",
            "     * @param {String | Node | HTMLElement} content The content to insert",
            "     * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            "     * to escape html content.",
            "     * @chainable",
            "     */",
            "    prepend: function(content) {",
            "        return this.insert(content, 0);",
            "    },",
            "",
            "    /**",
            "     * Inserts the content as the lastChild of the node.",
            "     * @method append",
            "     * @param {String | Node | HTMLElement} content The content to insert",
            "     * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            "     * to escape html content.",
            "     * @chainable",
            "     */",
            "    append: function(content) {",
            "        return this.insert(content, null);",
            "    },",
            "",
            "    /**",
            "     * @method appendChild",
            "     * @param {String | HTMLElement | Node} node Node to be appended",
            "     * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            "     * to escape html content.",
            "     * @return {Node} The appended node",
            "     */",
            "    appendChild: function(node) {",
            "        return Y_Node.scrubVal(this._insert(node));",
            "    },",
            "",
            "    /**",
            "     * @method insertBefore",
            "     * @param {String | HTMLElement | Node} newNode Node to be appended",
            "     * @param {HTMLElement | Node} refNode Node to be inserted before",
            "     * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            "     * to escape html content.",
            "     * @return {Node} The inserted node",
            "     */",
            "    insertBefore: function(newNode, refNode) {",
            "        return Y.Node.scrubVal(this._insert(newNode, refNode));",
            "    },",
            "",
            "    /**",
            "     * Appends the node to the given node.",
            "     * @method appendTo",
            "     * @param {Node | HTMLElement} node The node to append to",
            "     * @chainable",
            "     */",
            "    appendTo: function(node) {",
            "        Y.one(node).append(this);",
            "        return this;",
            "    },",
            "",
            "    /**",
            "     * Replaces the node's current content with the content.",
            "     * Note that this passes to innerHTML and is not escaped.",
            "     * Use <a href=\"../classes/Escape.html#method_html\">`Y.Escape.html()`</a>",
            "     * to escape html content or `set('text')` to add as text.",
            "     * @method setContent",
            "     * @deprecated Use setHTML",
            "     * @param {String | Node | HTMLElement | NodeList | HTMLCollection} content The content to insert",
            "     * @chainable",
            "     */",
            "    setContent: function(content) {",
            "        this._insert(content, 'replace');",
            "        return this;",
            "    },",
            "",
            "    /**",
            "     * Returns the node's current content (e.g. innerHTML)",
            "     * @method getContent",
            "     * @deprecated Use getHTML",
            "     * @return {String} The current content",
            "     */",
            "    getContent: function() {",
            "        var node = this;",
            "",
            "        if (node._node.nodeType === 11) { // 11 === Node.DOCUMENT_FRAGMENT_NODE",
            "            // \"this\", when it is a document fragment, must be cloned because",
            "            // the nodes contained in the fragment actually disappear once",
            "            // the fragment is appended anywhere",
            "            node = node.create(\"<div/>\").append(node.cloneNode(true));",
            "        }",
            "",
            "        return node.get(\"innerHTML\");",
            "    }",
            "});",
            "",
            "/**",
            " * Replaces the node's current html content with the content provided.",
            " * Note that this passes to innerHTML and is not escaped.",
            " * Use `Y.Escape.html()` to escape HTML, or `set('text')` to add as text.",
            " * @method setHTML",
            " * @param {String | HTML | Node | HTMLElement | NodeList | HTMLCollection} content The content to insert",
            " * @chainable",
            " */",
            "Y.Node.prototype.setHTML = Y.Node.prototype.setContent;",
            "",
            "/**",
            " * Returns the node's current html content (e.g. innerHTML)",
            " * @method getHTML",
            " * @return {String} The html content",
            " */",
            "Y.Node.prototype.getHTML = Y.Node.prototype.getContent;",
            "",
            "Y.NodeList.importMethod(Y.Node.prototype, [",
            "    /**",
            "     * Called on each Node instance",
            "     * @for NodeList",
            "     * @method append",
            "     * @see Node.append",
            "     */",
            "    'append',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * @for NodeList",
            "     * @method insert",
            "     * @see Node.insert",
            "     */",
            "    'insert',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * @for NodeList",
            "     * @method appendChild",
            "     * @see Node.appendChild",
            "     */",
            "    'appendChild',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * @for NodeList",
            "     * @method insertBefore",
            "     * @see Node.insertBefore",
            "     */",
            "    'insertBefore',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * @for NodeList",
            "     * @method prepend",
            "     * @see Node.prepend",
            "     */",
            "    'prepend',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * Note that this passes to innerHTML and is not escaped.",
            "     * Use `Y.Escape.html()` to escape HTML, or `set('text')` to add as text.",
            "     * @for NodeList",
            "     * @method setContent",
            "     * @deprecated Use setHTML",
            "     */",
            "    'setContent',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * @for NodeList",
            "     * @method getContent",
            "     * @deprecated Use getHTML",
            "     */",
            "    'getContent',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * Note that this passes to innerHTML and is not escaped.",
            "     * Use `Y.Escape.html()` to escape HTML, or `set('text')` to add as text.",
            "     * @for NodeList",
            "     * @method setHTML",
            "     * @see Node.setHTML",
            "     */",
            "    'setHTML',",
            "",
            "    /**",
            "     * Called on each Node instance",
            "     * @for NodeList",
            "     * @method getHTML",
            "     * @see Node.getHTML",
            "     */",
            "    'getHTML'",
            "]);",
            "/**",
            " * @module node",
            " * @submodule node-base",
            " */",
            "",
            "var Y_Node = Y.Node,",
            "    Y_DOM = Y.DOM;",
            "",
            "/**",
            " * Static collection of configuration attributes for special handling",
            " * @property ATTRS",
            " * @static",
            " * @type object",
            " */",
            "Y_Node.ATTRS = {",
            "    /**",
            "     * Allows for getting and setting the text of an element.",
            "     * Formatting is preserved and special characters are treated literally.",
            "     * @config text",
            "     * @type String",
            "     */",
            "    text: {",
            "        getter: function() {",
            "            return Y_DOM.getText(this._node);",
            "        },",
            "",
            "        setter: function(content) {",
            "            Y_DOM.setText(this._node, content);",
            "            return content;",
            "        }",
            "    },",
            "",
            "    /**",
            "     * Allows for getting and setting the text of an element.",
            "     * Formatting is preserved and special characters are treated literally.",
            "     * @config for",
            "     * @type String",
            "     */",
            "    'for': {",
            "        getter: function() {",
            "            return Y_DOM.getAttribute(this._node, 'for');",
            "        },",
            "",
            "        setter: function(val) {",
            "            Y_DOM.setAttribute(this._node, 'for', val);",
            "            return val;",
            "        }",
            "    },",
            "",
            "    'options': {",
            "        getter: function() {",
            "            return this._node.getElementsByTagName('option');",
            "        }",
            "    },",
            "",
            "    /**",
            "     * Returns a NodeList instance of all HTMLElement children.",
            "     * @readOnly",
            "     * @config children",
            "     * @type NodeList",
            "     */",
            "    'children': {",
            "        getter: function() {",
            "            var node = this._node,",
            "                children = node.children,",
            "                childNodes, i, len;",
            "",
            "            if (!children) {",
            "                childNodes = node.childNodes;",
            "                children = [];",
            "",
            "                for (i = 0, len = childNodes.length; i < len; ++i) {",
            "                    if (childNodes[i].tagName) {",
            "                        children[children.length] = childNodes[i];",
            "                    }",
            "                }",
            "            }",
            "            return Y.all(children);",
            "        }",
            "    },",
            "",
            "    value: {",
            "        getter: function() {",
            "            return Y_DOM.getValue(this._node);",
            "        },",
            "",
            "        setter: function(val) {",
            "            Y_DOM.setValue(this._node, val);",
            "            return val;",
            "        }",
            "    }",
            "};",
            "",
            "Y.Node.importMethod(Y.DOM, [",
            "    /**",
            "     * Allows setting attributes on DOM nodes, normalizing in some cases.",
            "     * This passes through to the DOM node, allowing for custom attributes.",
            "     * @method setAttribute",
            "     * @for Node",
            "     * @for NodeList",
            "     * @chainable",
            "     * @param {string} name The attribute name",
            "     * @param {string} value The value to set",
            "     */",
            "    'setAttribute',",
            "    /**",
            "     * Allows getting attributes on DOM nodes, normalizing in some cases.",
            "     * This passes through to the DOM node, allowing for custom attributes.",
            "     * @method getAttribute",
            "     * @for Node",
            "     * @for NodeList",
            "     * @param {string} name The attribute name",
            "     * @return {string} The attribute value",
            "     */",
            "    'getAttribute'",
            "",
            "]);",
            "/**",
            " * @module node",
            " * @submodule node-base",
            " */",
            "",
            "var Y_Node = Y.Node;",
            "var Y_NodeList = Y.NodeList;",
            "/**",
            " * List of events that route to DOM events",
            " * @static",
            " * @property DOM_EVENTS",
            " * @for Node",
            " */",
            "",
            "Y_Node.DOM_EVENTS = {",
            "    abort: 1,",
            "    beforeunload: 1,",
            "    blur: 1,",
            "    change: 1,",
            "    click: 1,",
            "    close: 1,",
            "    command: 1,",
            "    contextmenu: 1,",
            "    dblclick: 1,",
            "    DOMMouseScroll: 1,",
            "    drag: 1,",
            "    dragstart: 1,",
            "    dragenter: 1,",
            "    dragover: 1,",
            "    dragleave: 1,",
            "    dragend: 1,",
            "    drop: 1,",
            "    error: 1,",
            "    focus: 1,",
            "    key: 1,",
            "    keydown: 1,",
            "    keypress: 1,",
            "    keyup: 1,",
            "    load: 1,",
            "    message: 1,",
            "    mousedown: 1,",
            "    mouseenter: 1,",
            "    mouseleave: 1,",
            "    mousemove: 1,",
            "    mousemultiwheel: 1,",
            "    mouseout: 1,",
            "    mouseover: 1,",
            "    mouseup: 1,",
            "    mousewheel: 1,",
            "    orientationchange: 1,",
            "    reset: 1,",
            "    resize: 1,",
            "    select: 1,",
            "    selectstart: 1,",
            "    submit: 1,",
            "    scroll: 1,",
            "    textInput: 1,",
            "    unload: 1",
            "};",
            "",
            "// Add custom event adaptors to this list.  This will make it so",
            "// that delegate, key, available, contentready, etc all will",
            "// be available through Node.on",
            "Y.mix(Y_Node.DOM_EVENTS, Y.Env.evt.plugins);",
            "",
            "Y.augment(Y_Node, Y.EventTarget);",
            "",
            "Y.mix(Y_Node.prototype, {",
            "    /**",
            "     * Removes event listeners from the node and (optionally) its subtree",
            "     * @method purge",
            "     * @param {Boolean} recurse (optional) Whether or not to remove listeners from the",
            "     * node's subtree",
            "     * @param {String} type (optional) Only remove listeners of the specified type",
            "     * @chainable",
            "     *",
            "     */",
            "    purge: function(recurse, type) {",
            "        Y.Event.purgeElement(this._node, recurse, type);",
            "        return this;",
            "    }",
            "",
            "});",
            "",
            "Y.mix(Y.NodeList.prototype, {",
            "    _prepEvtArgs: function(type, fn, context) {",
            "        // map to Y.on/after signature (type, fn, nodes, context, arg1, arg2, etc)",
            "        var args = Y.Array(arguments, 0, true);",
            "",
            "        if (args.length < 2) { // type only (event hash) just add nodes",
            "            args[2] = this._nodes;",
            "        } else {",
            "            args.splice(2, 0, this._nodes);",
            "        }",
            "",
            "        args[3] = context || this; // default to NodeList instance as context",
            "",
            "        return args;",
            "    },",
            "",
            "    /**",
            "    Subscribe a callback function for each `Node` in the collection to execute",
            "    in response to a DOM event.",
            "",
            "    NOTE: Generally, the `on()` method should be avoided on `NodeLists`, in",
            "    favor of using event delegation from a parent Node.  See the Event user",
            "    guide for details.",
            "",
            "    Most DOM events are associated with a preventable default behavior, such as",
            "    link clicks navigating to a new page.  Callbacks are passed a",
            "    `DOMEventFacade` object as their first argument (usually called `e`) that",
            "    can be used to prevent this default behavior with `e.preventDefault()`. See",
            "    the `DOMEventFacade` API for all available properties and methods on the",
            "    object.",
            "",
            "    By default, the `this` object will be the `NodeList` that the subscription",
            "    came from, <em>not the `Node` that received the event</em>.  Use",
            "    `e.currentTarget` to refer to the `Node`.",
            "",
            "    Returning `false` from a callback is supported as an alternative to calling",
            "    `e.preventDefault(); e.stopPropagation();`.  However, it is recommended to",
            "    use the event methods.",
            "",
            "    @example",
            "",
            "        Y.all(\".sku\").on(\"keydown\", function (e) {",
            "            if (e.keyCode === 13) {",
            "                e.preventDefault();",
            "",
            "                // Use e.currentTarget to refer to the individual Node",
            "                var item = Y.MyApp.searchInventory( e.currentTarget.get('value') );",
            "                // etc ...",
            "            }",
            "        });",
            "",
            "    @method on",
            "    @param {String} type The name of the event",
            "    @param {Function} fn The callback to execute in response to the event",
            "    @param {Object} [context] Override `this` object in callback",
            "    @param {Any} [arg*] 0..n additional arguments to supply to the subscriber",
            "    @return {EventHandle} A subscription handle capable of detaching that",
            "                          subscription",
            "    @for NodeList",
            "    **/",
            "    on: function(type, fn, context) {",
            "        return Y.on.apply(Y, this._prepEvtArgs.apply(this, arguments));",
            "    },",
            "",
            "    /**",
            "     * Applies an one-time event listener to each Node bound to the NodeList.",
            "     * @method once",
            "     * @param {String} type The event being listened for",
            "     * @param {Function} fn The handler to call when the event fires",
            "     * @param {Object} context The context to call the handler with.",
            "     * Default is the NodeList instance.",
            "     * @return {EventHandle} A subscription handle capable of detaching that",
            "     *                    subscription",
            "     * @for NodeList",
            "     */",
            "    once: function(type, fn, context) {",
            "        return Y.once.apply(Y, this._prepEvtArgs.apply(this, arguments));",
            "    },",
            "",
            "    /**",
            "     * Applies an event listener to each Node bound to the NodeList.",
            "     * The handler is called only after all on() handlers are called",
            "     * and the event is not prevented.",
            "     * @method after",
            "     * @param {String} type The event being listened for",
            "     * @param {Function} fn The handler to call when the event fires",
            "     * @param {Object} context The context to call the handler with.",
            "     * Default is the NodeList instance.",
            "     * @return {EventHandle} A subscription handle capable of detaching that",
            "     *                    subscription",
            "     * @for NodeList",
            "     */",
            "    after: function(type, fn, context) {",
            "        return Y.after.apply(Y, this._prepEvtArgs.apply(this, arguments));",
            "    },",
            "",
            "    /**",
            "     * Applies an one-time event listener to each Node bound to the NodeList",
            "     * that will be called only after all on() handlers are called and the",
            "     * event is not prevented.",
            "     *",
            "     * @method onceAfter",
            "     * @param {String} type The event being listened for",
            "     * @param {Function} fn The handler to call when the event fires",
            "     * @param {Object} context The context to call the handler with.",
            "     * Default is the NodeList instance.",
            "     * @return {EventHandle} A subscription handle capable of detaching that",
            "     *                    subscription",
            "     * @for NodeList",
            "     */",
            "    onceAfter: function(type, fn, context) {",
            "        return Y.onceAfter.apply(Y, this._prepEvtArgs.apply(this, arguments));",
            "    }",
            "});",
            "",
            "Y_NodeList.importMethod(Y.Node.prototype, [",
            "    /**",
            "      * Called on each Node instance",
            "      * @method detach",
            "      * @see Node.detach",
            "      * @for NodeList",
            "      */",
            "    'detach',",
            "",
            "    /** Called on each Node instance",
            "      * @method detachAll",
            "      * @see Node.detachAll",
            "      * @for NodeList",
            "      */",
            "    'detachAll'",
            "]);",
            "",
            "/**",
            "Subscribe a callback function to execute in response to a DOM event or custom",
            "event.",
            "",
            "Most DOM events are associated with a preventable default behavior such as",
            "link clicks navigating to a new page.  Callbacks are passed a `DOMEventFacade`",
            "object as their first argument (usually called `e`) that can be used to",
            "prevent this default behavior with `e.preventDefault()`. See the",
            "`DOMEventFacade` API for all available properties and methods on the object.",
            "",
            "If the event name passed as the first parameter is not a whitelisted DOM event,",
            "it will be treated as a custom event subscriptions, allowing",
            "`node.fire('customEventName')` later in the code.  Refer to the Event user guide",
            "for the full DOM event whitelist.",
            "",
            "By default, the `this` object in the callback will refer to the subscribed",
            "`Node`.",
            "",
            "Returning `false` from a callback is supported as an alternative to calling",
            "`e.preventDefault(); e.stopPropagation();`.  However, it is recommended to use",
            "the event methods.",
            "",
            "@example",
            "",
            "    Y.one(\"#my-form\").on(\"submit\", function (e) {",
            "        e.preventDefault();",
            "",
            "        // proceed with ajax form submission instead...",
            "    });",
            "",
            "@method on",
            "@param {String} type The name of the event",
            "@param {Function} fn The callback to execute in response to the event",
            "@param {Object} [context] Override `this` object in callback",
            "@param {Any} [arg*] 0..n additional arguments to supply to the subscriber",
            "@return {EventHandle} A subscription handle capable of detaching that",
            "                      subscription",
            "@for Node",
            "**/",
            "",
            "Y.mix(Y.Node.ATTRS, {",
            "    offsetHeight: {",
            "        setter: function(h) {",
            "            Y.DOM.setHeight(this._node, h);",
            "            return h;",
            "        },",
            "",
            "        getter: function() {",
            "            return this._node.offsetHeight;",
            "        }",
            "    },",
            "",
            "    offsetWidth: {",
            "        setter: function(w) {",
            "            Y.DOM.setWidth(this._node, w);",
            "            return w;",
            "        },",
            "",
            "        getter: function() {",
            "            return this._node.offsetWidth;",
            "        }",
            "    }",
            "});",
            "",
            "Y.mix(Y.Node.prototype, {",
            "    sizeTo: function(w, h) {",
            "        var node;",
            "        if (arguments.length < 2) {",
            "            node = Y.one(w);",
            "            w = node.get('offsetWidth');",
            "            h = node.get('offsetHeight');",
            "        }",
            "",
            "        this.setAttrs({",
            "            offsetWidth: w,",
            "            offsetHeight: h",
            "        });",
            "    }",
            "});",
            "/**",
            " * @module node",
            " * @submodule node-base",
            " */",
            "",
            "var Y_Node = Y.Node;",
            "",
            "Y.mix(Y_Node.prototype, {",
            "    /**",
            "     * Makes the node visible.",
            "     * If the \"transition\" module is loaded, show optionally",
            "     * animates the showing of the node using either the default",
            "     * transition effect ('fadeIn'), or the given named effect.",
            "     * @method show",
            "     * @for Node",
            "     * @param {String} name A named Transition effect to use as the show effect.",
            "     * @param {Object} config Options to use with the transition.",
            "     * @param {Function} callback An optional function to run after the transition completes.",
            "     * @chainable",
            "     */",
            "    show: function(callback) {",
            "        callback = arguments[arguments.length - 1];",
            "        this.toggleView(true, callback);",
            "        return this;",
            "    },",
            "",
            "    /**",
            "     * The implementation for showing nodes.",
            "     * Default is to remove the hidden attribute and reset the CSS style.display property.",
            "     * @method _show",
            "     * @protected",
            "     * @chainable",
            "     */",
            "    _show: function() {",
            "        this.removeAttribute('hidden');",
            "",
            "        // For back-compat we need to leave this in for browsers that",
            "        // do not visually hide a node via the hidden attribute",
            "        // and for users that check visibility based on style display.",
            "        this.setStyle('display', '');",
            "",
            "    },",
            "",
            "    _isHidden: function() {",
            "        return  this.hasAttribute('hidden') || Y.DOM.getComputedStyle(this._node, 'display') === 'none';",
            "    },",
            "",
            "    /**",
            "     * Displays or hides the node.",
            "     * If the \"transition\" module is loaded, toggleView optionally",
            "     * animates the toggling of the node using given named effect.",
            "     * @method toggleView",
            "     * @for Node",
            "     * @param {String} [name] An optional string value to use as transition effect.",
            "     * @param {Boolean} [on] An optional boolean value to force the node to be shown or hidden",
            "     * @param {Function} [callback] An optional function to run after the transition completes.",
            "     * @chainable",
            "     */",
            "    toggleView: function(on, callback) {",
            "        this._toggleView.apply(this, arguments);",
            "        return this;",
            "    },",
            "",
            "    _toggleView: function(on, callback) {",
            "        callback = arguments[arguments.length - 1];",
            "",
            "        // base on current state if not forcing",
            "        if (typeof on != 'boolean') {",
            "            on = (this._isHidden()) ? 1 : 0;",
            "        }",
            "",
            "        if (on) {",
            "            this._show();",
            "        }  else {",
            "            this._hide();",
            "        }",
            "",
            "        if (typeof callback == 'function') {",
            "            callback.call(this);",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "     * Hides the node.",
            "     * If the \"transition\" module is loaded, hide optionally",
            "     * animates the hiding of the node using either the default",
            "     * transition effect ('fadeOut'), or the given named effect.",
            "     * @method hide",
            "     * @param {String} name A named Transition effect to use as the show effect.",
            "     * @param {Object} config Options to use with the transition.",
            "     * @param {Function} callback An optional function to run after the transition completes.",
            "     * @chainable",
            "     */",
            "    hide: function(callback) {",
            "        callback = arguments[arguments.length - 1];",
            "        this.toggleView(false, callback);",
            "        return this;",
            "    },",
            "",
            "    /**",
            "     * The implementation for hiding nodes.",
            "     * Default is to set the hidden attribute to true and set the CSS style.display to 'none'.",
            "     * @method _hide",
            "     * @protected",
            "     * @chainable",
            "     */",
            "    _hide: function() {",
            "        this.setAttribute('hidden', '');",
            "",
            "        // For back-compat we need to leave this in for browsers that",
            "        // do not visually hide a node via the hidden attribute",
            "        // and for users that check visibility based on style display.",
            "        this.setStyle('display', 'none');",
            "    }",
            "});",
            "",
            "Y.NodeList.importMethod(Y.Node.prototype, [",
            "    /**",
            "     * Makes each node visible.",
            "     * If the \"transition\" module is loaded, show optionally",
            "     * animates the showing of the node using either the default",
            "     * transition effect ('fadeIn'), or the given named effect.",
            "     * @method show",
            "     * @param {String} name A named Transition effect to use as the show effect.",
            "     * @param {Object} config Options to use with the transition.",
            "     * @param {Function} callback An optional function to run after the transition completes.",
            "     * @for NodeList",
            "     * @chainable",
            "     */",
            "    'show',",
            "",
            "    /**",
            "     * Hides each node.",
            "     * If the \"transition\" module is loaded, hide optionally",
            "     * animates the hiding of the node using either the default",
            "     * transition effect ('fadeOut'), or the given named effect.",
            "     * @method hide",
            "     * @param {String} name A named Transition effect to use as the show effect.",
            "     * @param {Object} config Options to use with the transition.",
            "     * @param {Function} callback An optional function to run after the transition completes.",
            "     * @chainable",
            "     */",
            "    'hide',",
            "",
            "    /**",
            "     * Displays or hides each node.",
            "     * If the \"transition\" module is loaded, toggleView optionally",
            "     * animates the toggling of the nodes using given named effect.",
            "     * @method toggleView",
            "     * @param {String} [name] An optional string value to use as transition effect.",
            "     * @param {Boolean} [on] An optional boolean value to force the nodes to be shown or hidden",
            "     * @param {Function} [callback] An optional function to run after the transition completes.",
            "     * @chainable",
            "     */",
            "    'toggleView'",
            "]);",
            "",
            "if (!Y.config.doc.documentElement.hasAttribute) { // IE < 8",
            "    Y.Node.prototype.hasAttribute = function(attr) {",
            "        if (attr === 'value') {",
            "            if (this.get('value') !== \"\") { // IE < 8 fails to populate specified when set in HTML",
            "                return true;",
            "            }",
            "        }",
            "        return !!(this._node.attributes[attr] &&",
            "                this._node.attributes[attr].specified);",
            "    };",
            "}",
            "",
            "// IE throws an error when calling focus() on an element that's invisible, not",
            "// displayed, or disabled.",
            "Y.Node.prototype.focus = function () {",
            "    try {",
            "        this._node.focus();",
            "    } catch (e) {",
            "    }",
            "",
            "    return this;",
            "};",
            "",
            "// IE throws error when setting input.type = 'hidden',",
            "// input.setAttribute('type', 'hidden') and input.attributes.type.value = 'hidden'",
            "Y.Node.ATTRS.type = {",
            "    setter: function(val) {",
            "        if (val === 'hidden') {",
            "            try {",
            "                this._node.type = 'hidden';",
            "            } catch(e) {",
            "                this.setStyle('display', 'none');",
            "                this._inputType = 'hidden';",
            "            }",
            "        } else {",
            "            try { // IE errors when changing the type from \"hidden'",
            "                this._node.type = val;",
            "            } catch (e) {",
            "            }",
            "        }",
            "        return val;",
            "    },",
            "",
            "    getter: function() {",
            "        return this._inputType || this._node.type;",
            "    },",
            "",
            "    _bypassProxy: true // don't update DOM when using with Attribute",
            "};",
            "",
            "if (Y.config.doc.createElement('form').elements.nodeType) {",
            "    // IE: elements collection is also FORM node which trips up scrubVal.",
            "    Y.Node.ATTRS.elements = {",
            "            getter: function() {",
            "                return this.all('input, textarea, button, select');",
            "            }",
            "    };",
            "}",
            "",
            "/**",
            " * Provides methods for managing custom Node data.",
            " * ",
            " * @module node",
            " * @main node",
            " * @submodule node-data",
            " */",
            "",
            "Y.mix(Y.Node.prototype, {",
            "    _initData: function() {",
            "        if (! ('_data' in this)) {",
            "            this._data = {};",
            "        }",
            "    },",
            "",
            "    /**",
            "    * @method getData",
            "    * @for Node",
            "    * @description Retrieves arbitrary data stored on a Node instance.",
            "    * If no data is associated with the Node, it will attempt to retrieve",
            "    * a value from the corresponding HTML data attribute. (e.g. node.getData('foo')",
            "    * will check node.getAttribute('data-foo')).",
            "    * @param {string} name Optional name of the data field to retrieve.",
            "    * If no name is given, all data is returned.",
            "    * @return {any | Object} Whatever is stored at the given field,",
            "    * or an object hash of all fields.",
            "    */",
            "    getData: function(name) {",
            "        this._initData();",
            "        var data = this._data,",
            "            ret = data;",
            "",
            "        if (arguments.length) { // single field",
            "            if (name in data) {",
            "                ret = data[name];",
            "            } else { // initialize from HTML attribute",
            "                ret = this._getDataAttribute(name);",
            "            }",
            "        } else if (typeof data == 'object' && data !== null) { // all fields",
            "            ret = {};",
            "            Y.Object.each(data, function(v, n) {",
            "                ret[n] = v;",
            "            });",
            "",
            "            ret = this._getDataAttributes(ret);",
            "        }",
            "",
            "        return ret;",
            "",
            "    },",
            "",
            "    _getDataAttributes: function(ret) {",
            "        ret = ret || {};",
            "        var i = 0,",
            "            attrs = this._node.attributes,",
            "            len = attrs.length,",
            "            prefix = this.DATA_PREFIX,",
            "            prefixLength = prefix.length,",
            "            name;",
            "",
            "        while (i < len) {",
            "            name = attrs[i].name;",
            "            if (name.indexOf(prefix) === 0) {",
            "                name = name.substr(prefixLength);",
            "                if (!(name in ret)) { // only merge if not already stored",
            "                    ret[name] = this._getDataAttribute(name);",
            "                }",
            "            }",
            "",
            "            i += 1;",
            "        }",
            "",
            "        return ret;",
            "    },",
            "",
            "    _getDataAttribute: function(name) {",
            "        name = this.DATA_PREFIX + name;",
            "",
            "        var node = this._node,",
            "            attrs = node.attributes,",
            "            data = attrs && attrs[name] && attrs[name].value;",
            "",
            "        return data;",
            "    },",
            "",
            "    /**",
            "    * @method setData",
            "    * @for Node",
            "    * @description Stores arbitrary data on a Node instance.",
            "    * This is not stored with the DOM node.",
            "    * @param {string} name The name of the field to set. If no val",
            "    * is given, name is treated as the data and overrides any existing data.",
            "    * @param {any} val The value to be assigned to the field.",
            "    * @chainable",
            "    */",
            "    setData: function(name, val) {",
            "        this._initData();",
            "        if (arguments.length > 1) {",
            "            this._data[name] = val;",
            "        } else {",
            "            this._data = name;",
            "        }",
            "",
            "       return this;",
            "    },",
            "",
            "    /**",
            "    * @method clearData",
            "    * @for Node",
            "    * @description Clears internally stored data.",
            "    * @param {string} name The name of the field to clear. If no name",
            "    * is given, all data is cleared.",
            "    * @chainable",
            "    */",
            "    clearData: function(name) {",
            "        if ('_data' in this) {",
            "            if (typeof name != 'undefined') {",
            "                delete this._data[name];",
            "            } else {",
            "                delete this._data;",
            "            }",
            "        }",
            "",
            "        return this;",
            "    }",
            "});",
            "",
            "Y.mix(Y.NodeList.prototype, {",
            "    /**",
            "    * @method getData",
            "    * @for NodeList",
            "    * @description Retrieves arbitrary data stored on each Node instance",
            "    * bound to the NodeList.",
            "    * @see Node",
            "    * @param {string} name Optional name of the data field to retrieve.",
            "    * If no name is given, all data is returned.",
            "    * @return {Array} An array containing all of the data for each Node instance. ",
            "    * or an object hash of all fields.",
            "    */",
            "    getData: function(name) {",
            "        var args = (arguments.length) ? [name] : [];",
            "        return this._invoke('getData', args, true);",
            "    },",
            "",
            "    /**",
            "    * @method setData",
            "    * @for NodeList",
            "    * @description Stores arbitrary data on each Node instance bound to the",
            "    *  NodeList. This is not stored with the DOM node.",
            "    * @param {string} name The name of the field to set. If no name",
            "    * is given, name is treated as the data and overrides any existing data.",
            "    * @param {any} val The value to be assigned to the field.",
            "    * @chainable",
            "    */",
            "    setData: function(name, val) {",
            "        var args = (arguments.length > 1) ? [name, val] : [name];",
            "        return this._invoke('setData', args);",
            "    },",
            "",
            "    /**",
            "    * @method clearData",
            "    * @for NodeList",
            "    * @description Clears data on all Node instances bound to the NodeList.",
            "    * @param {string} name The name of the field to clear. If no name",
            "    * is given, all data is cleared.",
            "    * @chainable",
            "    */",
            "    clearData: function(name) {",
            "        var args = (arguments.length) ? [name] : [];",
            "        return this._invoke('clearData', [name]);",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"event-base\", \"node-core\", \"dom-base\", \"dom-style\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "8": 2,
            "54": 2,
            "97": 2,
            "103": 2,
            "117": 2,
            "118": 118,
            "119": 1,
            "121": 118,
            "124": 2,
            "163": 32,
            "164": 32,
            "168": 81,
            "171": 81,
            "172": 10,
            "173": 71,
            "174": 8,
            "177": 81,
            "178": 42,
            "180": 81,
            "182": 81,
            "194": 6,
            "206": 12,
            "217": 20,
            "229": 8,
            "239": 7,
            "240": 7,
            "254": 21,
            "255": 21,
            "265": 4,
            "267": 4,
            "271": 1,
            "274": 4,
            "286": 2,
            "293": 2,
            "295": 2,
            "377": 2,
            "386": 2,
            "395": 9,
            "399": 2,
            "400": 2,
            "412": 1,
            "416": 0,
            "417": 0,
            "423": 1,
            "435": 23,
            "439": 23,
            "440": 0,
            "441": 0,
            "443": 0,
            "444": 0,
            "445": 0,
            "449": 23,
            "455": 11,
            "459": 2,
            "460": 2,
            "465": 2,
            "494": 2,
            "495": 2,
            "503": 2,
            "552": 2,
            "554": 2,
            "556": 2,
            "567": 25,
            "568": 25,
            "573": 2,
            "576": 12,
            "578": 12,
            "579": 1,
            "581": 11,
            "584": 12,
            "586": 12,
            "634": 6,
            "649": 1,
            "666": 4,
            "684": 1,
            "688": 2,
            "745": 2,
            "748": 2,
            "749": 2,
            "753": 27,
            "759": 2,
            "760": 2,
            "764": 3,
            "769": 2,
            "771": 0,
            "772": 0,
            "773": 0,
            "774": 0,
            "775": 0,
            "778": 0,
            "789": 2,
            "791": 2,
            "805": 3,
            "806": 3,
            "807": 3,
            "818": 7,
            "823": 7,
            "828": 2,
            "843": 12,
            "844": 12,
            "848": 12,
            "851": 12,
            "852": 2,
            "855": 12,
            "856": 7,
            "858": 5,
            "861": 12,
            "862": 7,
            "865": 12,
            "880": 3,
            "881": 3,
            "882": 3,
            "893": 5,
            "898": 5,
            "902": 2,
            "943": 2,
            "944": 0,
            "945": 0,
            "946": 0,
            "947": 0,
            "950": 0,
            "957": 2,
            "958": 1,
            "959": 1,
            "963": 1,
            "968": 2,
            "970": 0,
            "971": 0,
            "972": 0,
            "974": 0,
            "975": 0,
            "978": 0,
            "979": 0,
            "983": 0,
            "987": 0,
            "993": 2,
            "995": 0,
            "997": 0,
            "1010": 2,
            "1012": 76,
            "1013": 37,
            "1030": 49,
            "1031": 49,
            "1034": 49,
            "1035": 39,
            "1036": 19,
            "1038": 20,
            "1040": 10,
            "1041": 5,
            "1042": 5,
            "1043": 3,
            "1046": 5,
            "1049": 49,
            "1054": 5,
            "1055": 5,
            "1062": 5,
            "1063": 9,
            "1064": 9,
            "1065": 9,
            "1066": 9,
            "1067": 9,
            "1071": 9,
            "1074": 5,
            "1078": 29,
            "1080": 29,
            "1084": 29,
            "1098": 27,
            "1099": 27,
            "1100": 13,
            "1102": 14,
            "1105": 27,
            "1117": 37,
            "1118": 12,
            "1119": 6,
            "1121": 6,
            "1125": 37,
            "1129": 2,
            "1142": 1,
            "1143": 1,
            "1157": 4,
            "1158": 4,
            "1170": 2,
            "1171": 2
        }
    },
    "build/node-style/node-style.js": {
        "path": "build/node-style/node-style.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 59,
            "5": 59,
            "6": 1,
            "7": 1,
            "8": 68,
            "9": 60,
            "10": 1
        },
        "b": {},
        "f": {
            "1": 1,
            "2": 1,
            "3": 59,
            "4": 1,
            "5": 68,
            "6": 60
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 22
                    },
                    "end": {
                        "line": 1,
                        "column": 41
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 3,
                "loc": {
                    "start": {
                        "line": 3,
                        "column": 1
                    },
                    "end": {
                        "line": 3,
                        "column": 13
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 19,
                "loc": {
                    "start": {
                        "line": 19,
                        "column": 14
                    },
                    "end": {
                        "line": 19,
                        "column": 34
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 31,
                "loc": {
                    "start": {
                        "line": 31,
                        "column": 15
                    },
                    "end": {
                        "line": 31,
                        "column": 30
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 45,
                "loc": {
                    "start": {
                        "line": 45,
                        "column": 15
                    },
                    "end": {
                        "line": 45,
                        "column": 30
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 56,
                "loc": {
                    "start": {
                        "line": 56,
                        "column": 23
                    },
                    "end": {
                        "line": 56,
                        "column": 38
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 106,
                    "column": 58
                }
            },
            "2": {
                "start": {
                    "line": 3,
                    "column": 0
                },
                "end": {
                    "line": 103,
                    "column": 6
                }
            },
            "3": {
                "start": {
                    "line": 10,
                    "column": 0
                },
                "end": {
                    "line": 59,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 20,
                    "column": 8
                },
                "end": {
                    "line": 20,
                    "column": 46
                }
            },
            "5": {
                "start": {
                    "line": 21,
                    "column": 8
                },
                "end": {
                    "line": 21,
                    "column": 20
                }
            },
            "6": {
                "start": {
                    "line": 32,
                    "column": 8
                },
                "end": {
                    "line": 32,
                    "column": 42
                }
            },
            "7": {
                "start": {
                    "line": 33,
                    "column": 8
                },
                "end": {
                    "line": 33,
                    "column": 20
                }
            },
            "8": {
                "start": {
                    "line": 46,
                    "column": 8
                },
                "end": {
                    "line": 46,
                    "column": 48
                }
            },
            "9": {
                "start": {
                    "line": 57,
                    "column": 8
                },
                "end": {
                    "line": 57,
                    "column": 56
                }
            },
            "10": {
                "start": {
                    "line": 102,
                    "column": 0
                },
                "end": {
                    "line": 102,
                    "column": 101
                }
            }
        },
        "branchMap": {},
        "code": [
            "(function () { YUI.add('node-style', function (Y, NAME) {",
            "",
            "(function(Y) {",
            "/**",
            " * Extended Node interface for managing node styles.",
            " * @module node",
            " * @submodule node-style",
            " */",
            "",
            "Y.mix(Y.Node.prototype, {",
            "    /**",
            "     * Sets a style property of the node.",
            "     * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            "     * @method setStyle",
            "     * @param {String} attr The style attribute to set. ",
            "     * @param {String|Number} val The value. ",
            "     * @chainable",
            "     */",
            "    setStyle: function(attr, val) {",
            "        Y.DOM.setStyle(this._node, attr, val);",
            "        return this;",
            "    },",
            "",
            "    /**",
            "     * Sets multiple style properties on the node.",
            "     * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            "     * @method setStyles",
            "     * @param {Object} hash An object literal of property:value pairs. ",
            "     * @chainable",
            "     */",
            "    setStyles: function(hash) {",
            "        Y.DOM.setStyles(this._node, hash);",
            "        return this;",
            "    },",
            "",
            "    /**",
            "     * Returns the style's current value.",
            "     * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            "     * @method getStyle",
            "     * @for Node",
            "     * @param {String} attr The style attribute to retrieve. ",
            "     * @return {String} The current value of the style property for the element.",
            "     */",
            "",
            "     getStyle: function(attr) {",
            "        return Y.DOM.getStyle(this._node, attr);",
            "     },",
            "",
            "    /**",
            "     * Returns the computed value for the given style property.",
            "     * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            "     * @method getComputedStyle",
            "     * @param {String} attr The style attribute to retrieve. ",
            "     * @return {String} The computed value of the style property for the element.",
            "     */",
            "     getComputedStyle: function(attr) {",
            "        return Y.DOM.getComputedStyle(this._node, attr);",
            "     }",
            "});",
            "",
            "/**",
            " * Returns an array of values for each node.",
            " * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            " * @method getStyle",
            " * @for NodeList",
            " * @see Node.getStyle",
            " * @param {String} attr The style attribute to retrieve. ",
            " * @return {Array} The current values of the style property for the element.",
            " */",
            "",
            "/**",
            " * Returns an array of the computed value for each node.",
            " * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            " * @method getComputedStyle",
            " * @see Node.getComputedStyle",
            " * @param {String} attr The style attribute to retrieve. ",
            " * @return {Array} The computed values for each node.",
            " */",
            "",
            "/**",
            " * Sets a style property on each node.",
            " * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            " * @method setStyle",
            " * @see Node.setStyle",
            " * @param {String} attr The style attribute to set. ",
            " * @param {String|Number} val The value. ",
            " * @chainable",
            " */",
            "",
            "/**",
            " * Sets multiple style properties on each node.",
            " * Use camelCase (e.g. 'backgroundColor') for multi-word properties.",
            " * @method setStyles",
            " * @see Node.setStyles",
            " * @param {Object} hash An object literal of property:value pairs. ",
            " * @chainable",
            " */",
            "",
            "// These are broken out to handle undefined return (avoid false positive for",
            "// chainable)",
            "",
            "Y.NodeList.importMethod(Y.Node.prototype, ['getStyle', 'getComputedStyle', 'setStyle', 'setStyles']);",
            "})(Y);",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"dom-style\", \"node-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "3": 1,
            "10": 1,
            "20": 59,
            "21": 59,
            "32": 1,
            "33": 1,
            "46": 68,
            "57": 60,
            "102": 1
        }
    },
    "build/node-pluginhost/node-pluginhost.js": {
        "path": "build/node-pluginhost/node-pluginhost.js",
        "s": {
            "1": 1,
            "2": 2,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 2,
            "8": 1,
            "9": 1,
            "10": 1,
            "11": 1,
            "12": 2,
            "13": 2,
            "14": 1,
            "15": 2,
            "16": 1,
            "17": 1,
            "18": 8,
            "19": 1,
            "20": 2,
            "21": 1,
            "22": 1,
            "23": 8,
            "24": 1
        },
        "b": {},
        "f": {
            "1": 2,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 8,
            "7": 1,
            "8": 8
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 27
                    },
                    "end": {
                        "line": 1,
                        "column": 46
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 18,
                "loc": {
                    "start": {
                        "line": 18,
                        "column": 14
                    },
                    "end": {
                        "line": 18,
                        "column": 25
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 33,
                "loc": {
                    "start": {
                        "line": 33,
                        "column": 16
                    },
                    "end": {
                        "line": 33,
                        "column": 27
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 43,
                "loc": {
                    "start": {
                        "line": 43,
                        "column": 33
                    },
                    "end": {
                        "line": 43,
                        "column": 49
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 65,
                "loc": {
                    "start": {
                        "line": 65,
                        "column": 28
                    },
                    "end": {
                        "line": 65,
                        "column": 39
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 67,
                "loc": {
                    "start": {
                        "line": 67,
                        "column": 26
                    },
                    "end": {
                        "line": 67,
                        "column": 41
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 82,
                "loc": {
                    "start": {
                        "line": 82,
                        "column": 30
                    },
                    "end": {
                        "line": 82,
                        "column": 41
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 84,
                "loc": {
                    "start": {
                        "line": 84,
                        "column": 26
                    },
                    "end": {
                        "line": 84,
                        "column": 41
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 91,
                    "column": 59
                }
            },
            "2": {
                "start": {
                    "line": 18,
                    "column": 0
                },
                "end": {
                    "line": 23,
                    "column": 2
                }
            },
            "3": {
                "start": {
                    "line": 19,
                    "column": 4
                },
                "end": {
                    "line": 19,
                    "column": 34
                }
            },
            "4": {
                "start": {
                    "line": 20,
                    "column": 4
                },
                "end": {
                    "line": 20,
                    "column": 25
                }
            },
            "5": {
                "start": {
                    "line": 21,
                    "column": 4
                },
                "end": {
                    "line": 21,
                    "column": 43
                }
            },
            "6": {
                "start": {
                    "line": 22,
                    "column": 4
                },
                "end": {
                    "line": 22,
                    "column": 18
                }
            },
            "7": {
                "start": {
                    "line": 33,
                    "column": 0
                },
                "end": {
                    "line": 38,
                    "column": 2
                }
            },
            "8": {
                "start": {
                    "line": 34,
                    "column": 4
                },
                "end": {
                    "line": 34,
                    "column": 34
                }
            },
            "9": {
                "start": {
                    "line": 35,
                    "column": 4
                },
                "end": {
                    "line": 35,
                    "column": 25
                }
            },
            "10": {
                "start": {
                    "line": 36,
                    "column": 4
                },
                "end": {
                    "line": 36,
                    "column": 45
                }
            },
            "11": {
                "start": {
                    "line": 37,
                    "column": 4
                },
                "end": {
                    "line": 37,
                    "column": 18
                }
            },
            "12": {
                "start": {
                    "line": 40,
                    "column": 0
                },
                "end": {
                    "line": 40,
                    "column": 45
                }
            },
            "13": {
                "start": {
                    "line": 43,
                    "column": 0
                },
                "end": {
                    "line": 45,
                    "column": 3
                }
            },
            "14": {
                "start": {
                    "line": 44,
                    "column": 4
                },
                "end": {
                    "line": 44,
                    "column": 30
                }
            },
            "15": {
                "start": {
                    "line": 65,
                    "column": 0
                },
                "end": {
                    "line": 71,
                    "column": 2
                }
            },
            "16": {
                "start": {
                    "line": 66,
                    "column": 4
                },
                "end": {
                    "line": 66,
                    "column": 25
                }
            },
            "17": {
                "start": {
                    "line": 67,
                    "column": 4
                },
                "end": {
                    "line": 69,
                    "column": 7
                }
            },
            "18": {
                "start": {
                    "line": 68,
                    "column": 8
                },
                "end": {
                    "line": 68,
                    "column": 55
                }
            },
            "19": {
                "start": {
                    "line": 70,
                    "column": 4
                },
                "end": {
                    "line": 70,
                    "column": 16
                }
            },
            "20": {
                "start": {
                    "line": 82,
                    "column": 0
                },
                "end": {
                    "line": 88,
                    "column": 2
                }
            },
            "21": {
                "start": {
                    "line": 83,
                    "column": 4
                },
                "end": {
                    "line": 83,
                    "column": 25
                }
            },
            "22": {
                "start": {
                    "line": 84,
                    "column": 4
                },
                "end": {
                    "line": 86,
                    "column": 7
                }
            },
            "23": {
                "start": {
                    "line": 85,
                    "column": 8
                },
                "end": {
                    "line": 85,
                    "column": 57
                }
            },
            "24": {
                "start": {
                    "line": 87,
                    "column": 4
                },
                "end": {
                    "line": 87,
                    "column": 16
                }
            }
        },
        "branchMap": {},
        "code": [
            "(function () { YUI.add('node-pluginhost', function (Y, NAME) {",
            "",
            "/**",
            " * @module node",
            " * @submodule node-pluginhost",
            " */",
            "",
            "/**",
            " * Registers plugins to be instantiated at the class level (plugins",
            " * which should be plugged into every instance of Node by default).",
            " *",
            " * @method plug",
            " * @static",
            " * @for Node",
            " * @param {Function | Array} plugin Either the plugin class, an array of plugin classes or an array of objects (with fn and cfg properties defined)",
            " * @param {Object} config (Optional) If plugin is the plugin class, the configuration for the plugin",
            " */",
            "Y.Node.plug = function() {",
            "    var args = Y.Array(arguments);",
            "    args.unshift(Y.Node);",
            "    Y.Plugin.Host.plug.apply(Y.Base, args);",
            "    return Y.Node;",
            "};",
            "",
            "/**",
            " * Unregisters any class level plugins which have been registered by the Node",
            " *",
            " * @method unplug",
            " * @static",
            " *",
            " * @param {Function | Array} plugin The plugin class, or an array of plugin classes",
            " */",
            "Y.Node.unplug = function() {",
            "    var args = Y.Array(arguments);",
            "    args.unshift(Y.Node);",
            "    Y.Plugin.Host.unplug.apply(Y.Base, args);",
            "    return Y.Node;",
            "};",
            "",
            "Y.mix(Y.Node, Y.Plugin.Host, false, null, 1);",
            "",
            "// run PluginHost constructor on cached Node instances",
            "Y.Object.each(Y.Node._instances, function (node) {",
            "    Y.Plugin.Host.apply(node);",
            "});",
            "",
            "// allow batching of plug/unplug via NodeList",
            "// doesn't use NodeList.importMethod because we need real Nodes (not tmpNode)",
            "/**",
            " * Adds a plugin to each node in the NodeList.",
            " * This will instantiate the plugin and attach it to the configured namespace on each node",
            " * @method plug",
            " * @for NodeList",
            " * @param P {Function | Object |Array} Accepts the plugin class, or an ",
            " * object with a \"fn\" property specifying the plugin class and ",
            " * a \"cfg\" property specifying the configuration for the Plugin.",
            " * <p>",
            " * Additionally an Array can also be passed in, with the above function or ",
            " * object values, allowing the user to add multiple plugins in a single call.",
            " * </p>",
            " * @param config (Optional) If the first argument is the plugin class, the second argument",
            " * can be the configuration for the plugin.",
            " * @chainable",
            " */",
            "Y.NodeList.prototype.plug = function() {",
            "    var args = arguments;",
            "    Y.NodeList.each(this, function(node) {",
            "        Y.Node.prototype.plug.apply(Y.one(node), args);",
            "    });",
            "    return this;",
            "};",
            "",
            "/**",
            " * Removes a plugin from all nodes in the NodeList. This will destroy the ",
            " * plugin instance and delete the namespace each node. ",
            " * @method unplug",
            " * @for NodeList",
            " * @param {String | Function} plugin The namespace of the plugin, or the plugin class with the static NS namespace property defined. If not provided,",
            " * all registered plugins are unplugged.",
            " * @chainable",
            " */",
            "Y.NodeList.prototype.unplug = function() {",
            "    var args = arguments;",
            "    Y.NodeList.each(this, function(node) {",
            "        Y.Node.prototype.unplug.apply(Y.one(node), args);",
            "    });",
            "    return this;",
            "};",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"node-base\", \"pluginhost\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "18": 2,
            "19": 1,
            "20": 1,
            "21": 1,
            "22": 1,
            "33": 2,
            "34": 1,
            "35": 1,
            "36": 1,
            "37": 1,
            "40": 2,
            "43": 2,
            "44": 1,
            "65": 2,
            "66": 1,
            "67": 1,
            "68": 8,
            "70": 1,
            "82": 2,
            "83": 1,
            "84": 1,
            "85": 8,
            "87": 1
        }
    },
    "build/node-event-delegate/node-event-delegate.js": {
        "path": "build/node-event-delegate/node-event-delegate.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1
        },
        "b": {
            "1": [
                0,
                1
            ],
            "2": [
                1,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 1
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 31
                    },
                    "end": {
                        "line": 1,
                        "column": 50
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 43,
                "loc": {
                    "start": {
                        "line": 43,
                        "column": 28
                    },
                    "end": {
                        "line": 43,
                        "column": 43
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 54,
                    "column": 63
                }
            },
            "2": {
                "start": {
                    "line": 43,
                    "column": 0
                },
                "end": {
                    "line": 51,
                    "column": 2
                }
            },
            "3": {
                "start": {
                    "line": 45,
                    "column": 4
                },
                "end": {
                    "line": 46,
                    "column": 73
                }
            },
            "4": {
                "start": {
                    "line": 48,
                    "column": 4
                },
                "end": {
                    "line": 48,
                    "column": 38
                }
            },
            "5": {
                "start": {
                    "line": 50,
                    "column": 4
                },
                "end": {
                    "line": 50,
                    "column": 37
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 46,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 46,
                            "column": 67
                        },
                        "end": {
                            "line": 46,
                            "column": 68
                        }
                    },
                    {
                        "start": {
                            "line": 46,
                            "column": 71
                        },
                        "end": {
                            "line": 46,
                            "column": 72
                        }
                    }
                ]
            },
            "2": {
                "line": 46,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 46,
                            "column": 17
                        },
                        "end": {
                            "line": 46,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 46,
                            "column": 42
                        },
                        "end": {
                            "line": 46,
                            "column": 63
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('node-event-delegate', function (Y, NAME) {",
            "",
            "/**",
            " * Functionality to make the node a delegated event container",
            " * @module node",
            " * @submodule node-event-delegate",
            " */",
            "",
            "/**",
            " * <p>Sets up a delegation listener for an event occurring inside the Node.",
            " * The delegated event will be verified against a supplied selector or",
            " * filtering function to test if the event references at least one node that",
            " * should trigger the subscription callback.</p>",
            " *",
            " * <p>Selector string filters will trigger the callback if the event originated",
            " * from a node that matches it or is contained in a node that matches it.",
            " * Function filters are called for each Node up the parent axis to the",
            " * subscribing container node, and receive at each level the Node and the event",
            " * object.  The function should return true (or a truthy value) if that Node",
            " * should trigger the subscription callback.  Note, it is possible for filters",
            " * to match multiple Nodes for a single event.  In this case, the delegate",
            " * callback will be executed for each matching Node.</p>",
            " *",
            " * <p>For each matching Node, the callback will be executed with its 'this'",
            " * object set to the Node matched by the filter (unless a specific context was",
            " * provided during subscription), and the provided event's",
            " * <code>currentTarget</code> will also be set to the matching Node.  The",
            " * containing Node from which the subscription was originally made can be",
            " * referenced as <code>e.container</code>.",
            " *",
            " * @method delegate",
            " * @param type {String} the event type to delegate",
            " * @param fn {Function} the callback function to execute.  This function",
            " *              will be provided the event object for the delegated event.",
            " * @param spec {String|Function} a selector that must match the target of the",
            " *              event or a function to test target and its parents for a match",
            " * @param context {Object} optional argument that specifies what 'this' refers to.",
            " * @param args* {any} 0..n additional arguments to pass on to the callback function.",
            " *              These arguments will be added after the event object.",
            " * @return {EventHandle} the detach handle",
            " * @for Node",
            " */",
            "Y.Node.prototype.delegate = function(type) {",
            "",
            "    var args = Y.Array(arguments, 0, true),",
            "        index = (Y.Lang.isObject(type) && !Y.Lang.isArray(type)) ? 1 : 2;",
            "",
            "    args.splice(index, 0, this._node);",
            "",
            "    return Y.delegate.apply(Y, args);",
            "};",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"node-base\", \"event-delegate\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "43": 1,
            "45": 1,
            "48": 1,
            "50": 1
        }
    },
    "build/node-screen/node-screen.js": {
        "path": "build/node-screen/node-screen.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 6,
            "4": 7,
            "5": 7,
            "6": 7,
            "7": 1,
            "8": 0,
            "9": 0,
            "10": 3,
            "11": 3,
            "12": 3,
            "13": 1,
            "14": 2,
            "15": 2,
            "16": 1,
            "17": 0,
            "18": 0,
            "19": 3,
            "20": 3,
            "21": 3,
            "22": 1,
            "23": 2,
            "24": 2,
            "25": 1,
            "26": 1,
            "27": 1,
            "28": 1,
            "29": 0,
            "30": 0,
            "31": 1,
            "32": 0,
            "33": 1,
            "34": 1,
            "35": 1,
            "36": 0,
            "37": 1,
            "38": 1,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 1,
            "44": 2,
            "45": 2,
            "46": 1,
            "47": 2
        },
        "b": {
            "1": [
                0,
                0
            ],
            "2": [
                3,
                0
            ],
            "3": [
                1,
                2
            ],
            "4": [
                2,
                0
            ],
            "5": [
                2,
                1
            ],
            "6": [
                0,
                0
            ],
            "7": [
                3,
                0
            ],
            "8": [
                1,
                2
            ],
            "9": [
                2,
                0
            ],
            "10": [
                2,
                1
            ],
            "11": [
                0,
                1
            ],
            "12": [
                1,
                1
            ],
            "13": [
                0,
                0
            ],
            "14": [
                0,
                1
            ],
            "15": [
                0,
                0
            ],
            "16": [
                1,
                1
            ]
        },
        "f": {
            "1": 1,
            "2": 6,
            "3": 7,
            "4": 0,
            "5": 3,
            "6": 0,
            "7": 3,
            "8": 1,
            "9": 0,
            "10": 0,
            "11": 2
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 23
                    },
                    "end": {
                        "line": 1,
                        "column": 42
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 55,
                "loc": {
                    "start": {
                        "line": 55,
                        "column": 4
                    },
                    "end": {
                        "line": 55,
                        "column": 19
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 57,
                "loc": {
                    "start": {
                        "line": 57,
                        "column": 20
                    },
                    "end": {
                        "line": 57,
                        "column": 31
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 68,
                "loc": {
                    "start": {
                        "line": 68,
                        "column": 12
                    },
                    "end": {
                        "line": 68,
                        "column": 23
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 73,
                "loc": {
                    "start": {
                        "line": 73,
                        "column": 12
                    },
                    "end": {
                        "line": 73,
                        "column": 26
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 87,
                "loc": {
                    "start": {
                        "line": 87,
                        "column": 12
                    },
                    "end": {
                        "line": 87,
                        "column": 23
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 92,
                "loc": {
                    "start": {
                        "line": 92,
                        "column": 12
                    },
                    "end": {
                        "line": 92,
                        "column": 26
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 173,
                "loc": {
                    "start": {
                        "line": 173,
                        "column": 12
                    },
                    "end": {
                        "line": 173,
                        "column": 23
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 197,
                "loc": {
                    "start": {
                        "line": 197,
                        "column": 12
                    },
                    "end": {
                        "line": 197,
                        "column": 23
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 213,
                "loc": {
                    "start": {
                        "line": 213,
                        "column": 29
                    },
                    "end": {
                        "line": 213,
                        "column": 56
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 229,
                "loc": {
                    "start": {
                        "line": 229,
                        "column": 28
                    },
                    "end": {
                        "line": 229,
                        "column": 60
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 238,
                    "column": 59
                }
            },
            "2": {
                "start": {
                    "line": 11,
                    "column": 0
                },
                "end": {
                    "line": 65,
                    "column": 2
                }
            },
            "3": {
                "start": {
                    "line": 56,
                    "column": 8
                },
                "end": {
                    "line": 63,
                    "column": 10
                }
            },
            "4": {
                "start": {
                    "line": 58,
                    "column": 16
                },
                "end": {
                    "line": 58,
                    "column": 65
                }
            },
            "5": {
                "start": {
                    "line": 59,
                    "column": 16
                },
                "end": {
                    "line": 59,
                    "column": 54
                }
            },
            "6": {
                "start": {
                    "line": 61,
                    "column": 16
                },
                "end": {
                    "line": 61,
                    "column": 53
                }
            },
            "7": {
                "start": {
                    "line": 67,
                    "column": 0
                },
                "end": {
                    "line": 84,
                    "column": 2
                }
            },
            "8": {
                "start": {
                    "line": 69,
                    "column": 8
                },
                "end": {
                    "line": 69,
                    "column": 43
                }
            },
            "9": {
                "start": {
                    "line": 70,
                    "column": 8
                },
                "end": {
                    "line": 70,
                    "column": 81
                }
            },
            "10": {
                "start": {
                    "line": 74,
                    "column": 8
                },
                "end": {
                    "line": 74,
                    "column": 43
                }
            },
            "11": {
                "start": {
                    "line": 75,
                    "column": 8
                },
                "end": {
                    "line": 82,
                    "column": 9
                }
            },
            "12": {
                "start": {
                    "line": 76,
                    "column": 12
                },
                "end": {
                    "line": 80,
                    "column": 13
                }
            },
            "13": {
                "start": {
                    "line": 77,
                    "column": 16
                },
                "end": {
                    "line": 77,
                    "column": 38
                }
            },
            "14": {
                "start": {
                    "line": 78,
                    "column": 19
                },
                "end": {
                    "line": 80,
                    "column": 13
                }
            },
            "15": {
                "start": {
                    "line": 79,
                    "column": 16
                },
                "end": {
                    "line": 79,
                    "column": 74
                }
            },
            "16": {
                "start": {
                    "line": 86,
                    "column": 0
                },
                "end": {
                    "line": 103,
                    "column": 2
                }
            },
            "17": {
                "start": {
                    "line": 88,
                    "column": 8
                },
                "end": {
                    "line": 88,
                    "column": 43
                }
            },
            "18": {
                "start": {
                    "line": 89,
                    "column": 8
                },
                "end": {
                    "line": 89,
                    "column": 79
                }
            },
            "19": {
                "start": {
                    "line": 93,
                    "column": 8
                },
                "end": {
                    "line": 93,
                    "column": 43
                }
            },
            "20": {
                "start": {
                    "line": 94,
                    "column": 8
                },
                "end": {
                    "line": 101,
                    "column": 9
                }
            },
            "21": {
                "start": {
                    "line": 95,
                    "column": 12
                },
                "end": {
                    "line": 99,
                    "column": 13
                }
            },
            "22": {
                "start": {
                    "line": 96,
                    "column": 16
                },
                "end": {
                    "line": 96,
                    "column": 37
                }
            },
            "23": {
                "start": {
                    "line": 97,
                    "column": 19
                },
                "end": {
                    "line": 99,
                    "column": 13
                }
            },
            "24": {
                "start": {
                    "line": 98,
                    "column": 16
                },
                "end": {
                    "line": 98,
                    "column": 74
                }
            },
            "25": {
                "start": {
                    "line": 105,
                    "column": 0
                },
                "end": {
                    "line": 159,
                    "column": 3
                }
            },
            "26": {
                "start": {
                    "line": 172,
                    "column": 0
                },
                "end": {
                    "line": 189,
                    "column": 2
                }
            },
            "27": {
                "start": {
                    "line": 174,
                    "column": 8
                },
                "end": {
                    "line": 175,
                    "column": 19
                }
            },
            "28": {
                "start": {
                    "line": 177,
                    "column": 8
                },
                "end": {
                    "line": 181,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 178,
                    "column": 12
                },
                "end": {
                    "line": 180,
                    "column": 13
                }
            },
            "30": {
                "start": {
                    "line": 179,
                    "column": 16
                },
                "end": {
                    "line": 179,
                    "column": 44
                }
            },
            "31": {
                "start": {
                    "line": 182,
                    "column": 8
                },
                "end": {
                    "line": 186,
                    "column": 9
                }
            },
            "32": {
                "start": {
                    "line": 183,
                    "column": 12
                },
                "end": {
                    "line": 183,
                    "column": 48
                }
            },
            "33": {
                "start": {
                    "line": 185,
                    "column": 12
                },
                "end": {
                    "line": 185,
                    "column": 40
                }
            },
            "34": {
                "start": {
                    "line": 187,
                    "column": 8
                },
                "end": {
                    "line": 187,
                    "column": 22
                }
            },
            "35": {
                "start": {
                    "line": 196,
                    "column": 0
                },
                "end": {
                    "line": 200,
                    "column": 2
                }
            },
            "36": {
                "start": {
                    "line": 198,
                    "column": 8
                },
                "end": {
                    "line": 198,
                    "column": 61
                }
            },
            "37": {
                "start": {
                    "line": 202,
                    "column": 0
                },
                "end": {
                    "line": 202,
                    "column": 47
                }
            },
            "38": {
                "start": {
                    "line": 213,
                    "column": 0
                },
                "end": {
                    "line": 219,
                    "column": 2
                }
            },
            "39": {
                "start": {
                    "line": 214,
                    "column": 4
                },
                "end": {
                    "line": 214,
                    "column": 40
                }
            },
            "40": {
                "start": {
                    "line": 215,
                    "column": 4
                },
                "end": {
                    "line": 217,
                    "column": 5
                }
            },
            "41": {
                "start": {
                    "line": 216,
                    "column": 8
                },
                "end": {
                    "line": 216,
                    "column": 41
                }
            },
            "42": {
                "start": {
                    "line": 218,
                    "column": 4
                },
                "end": {
                    "line": 218,
                    "column": 52
                }
            },
            "43": {
                "start": {
                    "line": 229,
                    "column": 0
                },
                "end": {
                    "line": 235,
                    "column": 2
                }
            },
            "44": {
                "start": {
                    "line": 230,
                    "column": 4
                },
                "end": {
                    "line": 230,
                    "column": 40
                }
            },
            "45": {
                "start": {
                    "line": 231,
                    "column": 4
                },
                "end": {
                    "line": 233,
                    "column": 5
                }
            },
            "46": {
                "start": {
                    "line": 232,
                    "column": 8
                },
                "end": {
                    "line": 232,
                    "column": 41
                }
            },
            "47": {
                "start": {
                    "line": 234,
                    "column": 4
                },
                "end": {
                    "line": 234,
                    "column": 56
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 70,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 70,
                            "column": 40
                        },
                        "end": {
                            "line": 70,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 70,
                            "column": 58
                        },
                        "end": {
                            "line": 70,
                            "column": 80
                        }
                    }
                ]
            },
            "2": {
                "line": 75,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 75,
                            "column": 8
                        },
                        "end": {
                            "line": 75,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 75,
                            "column": 8
                        },
                        "end": {
                            "line": 75,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 76,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 76,
                            "column": 12
                        },
                        "end": {
                            "line": 76,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 76,
                            "column": 12
                        },
                        "end": {
                            "line": 76,
                            "column": 12
                        }
                    }
                ]
            },
            "4": {
                "line": 78,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 78,
                            "column": 19
                        },
                        "end": {
                            "line": 78,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 78,
                            "column": 19
                        },
                        "end": {
                            "line": 78,
                            "column": 19
                        }
                    }
                ]
            },
            "5": {
                "line": 78,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 78,
                            "column": 23
                        },
                        "end": {
                            "line": 78,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 78,
                            "column": 40
                        },
                        "end": {
                            "line": 78,
                            "column": 59
                        }
                    }
                ]
            },
            "6": {
                "line": 89,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 89,
                            "column": 39
                        },
                        "end": {
                            "line": 89,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 89,
                            "column": 56
                        },
                        "end": {
                            "line": 89,
                            "column": 78
                        }
                    }
                ]
            },
            "7": {
                "line": 94,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 94,
                            "column": 8
                        },
                        "end": {
                            "line": 94,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 94,
                            "column": 8
                        },
                        "end": {
                            "line": 94,
                            "column": 8
                        }
                    }
                ]
            },
            "8": {
                "line": 95,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 95,
                            "column": 12
                        },
                        "end": {
                            "line": 95,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 95,
                            "column": 12
                        },
                        "end": {
                            "line": 95,
                            "column": 12
                        }
                    }
                ]
            },
            "9": {
                "line": 97,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 97,
                            "column": 19
                        },
                        "end": {
                            "line": 97,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 97,
                            "column": 19
                        },
                        "end": {
                            "line": 97,
                            "column": 19
                        }
                    }
                ]
            },
            "10": {
                "line": 97,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 97,
                            "column": 23
                        },
                        "end": {
                            "line": 97,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 97,
                            "column": 40
                        },
                        "end": {
                            "line": 97,
                            "column": 59
                        }
                    }
                ]
            },
            "11": {
                "line": 177,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 177,
                            "column": 8
                        },
                        "end": {
                            "line": 177,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 177,
                            "column": 8
                        },
                        "end": {
                            "line": 177,
                            "column": 8
                        }
                    }
                ]
            },
            "12": {
                "line": 177,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 177,
                            "column": 12
                        },
                        "end": {
                            "line": 177,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 177,
                            "column": 20
                        },
                        "end": {
                            "line": 177,
                            "column": 33
                        }
                    }
                ]
            },
            "13": {
                "line": 178,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 178,
                            "column": 12
                        },
                        "end": {
                            "line": 178,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 178,
                            "column": 12
                        },
                        "end": {
                            "line": 178,
                            "column": 12
                        }
                    }
                ]
            },
            "14": {
                "line": 182,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 182,
                            "column": 8
                        },
                        "end": {
                            "line": 182,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 182,
                            "column": 8
                        },
                        "end": {
                            "line": 182,
                            "column": 8
                        }
                    }
                ]
            },
            "15": {
                "line": 215,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 215,
                            "column": 4
                        },
                        "end": {
                            "line": 215,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 215,
                            "column": 4
                        },
                        "end": {
                            "line": 215,
                            "column": 4
                        }
                    }
                ]
            },
            "16": {
                "line": 231,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 231,
                            "column": 4
                        },
                        "end": {
                            "line": 231,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 231,
                            "column": 4
                        },
                        "end": {
                            "line": 231,
                            "column": 4
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('node-screen', function (Y, NAME) {",
            "",
            "/**",
            " * Extended Node interface for managing regions and screen positioning.",
            " * Adds support for positioning elements and normalizes window size and scroll detection. ",
            " * @module node",
            " * @submodule node-screen",
            " */",
            "",
            "// these are all \"safe\" returns, no wrapping required",
            "Y.each([",
            "    /**",
            "     * Returns the inner width of the viewport (exludes scrollbar). ",
            "     * @config winWidth",
            "     * @for Node",
            "     * @type {Int}",
            "     */",
            "    'winWidth',",
            "",
            "    /**",
            "     * Returns the inner height of the viewport (exludes scrollbar). ",
            "     * @config winHeight",
            "     * @type {Int}",
            "     */",
            "    'winHeight',",
            "",
            "    /**",
            "     * Document width ",
            "     * @config docWidth",
            "     * @type {Int}",
            "     */",
            "    'docWidth',",
            "",
            "    /**",
            "     * Document height ",
            "     * @config docHeight",
            "     * @type {Int}",
            "     */",
            "    'docHeight',",
            "",
            "    /**",
            "     * Pixel distance the page has been scrolled horizontally ",
            "     * @config docScrollX",
            "     * @type {Int}",
            "     */",
            "    'docScrollX',",
            "",
            "    /**",
            "     * Pixel distance the page has been scrolled vertically ",
            "     * @config docScrollY",
            "     * @type {Int}",
            "     */",
            "    'docScrollY'",
            "    ],",
            "    function(name) {",
            "        Y.Node.ATTRS[name] = {",
            "            getter: function() {",
            "                var args = Array.prototype.slice.call(arguments);",
            "                args.unshift(Y.Node.getDOMNode(this));",
            "",
            "                return Y.DOM[name].apply(this, args);",
            "            }",
            "        };",
            "    }",
            ");",
            "",
            "Y.Node.ATTRS.scrollLeft = {",
            "    getter: function() {",
            "        var node = Y.Node.getDOMNode(this);",
            "        return ('scrollLeft' in node) ? node.scrollLeft : Y.DOM.docScrollX(node);",
            "    },",
            "",
            "    setter: function(val) {",
            "        var node = Y.Node.getDOMNode(this);",
            "        if (node) {",
            "            if ('scrollLeft' in node) {",
            "                node.scrollLeft = val;",
            "            } else if (node.document || node.nodeType === 9) {",
            "                Y.DOM._getWin(node).scrollTo(val, Y.DOM.docScrollY(node)); // scroll window if win or doc",
            "            }",
            "        } else {",
            "        }",
            "    }",
            "};",
            "",
            "Y.Node.ATTRS.scrollTop = {",
            "    getter: function() {",
            "        var node = Y.Node.getDOMNode(this);",
            "        return ('scrollTop' in node) ? node.scrollTop : Y.DOM.docScrollY(node);",
            "    },",
            "",
            "    setter: function(val) {",
            "        var node = Y.Node.getDOMNode(this);",
            "        if (node) {",
            "            if ('scrollTop' in node) {",
            "                node.scrollTop = val;",
            "            } else if (node.document || node.nodeType === 9) {",
            "                Y.DOM._getWin(node).scrollTo(Y.DOM.docScrollX(node), val); // scroll window if win or doc",
            "            }",
            "        } else {",
            "        }",
            "    }",
            "};",
            "",
            "Y.Node.importMethod(Y.DOM, [",
            "/**",
            " * Gets the current position of the node in page coordinates. ",
            " * @method getXY",
            " * @for Node",
            " * @return {Array} The XY position of the node",
            "*/",
            "    'getXY',",
            "",
            "/**",
            " * Set the position of the node in page coordinates, regardless of how the node is positioned.",
            " * @method setXY",
            " * @param {Array} xy Contains X & Y values for new position (coordinates are page-based)",
            " * @chainable",
            " */",
            "    'setXY',",
            "",
            "/**",
            " * Gets the current position of the node in page coordinates. ",
            " * @method getX",
            " * @return {Int} The X position of the node",
            "*/",
            "    'getX',",
            "",
            "/**",
            " * Set the position of the node in page coordinates, regardless of how the node is positioned.",
            " * @method setX",
            " * @param {Int} x X value for new position (coordinates are page-based)",
            " * @chainable",
            " */",
            "    'setX',",
            "",
            "/**",
            " * Gets the current position of the node in page coordinates. ",
            " * @method getY",
            " * @return {Int} The Y position of the node",
            "*/",
            "    'getY',",
            "",
            "/**",
            " * Set the position of the node in page coordinates, regardless of how the node is positioned.",
            " * @method setY",
            " * @param {Int} y Y value for new position (coordinates are page-based)",
            " * @chainable",
            " */",
            "    'setY',",
            "",
            "/**",
            " * Swaps the XY position of this node with another node. ",
            " * @method swapXY",
            " * @param {Node | HTMLElement} otherNode The node to swap with.",
            " * @chainable",
            " */",
            "    'swapXY'",
            "]);",
            "",
            "/**",
            " * @module node",
            " * @submodule node-screen",
            " */",
            "",
            "/**",
            " * Returns a region object for the node",
            " * @config region",
            " * @for Node",
            " * @type Node",
            " */",
            "Y.Node.ATTRS.region = {",
            "    getter: function() {",
            "        var node = this.getDOMNode(),",
            "            region;",
            "",
            "        if (node && !node.tagName) {",
            "            if (node.nodeType === 9) { // document",
            "                node = node.documentElement;",
            "            }",
            "        }",
            "        if (Y.DOM.isWindow(node)) {",
            "            region = Y.DOM.viewportRegion(node);",
            "        } else {",
            "            region = Y.DOM.region(node);",
            "        }",
            "        return region;",
            "    }",
            "};",
            "",
            "/**",
            " * Returns a region object for the node's viewport",
            " * @config viewportRegion",
            " * @type Node",
            " */",
            "Y.Node.ATTRS.viewportRegion = {",
            "    getter: function() {",
            "        return Y.DOM.viewportRegion(Y.Node.getDOMNode(this));",
            "    }",
            "};",
            "",
            "Y.Node.importMethod(Y.DOM, 'inViewportRegion');",
            "",
            "// these need special treatment to extract 2nd node arg",
            "/**",
            " * Compares the intersection of the node with another node or region",
            " * @method intersect",
            " * @for Node",
            " * @param {Node|Object} node2 The node or region to compare with.",
            " * @param {Object} altRegion An alternate region to use (rather than this node's).",
            " * @return {Object} An object representing the intersection of the regions.",
            " */",
            "Y.Node.prototype.intersect = function(node2, altRegion) {",
            "    var node1 = Y.Node.getDOMNode(this);",
            "    if (Y.instanceOf(node2, Y.Node)) { // might be a region object",
            "        node2 = Y.Node.getDOMNode(node2);",
            "    }",
            "    return Y.DOM.intersect(node1, node2, altRegion);",
            "};",
            "",
            "/**",
            " * Determines whether or not the node is within the giving region.",
            " * @method inRegion",
            " * @param {Node|Object} node2 The node or region to compare with.",
            " * @param {Boolean} all Whether or not all of the node must be in the region.",
            " * @param {Object} altRegion An alternate region to use (rather than this node's).",
            " * @return {Boolean} True if in region, false if not.",
            " */",
            "Y.Node.prototype.inRegion = function(node2, all, altRegion) {",
            "    var node1 = Y.Node.getDOMNode(this);",
            "    if (Y.instanceOf(node2, Y.Node)) { // might be a region object",
            "        node2 = Y.Node.getDOMNode(node2);",
            "    }",
            "    return Y.DOM.inRegion(node1, node2, all, altRegion);",
            "};",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"dom-screen\", \"node-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "11": 1,
            "56": 6,
            "58": 7,
            "59": 7,
            "61": 7,
            "67": 1,
            "69": 0,
            "70": 0,
            "74": 3,
            "75": 3,
            "76": 3,
            "77": 1,
            "78": 2,
            "79": 2,
            "86": 1,
            "88": 0,
            "89": 0,
            "93": 3,
            "94": 3,
            "95": 3,
            "96": 1,
            "97": 2,
            "98": 2,
            "105": 1,
            "172": 1,
            "174": 1,
            "177": 1,
            "178": 0,
            "179": 0,
            "182": 1,
            "183": 0,
            "185": 1,
            "187": 1,
            "196": 1,
            "198": 0,
            "202": 1,
            "213": 1,
            "214": 0,
            "215": 0,
            "216": 0,
            "218": 0,
            "229": 1,
            "230": 2,
            "231": 2,
            "232": 1,
            "234": 2
        }
    },
    "build/node-load/node-load.js": {
        "path": "build/node-load/node-load.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 2,
            "4": 2,
            "5": 2,
            "6": 2,
            "7": 1,
            "8": 1,
            "9": 2,
            "10": 2,
            "11": 2,
            "12": 1,
            "13": 2,
            "14": 1,
            "15": 1,
            "16": 2,
            "17": 2,
            "18": 2
        },
        "b": {
            "1": [
                2,
                0
            ],
            "2": [
                2,
                2
            ],
            "3": [
                1,
                1
            ],
            "4": [
                2,
                0
            ],
            "5": [
                1,
                1
            ]
        },
        "f": {
            "1": 1,
            "2": 2,
            "3": 2
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 21
                    },
                    "end": {
                        "line": 1,
                        "column": 40
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 19,
                "loc": {
                    "start": {
                        "line": 19,
                        "column": 31
                    },
                    "end": {
                        "line": 19,
                        "column": 62
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 47,
                "loc": {
                    "start": {
                        "line": 47,
                        "column": 24
                    },
                    "end": {
                        "line": 47,
                        "column": 58
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 65,
                    "column": 56
                }
            },
            "2": {
                "start": {
                    "line": 19,
                    "column": 0
                },
                "end": {
                    "line": 36,
                    "column": 2
                }
            },
            "3": {
                "start": {
                    "line": 20,
                    "column": 4
                },
                "end": {
                    "line": 23,
                    "column": 16
                }
            },
            "4": {
                "start": {
                    "line": 25,
                    "column": 4
                },
                "end": {
                    "line": 32,
                    "column": 5
                }
            },
            "5": {
                "start": {
                    "line": 26,
                    "column": 8
                },
                "end": {
                    "line": 26,
                    "column": 40
                }
            },
            "6": {
                "start": {
                    "line": 27,
                    "column": 8
                },
                "end": {
                    "line": 30,
                    "column": 9
                }
            },
            "7": {
                "start": {
                    "line": 28,
                    "column": 12
                },
                "end": {
                    "line": 28,
                    "column": 40
                }
            },
            "8": {
                "start": {
                    "line": 29,
                    "column": 12
                },
                "end": {
                    "line": 29,
                    "column": 54
                }
            },
            "9": {
                "start": {
                    "line": 31,
                    "column": 8
                },
                "end": {
                    "line": 31,
                    "column": 33
                }
            },
            "10": {
                "start": {
                    "line": 33,
                    "column": 4
                },
                "end": {
                    "line": 35,
                    "column": 5
                }
            },
            "11": {
                "start": {
                    "line": 34,
                    "column": 8
                },
                "end": {
                    "line": 34,
                    "column": 44
                }
            },
            "12": {
                "start": {
                    "line": 47,
                    "column": 0
                },
                "end": {
                    "line": 62,
                    "column": 2
                }
            },
            "13": {
                "start": {
                    "line": 48,
                    "column": 4
                },
                "end": {
                    "line": 51,
                    "column": 5
                }
            },
            "14": {
                "start": {
                    "line": 49,
                    "column": 8
                },
                "end": {
                    "line": 49,
                    "column": 28
                }
            },
            "15": {
                "start": {
                    "line": 50,
                    "column": 8
                },
                "end": {
                    "line": 50,
                    "column": 24
                }
            },
            "16": {
                "start": {
                    "line": 52,
                    "column": 4
                },
                "end": {
                    "line": 58,
                    "column": 6
                }
            },
            "17": {
                "start": {
                    "line": 60,
                    "column": 4
                },
                "end": {
                    "line": 60,
                    "column": 22
                }
            },
            "18": {
                "start": {
                    "line": 61,
                    "column": 4
                },
                "end": {
                    "line": 61,
                    "column": 16
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 25,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 25,
                            "column": 4
                        },
                        "end": {
                            "line": 25,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 25,
                            "column": 4
                        },
                        "end": {
                            "line": 25,
                            "column": 4
                        }
                    }
                ]
            },
            "2": {
                "line": 25,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 25,
                            "column": 8
                        },
                        "end": {
                            "line": 25,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 25,
                            "column": 20
                        },
                        "end": {
                            "line": 25,
                            "column": 41
                        }
                    }
                ]
            },
            "3": {
                "line": 27,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 27,
                            "column": 8
                        },
                        "end": {
                            "line": 27,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 27,
                            "column": 8
                        },
                        "end": {
                            "line": 27,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 33,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 33,
                            "column": 4
                        },
                        "end": {
                            "line": 33,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 33,
                            "column": 4
                        },
                        "end": {
                            "line": 33,
                            "column": 4
                        }
                    }
                ]
            },
            "5": {
                "line": 48,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 48,
                            "column": 4
                        },
                        "end": {
                            "line": 48,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 48,
                            "column": 4
                        },
                        "end": {
                            "line": 48,
                            "column": 4
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('node-load', function (Y, NAME) {",
            "",
            "/**",
            " * Extended Node interface with a basic IO API.",
            " * @module node",
            " * @submodule node-load",
            " */",
            "",
            "/**",
            " * The default IO complete handler.",
            " * @method _ioComplete",
            " * @protected",
            " * @for Node",
            " * @param {String} code The response code.",
            " * @param {Object} response The response object.",
            " * @param {Array} args An array containing the callback and selector",
            " */",
            "",
            "Y.Node.prototype._ioComplete = function(code, response, args) {",
            "    var selector = args[0],",
            "        callback = args[1],",
            "        tmp,",
            "        content;",
            "",
            "    if (response && response.responseText) {",
            "        content = response.responseText;",
            "        if (selector) {",
            "            tmp = Y.DOM.create(content);",
            "            content = Y.Selector.query(selector, tmp);",
            "        }",
            "        this.setContent(content);",
            "    }",
            "    if (callback) {",
            "        callback.call(this, code, response);",
            "    }",
            "};",
            "",
            "/**",
            " * Loads content from the given url and replaces the Node's",
            " * existing content with the remote content.",
            " * @method load",
            " * @param {String} url The URL to load via XMLHttpRequest.",
            " * @param {String} selector An optional selector representing a subset of an HTML document to load.",
            " * @param {Function} callback An optional function to run after the content has been loaded.",
            " * @chainable",
            " */",
            "Y.Node.prototype.load = function(url, selector, callback) {",
            "    if (typeof selector == 'function') {",
            "        callback = selector;",
            "        selector = null;",
            "    }",
            "    var config = {",
            "        context: this,",
            "        on: {",
            "            complete: this._ioComplete",
            "        },",
            "        arguments: [selector, callback]",
            "    };",
            "",
            "    Y.io(url, config);",
            "    return this;",
            "};",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"node-base\", \"io-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "19": 1,
            "20": 2,
            "25": 2,
            "26": 2,
            "27": 2,
            "28": 1,
            "29": 1,
            "31": 2,
            "33": 2,
            "34": 2,
            "47": 1,
            "48": 2,
            "49": 1,
            "50": 1,
            "52": 2,
            "60": 2,
            "61": 2
        }
    }
}