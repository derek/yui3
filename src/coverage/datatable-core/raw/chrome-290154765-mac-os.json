{
    "build/datatable-core/datatable-core.js": {
        "path": "build/datatable-core/datatable-core.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 28,
            "7": 28,
            "8": 1,
            "9": 27,
            "10": 28,
            "11": 22,
            "12": 6,
            "13": 6,
            "14": 5,
            "15": 5,
            "16": 5,
            "17": 1,
            "18": 5,
            "19": 1,
            "20": 41,
            "21": 41,
            "22": 37,
            "23": 37,
            "24": 37,
            "25": 0,
            "26": 41,
            "27": 5,
            "28": 4,
            "29": 4,
            "30": 4,
            "31": 0,
            "32": 4,
            "33": 4,
            "34": 4,
            "35": 4,
            "36": 4,
            "37": 0,
            "38": 4,
            "39": 7,
            "40": 7,
            "41": 4,
            "42": 4,
            "43": 10,
            "44": 3,
            "45": 3,
            "46": 7,
            "47": 3,
            "48": 105,
            "49": 1,
            "50": 65,
            "51": 37,
            "52": 37,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 37,
            "58": 37,
            "59": 10,
            "60": 10,
            "61": 3,
            "62": 10,
            "63": 64,
            "64": 64,
            "65": 37,
            "66": 37,
            "67": 3,
            "68": 3,
            "69": 0,
            "70": 34,
            "71": 34,
            "72": 6,
            "73": 37,
            "74": 37,
            "75": 37,
            "76": 37,
            "77": 15,
            "78": 15,
            "79": 7,
            "80": 8,
            "81": 1,
            "82": 15,
            "83": 8,
            "84": 37,
            "85": 37,
            "86": 37,
            "87": 42,
            "88": 42,
            "89": 52,
            "90": 52,
            "91": 109,
            "92": 109,
            "93": 109,
            "94": 94,
            "95": 109,
            "96": 109,
            "97": 10,
            "98": 42,
            "99": 42,
            "100": 36,
            "101": 36,
            "102": 22,
            "103": 22,
            "104": 22,
            "105": 22,
            "106": 44,
            "107": 44,
            "108": 44,
            "109": 10,
            "110": 34,
            "111": 0,
            "112": 0,
            "113": 34,
            "114": 22,
            "115": 36,
            "116": 109,
            "117": 109,
            "118": 6,
            "119": 103,
            "120": 109,
            "121": 36,
            "122": 46,
            "123": 46,
            "124": 109,
            "125": 109,
            "126": 109,
            "127": 109,
            "128": 109,
            "129": 1,
            "130": 109,
            "131": 20,
            "132": 89,
            "133": 109,
            "134": 109,
            "135": 10,
            "136": 46,
            "137": 36,
            "138": 1,
            "139": 1,
            "140": 45,
            "141": 0,
            "142": 45,
            "143": 27,
            "144": 27,
            "145": 27,
            "146": 18,
            "147": 3,
            "148": 45,
            "149": 2,
            "150": 2,
            "151": 1,
            "152": 1,
            "153": 1,
            "154": 1,
            "155": 2,
            "156": 2,
            "157": 10,
            "158": 10,
            "159": 3,
            "160": 7,
            "161": 7,
            "162": 10
        },
        "b": {
            "1": [
                1,
                27
            ],
            "2": [
                28,
                2
            ],
            "3": [
                22,
                6
            ],
            "4": [
                5,
                1
            ],
            "5": [
                6,
                2
            ],
            "6": [
                6,
                6
            ],
            "7": [
                1,
                1
            ],
            "8": [
                5,
                5,
                0
            ],
            "9": [
                41,
                39
            ],
            "10": [
                37,
                4
            ],
            "11": [
                37,
                0
            ],
            "12": [
                0,
                37
            ],
            "13": [
                37,
                0,
                0
            ],
            "14": [
                41,
                0
            ],
            "15": [
                0,
                4
            ],
            "16": [
                4,
                0
            ],
            "17": [
                4,
                0
            ],
            "18": [
                4,
                4
            ],
            "19": [
                0,
                4
            ],
            "20": [
                4,
                3
            ],
            "21": [
                3,
                0
            ],
            "22": [
                34,
                71
            ],
            "23": [
                65,
                41,
                3
            ],
            "24": [
                37,
                6
            ],
            "25": [
                0,
                37
            ],
            "26": [
                37,
                6
            ],
            "27": [
                0,
                0
            ],
            "28": [
                3,
                7
            ],
            "29": [
                37,
                27
            ],
            "30": [
                3,
                34
            ],
            "31": [
                37,
                3,
                3
            ],
            "32": [
                0,
                3
            ],
            "33": [
                6,
                28
            ],
            "34": [
                15,
                22
            ],
            "35": [
                15,
                9,
                7
            ],
            "36": [
                7,
                8
            ],
            "37": [
                1,
                7
            ],
            "38": [
                8,
                2
            ],
            "39": [
                8,
                7
            ],
            "40": [
                94,
                15
            ],
            "41": [
                109,
                99
            ],
            "42": [
                10,
                99
            ],
            "43": [
                44,
                0
            ],
            "44": [
                10,
                34
            ],
            "45": [
                0,
                34
            ],
            "46": [
                0,
                0
            ],
            "47": [
                6,
                103
            ],
            "48": [
                87,
                22
            ],
            "49": [
                109,
                0
            ],
            "50": [
                1,
                108
            ],
            "51": [
                20,
                89
            ],
            "52": [
                109,
                92,
                1
            ],
            "53": [
                10,
                99
            ],
            "54": [
                36,
                36
            ],
            "55": [
                1,
                0
            ],
            "56": [
                0,
                45
            ],
            "57": [
                27,
                18
            ],
            "58": [
                3,
                15
            ],
            "59": [
                18,
                17,
                15
            ],
            "60": [
                1,
                1
            ],
            "61": [
                2,
                2,
                2
            ],
            "62": [
                3,
                7
            ],
            "63": [
                10,
                3,
                3
            ],
            "64": [
                7,
                0
            ],
            "65": [
                10,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 37,
            "3": 28,
            "4": 41,
            "5": 5,
            "6": 4,
            "7": 4,
            "8": 7,
            "9": 3,
            "10": 105,
            "11": 1,
            "12": 65,
            "13": 37,
            "14": 37,
            "15": 10,
            "16": 64,
            "17": 37,
            "18": 42,
            "19": 52,
            "20": 36,
            "21": 22,
            "22": 109,
            "23": 46,
            "24": 1,
            "25": 45,
            "26": 2,
            "27": 1,
            "28": 10
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 26
                    },
                    "end": {
                        "line": 1,
                        "column": 45
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 38,
                "loc": {
                    "start": {
                        "line": 38,
                        "column": 40
                    },
                    "end": {
                        "line": 38,
                        "column": 52
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 231,
                "loc": {
                    "start": {
                        "line": 231,
                        "column": 15
                    },
                    "end": {
                        "line": 231,
                        "column": 31
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 278,
                "loc": {
                    "start": {
                        "line": 278,
                        "column": 15
                    },
                    "end": {
                        "line": 278,
                        "column": 31
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 344,
                "loc": {
                    "start": {
                        "line": 344,
                        "column": 25
                    },
                    "end": {
                        "line": 344,
                        "column": 38
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 357,
                "loc": {
                    "start": {
                        "line": 357,
                        "column": 22
                    },
                    "end": {
                        "line": 357,
                        "column": 35
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 377,
                "loc": {
                    "start": {
                        "line": 377,
                        "column": 28
                    },
                    "end": {
                        "line": 377,
                        "column": 41
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 406,
                "loc": {
                    "start": {
                        "line": 406,
                        "column": 24
                    },
                    "end": {
                        "line": 406,
                        "column": 41
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 429,
                "loc": {
                    "start": {
                        "line": 429,
                        "column": 16
                    },
                    "end": {
                        "line": 429,
                        "column": 28
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 445,
                "loc": {
                    "start": {
                        "line": 445,
                        "column": 17
                    },
                    "end": {
                        "line": 445,
                        "column": 42
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 468,
                "loc": {
                    "start": {
                        "line": 468,
                        "column": 19
                    },
                    "end": {
                        "line": 468,
                        "column": 38
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 480,
                "loc": {
                    "start": {
                        "line": 480,
                        "column": 20
                    },
                    "end": {
                        "line": 480,
                        "column": 35
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 500,
                "loc": {
                    "start": {
                        "line": 500,
                        "column": 18
                    },
                    "end": {
                        "line": 500,
                        "column": 30
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 526,
                "loc": {
                    "start": {
                        "line": 526,
                        "column": 21
                    },
                    "end": {
                        "line": 526,
                        "column": 33
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 544,
                "loc": {
                    "start": {
                        "line": 544,
                        "column": 15
                    },
                    "end": {
                        "line": 544,
                        "column": 27
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 569,
                "loc": {
                    "start": {
                        "line": 569,
                        "column": 23
                    },
                    "end": {
                        "line": 569,
                        "column": 39
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 607,
                "loc": {
                    "start": {
                        "line": 607,
                        "column": 17
                    },
                    "end": {
                        "line": 607,
                        "column": 35
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 653,
                "loc": {
                    "start": {
                        "line": 653,
                        "column": 19
                    },
                    "end": {
                        "line": 653,
                        "column": 38
                    }
                }
            },
            "19": {
                "name": "process",
                "line": 656,
                "loc": {
                    "start": {
                        "line": 656,
                        "column": 8
                    },
                    "end": {
                        "line": 656,
                        "column": 31
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 704,
                "loc": {
                    "start": {
                        "line": 704,
                        "column": 17
                    },
                    "end": {
                        "line": 704,
                        "column": 32
                    }
                }
            },
            "21": {
                "name": "copyObj",
                "line": 710,
                "loc": {
                    "start": {
                        "line": 710,
                        "column": 8
                    },
                    "end": {
                        "line": 710,
                        "column": 28
                    }
                }
            },
            "22": {
                "name": "genId",
                "line": 736,
                "loc": {
                    "start": {
                        "line": 736,
                        "column": 8
                    },
                    "end": {
                        "line": 736,
                        "column": 29
                    }
                }
            },
            "23": {
                "name": "process",
                "line": 750,
                "loc": {
                    "start": {
                        "line": 750,
                        "column": 8
                    },
                    "end": {
                        "line": 750,
                        "column": 39
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 806,
                "loc": {
                    "start": {
                        "line": 806,
                        "column": 19
                    },
                    "end": {
                        "line": 806,
                        "column": 34
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 829,
                "loc": {
                    "start": {
                        "line": 829,
                        "column": 14
                    },
                    "end": {
                        "line": 829,
                        "column": 29
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 867,
                "loc": {
                    "start": {
                        "line": 867,
                        "column": 19
                    },
                    "end": {
                        "line": 867,
                        "column": 34
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 872,
                "loc": {
                    "start": {
                        "line": 872,
                        "column": 21
                    },
                    "end": {
                        "line": 872,
                        "column": 39
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 899,
                "loc": {
                    "start": {
                        "line": 899,
                        "column": 20
                    },
                    "end": {
                        "line": 899,
                        "column": 35
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 915,
                    "column": 79
                }
            },
            "2": {
                "start": {
                    "line": 11,
                    "column": 0
                },
                "end": {
                    "line": 24,
                    "column": 10
                }
            },
            "3": {
                "start": {
                    "line": 38,
                    "column": 0
                },
                "end": {
                    "line": 38,
                    "column": 55
                }
            },
            "4": {
                "start": {
                    "line": 40,
                    "column": 0
                },
                "end": {
                    "line": 199,
                    "column": 2
                }
            },
            "5": {
                "start": {
                    "line": 201,
                    "column": 0
                },
                "end": {
                    "line": 912,
                    "column": 3
                }
            },
            "6": {
                "start": {
                    "line": 232,
                    "column": 8
                },
                "end": {
                    "line": 232,
                    "column": 39
                }
            },
            "7": {
                "start": {
                    "line": 234,
                    "column": 8
                },
                "end": {
                    "line": 242,
                    "column": 9
                }
            },
            "8": {
                "start": {
                    "line": 239,
                    "column": 12
                },
                "end": {
                    "line": 239,
                    "column": 23
                }
            },
            "9": {
                "start": {
                    "line": 241,
                    "column": 12
                },
                "end": {
                    "line": 241,
                    "column": 46
                }
            },
            "10": {
                "start": {
                    "line": 244,
                    "column": 8
                },
                "end": {
                    "line": 246,
                    "column": 9
                }
            },
            "11": {
                "start": {
                    "line": 245,
                    "column": 12
                },
                "end": {
                    "line": 245,
                    "column": 23
                }
            },
            "12": {
                "start": {
                    "line": 248,
                    "column": 8
                },
                "end": {
                    "line": 248,
                    "column": 38
                }
            },
            "13": {
                "start": {
                    "line": 250,
                    "column": 8
                },
                "end": {
                    "line": 259,
                    "column": 9
                }
            },
            "14": {
                "start": {
                    "line": 251,
                    "column": 12
                },
                "end": {
                    "line": 251,
                    "column": 33
                }
            },
            "15": {
                "start": {
                    "line": 252,
                    "column": 12
                },
                "end": {
                    "line": 252,
                    "column": 27
                }
            },
            "16": {
                "start": {
                    "line": 254,
                    "column": 12
                },
                "end": {
                    "line": 256,
                    "column": 13
                }
            },
            "17": {
                "start": {
                    "line": 255,
                    "column": 16
                },
                "end": {
                    "line": 255,
                    "column": 63
                }
            },
            "18": {
                "start": {
                    "line": 258,
                    "column": 12
                },
                "end": {
                    "line": 258,
                    "column": 51
                }
            },
            "19": {
                "start": {
                    "line": 261,
                    "column": 8
                },
                "end": {
                    "line": 261,
                    "column": 20
                }
            },
            "20": {
                "start": {
                    "line": 279,
                    "column": 8
                },
                "end": {
                    "line": 279,
                    "column": 78
                }
            },
            "21": {
                "start": {
                    "line": 281,
                    "column": 8
                },
                "end": {
                    "line": 290,
                    "column": 9
                }
            },
            "22": {
                "start": {
                    "line": 282,
                    "column": 12
                },
                "end": {
                    "line": 284,
                    "column": 13
                }
            },
            "23": {
                "start": {
                    "line": 283,
                    "column": 16
                },
                "end": {
                    "line": 283,
                    "column": 46
                }
            },
            "24": {
                "start": {
                    "line": 287,
                    "column": 12
                },
                "end": {
                    "line": 289,
                    "column": 13
                }
            },
            "25": {
                "start": {
                    "line": 288,
                    "column": 16
                },
                "end": {
                    "line": 288,
                    "column": 73
                }
            },
            "26": {
                "start": {
                    "line": 292,
                    "column": 8
                },
                "end": {
                    "line": 292,
                    "column": 30
                }
            },
            "27": {
                "start": {
                    "line": 345,
                    "column": 8
                },
                "end": {
                    "line": 345,
                    "column": 37
                }
            },
            "28": {
                "start": {
                    "line": 358,
                    "column": 8
                },
                "end": {
                    "line": 358,
                    "column": 33
                }
            },
            "29": {
                "start": {
                    "line": 360,
                    "column": 8
                },
                "end": {
                    "line": 360,
                    "column": 29
                }
            },
            "30": {
                "start": {
                    "line": 362,
                    "column": 8
                },
                "end": {
                    "line": 366,
                    "column": 9
                }
            },
            "31": {
                "start": {
                    "line": 365,
                    "column": 12
                },
                "end": {
                    "line": 365,
                    "column": 32
                }
            },
            "32": {
                "start": {
                    "line": 378,
                    "column": 8
                },
                "end": {
                    "line": 378,
                    "column": 38
                }
            },
            "33": {
                "start": {
                    "line": 380,
                    "column": 8
                },
                "end": {
                    "line": 380,
                    "column": 35
                }
            },
            "34": {
                "start": {
                    "line": 382,
                    "column": 8
                },
                "end": {
                    "line": 382,
                    "column": 30
                }
            },
            "35": {
                "start": {
                    "line": 384,
                    "column": 8
                },
                "end": {
                    "line": 390,
                    "column": 9
                }
            },
            "36": {
                "start": {
                    "line": 385,
                    "column": 12
                },
                "end": {
                    "line": 389,
                    "column": 13
                }
            },
            "37": {
                "start": {
                    "line": 386,
                    "column": 16
                },
                "end": {
                    "line": 386,
                    "column": 36
                }
            },
            "38": {
                "start": {
                    "line": 388,
                    "column": 16
                },
                "end": {
                    "line": 388,
                    "column": 58
                }
            },
            "39": {
                "start": {
                    "line": 407,
                    "column": 8
                },
                "end": {
                    "line": 407,
                    "column": 26
                }
            },
            "40": {
                "start": {
                    "line": 409,
                    "column": 8
                },
                "end": {
                    "line": 417,
                    "column": 9
                }
            },
            "41": {
                "start": {
                    "line": 410,
                    "column": 12
                },
                "end": {
                    "line": 410,
                    "column": 23
                }
            },
            "42": {
                "start": {
                    "line": 412,
                    "column": 12
                },
                "end": {
                    "line": 414,
                    "column": 13
                }
            },
            "43": {
                "start": {
                    "line": 413,
                    "column": 16
                },
                "end": {
                    "line": 413,
                    "column": 37
                }
            },
            "44": {
                "start": {
                    "line": 415,
                    "column": 15
                },
                "end": {
                    "line": 417,
                    "column": 9
                }
            },
            "45": {
                "start": {
                    "line": 416,
                    "column": 12
                },
                "end": {
                    "line": 416,
                    "column": 26
                }
            },
            "46": {
                "start": {
                    "line": 419,
                    "column": 8
                },
                "end": {
                    "line": 419,
                    "column": 76
                }
            },
            "47": {
                "start": {
                    "line": 430,
                    "column": 8
                },
                "end": {
                    "line": 430,
                    "column": 72
                }
            },
            "48": {
                "start": {
                    "line": 449,
                    "column": 8
                },
                "end": {
                    "line": 449,
                    "column": 59
                }
            },
            "49": {
                "start": {
                    "line": 469,
                    "column": 8
                },
                "end": {
                    "line": 469,
                    "column": 63
                }
            },
            "50": {
                "start": {
                    "line": 487,
                    "column": 8
                },
                "end": {
                    "line": 487,
                    "column": 53
                }
            },
            "51": {
                "start": {
                    "line": 501,
                    "column": 8
                },
                "end": {
                    "line": 502,
                    "column": 17
                }
            },
            "52": {
                "start": {
                    "line": 505,
                    "column": 8
                },
                "end": {
                    "line": 514,
                    "column": 9
                }
            },
            "53": {
                "start": {
                    "line": 507,
                    "column": 12
                },
                "end": {
                    "line": 507,
                    "column": 37
                }
            },
            "54": {
                "start": {
                    "line": 509,
                    "column": 12
                },
                "end": {
                    "line": 511,
                    "column": 13
                }
            },
            "55": {
                "start": {
                    "line": 510,
                    "column": 16
                },
                "end": {
                    "line": 510,
                    "column": 37
                }
            },
            "56": {
                "start": {
                    "line": 513,
                    "column": 12
                },
                "end": {
                    "line": 513,
                    "column": 44
                }
            },
            "57": {
                "start": {
                    "line": 516,
                    "column": 8
                },
                "end": {
                    "line": 516,
                    "column": 36
                }
            },
            "58": {
                "start": {
                    "line": 527,
                    "column": 8
                },
                "end": {
                    "line": 531,
                    "column": 11
                }
            },
            "59": {
                "start": {
                    "line": 545,
                    "column": 8
                },
                "end": {
                    "line": 547,
                    "column": 42
                }
            },
            "60": {
                "start": {
                    "line": 549,
                    "column": 8
                },
                "end": {
                    "line": 551,
                    "column": 9
                }
            },
            "61": {
                "start": {
                    "line": 550,
                    "column": 12
                },
                "end": {
                    "line": 550,
                    "column": 41
                }
            },
            "62": {
                "start": {
                    "line": 553,
                    "column": 8
                },
                "end": {
                    "line": 553,
                    "column": 25
                }
            },
            "63": {
                "start": {
                    "line": 570,
                    "column": 8
                },
                "end": {
                    "line": 570,
                    "column": 23
                }
            },
            "64": {
                "start": {
                    "line": 572,
                    "column": 8
                },
                "end": {
                    "line": 596,
                    "column": 9
                }
            },
            "65": {
                "start": {
                    "line": 573,
                    "column": 12
                },
                "end": {
                    "line": 573,
                    "column": 48
                }
            },
            "66": {
                "start": {
                    "line": 575,
                    "column": 12
                },
                "end": {
                    "line": 589,
                    "column": 13
                }
            },
            "67": {
                "start": {
                    "line": 576,
                    "column": 16
                },
                "end": {
                    "line": 576,
                    "column": 33
                }
            },
            "68": {
                "start": {
                    "line": 578,
                    "column": 16
                },
                "end": {
                    "line": 580,
                    "column": 17
                }
            },
            "69": {
                "start": {
                    "line": 579,
                    "column": 20
                },
                "end": {
                    "line": 579,
                    "column": 49
                }
            },
            "70": {
                "start": {
                    "line": 584,
                    "column": 16
                },
                "end": {
                    "line": 584,
                    "column": 46
                }
            },
            "71": {
                "start": {
                    "line": 586,
                    "column": 16
                },
                "end": {
                    "line": 588,
                    "column": 17
                }
            },
            "72": {
                "start": {
                    "line": 587,
                    "column": 20
                },
                "end": {
                    "line": 587,
                    "column": 49
                }
            },
            "73": {
                "start": {
                    "line": 595,
                    "column": 12
                },
                "end": {
                    "line": 595,
                    "column": 38
                }
            },
            "74": {
                "start": {
                    "line": 608,
                    "column": 8
                },
                "end": {
                    "line": 610,
                    "column": 23
                }
            },
            "75": {
                "start": {
                    "line": 614,
                    "column": 8
                },
                "end": {
                    "line": 614,
                    "column": 37
                }
            },
            "76": {
                "start": {
                    "line": 620,
                    "column": 8
                },
                "end": {
                    "line": 633,
                    "column": 9
                }
            },
            "77": {
                "start": {
                    "line": 621,
                    "column": 12
                },
                "end": {
                    "line": 622,
                    "column": 51
                }
            },
            "78": {
                "start": {
                    "line": 624,
                    "column": 12
                },
                "end": {
                    "line": 628,
                    "column": 13
                }
            },
            "79": {
                "start": {
                    "line": 625,
                    "column": 16
                },
                "end": {
                    "line": 625,
                    "column": 49
                }
            },
            "80": {
                "start": {
                    "line": 626,
                    "column": 19
                },
                "end": {
                    "line": 628,
                    "column": 13
                }
            },
            "81": {
                "start": {
                    "line": 627,
                    "column": 16
                },
                "end": {
                    "line": 627,
                    "column": 40
                }
            },
            "82": {
                "start": {
                    "line": 630,
                    "column": 12
                },
                "end": {
                    "line": 632,
                    "column": 13
                }
            },
            "83": {
                "start": {
                    "line": 631,
                    "column": 16
                },
                "end": {
                    "line": 631,
                    "column": 45
                }
            },
            "84": {
                "start": {
                    "line": 635,
                    "column": 8
                },
                "end": {
                    "line": 635,
                    "column": 28
                }
            },
            "85": {
                "start": {
                    "line": 637,
                    "column": 8
                },
                "end": {
                    "line": 637,
                    "column": 32
                }
            },
            "86": {
                "start": {
                    "line": 639,
                    "column": 8
                },
                "end": {
                    "line": 639,
                    "column": 31
                }
            },
            "87": {
                "start": {
                    "line": 654,
                    "column": 8
                },
                "end": {
                    "line": 654,
                    "column": 21
                }
            },
            "88": {
                "start": {
                    "line": 656,
                    "column": 8
                },
                "end": {
                    "line": 679,
                    "column": 9
                }
            },
            "89": {
                "start": {
                    "line": 657,
                    "column": 12
                },
                "end": {
                    "line": 657,
                    "column": 33
                }
            },
            "90": {
                "start": {
                    "line": 659,
                    "column": 12
                },
                "end": {
                    "line": 678,
                    "column": 13
                }
            },
            "91": {
                "start": {
                    "line": 660,
                    "column": 16
                },
                "end": {
                    "line": 660,
                    "column": 30
                }
            },
            "92": {
                "start": {
                    "line": 661,
                    "column": 16
                },
                "end": {
                    "line": 661,
                    "column": 30
                }
            },
            "93": {
                "start": {
                    "line": 668,
                    "column": 16
                },
                "end": {
                    "line": 670,
                    "column": 17
                }
            },
            "94": {
                "start": {
                    "line": 669,
                    "column": 20
                },
                "end": {
                    "line": 669,
                    "column": 35
                }
            },
            "95": {
                "start": {
                    "line": 673,
                    "column": 16
                },
                "end": {
                    "line": 673,
                    "column": 35
                }
            },
            "96": {
                "start": {
                    "line": 675,
                    "column": 16
                },
                "end": {
                    "line": 677,
                    "column": 17
                }
            },
            "97": {
                "start": {
                    "line": 676,
                    "column": 20
                },
                "end": {
                    "line": 676,
                    "column": 42
                }
            },
            "98": {
                "start": {
                    "line": 681,
                    "column": 8
                },
                "end": {
                    "line": 681,
                    "column": 25
                }
            },
            "99": {
                "start": {
                    "line": 683,
                    "column": 8
                },
                "end": {
                    "line": 683,
                    "column": 30
                }
            },
            "100": {
                "start": {
                    "line": 705,
                    "column": 8
                },
                "end": {
                    "line": 708,
                    "column": 41
                }
            },
            "101": {
                "start": {
                    "line": 710,
                    "column": 8
                },
                "end": {
                    "line": 734,
                    "column": 9
                }
            },
            "102": {
                "start": {
                    "line": 711,
                    "column": 12
                },
                "end": {
                    "line": 712,
                    "column": 28
                }
            },
            "103": {
                "start": {
                    "line": 714,
                    "column": 12
                },
                "end": {
                    "line": 714,
                    "column": 26
                }
            },
            "104": {
                "start": {
                    "line": 715,
                    "column": 12
                },
                "end": {
                    "line": 715,
                    "column": 35
                }
            },
            "105": {
                "start": {
                    "line": 717,
                    "column": 12
                },
                "end": {
                    "line": 731,
                    "column": 13
                }
            },
            "106": {
                "start": {
                    "line": 718,
                    "column": 16
                },
                "end": {
                    "line": 730,
                    "column": 17
                }
            },
            "107": {
                "start": {
                    "line": 719,
                    "column": 20
                },
                "end": {
                    "line": 719,
                    "column": 33
                }
            },
            "108": {
                "start": {
                    "line": 721,
                    "column": 20
                },
                "end": {
                    "line": 729,
                    "column": 21
                }
            },
            "109": {
                "start": {
                    "line": 722,
                    "column": 24
                },
                "end": {
                    "line": 722,
                    "column": 48
                }
            },
            "110": {
                "start": {
                    "line": 723,
                    "column": 27
                },
                "end": {
                    "line": 729,
                    "column": 21
                }
            },
            "111": {
                "start": {
                    "line": 724,
                    "column": 24
                },
                "end": {
                    "line": 724,
                    "column": 51
                }
            },
            "112": {
                "start": {
                    "line": 726,
                    "column": 24
                },
                "end": {
                    "line": 726,
                    "column": 77
                }
            },
            "113": {
                "start": {
                    "line": 728,
                    "column": 24
                },
                "end": {
                    "line": 728,
                    "column": 43
                }
            },
            "114": {
                "start": {
                    "line": 733,
                    "column": 12
                },
                "end": {
                    "line": 733,
                    "column": 24
                }
            },
            "115": {
                "start": {
                    "line": 736,
                    "column": 8
                },
                "end": {
                    "line": 748,
                    "column": 9
                }
            },
            "116": {
                "start": {
                    "line": 739,
                    "column": 12
                },
                "end": {
                    "line": 739,
                    "column": 44
                }
            },
            "117": {
                "start": {
                    "line": 741,
                    "column": 12
                },
                "end": {
                    "line": 745,
                    "column": 13
                }
            },
            "118": {
                "start": {
                    "line": 742,
                    "column": 16
                },
                "end": {
                    "line": 742,
                    "column": 39
                }
            },
            "119": {
                "start": {
                    "line": 744,
                    "column": 16
                },
                "end": {
                    "line": 744,
                    "column": 31
                }
            },
            "120": {
                "start": {
                    "line": 747,
                    "column": 12
                },
                "end": {
                    "line": 747,
                    "column": 24
                }
            },
            "121": {
                "start": {
                    "line": 750,
                    "column": 8
                },
                "end": {
                    "line": 789,
                    "column": 9
                }
            },
            "122": {
                "start": {
                    "line": 751,
                    "column": 12
                },
                "end": {
                    "line": 752,
                    "column": 34
                }
            },
            "123": {
                "start": {
                    "line": 754,
                    "column": 12
                },
                "end": {
                    "line": 786,
                    "column": 13
                }
            },
            "124": {
                "start": {
                    "line": 755,
                    "column": 16
                },
                "end": {
                    "line": 756,
                    "column": 78
                }
            },
            "125": {
                "start": {
                    "line": 758,
                    "column": 16
                },
                "end": {
                    "line": 758,
                    "column": 36
                }
            },
            "126": {
                "start": {
                    "line": 761,
                    "column": 16
                },
                "end": {
                    "line": 765,
                    "column": 17
                }
            },
            "127": {
                "start": {
                    "line": 764,
                    "column": 20
                },
                "end": {
                    "line": 764,
                    "column": 34
                }
            },
            "128": {
                "start": {
                    "line": 766,
                    "column": 16
                },
                "end": {
                    "line": 770,
                    "column": 17
                }
            },
            "129": {
                "start": {
                    "line": 769,
                    "column": 20
                },
                "end": {
                    "line": 769,
                    "column": 41
                }
            },
            "130": {
                "start": {
                    "line": 772,
                    "column": 16
                },
                "end": {
                    "line": 776,
                    "column": 17
                }
            },
            "131": {
                "start": {
                    "line": 773,
                    "column": 20
                },
                "end": {
                    "line": 773,
                    "column": 41
                }
            },
            "132": {
                "start": {
                    "line": 775,
                    "column": 20
                },
                "end": {
                    "line": 775,
                    "column": 39
                }
            },
            "133": {
                "start": {
                    "line": 781,
                    "column": 16
                },
                "end": {
                    "line": 781,
                    "column": 63
                }
            },
            "134": {
                "start": {
                    "line": 783,
                    "column": 16
                },
                "end": {
                    "line": 785,
                    "column": 17
                }
            },
            "135": {
                "start": {
                    "line": 784,
                    "column": 20
                },
                "end": {
                    "line": 784,
                    "column": 62
                }
            },
            "136": {
                "start": {
                    "line": 788,
                    "column": 12
                },
                "end": {
                    "line": 788,
                    "column": 27
                }
            },
            "137": {
                "start": {
                    "line": 791,
                    "column": 8
                },
                "end": {
                    "line": 791,
                    "column": 35
                }
            },
            "138": {
                "start": {
                    "line": 807,
                    "column": 8
                },
                "end": {
                    "line": 807,
                    "column": 33
                }
            },
            "139": {
                "start": {
                    "line": 809,
                    "column": 8
                },
                "end": {
                    "line": 809,
                    "column": 44
                }
            },
            "140": {
                "start": {
                    "line": 830,
                    "column": 8
                },
                "end": {
                    "line": 832,
                    "column": 9
                }
            },
            "141": {
                "start": {
                    "line": 831,
                    "column": 12
                },
                "end": {
                    "line": 831,
                    "column": 21
                }
            },
            "142": {
                "start": {
                    "line": 834,
                    "column": 8
                },
                "end": {
                    "line": 850,
                    "column": 9
                }
            },
            "143": {
                "start": {
                    "line": 835,
                    "column": 12
                },
                "end": {
                    "line": 835,
                    "column": 37
                }
            },
            "144": {
                "start": {
                    "line": 841,
                    "column": 12
                },
                "end": {
                    "line": 841,
                    "column": 51
                }
            },
            "145": {
                "start": {
                    "line": 846,
                    "column": 12
                },
                "end": {
                    "line": 846,
                    "column": 28
                }
            },
            "146": {
                "start": {
                    "line": 847,
                    "column": 15
                },
                "end": {
                    "line": 850,
                    "column": 9
                }
            },
            "147": {
                "start": {
                    "line": 849,
                    "column": 12
                },
                "end": {
                    "line": 849,
                    "column": 26
                }
            },
            "148": {
                "start": {
                    "line": 852,
                    "column": 8
                },
                "end": {
                    "line": 852,
                    "column": 19
                }
            },
            "149": {
                "start": {
                    "line": 868,
                    "column": 8
                },
                "end": {
                    "line": 868,
                    "column": 17
                }
            },
            "150": {
                "start": {
                    "line": 870,
                    "column": 8
                },
                "end": {
                    "line": 876,
                    "column": 9
                }
            },
            "151": {
                "start": {
                    "line": 871,
                    "column": 12
                },
                "end": {
                    "line": 871,
                    "column": 22
                }
            },
            "152": {
                "start": {
                    "line": 872,
                    "column": 12
                },
                "end": {
                    "line": 874,
                    "column": 15
                }
            },
            "153": {
                "start": {
                    "line": 873,
                    "column": 16
                },
                "end": {
                    "line": 873,
                    "column": 46
                }
            },
            "154": {
                "start": {
                    "line": 875,
                    "column": 12
                },
                "end": {
                    "line": 875,
                    "column": 23
                }
            },
            "155": {
                "start": {
                    "line": 878,
                    "column": 8
                },
                "end": {
                    "line": 878,
                    "column": 30
                }
            },
            "156": {
                "start": {
                    "line": 880,
                    "column": 8
                },
                "end": {
                    "line": 880,
                    "column": 19
                }
            },
            "157": {
                "start": {
                    "line": 900,
                    "column": 8
                },
                "end": {
                    "line": 900,
                    "column": 23
                }
            },
            "158": {
                "start": {
                    "line": 903,
                    "column": 8
                },
                "end": {
                    "line": 907,
                    "column": 9
                }
            },
            "159": {
                "start": {
                    "line": 904,
                    "column": 12
                },
                "end": {
                    "line": 904,
                    "column": 29
                }
            },
            "160": {
                "start": {
                    "line": 905,
                    "column": 15
                },
                "end": {
                    "line": 907,
                    "column": 9
                }
            },
            "161": {
                "start": {
                    "line": 906,
                    "column": 12
                },
                "end": {
                    "line": 906,
                    "column": 54
                }
            },
            "162": {
                "start": {
                    "line": 909,
                    "column": 8
                },
                "end": {
                    "line": 909,
                    "column": 37
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 234,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 234,
                            "column": 8
                        },
                        "end": {
                            "line": 234,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 234,
                            "column": 8
                        },
                        "end": {
                            "line": 234,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 234,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 234,
                            "column": 12
                        },
                        "end": {
                            "line": 234,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 234,
                            "column": 30
                        },
                        "end": {
                            "line": 234,
                            "column": 44
                        }
                    }
                ]
            },
            "3": {
                "line": 244,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 244,
                            "column": 8
                        },
                        "end": {
                            "line": 244,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 244,
                            "column": 8
                        },
                        "end": {
                            "line": 244,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 250,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 250,
                            "column": 8
                        },
                        "end": {
                            "line": 250,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 250,
                            "column": 8
                        },
                        "end": {
                            "line": 250,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 250,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 250,
                            "column": 12
                        },
                        "end": {
                            "line": 250,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 250,
                            "column": 30
                        },
                        "end": {
                            "line": 250,
                            "column": 43
                        }
                    }
                ]
            },
            "6": {
                "line": 254,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 254,
                            "column": 47
                        },
                        "end": {
                            "line": 254,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 254,
                            "column": 55
                        },
                        "end": {
                            "line": 254,
                            "column": 62
                        }
                    }
                ]
            },
            "7": {
                "line": 255,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 255,
                            "column": 23
                        },
                        "end": {
                            "line": 255,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 255,
                            "column": 40
                        },
                        "end": {
                            "line": 255,
                            "column": 62
                        }
                    }
                ]
            },
            "8": {
                "line": 258,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 258,
                            "column": 20
                        },
                        "end": {
                            "line": 258,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 258,
                            "column": 28
                        },
                        "end": {
                            "line": 258,
                            "column": 41
                        }
                    },
                    {
                        "start": {
                            "line": 258,
                            "column": 46
                        },
                        "end": {
                            "line": 258,
                            "column": 50
                        }
                    }
                ]
            },
            "9": {
                "line": 279,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 279,
                            "column": 21
                        },
                        "end": {
                            "line": 279,
                            "column": 44
                        }
                    },
                    {
                        "start": {
                            "line": 279,
                            "column": 48
                        },
                        "end": {
                            "line": 279,
                            "column": 77
                        }
                    }
                ]
            },
            "10": {
                "line": 281,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 281,
                            "column": 8
                        },
                        "end": {
                            "line": 281,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 281,
                            "column": 8
                        },
                        "end": {
                            "line": 281,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 282,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 282,
                            "column": 12
                        },
                        "end": {
                            "line": 282,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 282,
                            "column": 12
                        },
                        "end": {
                            "line": 282,
                            "column": 12
                        }
                    }
                ]
            },
            "12": {
                "line": 287,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 287,
                            "column": 12
                        },
                        "end": {
                            "line": 287,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 287,
                            "column": 12
                        },
                        "end": {
                            "line": 287,
                            "column": 12
                        }
                    }
                ]
            },
            "13": {
                "line": 287,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 287,
                            "column": 16
                        },
                        "end": {
                            "line": 287,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 287,
                            "column": 27
                        },
                        "end": {
                            "line": 287,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 287,
                            "column": 40
                        },
                        "end": {
                            "line": 287,
                            "column": 59
                        }
                    }
                ]
            },
            "14": {
                "line": 292,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 292,
                            "column": 15
                        },
                        "end": {
                            "line": 292,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 292,
                            "column": 25
                        },
                        "end": {
                            "line": 292,
                            "column": 29
                        }
                    }
                ]
            },
            "15": {
                "line": 362,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 362,
                            "column": 8
                        },
                        "end": {
                            "line": 362,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 362,
                            "column": 8
                        },
                        "end": {
                            "line": 362,
                            "column": 8
                        }
                    }
                ]
            },
            "16": {
                "line": 362,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 362,
                            "column": 12
                        },
                        "end": {
                            "line": 362,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 362,
                            "column": 36
                        },
                        "end": {
                            "line": 362,
                            "column": 52
                        }
                    }
                ]
            },
            "17": {
                "line": 384,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 384,
                            "column": 8
                        },
                        "end": {
                            "line": 384,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 384,
                            "column": 8
                        },
                        "end": {
                            "line": 384,
                            "column": 8
                        }
                    }
                ]
            },
            "18": {
                "line": 384,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 384,
                            "column": 12
                        },
                        "end": {
                            "line": 384,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 384,
                            "column": 36
                        },
                        "end": {
                            "line": 384,
                            "column": 40
                        }
                    }
                ]
            },
            "19": {
                "line": 385,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 385,
                            "column": 12
                        },
                        "end": {
                            "line": 385,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 385,
                            "column": 12
                        },
                        "end": {
                            "line": 385,
                            "column": 12
                        }
                    }
                ]
            },
            "20": {
                "line": 409,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 409,
                            "column": 8
                        },
                        "end": {
                            "line": 409,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 409,
                            "column": 8
                        },
                        "end": {
                            "line": 409,
                            "column": 8
                        }
                    }
                ]
            },
            "21": {
                "line": 415,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 415,
                            "column": 15
                        },
                        "end": {
                            "line": 415,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 415,
                            "column": 15
                        },
                        "end": {
                            "line": 415,
                            "column": 15
                        }
                    }
                ]
            },
            "22": {
                "line": 449,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 449,
                            "column": 33
                        },
                        "end": {
                            "line": 449,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 449,
                            "column": 51
                        },
                        "end": {
                            "line": 449,
                            "column": 58
                        }
                    }
                ]
            },
            "23": {
                "line": 487,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 487,
                            "column": 15
                        },
                        "end": {
                            "line": 487,
                            "column": 18
                        }
                    },
                    {
                        "start": {
                            "line": 487,
                            "column": 23
                        },
                        "end": {
                            "line": 487,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 487,
                            "column": 36
                        },
                        "end": {
                            "line": 487,
                            "column": 51
                        }
                    }
                ]
            },
            "24": {
                "line": 501,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 501,
                            "column": 22
                        },
                        "end": {
                            "line": 501,
                            "column": 41
                        }
                    },
                    {
                        "start": {
                            "line": 501,
                            "column": 45
                        },
                        "end": {
                            "line": 501,
                            "column": 47
                        }
                    }
                ]
            },
            "25": {
                "line": 505,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 505,
                            "column": 8
                        },
                        "end": {
                            "line": 505,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 505,
                            "column": 8
                        },
                        "end": {
                            "line": 505,
                            "column": 8
                        }
                    }
                ]
            },
            "26": {
                "line": 505,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 505,
                            "column": 12
                        },
                        "end": {
                            "line": 505,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 505,
                            "column": 31
                        },
                        "end": {
                            "line": 505,
                            "column": 47
                        }
                    }
                ]
            },
            "27": {
                "line": 509,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 509,
                            "column": 12
                        },
                        "end": {
                            "line": 509,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 509,
                            "column": 12
                        },
                        "end": {
                            "line": 509,
                            "column": 12
                        }
                    }
                ]
            },
            "28": {
                "line": 549,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 549,
                            "column": 8
                        },
                        "end": {
                            "line": 549,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 549,
                            "column": 8
                        },
                        "end": {
                            "line": 549,
                            "column": 8
                        }
                    }
                ]
            },
            "29": {
                "line": 572,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 572,
                            "column": 8
                        },
                        "end": {
                            "line": 572,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 572,
                            "column": 8
                        },
                        "end": {
                            "line": 572,
                            "column": 8
                        }
                    }
                ]
            },
            "30": {
                "line": 575,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 575,
                            "column": 12
                        },
                        "end": {
                            "line": 575,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 575,
                            "column": 12
                        },
                        "end": {
                            "line": 575,
                            "column": 12
                        }
                    }
                ]
            },
            "31": {
                "line": 575,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 575,
                            "column": 16
                        },
                        "end": {
                            "line": 575,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 575,
                            "column": 24
                        },
                        "end": {
                            "line": 575,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 575,
                            "column": 37
                        },
                        "end": {
                            "line": 575,
                            "column": 48
                        }
                    }
                ]
            },
            "32": {
                "line": 578,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 578,
                            "column": 16
                        },
                        "end": {
                            "line": 578,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 578,
                            "column": 16
                        },
                        "end": {
                            "line": 578,
                            "column": 16
                        }
                    }
                ]
            },
            "33": {
                "line": 586,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 586,
                            "column": 16
                        },
                        "end": {
                            "line": 586,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 586,
                            "column": 16
                        },
                        "end": {
                            "line": 586,
                            "column": 16
                        }
                    }
                ]
            },
            "34": {
                "line": 620,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 620,
                            "column": 8
                        },
                        "end": {
                            "line": 620,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 620,
                            "column": 8
                        },
                        "end": {
                            "line": 620,
                            "column": 8
                        }
                    }
                ]
            },
            "35": {
                "line": 621,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 621,
                            "column": 26
                        },
                        "end": {
                            "line": 621,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 621,
                            "column": 47
                        },
                        "end": {
                            "line": 621,
                            "column": 72
                        }
                    },
                    {
                        "start": {
                            "line": 622,
                            "column": 28
                        },
                        "end": {
                            "line": 622,
                            "column": 50
                        }
                    }
                ]
            },
            "36": {
                "line": 624,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 624,
                            "column": 12
                        },
                        "end": {
                            "line": 624,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 624,
                            "column": 12
                        },
                        "end": {
                            "line": 624,
                            "column": 12
                        }
                    }
                ]
            },
            "37": {
                "line": 626,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 626,
                            "column": 19
                        },
                        "end": {
                            "line": 626,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 626,
                            "column": 19
                        },
                        "end": {
                            "line": 626,
                            "column": 19
                        }
                    }
                ]
            },
            "38": {
                "line": 626,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 626,
                            "column": 23
                        },
                        "end": {
                            "line": 626,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 626,
                            "column": 40
                        },
                        "end": {
                            "line": 626,
                            "column": 51
                        }
                    }
                ]
            },
            "39": {
                "line": 630,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 630,
                            "column": 12
                        },
                        "end": {
                            "line": 630,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 630,
                            "column": 12
                        },
                        "end": {
                            "line": 630,
                            "column": 12
                        }
                    }
                ]
            },
            "40": {
                "line": 668,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 668,
                            "column": 16
                        },
                        "end": {
                            "line": 668,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 668,
                            "column": 16
                        },
                        "end": {
                            "line": 668,
                            "column": 16
                        }
                    }
                ]
            },
            "41": {
                "line": 668,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 668,
                            "column": 20
                        },
                        "end": {
                            "line": 668,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 668,
                            "column": 27
                        },
                        "end": {
                            "line": 668,
                            "column": 36
                        }
                    }
                ]
            },
            "42": {
                "line": 675,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 675,
                            "column": 16
                        },
                        "end": {
                            "line": 675,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 675,
                            "column": 16
                        },
                        "end": {
                            "line": 675,
                            "column": 16
                        }
                    }
                ]
            },
            "43": {
                "line": 718,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 718,
                            "column": 16
                        },
                        "end": {
                            "line": 718,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 718,
                            "column": 16
                        },
                        "end": {
                            "line": 718,
                            "column": 16
                        }
                    }
                ]
            },
            "44": {
                "line": 721,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 721,
                            "column": 20
                        },
                        "end": {
                            "line": 721,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 721,
                            "column": 20
                        },
                        "end": {
                            "line": 721,
                            "column": 20
                        }
                    }
                ]
            },
            "45": {
                "line": 723,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 723,
                            "column": 27
                        },
                        "end": {
                            "line": 723,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 723,
                            "column": 27
                        },
                        "end": {
                            "line": 723,
                            "column": 27
                        }
                    }
                ]
            },
            "46": {
                "line": 726,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 726,
                            "column": 47
                        },
                        "end": {
                            "line": 726,
                            "column": 59
                        }
                    },
                    {
                        "start": {
                            "line": 726,
                            "column": 62
                        },
                        "end": {
                            "line": 726,
                            "column": 76
                        }
                    }
                ]
            },
            "47": {
                "line": 741,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 741,
                            "column": 12
                        },
                        "end": {
                            "line": 741,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 741,
                            "column": 12
                        },
                        "end": {
                            "line": 741,
                            "column": 12
                        }
                    }
                ]
            },
            "48": {
                "line": 756,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 756,
                            "column": 42
                        },
                        "end": {
                            "line": 756,
                            "column": 58
                        }
                    },
                    {
                        "start": {
                            "line": 756,
                            "column": 61
                        },
                        "end": {
                            "line": 756,
                            "column": 77
                        }
                    }
                ]
            },
            "49": {
                "line": 761,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 761,
                            "column": 16
                        },
                        "end": {
                            "line": 761,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 761,
                            "column": 16
                        },
                        "end": {
                            "line": 761,
                            "column": 16
                        }
                    }
                ]
            },
            "50": {
                "line": 766,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 766,
                            "column": 16
                        },
                        "end": {
                            "line": 766,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 766,
                            "column": 16
                        },
                        "end": {
                            "line": 766,
                            "column": 16
                        }
                    }
                ]
            },
            "51": {
                "line": 772,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 772,
                            "column": 16
                        },
                        "end": {
                            "line": 772,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 772,
                            "column": 16
                        },
                        "end": {
                            "line": 772,
                            "column": 16
                        }
                    }
                ]
            },
            "52": {
                "line": 781,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 781,
                            "column": 32
                        },
                        "end": {
                            "line": 781,
                            "column": 40
                        }
                    },
                    {
                        "start": {
                            "line": 781,
                            "column": 44
                        },
                        "end": {
                            "line": 781,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 781,
                            "column": 55
                        },
                        "end": {
                            "line": 781,
                            "column": 61
                        }
                    }
                ]
            },
            "53": {
                "line": 783,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 783,
                            "column": 16
                        },
                        "end": {
                            "line": 783,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 783,
                            "column": 16
                        },
                        "end": {
                            "line": 783,
                            "column": 16
                        }
                    }
                ]
            },
            "54": {
                "line": 791,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 791,
                            "column": 15
                        },
                        "end": {
                            "line": 791,
                            "column": 18
                        }
                    },
                    {
                        "start": {
                            "line": 791,
                            "column": 22
                        },
                        "end": {
                            "line": 791,
                            "column": 34
                        }
                    }
                ]
            },
            "55": {
                "line": 809,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 809,
                            "column": 30
                        },
                        "end": {
                            "line": 809,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 809,
                            "column": 36
                        },
                        "end": {
                            "line": 809,
                            "column": 43
                        }
                    }
                ]
            },
            "56": {
                "line": 830,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 830,
                            "column": 8
                        },
                        "end": {
                            "line": 830,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 830,
                            "column": 8
                        },
                        "end": {
                            "line": 830,
                            "column": 8
                        }
                    }
                ]
            },
            "57": {
                "line": 834,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 834,
                            "column": 8
                        },
                        "end": {
                            "line": 834,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 834,
                            "column": 8
                        },
                        "end": {
                            "line": 834,
                            "column": 8
                        }
                    }
                ]
            },
            "58": {
                "line": 847,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 847,
                            "column": 15
                        },
                        "end": {
                            "line": 847,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 847,
                            "column": 15
                        },
                        "end": {
                            "line": 847,
                            "column": 15
                        }
                    }
                ]
            },
            "59": {
                "line": 847,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 847,
                            "column": 19
                        },
                        "end": {
                            "line": 847,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 847,
                            "column": 27
                        },
                        "end": {
                            "line": 847,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 847,
                            "column": 40
                        },
                        "end": {
                            "line": 847,
                            "column": 51
                        }
                    }
                ]
            },
            "60": {
                "line": 870,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 870,
                            "column": 8
                        },
                        "end": {
                            "line": 870,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 870,
                            "column": 8
                        },
                        "end": {
                            "line": 870,
                            "column": 8
                        }
                    }
                ]
            },
            "61": {
                "line": 870,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 870,
                            "column": 12
                        },
                        "end": {
                            "line": 870,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 870,
                            "column": 19
                        },
                        "end": {
                            "line": 870,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 870,
                            "column": 34
                        },
                        "end": {
                            "line": 870,
                            "column": 60
                        }
                    }
                ]
            },
            "62": {
                "line": 903,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 903,
                            "column": 8
                        },
                        "end": {
                            "line": 903,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 903,
                            "column": 8
                        },
                        "end": {
                            "line": 903,
                            "column": 8
                        }
                    }
                ]
            },
            "63": {
                "line": 903,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 903,
                            "column": 12
                        },
                        "end": {
                            "line": 903,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 903,
                            "column": 31
                        },
                        "end": {
                            "line": 903,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 903,
                            "column": 55
                        },
                        "end": {
                            "line": 903,
                            "column": 77
                        }
                    }
                ]
            },
            "64": {
                "line": 905,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 905,
                            "column": 15
                        },
                        "end": {
                            "line": 905,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 905,
                            "column": 15
                        },
                        "end": {
                            "line": 905,
                            "column": 15
                        }
                    }
                ]
            },
            "65": {
                "line": 909,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 909,
                            "column": 15
                        },
                        "end": {
                            "line": 909,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 909,
                            "column": 29
                        },
                        "end": {
                            "line": 909,
                            "column": 36
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('datatable-core', function (Y, NAME) {",
            "",
            "/**",
            "The core implementation of the `DataTable` and `DataTable.Base` Widgets.",
            "",
            "@module datatable",
            "@submodule datatable-core",
            "@since 3.5.0",
            "**/",
            "",
            "var INVALID = Y.Attribute.INVALID_VALUE,",
            "",
            "    Lang         = Y.Lang,",
            "    isFunction   = Lang.isFunction,",
            "    isObject     = Lang.isObject,",
            "    isArray      = Lang.isArray,",
            "    isString     = Lang.isString,",
            "    isNumber     = Lang.isNumber,",
            "",
            "    toArray = Y.Array,",
            "",
            "    keys = Y.Object.keys,",
            "",
            "    Table;",
            "    ",
            "/**",
            "_API docs for this extension are included in the DataTable class._",
            "",
            "Class extension providing the core API and structure for the DataTable Widget.",
            "",
            "Use this class extension with Widget or another Base-based superclass to create",
            "the basic DataTable model API and composing class structure.",
            "",
            "@class DataTable.Core",
            "@for DataTable",
            "@since 3.5.0",
            "**/",
            "Table = Y.namespace('DataTable').Core = function () {};",
            "",
            "Table.ATTRS = {",
            "    /**",
            "    Columns to include in the rendered table.",
            "    ",
            "    If omitted, the attributes on the configured `recordType` or the first item",
            "    in the `data` collection will be used as a source.",
            "",
            "    This attribute takes an array of strings or objects (mixing the two is",
            "    fine).  Each string or object is considered a column to be rendered.",
            "    Strings are converted to objects, so `columns: ['first', 'last']` becomes",
            "    `columns: [{ key: 'first' }, { key: 'last' }]`.",
            "",
            "    DataTable.Core only concerns itself with a few properties of columns.",
            "    These properties are:",
            "",
            "    * `key` - Used to identify the record field/attribute containing content for",
            "      this column.  Also used to create a default Model if no `recordType` or",
            "      `data` are provided during construction.  If `name` is not specified, this",
            "      is assigned to the `_id` property (with added incrementer if the key is",
            "      used by multiple columns).",
            "    * `children` - Traversed to initialize nested column objects",
            "    * `name` - Used in place of, or in addition to, the `key`.  Useful for",
            "      columns that aren't bound to a field/attribute in the record data.  This",
            "      is assigned to the `_id` property.",
            "    * `id` - For backward compatibility.  Implementers can specify the id of",
            "      the header cell.  This should be avoided, if possible, to avoid the",
            "      potential for creating DOM elements with duplicate IDs.",
            "    * `field` - For backward compatibility.  Implementers should use `name`.",
            "    * `_id` - Assigned unique-within-this-instance id for a column.  By order",
            "      of preference, assumes the value of `name`, `key`, `id`, or `_yuid`.",
            "      This is used by the rendering views as well as feature module",
            "      as a means to identify a specific column without ambiguity (such as",
            "      multiple columns using the same `key`.",
            "    * `_yuid` - Guid stamp assigned to the column object.",
            "    * `_parent` - Assigned to all child columns, referencing their parent",
            "      column.",
            "",
            "    @attribute columns",
            "    @type {Object[]|String[]}",
            "    @default (from `recordType` ATTRS or first item in the `data`)",
            "    @since 3.5.0",
            "    **/",
            "    columns: {",
            "        // TODO: change to setter to clone input array/objects",
            "        validator: isArray,",
            "        setter: '_setColumns',",
            "        getter: '_getColumns'",
            "    },",
            "",
            "    /**",
            "    Model subclass to use as the `model` for the ModelList stored in the `data`",
            "    attribute.",
            "",
            "    If not provided, it will try really hard to figure out what to use.  The",
            "    following attempts will be made to set a default value:",
            "    ",
            "    1. If the `data` attribute is set with a ModelList instance and its `model`",
            "       property is set, that will be used.",
            "    2. If the `data` attribute is set with a ModelList instance, and its",
            "       `model` property is unset, but it is populated, the `ATTRS` of the",
            "       `constructor of the first item will be used.",
            "    3. If the `data` attribute is set with a non-empty array, a Model subclass",
            "       will be generated using the keys of the first item as its `ATTRS` (see",
            "       the `_createRecordClass` method).",
            "    4. If the `columns` attribute is set, a Model subclass will be generated",
            "       using the columns defined with a `key`. This is least desirable because",
            "       columns can be duplicated or nested in a way that's not parsable.",
            "    5. If neither `data` nor `columns` is set or populated, a change event",
            "       subscriber will listen for the first to be changed and try all over",
            "       again.",
            "",
            "    @attribute recordType",
            "    @type {Function}",
            "    @default (see description)",
            "    @since 3.5.0",
            "    **/",
            "    recordType: {",
            "        getter: '_getRecordType',",
            "        setter: '_setRecordType'",
            "    },",
            "",
            "    /**",
            "    The collection of data records to display.  This attribute is a pass",
            "    through to a `data` property, which is a ModelList instance.",
            "",
            "    If this attribute is passed a ModelList or subclass, it will be assigned to",
            "    the property directly.  If an array of objects is passed, a new ModelList",
            "    will be created using the configured `recordType` as its `model` property",
            "    and seeded with the array.",
            "",
            "    Retrieving this attribute will return the ModelList stored in the `data`",
            "    property.",
            "",
            "    @attribute data",
            "    @type {ModelList|Object[]}",
            "    @default `new ModelList()`",
            "    @since 3.5.0",
            "    **/",
            "    data: {",
            "        valueFn: '_initData',",
            "        setter : '_setData',",
            "        lazyAdd: false",
            "    },",
            "",
            "    /**",
            "    Content for the `<table summary=\"ATTRIBUTE VALUE HERE\">`.  Values assigned",
            "    to this attribute will be HTML escaped for security.",
            "",
            "    @attribute summary",
            "    @type {String}",
            "    @default '' (empty string)",
            "    @since 3.5.0",
            "    **/",
            "    //summary: {},",
            "",
            "    /**",
            "    HTML content of an optional `<caption>` element to appear above the table.",
            "    Leave this config unset or set to a falsy value to remove the caption.",
            "",
            "    @attribute caption",
            "    @type HTML",
            "    @default '' (empty string)",
            "    @since 3.5.0",
            "    **/",
            "    //caption: {},",
            "",
            "    /**",
            "    Deprecated as of 3.5.0. Passes through to the `data` attribute.",
            "",
            "    WARNING: `get('recordset')` will NOT return a Recordset instance as of",
            "    3.5.0.  This is a break in backward compatibility.",
            "",
            "    @attribute recordset",
            "    @type {Object[]|Recordset}",
            "    @deprecated Use the `data` attribute",
            "    @since 3.5.0",
            "    **/",
            "    recordset: {",
            "        setter: '_setRecordset',",
            "        getter: '_getRecordset',",
            "        lazyAdd: false",
            "    },",
            "",
            "    /**",
            "    Deprecated as of 3.5.0. Passes through to the `columns` attribute.",
            "",
            "    WARNING: `get('columnset')` will NOT return a Columnset instance as of",
            "    3.5.0.  This is a break in backward compatibility.",
            "",
            "    @attribute columnset",
            "    @type {Object[]}",
            "    @deprecated Use the `columns` attribute",
            "    @since 3.5.0",
            "    **/",
            "    columnset: {",
            "        setter: '_setColumnset',",
            "        getter: '_getColumnset',",
            "        lazyAdd: false",
            "    }",
            "};",
            "",
            "Y.mix(Table.prototype, {",
            "    // -- Instance properties -------------------------------------------------",
            "    /**",
            "    The ModelList that manages the table's data.",
            "",
            "    @property data",
            "    @type {ModelList}",
            "    @default undefined (initially unset)",
            "    @since 3.5.0",
            "    **/",
            "    //data: null,",
            "",
            "    // -- Public methods ------------------------------------------------------",
            "",
            "    /**",
            "    Gets the column configuration object for the given key, name, or index.  For",
            "    nested columns, `name` can be an array of indexes, each identifying the index",
            "    of that column in the respective parent's \"children\" array.",
            "",
            "    If you pass a column object, it will be returned.",
            "",
            "    For columns with keys, you can also fetch the column with",
            "    `instance.get('columns.foo')`.",
            "",
            "    @method getColumn",
            "    @param {String|Number|Number[]} name Key, \"name\", index, or index array to",
            "                identify the column",
            "    @return {Object} the column configuration object",
            "    @since 3.5.0",
            "    **/",
            "    getColumn: function (name) {",
            "        var col, columns, i, len, cols;",
            "",
            "        if (isObject(name) && !isArray(name)) {",
            "            // TODO: support getting a column from a DOM node - this will cross",
            "            // the line into the View logic, so it should be relayed",
            "",
            "            // Assume an object passed in is already a column def",
            "            col = name;",
            "        } else {",
            "            col = this.get('columns.' + name);",
            "        }",
            "",
            "        if (col) {",
            "            return col;",
            "        }",
            "",
            "        columns = this.get('columns');",
            "",
            "        if (isNumber(name) || isArray(name)) {",
            "            name = toArray(name);",
            "            cols = columns;",
            "",
            "            for (i = 0, len = name.length - 1; cols && i < len; ++i) {",
            "                cols = cols[name[i]] && cols[name[i]].children;",
            "            }",
            "",
            "            return (cols && cols[name[i]]) || null;",
            "        }",
            "",
            "        return null;",
            "    },",
            "",
            "    /**",
            "    Returns the Model associated to the record `id`, `clientId`, or index (not",
            "    row index).  If none of those yield a Model from the `data` ModelList, the",
            "    arguments will be passed to the `view` instance's `getRecord` method",
            "    if it has one.",
            "",
            "    If no Model can be found, `null` is returned.",
            "",
            "    @method getRecord",
            "    @param {Number|String|Node} seed Record `id`, `clientId`, index, Node, or",
            "        identifier for a row or child element",
            "    @return {Model}",
            "    @since 3.5.0",
            "    **/",
            "    getRecord: function (seed) {",
            "        var record = this.data.getById(seed) || this.data.getByClientId(seed);",
            "",
            "        if (!record) {",
            "            if (isNumber(seed)) {",
            "                record = this.data.item(seed);",
            "            }",
            "            ",
            "            // TODO: this should be split out to base somehow",
            "            if (!record && this.view && this.view.getRecord) {",
            "                record = this.view.getRecord.apply(this.view, arguments);",
            "            }",
            "        }",
            "",
            "        return record || null;",
            "    },",
            "",
            "    // -- Protected and private properties and methods ------------------------",
            "",
            "    /**",
            "    This tells `Y.Base` that it should create ad-hoc attributes for config",
            "    properties passed to DataTable's constructor. This is useful for setting",
            "    configurations on the DataTable that are intended for the rendering View(s).",
            "",
            "    @property _allowAdHocAttrs",
            "    @type Boolean",
            "    @default true",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _allowAdHocAttrs: true,",
            "",
            "    /**",
            "    A map of column key to column configuration objects parsed from the",
            "    `columns` attribute.",
            "",
            "    @property _columnMap",
            "    @type {Object}",
            "    @default undefined (initially unset)",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    //_columnMap: null,",
            "",
            "    /**",
            "    The Node instance of the table containing the data rows.  This is set when",
            "    the table is rendered.  It may also be set by progressive enhancement,",
            "    though this extension does not provide the logic to parse from source.",
            "",
            "    @property _tableNode",
            "    @type {Node}",
            "    @default undefined (initially unset)",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    //_tableNode: null,",
            "",
            "    /**",
            "    Updates the `_columnMap` property in response to changes in the `columns`",
            "    attribute.",
            "",
            "    @method _afterColumnsChange",
            "    @param {EventFacade} e The `columnsChange` event object",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _afterColumnsChange: function (e) {",
            "        this._setColumnMap(e.newVal);",
            "    },",
            "",
            "    /**",
            "    Updates the `modelList` attributes of the rendered views in response to the",
            "    `data` attribute being assigned a new ModelList.",
            "",
            "    @method _afterDataChange",
            "    @param {EventFacade} e the `dataChange` event",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _afterDataChange: function (e) {",
            "        var modelList = e.newVal;",
            "",
            "        this.data = e.newVal;",
            "",
            "        if (!this.get('columns') && modelList.size()) {",
            "            // TODO: this will cause a re-render twice because the Views are",
            "            // subscribed to columnsChange",
            "            this._initColumns();",
            "        }",
            "    },",
            "",
            "    /**",
            "    Assigns to the new recordType as the model for the data ModelList",
            "",
            "    @method _afterRecordTypeChange",
            "    @param {EventFacade} e recordTypeChange event",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _afterRecordTypeChange: function (e) {",
            "        var data = this.data.toJSON();",
            "",
            "        this.data.model = e.newVal;",
            "",
            "        this.data.reset(data);",
            "",
            "        if (!this.get('columns') && data) {",
            "            if (data.length) {",
            "                this._initColumns();",
            "            } else {",
            "                this.set('columns', keys(e.newVal.ATTRS));",
            "            }",
            "        }",
            "    },",
            "",
            "    /**",
            "    Creates a Model subclass from an array of attribute names or an object of",
            "    attribute definitions.  This is used to generate a class suitable to",
            "    represent the data passed to the `data` attribute if no `recordType` is",
            "    set.",
            "",
            "    @method _createRecordClass",
            "    @param {String[]|Object} attrs Names assigned to the Model subclass's",
            "                `ATTRS` or its entire `ATTRS` definition object",
            "    @return {Model}",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _createRecordClass: function (attrs) {",
            "        var ATTRS, i, len;",
            "",
            "        if (isArray(attrs)) {",
            "            ATTRS = {};",
            "",
            "            for (i = 0, len = attrs.length; i < len; ++i) {",
            "                ATTRS[attrs[i]] = {};",
            "            }",
            "        } else if (isObject(attrs)) {",
            "            ATTRS = attrs;",
            "        }",
            "",
            "        return Y.Base.create('record', Y.Model, [], null, { ATTRS: ATTRS });",
            "    },",
            "",
            "    /**",
            "    Tears down the instance.",
            "",
            "    @method destructor",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    destructor: function () {",
            "        new Y.EventHandle(Y.Object.values(this._eventHandles)).detach();",
            "    },",
            "",
            "    /**",
            "    The getter for the `columns` attribute.  Returns the array of column",
            "    configuration objects if `instance.get('columns')` is called, or the",
            "    specific column object if `instance.get('columns.columnKey')` is called.",
            "",
            "    @method _getColumns",
            "    @param {Object[]} columns The full array of column objects",
            "    @param {String} name The attribute name requested",
            "                         (e.g. 'columns' or 'columns.foo');",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _getColumns: function (columns, name) {",
            "        // Workaround for an attribute oddity (ticket #2529254)",
            "        // getter is expected to return an object if get('columns.foo') is called.",
            "        // Note 'columns.' is 8 characters",
            "        return name.length > 8 ? this._columnMap : columns;",
            "    },",
            "",
            "    /**",
            "    Relays the `get()` request for the deprecated `columnset` attribute to the",
            "    `columns` attribute.",
            "",
            "    THIS BREAKS BACKWARD COMPATIBILITY.  3.4.1 and prior implementations will",
            "    expect a Columnset instance returned from `get('columnset')`.",
            "",
            "    @method _getColumnset",
            "    @param {Object} ignored The current value stored in the `columnset` state",
            "    @param {String} name The attribute name requested",
            "                         (e.g. 'columnset' or 'columnset.foo');",
            "    @deprecated This will be removed with the `columnset` attribute in a future",
            "                version.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _getColumnset: function (_, name) {",
            "        return this.get(name.replace(/^columnset/, 'columns'));",
            "    },",
            "",
            "    /**",
            "    Returns the Model class of the instance's `data` attribute ModelList.  If",
            "    not set, returns the explicitly configured value.",
            "",
            "    @method _getRecordType",
            "    @param {Model} val The currently configured value",
            "    @return {Model}",
            "    **/",
            "    _getRecordType: function (val) {",
            "        // Prefer the value stored in the attribute because the attribute",
            "        // change event defaultFn sets e.newVal = this.get('recordType')",
            "        // before notifying the after() subs.  But if this getter returns",
            "        // this.data.model, then after() subs would get e.newVal === previous",
            "        // model before _afterRecordTypeChange can set",
            "        // this.data.model = e.newVal",
            "        return val || (this.data && this.data.model);",
            "    },",
            "",
            "    /**",
            "    Initializes the `_columnMap` property from the configured `columns`",
            "    attribute.  If `columns` is not set, but there are records in the `data`",
            "    ModelList, use",
            "    `ATTRS` of that class.",
            "",
            "    @method _initColumns",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _initColumns: function () {",
            "        var columns = this.get('columns') || [],",
            "            item;",
            "        ",
            "        // Default column definition from the configured recordType",
            "        if (!columns.length && this.data.size()) {",
            "            // TODO: merge superclass attributes up to Model?",
            "            item = this.data.item(0);",
            "",
            "            if (item.toJSON) {",
            "                item = item.toJSON();",
            "            }",
            "",
            "            this.set('columns', keys(item));",
            "        }",
            "",
            "        this._setColumnMap(columns);",
            "    },",
            "",
            "    /**",
            "    Sets up the change event subscriptions to maintain internal state.",
            "",
            "    @method _initCoreEvents",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _initCoreEvents: function () {",
            "        this._eventHandles.coreAttrChanges = this.after({",
            "            columnsChange   : Y.bind('_afterColumnsChange', this),",
            "            recordTypeChange: Y.bind('_afterRecordTypeChange', this),",
            "            dataChange      : Y.bind('_afterDataChange', this)",
            "        });",
            "    },",
            "",
            "    /**",
            "    Defaults the `data` attribute to an empty ModelList if not set during",
            "    construction.  Uses the configured `recordType` for the ModelList's `model`",
            "    proeprty if set.",
            "",
            "    @method _initData",
            "    @protected",
            "    @return {ModelList}",
            "    @since 3.6.0",
            "    **/",
            "    _initData: function () {",
            "        var recordType = this.get('recordType'),",
            "            // TODO: LazyModelList if recordType doesn't have complex ATTRS",
            "            modelList = new Y.ModelList();",
            "",
            "        if (recordType) {",
            "            modelList.model = recordType;",
            "        }",
            "",
            "        return modelList;",
            "    },",
            "",
            "    /**",
            "    Initializes the instance's `data` property from the value of the `data`",
            "    attribute.  If the attribute value is a ModelList, it is assigned directly",
            "    to `this.data`.  If it is an array, a ModelList is created, its `model`",
            "    property is set to the configured `recordType` class, and it is seeded with",
            "    the array data.  This ModelList is then assigned to `this.data`.",
            "",
            "    @method _initDataProperty",
            "    @param {Array|ModelList|ArrayList} data Collection of data to populate the",
            "            DataTable",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _initDataProperty: function (data) {",
            "        var recordType;",
            "",
            "        if (!this.data) {",
            "            recordType = this.get('recordType');",
            "",
            "            if (data && data.each && data.toJSON) {",
            "                this.data = data;",
            "",
            "                if (recordType) {",
            "                    this.data.model = recordType;",
            "                }",
            "            } else {",
            "                // TODO: customize the ModelList or read the ModelList class",
            "                // from a configuration option?",
            "                this.data = new Y.ModelList();",
            "                ",
            "                if (recordType) {",
            "                    this.data.model = recordType;",
            "                }",
            "            }",
            "",
            "            // TODO: Replace this with an event relay for specific events.",
            "            // Using bubbling causes subscription conflicts with the models'",
            "            // aggregated change event and 'change' events from DOM elements",
            "            // inside the table (via Widget UI event).",
            "            this.data.addTarget(this);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Initializes the columns, `recordType` and data ModelList.",
            "",
            "    @method initializer",
            "    @param {Object} config Configuration object passed to constructor",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    initializer: function (config) {",
            "        var data       = config.data,",
            "            columns    = config.columns,",
            "            recordType;",
            "",
            "        // Referencing config.data to allow _setData to be more stringent",
            "        // about its behavior",
            "        this._initDataProperty(data);",
            "",
            "        // Default columns from recordType ATTRS if recordType is supplied at",
            "        // construction.  If no recordType is supplied, but the data is",
            "        // supplied as a non-empty array, use the keys of the first item",
            "        // as the columns.",
            "        if (!columns) {",
            "            recordType = (config.recordType || config.data === this.data) &&",
            "                            this.get('recordType');",
            "",
            "            if (recordType) {",
            "                columns = keys(recordType.ATTRS);",
            "            } else if (isArray(data) && data.length) {",
            "                columns = keys(data[0]);",
            "            }",
            "",
            "            if (columns) {",
            "                this.set('columns', columns);",
            "            }",
            "        }",
            "",
            "        this._initColumns();",
            "",
            "        this._eventHandles = {};",
            "",
            "        this._initCoreEvents();",
            "    },",
            "",
            "    /**",
            "    Iterates the array of column configurations to capture all columns with a",
            "    `key` property.  An map is built with column keys as the property name and",
            "    the corresponding column object as the associated value.  This map is then",
            "    assigned to the instance's `_columnMap` property.",
            "",
            "    @method _setColumnMap",
            "    @param {Object[]|String[]} columns The array of column config objects",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _setColumnMap: function (columns) {",
            "        var map = {};",
            "        ",
            "        function process(cols) {",
            "            var i, len, col, key;",
            "",
            "            for (i = 0, len = cols.length; i < len; ++i) {",
            "                col = cols[i];",
            "                key = col.key;",
            "",
            "                // First in wins for multiple columns with the same key",
            "                // because the first call to genId (in _setColumns) will",
            "                // return the same key, which will then be overwritten by the",
            "                // subsequent same-keyed column.  So table.getColumn(key) would",
            "                // return the last same-keyed column.",
            "                if (key && !map[key]) {",
            "                    map[key] = col;",
            "                }",
            "",
            "                //TODO: named columns can conflict with keyed columns",
            "                map[col._id] = col;",
            "",
            "                if (col.children) {",
            "                    process(col.children);",
            "                }",
            "            }",
            "        }",
            "",
            "        process(columns);",
            "",
            "        this._columnMap = map;",
            "    },",
            "",
            "    /**",
            "    Translates string columns into objects with that string as the value of its",
            "    `key` property.",
            "",
            "    All columns are assigned a `_yuid` stamp and `_id` property corresponding",
            "    to the column's configured `name` or `key` property with any spaces",
            "    replaced with dashes.  If the same `name` or `key` appears in multiple",
            "    columns, subsequent appearances will have their `_id` appended with an",
            "    incrementing number (e.g. if column \"foo\" is included in the `columns`",
            "    attribute twice, the first will get `_id` of \"foo\", and the second an `_id`",
            "    of \"foo1\").  Columns that are children of other columns will have the",
            "    `_parent` property added, assigned the column object to which they belong.",
            "",
            "    @method _setColumns",
            "    @param {null|Object[]|String[]} val Array of config objects or strings",
            "    @return {null|Object[]}",
            "    @protected",
            "    **/",
            "    _setColumns: function (val) {",
            "        var keys = {},",
            "            known = [],",
            "            knownCopies = [],",
            "            arrayIndex = Y.Array.indexOf;",
            "        ",
            "        function copyObj(o) {",
            "            var copy = {},",
            "                key, val, i;",
            "",
            "            known.push(o);",
            "            knownCopies.push(copy);",
            "",
            "            for (key in o) {",
            "                if (o.hasOwnProperty(key)) {",
            "                    val = o[key];",
            "",
            "                    if (isArray(val)) {",
            "                        copy[key] = val.slice();",
            "                    } else if (isObject(val, true)) {",
            "                        i = arrayIndex(val, known);",
            "",
            "                        copy[key] = i === -1 ? copyObj(val) : knownCopies[i];",
            "                    } else {",
            "                        copy[key] = o[key];",
            "                    }",
            "                }",
            "            }",
            "",
            "            return copy;",
            "        }",
            "",
            "        function genId(name) {",
            "            // Sanitize the name for use in generated CSS classes.",
            "            // TODO: is there more to do for other uses of _id?",
            "            name = name.replace(/\\s+/, '-');",
            "",
            "            if (keys[name]) {",
            "                name += (keys[name]++);",
            "            } else {",
            "                keys[name] = 1;",
            "            }",
            "",
            "            return name;",
            "        }",
            "",
            "        function process(cols, parent) {",
            "            var columns = [],",
            "                i, len, col, yuid;",
            "",
            "            for (i = 0, len = cols.length; i < len; ++i) {",
            "                columns[i] = // chained assignment",
            "                col = isString(cols[i]) ? { key: cols[i] } : copyObj(cols[i]);",
            "",
            "                yuid = Y.stamp(col);",
            "",
            "                // For backward compatibility",
            "                if (!col.id) {",
            "                    // Implementers can shoot themselves in the foot by setting",
            "                    // this config property to a non-unique value",
            "                    col.id = yuid;",
            "                }",
            "                if (col.field) {",
            "                    // Field is now known as \"name\" to avoid confusion with data",
            "                    // fields or schema.resultFields",
            "                    col.name = col.field;",
            "                }",
            "",
            "                if (parent) {",
            "                    col._parent = parent;",
            "                } else {",
            "                    delete col._parent;",
            "                }",
            "",
            "                // Unique id based on the column's configured name or key,",
            "                // falling back to the yuid.  Duplicates will have a counter",
            "                // added to the end.",
            "                col._id = genId(col.name || col.key || col.id);",
            "",
            "                if (isArray(col.children)) {",
            "                    col.children = process(col.children, col);",
            "                }",
            "            }",
            "",
            "            return columns;",
            "        }",
            "",
            "        return val && process(val);",
            "    },",
            "",
            "    /**",
            "    Relays attribute assignments of the deprecated `columnset` attribute to the",
            "    `columns` attribute.  If a Columnset is object is passed, its basic object",
            "    structure is mined.",
            "",
            "    @method _setColumnset",
            "    @param {Array|Columnset} val The columnset value to relay",
            "    @deprecated This will be removed with the deprecated `columnset` attribute",
            "                in a later version.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _setColumnset: function (val) {",
            "        this.set('columns', val);",
            "",
            "        return isArray(val) ? val : INVALID;",
            "    },",
            "",
            "    /**",
            "    Accepts an object with `each` and `getAttrs` (preferably a ModelList or",
            "    subclass) or an array of data objects.  If an array is passes, it will",
            "    create a ModelList to wrap the data.  In doing so, it will set the created",
            "    ModelList's `model` property to the class in the `recordType` attribute,",
            "    which will be defaulted if not yet set.",
            "",
            "    If the `data` property is already set with a ModelList, passing an array as",
            "    the value will call the ModelList's `reset()` method with that array rather",
            "    than replacing the stored ModelList wholesale.",
            "",
            "    Any non-ModelList-ish and non-array value is invalid.",
            "",
            "    @method _setData",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _setData: function (val) {",
            "        if (val === null) {",
            "            val = [];",
            "        }",
            "",
            "        if (isArray(val)) {",
            "            this._initDataProperty();",
            "",
            "            // silent to prevent subscribers to both reset and dataChange",
            "            // from reacting to the change twice.",
            "            // TODO: would it be better to return INVALID to silence the",
            "            // dataChange event, or even allow both events?",
            "            this.data.reset(val, { silent: true });",
            "",
            "            // Return the instance ModelList to avoid storing unprocessed",
            "            // data in the state and their vivified Model representations in",
            "            // the instance's data property.  Decreases memory consumption.",
            "            val = this.data;",
            "        } else if (!val || !val.each || !val.toJSON) {",
            "            // ModelList/ArrayList duck typing",
            "            val = INVALID;",
            "        }",
            "",
            "        return val;",
            "    },",
            "",
            "    /**",
            "    Relays the value assigned to the deprecated `recordset` attribute to the",
            "    `data` attribute.  If a Recordset instance is passed, the raw object data",
            "    will be culled from it.",
            "",
            "    @method _setRecordset",
            "    @param {Object[]|Recordset} val The recordset value to relay",
            "    @deprecated This will be removed with the deprecated `recordset` attribute",
            "                in a later version.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _setRecordset: function (val) {",
            "        var data;",
            "",
            "        if (val && Y.Recordset && val instanceof Y.Recordset) {",
            "            data = [];",
            "            val.each(function (record) {",
            "                data.push(record.get('data'));",
            "            });",
            "            val = data;",
            "        }",
            "",
            "        this.set('data', val);",
            "",
            "        return val;",
            "    },",
            "",
            "    /**",
            "    Accepts a Base subclass (preferably a Model subclass). Alternately, it will",
            "    generate a custom Model subclass from an array of attribute names or an",
            "    object defining attributes and their respective configurations (it is",
            "    assigned as the `ATTRS` of the new class).",
            "",
            "    Any other value is invalid.",
            "",
            "    @method _setRecordType",
            "    @param {Function|String[]|Object} val The Model subclass, array of",
            "            attribute names, or the `ATTRS` definition for a custom model",
            "            subclass",
            "    @return {Function} A Base/Model subclass",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _setRecordType: function (val) {",
            "        var modelClass;",
            "",
            "        // Duck type based on known/likely consumed APIs",
            "        if (isFunction(val) && val.prototype.toJSON && val.prototype.setAttrs) {",
            "            modelClass = val;",
            "        } else if (isObject(val)) {",
            "            modelClass = this._createRecordClass(val);",
            "        }",
            "",
            "        return modelClass || INVALID;",
            "    }",
            "",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"escape\", \"model-list\", \"node-event-delegate\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "11": 1,
            "38": 1,
            "40": 1,
            "201": 1,
            "232": 28,
            "234": 28,
            "239": 1,
            "241": 27,
            "244": 28,
            "245": 22,
            "248": 6,
            "250": 6,
            "251": 5,
            "252": 5,
            "254": 5,
            "255": 1,
            "258": 5,
            "261": 1,
            "279": 41,
            "281": 41,
            "282": 37,
            "283": 37,
            "287": 37,
            "288": 0,
            "292": 41,
            "345": 5,
            "358": 4,
            "360": 4,
            "362": 4,
            "365": 0,
            "378": 4,
            "380": 4,
            "382": 4,
            "384": 4,
            "385": 4,
            "386": 0,
            "388": 4,
            "407": 7,
            "409": 7,
            "410": 4,
            "412": 4,
            "413": 10,
            "415": 3,
            "416": 3,
            "419": 7,
            "430": 3,
            "449": 105,
            "469": 1,
            "487": 65,
            "501": 37,
            "505": 37,
            "507": 0,
            "509": 0,
            "510": 0,
            "513": 0,
            "516": 37,
            "527": 37,
            "545": 10,
            "549": 10,
            "550": 3,
            "553": 10,
            "570": 64,
            "572": 64,
            "573": 37,
            "575": 37,
            "576": 3,
            "578": 3,
            "579": 0,
            "584": 34,
            "586": 34,
            "587": 6,
            "595": 37,
            "608": 37,
            "614": 37,
            "620": 37,
            "621": 15,
            "624": 15,
            "625": 7,
            "626": 8,
            "627": 1,
            "630": 15,
            "631": 8,
            "635": 37,
            "637": 37,
            "639": 37,
            "654": 42,
            "656": 42,
            "657": 52,
            "659": 52,
            "660": 109,
            "661": 109,
            "668": 109,
            "669": 94,
            "673": 109,
            "675": 109,
            "676": 10,
            "681": 42,
            "683": 42,
            "705": 36,
            "710": 36,
            "711": 22,
            "714": 22,
            "715": 22,
            "717": 22,
            "718": 44,
            "719": 44,
            "721": 44,
            "722": 10,
            "723": 34,
            "724": 0,
            "726": 0,
            "728": 34,
            "733": 22,
            "736": 36,
            "739": 109,
            "741": 109,
            "742": 6,
            "744": 103,
            "747": 109,
            "750": 36,
            "751": 46,
            "754": 46,
            "755": 109,
            "758": 109,
            "761": 109,
            "764": 109,
            "766": 109,
            "769": 1,
            "772": 109,
            "773": 20,
            "775": 89,
            "781": 109,
            "783": 109,
            "784": 10,
            "788": 46,
            "791": 36,
            "807": 1,
            "809": 1,
            "830": 45,
            "831": 0,
            "834": 45,
            "835": 27,
            "841": 27,
            "846": 27,
            "847": 18,
            "849": 3,
            "852": 45,
            "868": 2,
            "870": 2,
            "871": 1,
            "872": 1,
            "873": 1,
            "875": 1,
            "878": 2,
            "880": 2,
            "900": 10,
            "903": 10,
            "904": 3,
            "905": 7,
            "906": 7,
            "909": 10
        }
    }
}