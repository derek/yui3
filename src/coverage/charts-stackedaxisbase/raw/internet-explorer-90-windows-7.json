{
    "build/axis-stacked-base/axis-stacked-base.js": {
        "path": "build/axis-stacked-base/axis-stacked-base.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 2408,
            "6": 2408,
            "7": 1890,
            "8": 1890,
            "9": 2408,
            "10": 21560,
            "11": 21560,
            "12": 21560,
            "13": 41580,
            "14": 41580,
            "15": 41580,
            "16": 216,
            "17": 41364,
            "18": 25035,
            "19": 16329,
            "20": 21560,
            "21": 15259,
            "22": 6301,
            "23": 21560,
            "24": 10661,
            "25": 10899,
            "26": 2408,
            "27": 2408,
            "28": 2408,
            "29": 210,
            "30": 2408,
            "31": 140,
            "32": 2408,
            "33": 1,
            "34": 1
        },
        "b": {
            "1": [
                1890,
                0
            ],
            "2": [
                41580,
                0
            ],
            "3": [
                216,
                41364
            ],
            "4": [
                25035,
                16329
            ],
            "5": [
                15259,
                6301
            ],
            "6": [
                10661,
                10899
            ],
            "7": [
                210,
                2198
            ],
            "8": [
                140,
                2268
            ]
        },
        "f": {
            "1": 1,
            "2": 1190,
            "3": 2408
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 29
                    },
                    "end": {
                        "line": 1,
                        "column": 48
                    }
                }
            },
            "2": {
                "name": "StackedImpl",
                "line": 21,
                "loc": {
                    "start": {
                        "line": 21,
                        "column": 0
                    },
                    "end": {
                        "line": 22,
                        "column": 0
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 43,
                "loc": {
                    "start": {
                        "line": 43,
                        "column": 22
                    },
                    "end": {
                        "line": 44,
                        "column": 4
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 133,
                    "column": 53
                }
            },
            "2": {
                "start": {
                    "line": 21,
                    "column": 0
                },
                "end": {
                    "line": 23,
                    "column": 1
                }
            },
            "3": {
                "start": {
                    "line": 25,
                    "column": 0
                },
                "end": {
                    "line": 25,
                    "column": 33
                }
            },
            "4": {
                "start": {
                    "line": 27,
                    "column": 0
                },
                "end": {
                    "line": 116,
                    "column": 2
                }
            },
            "5": {
                "start": {
                    "line": 45,
                    "column": 8
                },
                "end": {
                    "line": 55,
                    "column": 40
                }
            },
            "6": {
                "start": {
                    "line": 57,
                    "column": 8
                },
                "end": {
                    "line": 63,
                    "column": 9
                }
            },
            "7": {
                "start": {
                    "line": 59,
                    "column": 12
                },
                "end": {
                    "line": 62,
                    "column": 13
                }
            },
            "8": {
                "start": {
                    "line": 61,
                    "column": 16
                },
                "end": {
                    "line": 61,
                    "column": 54
                }
            },
            "9": {
                "start": {
                    "line": 64,
                    "column": 8
                },
                "end": {
                    "line": 103,
                    "column": 9
                }
            },
            "10": {
                "start": {
                    "line": 66,
                    "column": 12
                },
                "end": {
                    "line": 66,
                    "column": 20
                }
            },
            "11": {
                "start": {
                    "line": 67,
                    "column": 12
                },
                "end": {
                    "line": 67,
                    "column": 20
                }
            },
            "12": {
                "start": {
                    "line": 68,
                    "column": 12
                },
                "end": {
                    "line": 86,
                    "column": 13
                }
            },
            "13": {
                "start": {
                    "line": 70,
                    "column": 16
                },
                "end": {
                    "line": 85,
                    "column": 17
                }
            },
            "14": {
                "start": {
                    "line": 72,
                    "column": 20
                },
                "end": {
                    "line": 72,
                    "column": 39
                }
            },
            "15": {
                "start": {
                    "line": 73,
                    "column": 20
                },
                "end": {
                    "line": 76,
                    "column": 21
                }
            },
            "16": {
                "start": {
                    "line": 75,
                    "column": 24
                },
                "end": {
                    "line": 75,
                    "column": 33
                }
            },
            "17": {
                "start": {
                    "line": 77,
                    "column": 20
                },
                "end": {
                    "line": 84,
                    "column": 21
                }
            },
            "18": {
                "start": {
                    "line": 79,
                    "column": 24
                },
                "end": {
                    "line": 79,
                    "column": 35
                }
            },
            "19": {
                "start": {
                    "line": 83,
                    "column": 24
                },
                "end": {
                    "line": 83,
                    "column": 35
                }
            },
            "20": {
                "start": {
                    "line": 87,
                    "column": 12
                },
                "end": {
                    "line": 94,
                    "column": 13
                }
            },
            "21": {
                "start": {
                    "line": 89,
                    "column": 16
                },
                "end": {
                    "line": 89,
                    "column": 41
                }
            },
            "22": {
                "start": {
                    "line": 93,
                    "column": 16
                },
                "end": {
                    "line": 93,
                    "column": 41
                }
            },
            "23": {
                "start": {
                    "line": 95,
                    "column": 12
                },
                "end": {
                    "line": 102,
                    "column": 13
                }
            },
            "24": {
                "start": {
                    "line": 97,
                    "column": 16
                },
                "end": {
                    "line": 97,
                    "column": 41
                }
            },
            "25": {
                "start": {
                    "line": 101,
                    "column": 16
                },
                "end": {
                    "line": 101,
                    "column": 41
                }
            },
            "26": {
                "start": {
                    "line": 104,
                    "column": 8
                },
                "end": {
                    "line": 104,
                    "column": 34
                }
            },
            "27": {
                "start": {
                    "line": 105,
                    "column": 8
                },
                "end": {
                    "line": 105,
                    "column": 34
                }
            },
            "28": {
                "start": {
                    "line": 106,
                    "column": 8
                },
                "end": {
                    "line": 109,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 108,
                    "column": 12
                },
                "end": {
                    "line": 108,
                    "column": 35
                }
            },
            "30": {
                "start": {
                    "line": 110,
                    "column": 8
                },
                "end": {
                    "line": 113,
                    "column": 9
                }
            },
            "31": {
                "start": {
                    "line": 112,
                    "column": 12
                },
                "end": {
                    "line": 112,
                    "column": 35
                }
            },
            "32": {
                "start": {
                    "line": 114,
                    "column": 8
                },
                "end": {
                    "line": 114,
                    "column": 55
                }
            },
            "33": {
                "start": {
                    "line": 118,
                    "column": 0
                },
                "end": {
                    "line": 118,
                    "column": 28
                }
            },
            "34": {
                "start": {
                    "line": 130,
                    "column": 0
                },
                "end": {
                    "line": 130,
                    "column": 89
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 59,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 59,
                            "column": 12
                        },
                        "end": {
                            "line": 59,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 59,
                            "column": 12
                        },
                        "end": {
                            "line": 59,
                            "column": 12
                        }
                    }
                ]
            },
            "2": {
                "line": 70,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 70,
                            "column": 16
                        },
                        "end": {
                            "line": 70,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 70,
                            "column": 16
                        },
                        "end": {
                            "line": 70,
                            "column": 16
                        }
                    }
                ]
            },
            "3": {
                "line": 73,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 73,
                            "column": 20
                        },
                        "end": {
                            "line": 73,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 73,
                            "column": 20
                        },
                        "end": {
                            "line": 73,
                            "column": 20
                        }
                    }
                ]
            },
            "4": {
                "line": 77,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 77,
                            "column": 20
                        },
                        "end": {
                            "line": 77,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 77,
                            "column": 20
                        },
                        "end": {
                            "line": 77,
                            "column": 20
                        }
                    }
                ]
            },
            "5": {
                "line": 87,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 87,
                            "column": 12
                        },
                        "end": {
                            "line": 87,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 87,
                            "column": 12
                        },
                        "end": {
                            "line": 87,
                            "column": 12
                        }
                    }
                ]
            },
            "6": {
                "line": 95,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 95,
                            "column": 12
                        },
                        "end": {
                            "line": 95,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 95,
                            "column": 12
                        },
                        "end": {
                            "line": 95,
                            "column": 12
                        }
                    }
                ]
            },
            "7": {
                "line": 106,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 106,
                            "column": 8
                        },
                        "end": {
                            "line": 106,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 106,
                            "column": 8
                        },
                        "end": {
                            "line": 106,
                            "column": 8
                        }
                    }
                ]
            },
            "8": {
                "line": 110,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 110,
                            "column": 8
                        },
                        "end": {
                            "line": 110,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 110,
                            "column": 8
                        },
                        "end": {
                            "line": 110,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('axis-stacked-base', function (Y, NAME) {",
            "",
            "/**",
            " * Provides core functionality for the handling of stacked numeric axis data for a chart.",
            " *",
            " * @module charts",
            " * @submodule axis-stacked-base",
            " */",
            "",
            "/**",
            " * StackedImpl contains logic for managing stacked numeric data. StackedImpl is used by the following classes:",
            " * <ul>",
            " *      <li>{{#crossLink \"StackedAxisBase\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"StackedAxis\"}}{{/crossLink}}</li>",
            " *  </ul>",
            " *",
            " * @submodule axis-stacked-base",
            " * @class StackedImpl",
            " * @constructor",
            " */",
            "function StackedImpl()",
            "{",
            "}",
            "",
            "StackedImpl.NAME = \"stackedImpl\";",
            "",
            "StackedImpl.prototype = {",
            "    /**",
            "     * Type of data used in `Data`.",
            "     *",
            "     * @property _type",
            "     * @readOnly",
            "     * @private",
            "     */",
            "    _type: \"stacked\",",
            "",
            "    /**",
            "     * Calculates the maximum and minimum values for the `Data`.",
            "     *",
            "     * @method _updateMinAndMax",
            "     * @private",
            "     */",
            "    _updateMinAndMax: function()",
            "    {",
            "        var max = 0,",
            "            min = 0,",
            "            pos = 0,",
            "            neg = 0,",
            "            len = 0,",
            "            i = 0,",
            "            key,",
            "            num,",
            "            keys = this.get(\"keys\"),",
            "            setMin = this.get(\"setMin\"),",
            "            setMax = this.get(\"setMax\");",
            "",
            "        for(key in keys)",
            "        {",
            "            if(keys.hasOwnProperty(key))",
            "            {",
            "                len = Math.max(len, keys[key].length);",
            "            }",
            "        }",
            "        for(; i < len; ++i)",
            "        {",
            "            pos = 0;",
            "            neg = 0;",
            "            for(key in keys)",
            "            {",
            "                if(keys.hasOwnProperty(key))",
            "                {",
            "                    num = keys[key][i];",
            "                    if(isNaN(num))",
            "                    {",
            "                        continue;",
            "                    }",
            "                    if(num >= 0)",
            "                    {",
            "                        pos += num;",
            "                    }",
            "                    else",
            "                    {",
            "                        neg += num;",
            "                    }",
            "                }",
            "            }",
            "            if(pos > 0)",
            "            {",
            "                max = Math.max(max, pos);",
            "            }",
            "            else",
            "            {",
            "                max = Math.max(max, neg);",
            "            }",
            "            if(neg < 0)",
            "            {",
            "                min = Math.min(min, neg);",
            "            }",
            "            else",
            "            {",
            "                min = Math.min(min, pos);",
            "            }",
            "        }",
            "        this._actualMaximum = max;",
            "        this._actualMinimum = min;",
            "        if(setMax)",
            "        {",
            "            max = this._setMaximum;",
            "        }",
            "        if(setMin)",
            "        {",
            "            min = this._setMinimum;",
            "        }",
            "        this._roundMinAndMax(min, max, setMin, setMax);",
            "    }",
            "};",
            "",
            "Y.StackedImpl = StackedImpl;",
            "",
            "/**",
            " * StackedAxisBase manages stacked numeric data for an axis.",
            " *",
            " * @class StackedAxisBase",
            " * @constructor",
            " * @extends AxisBase",
            " * @uses StackedImpl",
            " * @param {Object} config (optional) Configuration parameters.",
            " * @submodule axis-stacked-base",
            " */",
            "Y.StackedAxisBase = Y.Base.create(\"stackedAxisBase\", Y.NumericAxisBase, [Y.StackedImpl]);",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"axis-numeric-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "21": 1,
            "25": 1,
            "27": 1,
            "45": 2408,
            "57": 2408,
            "59": 1890,
            "61": 1890,
            "64": 2408,
            "66": 21560,
            "67": 21560,
            "68": 21560,
            "70": 41580,
            "72": 41580,
            "73": 41580,
            "75": 216,
            "77": 41364,
            "79": 25035,
            "83": 16329,
            "87": 21560,
            "89": 15259,
            "93": 6301,
            "95": 21560,
            "97": 10661,
            "101": 10899,
            "104": 2408,
            "105": 2408,
            "106": 2408,
            "108": 210,
            "110": 2408,
            "112": 140,
            "114": 2408,
            "118": 1,
            "130": 1
        }
    }
}