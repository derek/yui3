{
    "build/autocomplete-base/autocomplete-base.js": {
        "path": "build/autocomplete-base/autocomplete-base.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 77,
            "6": 77,
            "7": 77,
            "8": 77,
            "9": 77,
            "10": 72,
            "11": 72,
            "12": 72,
            "13": 72,
            "14": 72,
            "15": 0,
            "16": 0,
            "17": 22,
            "18": 22,
            "19": 22,
            "20": 0,
            "21": 22,
            "22": 13,
            "23": 13,
            "24": 13,
            "25": 13,
            "26": 22,
            "27": 76,
            "28": 76,
            "29": 0,
            "30": 0,
            "31": 76,
            "32": 0,
            "33": 0,
            "34": 76,
            "35": 76,
            "36": 76,
            "37": 76,
            "38": 5,
            "39": 5,
            "40": 5,
            "41": 2,
            "42": 2,
            "43": 2,
            "44": 2,
            "45": 2,
            "46": 2,
            "47": 1,
            "48": 2,
            "49": 2,
            "50": 3,
            "51": 3,
            "52": 114,
            "53": 5,
            "54": 0,
            "55": 5,
            "56": 7,
            "57": 5,
            "58": 23,
            "59": 23,
            "60": 2,
            "61": 23,
            "62": 21,
            "63": 21,
            "64": 21,
            "65": 46,
            "66": 46,
            "67": 46,
            "68": 21,
            "69": 1,
            "70": 1,
            "71": 0,
            "72": 1,
            "73": 0,
            "74": 21,
            "75": 21,
            "76": 21,
            "77": 21,
            "78": 21,
            "79": 1,
            "80": 21,
            "81": 1,
            "82": 1,
            "83": 0,
            "84": 1,
            "85": 1,
            "86": 1,
            "87": 1,
            "88": 21,
            "89": 1,
            "90": 1,
            "91": 0,
            "92": 1,
            "93": 1,
            "94": 23,
            "95": 23,
            "96": 36,
            "97": 36,
            "98": 5,
            "99": 5,
            "100": 36,
            "101": 77,
            "102": 45,
            "103": 41,
            "104": 4,
            "105": 4,
            "106": 4,
            "107": 5,
            "108": 23,
            "109": 17,
            "110": 6,
            "111": 6,
            "112": 7,
            "113": 26,
            "114": 26,
            "115": 2,
            "116": 24,
            "117": 24,
            "118": 8,
            "119": 3,
            "120": 5,
            "121": 3,
            "122": 2,
            "123": 24,
            "124": 21,
            "125": 21,
            "126": 4,
            "127": 3,
            "128": 3,
            "129": 22,
            "130": 22,
            "131": 21,
            "132": 1,
            "133": 1,
            "134": 1,
            "135": 0,
            "136": 54,
            "137": 54,
            "138": 27,
            "139": 27,
            "140": 27,
            "141": 27,
            "142": 27,
            "143": 0,
            "144": 0,
            "145": 11,
            "146": 77,
            "147": 77,
            "148": 77,
            "149": 4,
            "150": 4,
            "151": 4,
            "152": 0,
            "153": 0,
            "154": 0,
            "155": 0,
            "156": 0,
            "157": 0,
            "158": 0,
            "159": 4,
            "160": 2,
            "161": 2,
            "162": 27,
            "163": 27,
            "164": 8,
            "165": 27,
            "166": 27,
            "167": 27,
            "168": 19,
            "169": 13,
            "170": 13,
            "171": 12,
            "172": 13,
            "173": 2,
            "174": 2,
            "175": 11,
            "176": 6,
            "177": 8,
            "178": 8,
            "179": 0,
            "180": 0,
            "181": 0,
            "182": 0,
            "183": 0,
            "184": 0,
            "185": 0,
            "186": 0,
            "187": 0,
            "188": 0,
            "189": 19,
            "190": 19,
            "191": 19,
            "192": 12,
            "193": 12,
            "194": 7,
            "195": 7,
            "196": 11,
            "197": 22,
            "198": 1,
            "199": 1,
            "200": 1,
            "201": 1,
            "202": 1
        },
        "b": {
            "1": [
                72,
                71
            ],
            "2": [
                0,
                0
            ],
            "3": [
                22,
                0
            ],
            "4": [
                22,
                1
            ],
            "5": [
                0,
                0
            ],
            "6": [
                13,
                9
            ],
            "7": [
                13,
                0
            ],
            "8": [
                2,
                11
            ],
            "9": [
                76,
                76
            ],
            "10": [
                0,
                76
            ],
            "11": [
                0,
                76
            ],
            "12": [
                2,
                0
            ],
            "13": [
                1,
                1
            ],
            "14": [
                2,
                1
            ],
            "15": [
                114,
                23
            ],
            "16": [
                0,
                5
            ],
            "17": [
                12,
                12
            ],
            "18": [
                23,
                23
            ],
            "19": [
                2,
                21
            ],
            "20": [
                23,
                23
            ],
            "21": [
                21,
                2
            ],
            "22": [
                23,
                22
            ],
            "23": [
                5,
                41
            ],
            "24": [
                0,
                1
            ],
            "25": [
                0,
                1
            ],
            "26": [
                21,
                0
            ],
            "27": [
                1,
                20
            ],
            "28": [
                21,
                2,
                1
            ],
            "29": [
                1,
                20
            ],
            "30": [
                0,
                1
            ],
            "31": [
                1,
                20
            ],
            "32": [
                0,
                1
            ],
            "33": [
                5,
                31
            ],
            "34": [
                77,
                0
            ],
            "35": [
                41,
                4
            ],
            "36": [
                5,
                5
            ],
            "37": [
                17,
                6
            ],
            "38": [
                2,
                24
            ],
            "39": [
                3,
                5
            ],
            "40": [
                3,
                2
            ],
            "41": [
                5,
                5,
                5
            ],
            "42": [
                21,
                3
            ],
            "43": [
                20,
                1
            ],
            "44": [
                3,
                0
            ],
            "45": [
                21,
                1
            ],
            "46": [
                1,
                0
            ],
            "47": [
                1,
                1,
                1
            ],
            "48": [
                54,
                52
            ],
            "49": [
                27,
                27
            ],
            "50": [
                54,
                29,
                52,
                27
            ],
            "51": [
                27,
                0
            ],
            "52": [
                27,
                0
            ],
            "53": [
                77,
                0
            ],
            "54": [
                2,
                75
            ],
            "55": [
                0,
                4
            ],
            "56": [
                0,
                0
            ],
            "57": [
                2,
                0
            ],
            "58": [
                8,
                19
            ],
            "59": [
                27,
                6
            ],
            "60": [
                19,
                8
            ],
            "61": [
                27,
                25
            ],
            "62": [
                13,
                6
            ],
            "63": [
                2,
                11
            ],
            "64": [
                7,
                1
            ],
            "65": [
                0,
                0
            ],
            "66": [
                0,
                0
            ],
            "67": [
                0,
                0
            ],
            "68": [
                0,
                0,
                0
            ],
            "69": [
                0,
                0
            ],
            "70": [
                19,
                0
            ],
            "71": [
                12,
                0
            ],
            "72": [
                12,
                0
            ],
            "73": [
                12,
                0
            ],
            "74": [
                1,
                0,
                1
            ]
        },
        "f": {
            "1": 1,
            "2": 77,
            "3": 77,
            "4": 72,
            "5": 0,
            "6": 22,
            "7": 76,
            "8": 76,
            "9": 5,
            "10": 5,
            "11": 2,
            "12": 2,
            "13": 2,
            "14": 2,
            "15": 3,
            "16": 114,
            "17": 5,
            "18": 23,
            "19": 36,
            "20": 77,
            "21": 45,
            "22": 5,
            "23": 23,
            "24": 7,
            "25": 26,
            "26": 8,
            "27": 4,
            "28": 22,
            "29": 54,
            "30": 11,
            "31": 77,
            "32": 4,
            "33": 2,
            "34": 27,
            "35": 12,
            "36": 0,
            "37": 19,
            "38": 12,
            "39": 7,
            "40": 11,
            "41": 22
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 29
                    },
                    "end": {
                        "line": 1,
                        "column": 48
                    }
                }
            },
            "2": {
                "name": "AutoCompleteBase",
                "line": 94,
                "loc": {
                    "start": {
                        "line": 94,
                        "column": 0
                    },
                    "end": {
                        "line": 94,
                        "column": 28
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 98,
                "loc": {
                    "start": {
                        "line": 98,
                        "column": 17
                    },
                    "end": {
                        "line": 98,
                        "column": 29
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 168,
                "loc": {
                    "start": {
                        "line": 168,
                        "column": 16
                    },
                    "end": {
                        "line": 168,
                        "column": 28
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 186,
                "loc": {
                    "start": {
                        "line": 186,
                        "column": 16
                    },
                    "end": {
                        "line": 186,
                        "column": 28
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 209,
                "loc": {
                    "start": {
                        "line": 209,
                        "column": 17
                    },
                    "end": {
                        "line": 209,
                        "column": 51
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 249,
                "loc": {
                    "start": {
                        "line": 249,
                        "column": 19
                    },
                    "end": {
                        "line": 249,
                        "column": 31
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 285,
                "loc": {
                    "start": {
                        "line": 285,
                        "column": 19
                    },
                    "end": {
                        "line": 285,
                        "column": 31
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 301,
                "loc": {
                    "start": {
                        "line": 301,
                        "column": 24
                    },
                    "end": {
                        "line": 301,
                        "column": 42
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 306,
                "loc": {
                    "start": {
                        "line": 306,
                        "column": 25
                    },
                    "end": {
                        "line": 306,
                        "column": 44
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 323,
                "loc": {
                    "start": {
                        "line": 323,
                        "column": 27
                    },
                    "end": {
                        "line": 323,
                        "column": 45
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 328,
                "loc": {
                    "start": {
                        "line": 328,
                        "column": 25
                    },
                    "end": {
                        "line": 328,
                        "column": 44
                    }
                }
            },
            "13": {
                "name": "afterResults",
                "line": 331,
                "loc": {
                    "start": {
                        "line": 331,
                        "column": 16
                    },
                    "end": {
                        "line": 331,
                        "column": 47
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 354,
                "loc": {
                    "start": {
                        "line": 354,
                        "column": 25
                    },
                    "end": {
                        "line": 354,
                        "column": 43
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 359,
                "loc": {
                    "start": {
                        "line": 359,
                        "column": 25
                    },
                    "end": {
                        "line": 359,
                        "column": 44
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 377,
                "loc": {
                    "start": {
                        "line": 377,
                        "column": 24
                    },
                    "end": {
                        "line": 377,
                        "column": 41
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 394,
                "loc": {
                    "start": {
                        "line": 394,
                        "column": 21
                    },
                    "end": {
                        "line": 394,
                        "column": 42
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 416,
                "loc": {
                    "start": {
                        "line": 416,
                        "column": 20
                    },
                    "end": {
                        "line": 416,
                        "column": 53
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 546,
                "loc": {
                    "start": {
                        "line": 546,
                        "column": 17
                    },
                    "end": {
                        "line": 546,
                        "column": 34
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 565,
                "loc": {
                    "start": {
                        "line": 565,
                        "column": 21
                    },
                    "end": {
                        "line": 565,
                        "column": 38
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 581,
                "loc": {
                    "start": {
                        "line": 581,
                        "column": 17
                    },
                    "end": {
                        "line": 581,
                        "column": 36
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 590,
                "loc": {
                    "start": {
                        "line": 590,
                        "column": 15
                    },
                    "end": {
                        "line": 590,
                        "column": 33
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 603,
                "loc": {
                    "start": {
                        "line": 603,
                        "column": 25
                    },
                    "end": {
                        "line": 603,
                        "column": 45
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 610,
                "loc": {
                    "start": {
                        "line": 610,
                        "column": 15
                    },
                    "end": {
                        "line": 610,
                        "column": 32
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 626,
                "loc": {
                    "start": {
                        "line": 626,
                        "column": 23
                    },
                    "end": {
                        "line": 626,
                        "column": 42
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 635,
                "loc": {
                    "start": {
                        "line": 635,
                        "column": 28
                    },
                    "end": {
                        "line": 635,
                        "column": 46
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 650,
                "loc": {
                    "start": {
                        "line": 650,
                        "column": 41
                    },
                    "end": {
                        "line": 650,
                        "column": 54
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 668,
                "loc": {
                    "start": {
                        "line": 668,
                        "column": 27
                    },
                    "end": {
                        "line": 668,
                        "column": 50
                    }
                }
            },
            "29": {
                "name": "(anonymous_29)",
                "line": 696,
                "loc": {
                    "start": {
                        "line": 696,
                        "column": 16
                    },
                    "end": {
                        "line": 696,
                        "column": 34
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 728,
                "loc": {
                    "start": {
                        "line": 728,
                        "column": 20
                    },
                    "end": {
                        "line": 728,
                        "column": 45
                    }
                }
            },
            "31": {
                "name": "(anonymous_31)",
                "line": 741,
                "loc": {
                    "start": {
                        "line": 741,
                        "column": 30
                    },
                    "end": {
                        "line": 741,
                        "column": 42
                    }
                }
            },
            "32": {
                "name": "(anonymous_32)",
                "line": 760,
                "loc": {
                    "start": {
                        "line": 760,
                        "column": 18
                    },
                    "end": {
                        "line": 760,
                        "column": 36
                    }
                }
            },
            "33": {
                "name": "(anonymous_33)",
                "line": 794,
                "loc": {
                    "start": {
                        "line": 794,
                        "column": 28
                    },
                    "end": {
                        "line": 794,
                        "column": 41
                    }
                }
            },
            "34": {
                "name": "(anonymous_34)",
                "line": 807,
                "loc": {
                    "start": {
                        "line": 807,
                        "column": 23
                    },
                    "end": {
                        "line": 807,
                        "column": 36
                    }
                }
            },
            "35": {
                "name": "(anonymous_35)",
                "line": 827,
                "loc": {
                    "start": {
                        "line": 827,
                        "column": 23
                    },
                    "end": {
                        "line": 827,
                        "column": 35
                    }
                }
            },
            "36": {
                "name": "(anonymous_36)",
                "line": 863,
                "loc": {
                    "start": {
                        "line": 863,
                        "column": 18
                    },
                    "end": {
                        "line": 863,
                        "column": 31
                    }
                }
            },
            "37": {
                "name": "(anonymous_37)",
                "line": 902,
                "loc": {
                    "start": {
                        "line": 902,
                        "column": 25
                    },
                    "end": {
                        "line": 902,
                        "column": 38
                    }
                }
            },
            "38": {
                "name": "(anonymous_38)",
                "line": 919,
                "loc": {
                    "start": {
                        "line": 919,
                        "column": 17
                    },
                    "end": {
                        "line": 919,
                        "column": 37
                    }
                }
            },
            "39": {
                "name": "(anonymous_39)",
                "line": 935,
                "loc": {
                    "start": {
                        "line": 935,
                        "column": 17
                    },
                    "end": {
                        "line": 935,
                        "column": 29
                    }
                }
            },
            "40": {
                "name": "(anonymous_40)",
                "line": 948,
                "loc": {
                    "start": {
                        "line": 948,
                        "column": 17
                    },
                    "end": {
                        "line": 948,
                        "column": 30
                    }
                }
            },
            "41": {
                "name": "(anonymous_41)",
                "line": 960,
                "loc": {
                    "start": {
                        "line": 960,
                        "column": 19
                    },
                    "end": {
                        "line": 960,
                        "column": 32
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 1549,
                    "column": 3
                }
            },
            "2": {
                "start": {
                    "line": 66,
                    "column": 0
                },
                "end": {
                    "line": 92,
                    "column": 26
                }
            },
            "3": {
                "start": {
                    "line": 94,
                    "column": 0
                },
                "end": {
                    "line": 94,
                    "column": 30
                }
            },
            "4": {
                "start": {
                    "line": 96,
                    "column": 0
                },
                "end": {
                    "line": 963,
                    "column": 2
                }
            },
            "5": {
                "start": {
                    "line": 100,
                    "column": 8
                },
                "end": {
                    "line": 100,
                    "column": 53
                }
            },
            "6": {
                "start": {
                    "line": 101,
                    "column": 8
                },
                "end": {
                    "line": 101,
                    "column": 53
                }
            },
            "7": {
                "start": {
                    "line": 114,
                    "column": 8
                },
                "end": {
                    "line": 116,
                    "column": 11
                }
            },
            "8": {
                "start": {
                    "line": 131,
                    "column": 8
                },
                "end": {
                    "line": 133,
                    "column": 11
                }
            },
            "9": {
                "start": {
                    "line": 163,
                    "column": 8
                },
                "end": {
                    "line": 165,
                    "column": 11
                }
            },
            "10": {
                "start": {
                    "line": 169,
                    "column": 8
                },
                "end": {
                    "line": 169,
                    "column": 58
                }
            },
            "11": {
                "start": {
                    "line": 171,
                    "column": 8
                },
                "end": {
                    "line": 171,
                    "column": 34
                }
            },
            "12": {
                "start": {
                    "line": 172,
                    "column": 8
                },
                "end": {
                    "line": 172,
                    "column": 27
                }
            },
            "13": {
                "start": {
                    "line": 173,
                    "column": 8
                },
                "end": {
                    "line": 173,
                    "column": 31
                }
            },
            "14": {
                "start": {
                    "line": 174,
                    "column": 8
                },
                "end": {
                    "line": 174,
                    "column": 31
                }
            },
            "15": {
                "start": {
                    "line": 187,
                    "column": 8
                },
                "end": {
                    "line": 187,
                    "column": 42
                }
            },
            "16": {
                "start": {
                    "line": 188,
                    "column": 8
                },
                "end": {
                    "line": 188,
                    "column": 20
                }
            },
            "17": {
                "start": {
                    "line": 210,
                    "column": 8
                },
                "end": {
                    "line": 211,
                    "column": 40
                }
            },
            "18": {
                "start": {
                    "line": 213,
                    "column": 8
                },
                "end": {
                    "line": 217,
                    "column": 9
                }
            },
            "19": {
                "start": {
                    "line": 214,
                    "column": 12
                },
                "end": {
                    "line": 214,
                    "column": 36
                }
            },
            "20": {
                "start": {
                    "line": 216,
                    "column": 12
                },
                "end": {
                    "line": 216,
                    "column": 42
                }
            },
            "21": {
                "start": {
                    "line": 219,
                    "column": 8
                },
                "end": {
                    "line": 236,
                    "column": 9
                }
            },
            "22": {
                "start": {
                    "line": 220,
                    "column": 12
                },
                "end": {
                    "line": 222,
                    "column": 13
                }
            },
            "23": {
                "start": {
                    "line": 221,
                    "column": 16
                },
                "end": {
                    "line": 221,
                    "column": 61
                }
            },
            "24": {
                "start": {
                    "line": 224,
                    "column": 12
                },
                "end": {
                    "line": 225,
                    "column": 58
                }
            },
            "25": {
                "start": {
                    "line": 228,
                    "column": 12
                },
                "end": {
                    "line": 235,
                    "column": 15
                }
            },
            "26": {
                "start": {
                    "line": 238,
                    "column": 8
                },
                "end": {
                    "line": 238,
                    "column": 20
                }
            },
            "27": {
                "start": {
                    "line": 250,
                    "column": 8
                },
                "end": {
                    "line": 251,
                    "column": 59
                }
            },
            "28": {
                "start": {
                    "line": 255,
                    "column": 8
                },
                "end": {
                    "line": 258,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 256,
                    "column": 12
                },
                "end": {
                    "line": 256,
                    "column": 51
                }
            },
            "30": {
                "start": {
                    "line": 257,
                    "column": 12
                },
                "end": {
                    "line": 257,
                    "column": 48
                }
            },
            "31": {
                "start": {
                    "line": 260,
                    "column": 8
                },
                "end": {
                    "line": 263,
                    "column": 9
                }
            },
            "32": {
                "start": {
                    "line": 261,
                    "column": 12
                },
                "end": {
                    "line": 261,
                    "column": 47
                }
            },
            "33": {
                "start": {
                    "line": 262,
                    "column": 12
                },
                "end": {
                    "line": 262,
                    "column": 19
                }
            },
            "34": {
                "start": {
                    "line": 265,
                    "column": 8
                },
                "end": {
                    "line": 265,
                    "column": 36
                }
            },
            "35": {
                "start": {
                    "line": 267,
                    "column": 8
                },
                "end": {
                    "line": 276,
                    "column": 11
                }
            },
            "36": {
                "start": {
                    "line": 286,
                    "column": 8
                },
                "end": {
                    "line": 286,
                    "column": 40
                }
            },
            "37": {
                "start": {
                    "line": 287,
                    "column": 8
                },
                "end": {
                    "line": 287,
                    "column": 57
                }
            },
            "38": {
                "start": {
                    "line": 302,
                    "column": 8
                },
                "end": {
                    "line": 302,
                    "column": 24
                }
            },
            "39": {
                "start": {
                    "line": 304,
                    "column": 8
                },
                "end": {
                    "line": 309,
                    "column": 10
                }
            },
            "40": {
                "start": {
                    "line": 307,
                    "column": 16
                },
                "end": {
                    "line": 307,
                    "column": 64
                }
            },
            "41": {
                "start": {
                    "line": 324,
                    "column": 8
                },
                "end": {
                    "line": 324,
                    "column": 24
                }
            },
            "42": {
                "start": {
                    "line": 326,
                    "column": 8
                },
                "end": {
                    "line": 341,
                    "column": 10
                }
            },
            "43": {
                "start": {
                    "line": 329,
                    "column": 16
                },
                "end": {
                    "line": 329,
                    "column": 26
                }
            },
            "44": {
                "start": {
                    "line": 331,
                    "column": 16
                },
                "end": {
                    "line": 333,
                    "column": 17
                }
            },
            "45": {
                "start": {
                    "line": 332,
                    "column": 20
                },
                "end": {
                    "line": 332,
                    "column": 66
                }
            },
            "46": {
                "start": {
                    "line": 337,
                    "column": 16
                },
                "end": {
                    "line": 339,
                    "column": 17
                }
            },
            "47": {
                "start": {
                    "line": 338,
                    "column": 20
                },
                "end": {
                    "line": 338,
                    "column": 40
                }
            },
            "48": {
                "start": {
                    "line": 355,
                    "column": 8
                },
                "end": {
                    "line": 355,
                    "column": 24
                }
            },
            "49": {
                "start": {
                    "line": 357,
                    "column": 8
                },
                "end": {
                    "line": 367,
                    "column": 10
                }
            },
            "50": {
                "start": {
                    "line": 360,
                    "column": 16
                },
                "end": {
                    "line": 360,
                    "column": 42
                }
            },
            "51": {
                "start": {
                    "line": 362,
                    "column": 16
                },
                "end": {
                    "line": 365,
                    "column": 18
                }
            },
            "52": {
                "start": {
                    "line": 378,
                    "column": 8
                },
                "end": {
                    "line": 378,
                    "column": 51
                }
            },
            "53": {
                "start": {
                    "line": 395,
                    "column": 8
                },
                "end": {
                    "line": 397,
                    "column": 9
                }
            },
            "54": {
                "start": {
                    "line": 396,
                    "column": 12
                },
                "end": {
                    "line": 396,
                    "column": 19
                }
            },
            "55": {
                "start": {
                    "line": 399,
                    "column": 8
                },
                "end": {
                    "line": 401,
                    "column": 9
                }
            },
            "56": {
                "start": {
                    "line": 400,
                    "column": 12
                },
                "end": {
                    "line": 400,
                    "column": 31
                }
            },
            "57": {
                "start": {
                    "line": 403,
                    "column": 8
                },
                "end": {
                    "line": 403,
                    "column": 19
                }
            },
            "58": {
                "start": {
                    "line": 417,
                    "column": 8
                },
                "end": {
                    "line": 437,
                    "column": 24
                }
            },
            "59": {
                "start": {
                    "line": 439,
                    "column": 8
                },
                "end": {
                    "line": 441,
                    "column": 9
                }
            },
            "60": {
                "start": {
                    "line": 440,
                    "column": 12
                },
                "end": {
                    "line": 440,
                    "column": 60
                }
            },
            "61": {
                "start": {
                    "line": 443,
                    "column": 8
                },
                "end": {
                    "line": 528,
                    "column": 9
                }
            },
            "62": {
                "start": {
                    "line": 444,
                    "column": 12
                },
                "end": {
                    "line": 444,
                    "column": 52
                }
            },
            "63": {
                "start": {
                    "line": 445,
                    "column": 12
                },
                "end": {
                    "line": 445,
                    "column": 56
                }
            },
            "64": {
                "start": {
                    "line": 451,
                    "column": 12
                },
                "end": {
                    "line": 463,
                    "column": 13
                }
            },
            "65": {
                "start": {
                    "line": 452,
                    "column": 16
                },
                "end": {
                    "line": 452,
                    "column": 39
                }
            },
            "66": {
                "start": {
                    "line": 454,
                    "column": 16
                },
                "end": {
                    "line": 456,
                    "column": 42
                }
            },
            "67": {
                "start": {
                    "line": 458,
                    "column": 16
                },
                "end": {
                    "line": 462,
                    "column": 19
                }
            },
            "68": {
                "start": {
                    "line": 468,
                    "column": 12
                },
                "end": {
                    "line": 478,
                    "column": 13
                }
            },
            "69": {
                "start": {
                    "line": 469,
                    "column": 16
                },
                "end": {
                    "line": 469,
                    "column": 73
                }
            },
            "70": {
                "start": {
                    "line": 471,
                    "column": 16
                },
                "end": {
                    "line": 473,
                    "column": 17
                }
            },
            "71": {
                "start": {
                    "line": 472,
                    "column": 20
                },
                "end": {
                    "line": 472,
                    "column": 27
                }
            },
            "72": {
                "start": {
                    "line": 475,
                    "column": 16
                },
                "end": {
                    "line": 477,
                    "column": 17
                }
            },
            "73": {
                "start": {
                    "line": 476,
                    "column": 20
                },
                "end": {
                    "line": 476,
                    "column": 26
                }
            },
            "74": {
                "start": {
                    "line": 480,
                    "column": 12
                },
                "end": {
                    "line": 527,
                    "column": 13
                }
            },
            "75": {
                "start": {
                    "line": 481,
                    "column": 16
                },
                "end": {
                    "line": 481,
                    "column": 58
                }
            },
            "76": {
                "start": {
                    "line": 482,
                    "column": 16
                },
                "end": {
                    "line": 482,
                    "column": 60
                }
            },
            "77": {
                "start": {
                    "line": 483,
                    "column": 16
                },
                "end": {
                    "line": 483,
                    "column": 53
                }
            },
            "78": {
                "start": {
                    "line": 487,
                    "column": 16
                },
                "end": {
                    "line": 490,
                    "column": 17
                }
            },
            "79": {
                "start": {
                    "line": 489,
                    "column": 20
                },
                "end": {
                    "line": 489,
                    "column": 48
                }
            },
            "80": {
                "start": {
                    "line": 496,
                    "column": 16
                },
                "end": {
                    "line": 509,
                    "column": 17
                }
            },
            "81": {
                "start": {
                    "line": 497,
                    "column": 20
                },
                "end": {
                    "line": 498,
                    "column": 46
                }
            },
            "82": {
                "start": {
                    "line": 500,
                    "column": 20
                },
                "end": {
                    "line": 502,
                    "column": 21
                }
            },
            "83": {
                "start": {
                    "line": 501,
                    "column": 24
                },
                "end": {
                    "line": 501,
                    "column": 31
                }
            },
            "84": {
                "start": {
                    "line": 504,
                    "column": 20
                },
                "end": {
                    "line": 508,
                    "column": 21
                }
            },
            "85": {
                "start": {
                    "line": 505,
                    "column": 24
                },
                "end": {
                    "line": 505,
                    "column": 44
                }
            },
            "86": {
                "start": {
                    "line": 506,
                    "column": 24
                },
                "end": {
                    "line": 506,
                    "column": 60
                }
            },
            "87": {
                "start": {
                    "line": 507,
                    "column": 24
                },
                "end": {
                    "line": 507,
                    "column": 64
                }
            },
            "88": {
                "start": {
                    "line": 516,
                    "column": 16
                },
                "end": {
                    "line": 526,
                    "column": 17
                }
            },
            "89": {
                "start": {
                    "line": 517,
                    "column": 20
                },
                "end": {
                    "line": 517,
                    "column": 78
                }
            },
            "90": {
                "start": {
                    "line": 519,
                    "column": 20
                },
                "end": {
                    "line": 521,
                    "column": 21
                }
            },
            "91": {
                "start": {
                    "line": 520,
                    "column": 24
                },
                "end": {
                    "line": 520,
                    "column": 31
                }
            },
            "92": {
                "start": {
                    "line": 523,
                    "column": 20
                },
                "end": {
                    "line": 525,
                    "column": 21
                }
            },
            "93": {
                "start": {
                    "line": 524,
                    "column": 24
                },
                "end": {
                    "line": 524,
                    "column": 58
                }
            },
            "94": {
                "start": {
                    "line": 530,
                    "column": 8
                },
                "end": {
                    "line": 530,
                    "column": 33
                }
            },
            "95": {
                "start": {
                    "line": 531,
                    "column": 8
                },
                "end": {
                    "line": 531,
                    "column": 39
                }
            },
            "96": {
                "start": {
                    "line": 547,
                    "column": 8
                },
                "end": {
                    "line": 547,
                    "column": 46
                }
            },
            "97": {
                "start": {
                    "line": 549,
                    "column": 8
                },
                "end": {
                    "line": 552,
                    "column": 9
                }
            },
            "98": {
                "start": {
                    "line": 550,
                    "column": 12
                },
                "end": {
                    "line": 550,
                    "column": 39
                }
            },
            "99": {
                "start": {
                    "line": 551,
                    "column": 12
                },
                "end": {
                    "line": 551,
                    "column": 44
                }
            },
            "100": {
                "start": {
                    "line": 554,
                    "column": 8
                },
                "end": {
                    "line": 554,
                    "column": 36
                }
            },
            "101": {
                "start": {
                    "line": 570,
                    "column": 8
                },
                "end": {
                    "line": 570,
                    "column": 40
                }
            },
            "102": {
                "start": {
                    "line": 582,
                    "column": 8
                },
                "end": {
                    "line": 584,
                    "column": 9
                }
            },
            "103": {
                "start": {
                    "line": 583,
                    "column": 12
                },
                "end": {
                    "line": 583,
                    "column": 27
                }
            },
            "104": {
                "start": {
                    "line": 586,
                    "column": 8
                },
                "end": {
                    "line": 586,
                    "column": 24
                }
            },
            "105": {
                "start": {
                    "line": 588,
                    "column": 8
                },
                "end": {
                    "line": 588,
                    "column": 48
                }
            },
            "106": {
                "start": {
                    "line": 590,
                    "column": 8
                },
                "end": {
                    "line": 592,
                    "column": 10
                }
            },
            "107": {
                "start": {
                    "line": 591,
                    "column": 12
                },
                "end": {
                    "line": 591,
                    "column": 67
                }
            },
            "108": {
                "start": {
                    "line": 604,
                    "column": 8
                },
                "end": {
                    "line": 606,
                    "column": 9
                }
            },
            "109": {
                "start": {
                    "line": 605,
                    "column": 12
                },
                "end": {
                    "line": 605,
                    "column": 28
                }
            },
            "110": {
                "start": {
                    "line": 608,
                    "column": 8
                },
                "end": {
                    "line": 608,
                    "column": 39
                }
            },
            "111": {
                "start": {
                    "line": 610,
                    "column": 8
                },
                "end": {
                    "line": 612,
                    "column": 10
                }
            },
            "112": {
                "start": {
                    "line": 611,
                    "column": 12
                },
                "end": {
                    "line": 611,
                    "column": 74
                }
            },
            "113": {
                "start": {
                    "line": 627,
                    "column": 8
                },
                "end": {
                    "line": 627,
                    "column": 41
                }
            },
            "114": {
                "start": {
                    "line": 629,
                    "column": 8
                },
                "end": {
                    "line": 631,
                    "column": 9
                }
            },
            "115": {
                "start": {
                    "line": 630,
                    "column": 12
                },
                "end": {
                    "line": 630,
                    "column": 22
                }
            },
            "116": {
                "start": {
                    "line": 633,
                    "column": 8
                },
                "end": {
                    "line": 633,
                    "column": 42
                }
            },
            "117": {
                "start": {
                    "line": 635,
                    "column": 8
                },
                "end": {
                    "line": 646,
                    "column": 10
                }
            },
            "118": {
                "start": {
                    "line": 636,
                    "column": 12
                },
                "end": {
                    "line": 638,
                    "column": 13
                }
            },
            "119": {
                "start": {
                    "line": 637,
                    "column": 16
                },
                "end": {
                    "line": 637,
                    "column": 30
                }
            },
            "120": {
                "start": {
                    "line": 640,
                    "column": 12
                },
                "end": {
                    "line": 643,
                    "column": 13
                }
            },
            "121": {
                "start": {
                    "line": 642,
                    "column": 16
                },
                "end": {
                    "line": 642,
                    "column": 41
                }
            },
            "122": {
                "start": {
                    "line": 645,
                    "column": 12
                },
                "end": {
                    "line": 645,
                    "column": 25
                }
            },
            "123": {
                "start": {
                    "line": 648,
                    "column": 8
                },
                "end": {
                    "line": 655,
                    "column": 9
                }
            },
            "124": {
                "start": {
                    "line": 649,
                    "column": 12
                },
                "end": {
                    "line": 649,
                    "column": 61
                }
            },
            "125": {
                "start": {
                    "line": 650,
                    "column": 12
                },
                "end": {
                    "line": 651,
                    "column": 44
                }
            },
            "126": {
                "start": {
                    "line": 650,
                    "column": 56
                },
                "end": {
                    "line": 650,
                    "column": 67
                }
            },
            "127": {
                "start": {
                    "line": 653,
                    "column": 12
                },
                "end": {
                    "line": 653,
                    "column": 49
                }
            },
            "128": {
                "start": {
                    "line": 654,
                    "column": 12
                },
                "end": {
                    "line": 654,
                    "column": 55
                }
            },
            "129": {
                "start": {
                    "line": 669,
                    "column": 8
                },
                "end": {
                    "line": 669,
                    "column": 27
                }
            },
            "130": {
                "start": {
                    "line": 671,
                    "column": 8
                },
                "end": {
                    "line": 673,
                    "column": 9
                }
            },
            "131": {
                "start": {
                    "line": 672,
                    "column": 12
                },
                "end": {
                    "line": 672,
                    "column": 31
                }
            },
            "132": {
                "start": {
                    "line": 675,
                    "column": 8
                },
                "end": {
                    "line": 675,
                    "column": 52
                }
            },
            "133": {
                "start": {
                    "line": 677,
                    "column": 8
                },
                "end": {
                    "line": 680,
                    "column": 9
                }
            },
            "134": {
                "start": {
                    "line": 679,
                    "column": 12
                },
                "end": {
                    "line": 679,
                    "column": 47
                }
            },
            "135": {
                "start": {
                    "line": 682,
                    "column": 8
                },
                "end": {
                    "line": 682,
                    "column": 29
                }
            },
            "136": {
                "start": {
                    "line": 697,
                    "column": 8
                },
                "end": {
                    "line": 698,
                    "column": 25
                }
            },
            "137": {
                "start": {
                    "line": 700,
                    "column": 8
                },
                "end": {
                    "line": 707,
                    "column": 9
                }
            },
            "138": {
                "start": {
                    "line": 705,
                    "column": 12
                },
                "end": {
                    "line": 705,
                    "column": 37
                }
            },
            "139": {
                "start": {
                    "line": 706,
                    "column": 12
                },
                "end": {
                    "line": 706,
                    "column": 26
                }
            },
            "140": {
                "start": {
                    "line": 710,
                    "column": 8
                },
                "end": {
                    "line": 714,
                    "column": 9
                }
            },
            "141": {
                "start": {
                    "line": 711,
                    "column": 12
                },
                "end": {
                    "line": 711,
                    "column": 37
                }
            },
            "142": {
                "start": {
                    "line": 712,
                    "column": 12
                },
                "end": {
                    "line": 713,
                    "column": 70
                }
            },
            "143": {
                "start": {
                    "line": 716,
                    "column": 8
                },
                "end": {
                    "line": 716,
                    "column": 106
                }
            },
            "144": {
                "start": {
                    "line": 717,
                    "column": 8
                },
                "end": {
                    "line": 717,
                    "column": 29
                }
            },
            "145": {
                "start": {
                    "line": 729,
                    "column": 8
                },
                "end": {
                    "line": 732,
                    "column": 11
                }
            },
            "146": {
                "start": {
                    "line": 742,
                    "column": 8
                },
                "end": {
                    "line": 742,
                    "column": 45
                }
            },
            "147": {
                "start": {
                    "line": 744,
                    "column": 8
                },
                "end": {
                    "line": 747,
                    "column": 9
                }
            },
            "148": {
                "start": {
                    "line": 745,
                    "column": 12
                },
                "end": {
                    "line": 746,
                    "column": 63
                }
            },
            "149": {
                "start": {
                    "line": 761,
                    "column": 8
                },
                "end": {
                    "line": 764,
                    "column": 20
                }
            },
            "150": {
                "start": {
                    "line": 766,
                    "column": 8
                },
                "end": {
                    "line": 766,
                    "column": 39
                }
            },
            "151": {
                "start": {
                    "line": 768,
                    "column": 8
                },
                "end": {
                    "line": 779,
                    "column": 9
                }
            },
            "152": {
                "start": {
                    "line": 769,
                    "column": 12
                },
                "end": {
                    "line": 769,
                    "column": 38
                }
            },
            "153": {
                "start": {
                    "line": 770,
                    "column": 12
                },
                "end": {
                    "line": 770,
                    "column": 79
                }
            },
            "154": {
                "start": {
                    "line": 771,
                    "column": 12
                },
                "end": {
                    "line": 771,
                    "column": 41
                }
            },
            "155": {
                "start": {
                    "line": 773,
                    "column": 12
                },
                "end": {
                    "line": 776,
                    "column": 13
                }
            },
            "156": {
                "start": {
                    "line": 774,
                    "column": 16
                },
                "end": {
                    "line": 774,
                    "column": 42
                }
            },
            "157": {
                "start": {
                    "line": 775,
                    "column": 16
                },
                "end": {
                    "line": 775,
                    "column": 57
                }
            },
            "158": {
                "start": {
                    "line": 778,
                    "column": 12
                },
                "end": {
                    "line": 778,
                    "column": 48
                }
            },
            "159": {
                "start": {
                    "line": 781,
                    "column": 8
                },
                "end": {
                    "line": 781,
                    "column": 32
                }
            },
            "160": {
                "start": {
                    "line": 795,
                    "column": 8
                },
                "end": {
                    "line": 797,
                    "column": 9
                }
            },
            "161": {
                "start": {
                    "line": 796,
                    "column": 12
                },
                "end": {
                    "line": 796,
                    "column": 48
                }
            },
            "162": {
                "start": {
                    "line": 808,
                    "column": 8
                },
                "end": {
                    "line": 811,
                    "column": 47
                }
            },
            "163": {
                "start": {
                    "line": 814,
                    "column": 8
                },
                "end": {
                    "line": 816,
                    "column": 9
                }
            },
            "164": {
                "start": {
                    "line": 815,
                    "column": 12
                },
                "end": {
                    "line": 815,
                    "column": 47
                }
            },
            "165": {
                "start": {
                    "line": 819,
                    "column": 8
                },
                "end": {
                    "line": 819,
                    "column": 52
                }
            },
            "166": {
                "start": {
                    "line": 820,
                    "column": 8
                },
                "end": {
                    "line": 820,
                    "column": 56
                }
            },
            "167": {
                "start": {
                    "line": 822,
                    "column": 8
                },
                "end": {
                    "line": 853,
                    "column": 9
                }
            },
            "168": {
                "start": {
                    "line": 824,
                    "column": 12
                },
                "end": {
                    "line": 845,
                    "column": 13
                }
            },
            "169": {
                "start": {
                    "line": 825,
                    "column": 16
                },
                "end": {
                    "line": 825,
                    "column": 47
                }
            },
            "170": {
                "start": {
                    "line": 827,
                    "column": 16
                },
                "end": {
                    "line": 833,
                    "column": 18
                }
            },
            "171": {
                "start": {
                    "line": 828,
                    "column": 20
                },
                "end": {
                    "line": 832,
                    "column": 23
                }
            },
            "172": {
                "start": {
                    "line": 835,
                    "column": 16
                },
                "end": {
                    "line": 840,
                    "column": 17
                }
            },
            "173": {
                "start": {
                    "line": 836,
                    "column": 20
                },
                "end": {
                    "line": 836,
                    "column": 46
                }
            },
            "174": {
                "start": {
                    "line": 837,
                    "column": 20
                },
                "end": {
                    "line": 837,
                    "column": 58
                }
            },
            "175": {
                "start": {
                    "line": 839,
                    "column": 20
                },
                "end": {
                    "line": 839,
                    "column": 27
                }
            },
            "176": {
                "start": {
                    "line": 844,
                    "column": 16
                },
                "end": {
                    "line": 844,
                    "column": 40
                }
            },
            "177": {
                "start": {
                    "line": 847,
                    "column": 12
                },
                "end": {
                    "line": 847,
                    "column": 38
                }
            },
            "178": {
                "start": {
                    "line": 849,
                    "column": 12
                },
                "end": {
                    "line": 852,
                    "column": 15
                }
            },
            "179": {
                "start": {
                    "line": 864,
                    "column": 8
                },
                "end": {
                    "line": 867,
                    "column": 18
                }
            },
            "180": {
                "start": {
                    "line": 871,
                    "column": 8
                },
                "end": {
                    "line": 891,
                    "column": 9
                }
            },
            "181": {
                "start": {
                    "line": 872,
                    "column": 12
                },
                "end": {
                    "line": 872,
                    "column": 42
                }
            },
            "182": {
                "start": {
                    "line": 873,
                    "column": 12
                },
                "end": {
                    "line": 873,
                    "column": 56
                }
            },
            "183": {
                "start": {
                    "line": 875,
                    "column": 12
                },
                "end": {
                    "line": 886,
                    "column": 13
                }
            },
            "184": {
                "start": {
                    "line": 876,
                    "column": 16
                },
                "end": {
                    "line": 881,
                    "column": 17
                }
            },
            "185": {
                "start": {
                    "line": 880,
                    "column": 20
                },
                "end": {
                    "line": 880,
                    "column": 59
                }
            },
            "186": {
                "start": {
                    "line": 885,
                    "column": 16
                },
                "end": {
                    "line": 885,
                    "column": 48
                }
            },
            "187": {
                "start": {
                    "line": 888,
                    "column": 12
                },
                "end": {
                    "line": 890,
                    "column": 13
                }
            },
            "188": {
                "start": {
                    "line": 889,
                    "column": 16
                },
                "end": {
                    "line": 889,
                    "column": 40
                }
            },
            "189": {
                "start": {
                    "line": 903,
                    "column": 8
                },
                "end": {
                    "line": 903,
                    "column": 30
                }
            },
            "190": {
                "start": {
                    "line": 907,
                    "column": 8
                },
                "end": {
                    "line": 909,
                    "column": 9
                }
            },
            "191": {
                "start": {
                    "line": 908,
                    "column": 12
                },
                "end": {
                    "line": 908,
                    "column": 68
                }
            },
            "192": {
                "start": {
                    "line": 921,
                    "column": 8
                },
                "end": {
                    "line": 923,
                    "column": 9
                }
            },
            "193": {
                "start": {
                    "line": 922,
                    "column": 12
                },
                "end": {
                    "line": 922,
                    "column": 65
                }
            },
            "194": {
                "start": {
                    "line": 936,
                    "column": 8
                },
                "end": {
                    "line": 936,
                    "column": 31
                }
            },
            "195": {
                "start": {
                    "line": 937,
                    "column": 8
                },
                "end": {
                    "line": 937,
                    "column": 31
                }
            },
            "196": {
                "start": {
                    "line": 949,
                    "column": 8
                },
                "end": {
                    "line": 949,
                    "column": 34
                }
            },
            "197": {
                "start": {
                    "line": 961,
                    "column": 8
                },
                "end": {
                    "line": 961,
                    "column": 39
                }
            },
            "198": {
                "start": {
                    "line": 965,
                    "column": 0
                },
                "end": {
                    "line": 1510,
                    "column": 2
                }
            },
            "199": {
                "start": {
                    "line": 1514,
                    "column": 0
                },
                "end": {
                    "line": 1517,
                    "column": 2
                }
            },
            "200": {
                "start": {
                    "line": 1527,
                    "column": 0
                },
                "end": {
                    "line": 1531,
                    "column": 2
                }
            },
            "201": {
                "start": {
                    "line": 1533,
                    "column": 0
                },
                "end": {
                    "line": 1533,
                    "column": 64
                }
            },
            "202": {
                "start": {
                    "line": 1535,
                    "column": 0
                },
                "end": {
                    "line": 1535,
                    "column": 38
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 169,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 169,
                            "column": 8
                        },
                        "end": {
                            "line": 169,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 169,
                            "column": 30
                        },
                        "end": {
                            "line": 169,
                            "column": 57
                        }
                    }
                ]
            },
            "2": {
                "line": 187,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 187,
                            "column": 8
                        },
                        "end": {
                            "line": 187,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 187,
                            "column": 24
                        },
                        "end": {
                            "line": 187,
                            "column": 40
                        }
                    }
                ]
            },
            "3": {
                "line": 213,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 213,
                            "column": 8
                        },
                        "end": {
                            "line": 213,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 213,
                            "column": 8
                        },
                        "end": {
                            "line": 213,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 213,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 213,
                            "column": 12
                        },
                        "end": {
                            "line": 213,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 213,
                            "column": 21
                        },
                        "end": {
                            "line": 213,
                            "column": 33
                        }
                    }
                ]
            },
            "5": {
                "line": 216,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 216,
                            "column": 20
                        },
                        "end": {
                            "line": 216,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 216,
                            "column": 39
                        },
                        "end": {
                            "line": 216,
                            "column": 41
                        }
                    }
                ]
            },
            "6": {
                "line": 219,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 219,
                            "column": 8
                        },
                        "end": {
                            "line": 219,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 219,
                            "column": 8
                        },
                        "end": {
                            "line": 219,
                            "column": 8
                        }
                    }
                ]
            },
            "7": {
                "line": 220,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 220,
                            "column": 12
                        },
                        "end": {
                            "line": 220,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 220,
                            "column": 12
                        },
                        "end": {
                            "line": 220,
                            "column": 12
                        }
                    }
                ]
            },
            "8": {
                "line": 224,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 225,
                            "column": 16
                        },
                        "end": {
                            "line": 225,
                            "column": 49
                        }
                    },
                    {
                        "start": {
                            "line": 225,
                            "column": 52
                        },
                        "end": {
                            "line": 225,
                            "column": 57
                        }
                    }
                ]
            },
            "9": {
                "line": 251,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 251,
                            "column": 25
                        },
                        "end": {
                            "line": 251,
                            "column": 34
                        }
                    },
                    {
                        "start": {
                            "line": 251,
                            "column": 38
                        },
                        "end": {
                            "line": 251,
                            "column": 58
                        }
                    }
                ]
            },
            "10": {
                "line": 255,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 255,
                            "column": 8
                        },
                        "end": {
                            "line": 255,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 255,
                            "column": 8
                        },
                        "end": {
                            "line": 255,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 260,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 260,
                            "column": 8
                        },
                        "end": {
                            "line": 260,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 260,
                            "column": 8
                        },
                        "end": {
                            "line": 260,
                            "column": 8
                        }
                    }
                ]
            },
            "12": {
                "line": 332,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 332,
                            "column": 42
                        },
                        "end": {
                            "line": 332,
                            "column": 49
                        }
                    },
                    {
                        "start": {
                            "line": 332,
                            "column": 53
                        },
                        "end": {
                            "line": 332,
                            "column": 55
                        }
                    }
                ]
            },
            "13": {
                "line": 337,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 337,
                            "column": 16
                        },
                        "end": {
                            "line": 337,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 337,
                            "column": 16
                        },
                        "end": {
                            "line": 337,
                            "column": 16
                        }
                    }
                ]
            },
            "14": {
                "line": 363,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 363,
                            "column": 50
                        },
                        "end": {
                            "line": 363,
                            "column": 63
                        }
                    },
                    {
                        "start": {
                            "line": 363,
                            "column": 66
                        },
                        "end": {
                            "line": 363,
                            "column": 68
                        }
                    }
                ]
            },
            "15": {
                "line": 378,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 378,
                            "column": 15
                        },
                        "end": {
                            "line": 378,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 378,
                            "column": 33
                        },
                        "end": {
                            "line": 378,
                            "column": 50
                        }
                    }
                ]
            },
            "16": {
                "line": 395,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 395,
                            "column": 8
                        },
                        "end": {
                            "line": 395,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 395,
                            "column": 8
                        },
                        "end": {
                            "line": 395,
                            "column": 8
                        }
                    }
                ]
            },
            "17": {
                "line": 399,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 399,
                            "column": 43
                        },
                        "end": {
                            "line": 399,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 399,
                            "column": 50
                        },
                        "end": {
                            "line": 399,
                            "column": 57
                        }
                    }
                ]
            },
            "18": {
                "line": 425,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 425,
                            "column": 26
                        },
                        "end": {
                            "line": 425,
                            "column": 34
                        }
                    },
                    {
                        "start": {
                            "line": 425,
                            "column": 38
                        },
                        "end": {
                            "line": 425,
                            "column": 54
                        }
                    }
                ]
            },
            "19": {
                "line": 439,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 439,
                            "column": 8
                        },
                        "end": {
                            "line": 439,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 439,
                            "column": 8
                        },
                        "end": {
                            "line": 439,
                            "column": 8
                        }
                    }
                ]
            },
            "20": {
                "line": 439,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 439,
                            "column": 12
                        },
                        "end": {
                            "line": 439,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 439,
                            "column": 26
                        },
                        "end": {
                            "line": 439,
                            "column": 37
                        }
                    }
                ]
            },
            "21": {
                "line": 443,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 443,
                            "column": 8
                        },
                        "end": {
                            "line": 443,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 443,
                            "column": 8
                        },
                        "end": {
                            "line": 443,
                            "column": 8
                        }
                    }
                ]
            },
            "22": {
                "line": 443,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 443,
                            "column": 12
                        },
                        "end": {
                            "line": 443,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 443,
                            "column": 26
                        },
                        "end": {
                            "line": 443,
                            "column": 43
                        }
                    }
                ]
            },
            "23": {
                "line": 454,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 455,
                            "column": 24
                        },
                        "end": {
                            "line": 455,
                            "column": 54
                        }
                    },
                    {
                        "start": {
                            "line": 456,
                            "column": 24
                        },
                        "end": {
                            "line": 456,
                            "column": 41
                        }
                    }
                ]
            },
            "24": {
                "line": 471,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 471,
                            "column": 16
                        },
                        "end": {
                            "line": 471,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 471,
                            "column": 16
                        },
                        "end": {
                            "line": 471,
                            "column": 16
                        }
                    }
                ]
            },
            "25": {
                "line": 475,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 475,
                            "column": 16
                        },
                        "end": {
                            "line": 475,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 475,
                            "column": 16
                        },
                        "end": {
                            "line": 475,
                            "column": 16
                        }
                    }
                ]
            },
            "26": {
                "line": 480,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 480,
                            "column": 12
                        },
                        "end": {
                            "line": 480,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 480,
                            "column": 12
                        },
                        "end": {
                            "line": 480,
                            "column": 12
                        }
                    }
                ]
            },
            "27": {
                "line": 487,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 487,
                            "column": 16
                        },
                        "end": {
                            "line": 487,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 487,
                            "column": 16
                        },
                        "end": {
                            "line": 487,
                            "column": 16
                        }
                    }
                ]
            },
            "28": {
                "line": 487,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 487,
                            "column": 20
                        },
                        "end": {
                            "line": 487,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 487,
                            "column": 34
                        },
                        "end": {
                            "line": 487,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 488,
                            "column": 24
                        },
                        "end": {
                            "line": 488,
                            "column": 51
                        }
                    }
                ]
            },
            "29": {
                "line": 496,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 496,
                            "column": 16
                        },
                        "end": {
                            "line": 496,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 496,
                            "column": 16
                        },
                        "end": {
                            "line": 496,
                            "column": 16
                        }
                    }
                ]
            },
            "30": {
                "line": 500,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 500,
                            "column": 20
                        },
                        "end": {
                            "line": 500,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 500,
                            "column": 20
                        },
                        "end": {
                            "line": 500,
                            "column": 20
                        }
                    }
                ]
            },
            "31": {
                "line": 516,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 516,
                            "column": 16
                        },
                        "end": {
                            "line": 516,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 516,
                            "column": 16
                        },
                        "end": {
                            "line": 516,
                            "column": 16
                        }
                    }
                ]
            },
            "32": {
                "line": 519,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 519,
                            "column": 20
                        },
                        "end": {
                            "line": 519,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 519,
                            "column": 20
                        },
                        "end": {
                            "line": 519,
                            "column": 20
                        }
                    }
                ]
            },
            "33": {
                "line": 549,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 549,
                            "column": 8
                        },
                        "end": {
                            "line": 549,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 549,
                            "column": 8
                        },
                        "end": {
                            "line": 549,
                            "column": 8
                        }
                    }
                ]
            },
            "34": {
                "line": 570,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 570,
                            "column": 30
                        },
                        "end": {
                            "line": 570,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 570,
                            "column": 35
                        },
                        "end": {
                            "line": 570,
                            "column": 39
                        }
                    }
                ]
            },
            "35": {
                "line": 582,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 582,
                            "column": 8
                        },
                        "end": {
                            "line": 582,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 582,
                            "column": 8
                        },
                        "end": {
                            "line": 582,
                            "column": 8
                        }
                    }
                ]
            },
            "36": {
                "line": 591,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 591,
                            "column": 19
                        },
                        "end": {
                            "line": 591,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 591,
                            "column": 29
                        },
                        "end": {
                            "line": 591,
                            "column": 66
                        }
                    }
                ]
            },
            "37": {
                "line": 604,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 604,
                            "column": 8
                        },
                        "end": {
                            "line": 604,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 604,
                            "column": 8
                        },
                        "end": {
                            "line": 604,
                            "column": 8
                        }
                    }
                ]
            },
            "38": {
                "line": 629,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 629,
                            "column": 8
                        },
                        "end": {
                            "line": 629,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 629,
                            "column": 8
                        },
                        "end": {
                            "line": 629,
                            "column": 8
                        }
                    }
                ]
            },
            "39": {
                "line": 636,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 636,
                            "column": 12
                        },
                        "end": {
                            "line": 636,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 636,
                            "column": 12
                        },
                        "end": {
                            "line": 636,
                            "column": 12
                        }
                    }
                ]
            },
            "40": {
                "line": 640,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 640,
                            "column": 12
                        },
                        "end": {
                            "line": 640,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 640,
                            "column": 12
                        },
                        "end": {
                            "line": 640,
                            "column": 12
                        }
                    }
                ]
            },
            "41": {
                "line": 640,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 640,
                            "column": 16
                        },
                        "end": {
                            "line": 640,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 640,
                            "column": 36
                        },
                        "end": {
                            "line": 640,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 641,
                            "column": 20
                        },
                        "end": {
                            "line": 641,
                            "column": 49
                        }
                    }
                ]
            },
            "42": {
                "line": 648,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 648,
                            "column": 8
                        },
                        "end": {
                            "line": 648,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 648,
                            "column": 8
                        },
                        "end": {
                            "line": 648,
                            "column": 8
                        }
                    }
                ]
            },
            "43": {
                "line": 650,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 651,
                            "column": 20
                        },
                        "end": {
                            "line": 651,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 651,
                            "column": 30
                        },
                        "end": {
                            "line": 651,
                            "column": 43
                        }
                    }
                ]
            },
            "44": {
                "line": 654,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 654,
                            "column": 29
                        },
                        "end": {
                            "line": 654,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 654,
                            "column": 41
                        },
                        "end": {
                            "line": 654,
                            "column": 54
                        }
                    }
                ]
            },
            "45": {
                "line": 671,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 671,
                            "column": 8
                        },
                        "end": {
                            "line": 671,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 671,
                            "column": 8
                        },
                        "end": {
                            "line": 671,
                            "column": 8
                        }
                    }
                ]
            },
            "46": {
                "line": 677,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 677,
                            "column": 8
                        },
                        "end": {
                            "line": 677,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 677,
                            "column": 8
                        },
                        "end": {
                            "line": 677,
                            "column": 8
                        }
                    }
                ]
            },
            "47": {
                "line": 677,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 677,
                            "column": 12
                        },
                        "end": {
                            "line": 677,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 677,
                            "column": 37
                        },
                        "end": {
                            "line": 677,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 678,
                            "column": 16
                        },
                        "end": {
                            "line": 678,
                            "column": 55
                        }
                    }
                ]
            },
            "48": {
                "line": 697,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 697,
                            "column": 25
                        },
                        "end": {
                            "line": 697,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 697,
                            "column": 51
                        },
                        "end": {
                            "line": 697,
                            "column": 68
                        }
                    }
                ]
            },
            "49": {
                "line": 700,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 700,
                            "column": 8
                        },
                        "end": {
                            "line": 700,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 700,
                            "column": 8
                        },
                        "end": {
                            "line": 700,
                            "column": 8
                        }
                    }
                ]
            },
            "50": {
                "line": 700,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 700,
                            "column": 13
                        },
                        "end": {
                            "line": 700,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 700,
                            "column": 23
                        },
                        "end": {
                            "line": 700,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 701,
                            "column": 19
                        },
                        "end": {
                            "line": 701,
                            "column": 34
                        }
                    },
                    {
                        "start": {
                            "line": 702,
                            "column": 19
                        },
                        "end": {
                            "line": 702,
                            "column": 46
                        }
                    }
                ]
            },
            "51": {
                "line": 710,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 710,
                            "column": 8
                        },
                        "end": {
                            "line": 710,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 710,
                            "column": 8
                        },
                        "end": {
                            "line": 710,
                            "column": 8
                        }
                    }
                ]
            },
            "52": {
                "line": 712,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 713,
                            "column": 20
                        },
                        "end": {
                            "line": 713,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 713,
                            "column": 49
                        },
                        "end": {
                            "line": 713,
                            "column": 69
                        }
                    }
                ]
            },
            "53": {
                "line": 744,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 744,
                            "column": 8
                        },
                        "end": {
                            "line": 744,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 744,
                            "column": 8
                        },
                        "end": {
                            "line": 744,
                            "column": 8
                        }
                    }
                ]
            },
            "54": {
                "line": 746,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 746,
                            "column": 49
                        },
                        "end": {
                            "line": 746,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 746,
                            "column": 56
                        },
                        "end": {
                            "line": 746,
                            "column": 61
                        }
                    }
                ]
            },
            "55": {
                "line": 768,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 768,
                            "column": 8
                        },
                        "end": {
                            "line": 768,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 768,
                            "column": 8
                        },
                        "end": {
                            "line": 768,
                            "column": 8
                        }
                    }
                ]
            },
            "56": {
                "line": 773,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 773,
                            "column": 12
                        },
                        "end": {
                            "line": 773,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 773,
                            "column": 12
                        },
                        "end": {
                            "line": 773,
                            "column": 12
                        }
                    }
                ]
            },
            "57": {
                "line": 795,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 795,
                            "column": 8
                        },
                        "end": {
                            "line": 795,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 795,
                            "column": 8
                        },
                        "end": {
                            "line": 795,
                            "column": 8
                        }
                    }
                ]
            },
            "58": {
                "line": 814,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 814,
                            "column": 8
                        },
                        "end": {
                            "line": 814,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 814,
                            "column": 8
                        },
                        "end": {
                            "line": 814,
                            "column": 8
                        }
                    }
                ]
            },
            "59": {
                "line": 820,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 820,
                            "column": 25
                        },
                        "end": {
                            "line": 820,
                            "column": 49
                        }
                    },
                    {
                        "start": {
                            "line": 820,
                            "column": 53
                        },
                        "end": {
                            "line": 820,
                            "column": 55
                        }
                    }
                ]
            },
            "60": {
                "line": 822,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 822,
                            "column": 8
                        },
                        "end": {
                            "line": 822,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 822,
                            "column": 8
                        },
                        "end": {
                            "line": 822,
                            "column": 8
                        }
                    }
                ]
            },
            "61": {
                "line": 822,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 822,
                            "column": 12
                        },
                        "end": {
                            "line": 822,
                            "column": 31
                        }
                    },
                    {
                        "start": {
                            "line": 822,
                            "column": 35
                        },
                        "end": {
                            "line": 822,
                            "column": 65
                        }
                    }
                ]
            },
            "62": {
                "line": 824,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 824,
                            "column": 12
                        },
                        "end": {
                            "line": 824,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 824,
                            "column": 12
                        },
                        "end": {
                            "line": 824,
                            "column": 12
                        }
                    }
                ]
            },
            "63": {
                "line": 835,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 835,
                            "column": 16
                        },
                        "end": {
                            "line": 835,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 835,
                            "column": 16
                        },
                        "end": {
                            "line": 835,
                            "column": 16
                        }
                    }
                ]
            },
            "64": {
                "line": 850,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 850,
                            "column": 37
                        },
                        "end": {
                            "line": 850,
                            "column": 64
                        }
                    },
                    {
                        "start": {
                            "line": 850,
                            "column": 67
                        },
                        "end": {
                            "line": 850,
                            "column": 71
                        }
                    }
                ]
            },
            "65": {
                "line": 871,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 871,
                            "column": 8
                        },
                        "end": {
                            "line": 871,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 871,
                            "column": 8
                        },
                        "end": {
                            "line": 871,
                            "column": 8
                        }
                    }
                ]
            },
            "66": {
                "line": 871,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 871,
                            "column": 12
                        },
                        "end": {
                            "line": 871,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 871,
                            "column": 21
                        },
                        "end": {
                            "line": 871,
                            "column": 56
                        }
                    }
                ]
            },
            "67": {
                "line": 875,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 875,
                            "column": 12
                        },
                        "end": {
                            "line": 875,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 875,
                            "column": 12
                        },
                        "end": {
                            "line": 875,
                            "column": 12
                        }
                    }
                ]
            },
            "68": {
                "line": 876,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 876,
                            "column": 24
                        },
                        "end": {
                            "line": 876,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 877,
                            "column": 25
                        },
                        "end": {
                            "line": 877,
                            "column": 64
                        }
                    },
                    {
                        "start": {
                            "line": 878,
                            "column": 24
                        },
                        "end": {
                            "line": 878,
                            "column": 62
                        }
                    }
                ]
            },
            "69": {
                "line": 888,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 888,
                            "column": 12
                        },
                        "end": {
                            "line": 888,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 888,
                            "column": 12
                        },
                        "end": {
                            "line": 888,
                            "column": 12
                        }
                    }
                ]
            },
            "70": {
                "line": 907,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 907,
                            "column": 8
                        },
                        "end": {
                            "line": 907,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 907,
                            "column": 8
                        },
                        "end": {
                            "line": 907,
                            "column": 8
                        }
                    }
                ]
            },
            "71": {
                "line": 921,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 921,
                            "column": 8
                        },
                        "end": {
                            "line": 921,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 921,
                            "column": 8
                        },
                        "end": {
                            "line": 921,
                            "column": 8
                        }
                    }
                ]
            },
            "72": {
                "line": 921,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 921,
                            "column": 23
                        },
                        "end": {
                            "line": 921,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 921,
                            "column": 42
                        },
                        "end": {
                            "line": 921,
                            "column": 44
                        }
                    }
                ]
            },
            "73": {
                "line": 922,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 922,
                            "column": 32
                        },
                        "end": {
                            "line": 922,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 922,
                            "column": 41
                        },
                        "end": {
                            "line": 922,
                            "column": 43
                        }
                    }
                ]
            },
            "74": {
                "line": 1533,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1533,
                            "column": 27
                        },
                        "end": {
                            "line": 1533,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 1533,
                            "column": 39
                        },
                        "end": {
                            "line": 1533,
                            "column": 54
                        }
                    },
                    {
                        "start": {
                            "line": 1533,
                            "column": 59
                        },
                        "end": {
                            "line": 1533,
                            "column": 63
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('autocomplete-base', function (Y, NAME) {",
            "",
            "/**",
            "Provides automatic input completion or suggestions for text input fields and",
            "textareas.",
            "",
            "@module autocomplete",
            "@main autocomplete",
            "@since 3.3.0",
            "**/",
            "",
            "/**",
            "`Y.Base` extension that provides core autocomplete logic (but no UI",
            "implementation) for a text input field or textarea. Must be mixed into a",
            "`Y.Base`-derived class to be useful.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-base",
            "**/",
            "",
            "/**",
            "Extension that provides core autocomplete logic (but no UI implementation) for a",
            "text input field or textarea.",
            "",
            "The `AutoCompleteBase` class provides events and attributes that abstract away",
            "core autocomplete logic and configuration, but does not provide a widget",
            "implementation or suggestion UI. For a prepackaged autocomplete widget, see",
            "`AutoCompleteList`.",
            "",
            "This extension cannot be instantiated directly, since it doesn't provide an",
            "actual implementation. It's intended to be mixed into a `Y.Base`-based class or",
            "widget.",
            "",
            "`Y.Widget`-based example:",
            "",
            "    YUI().use('autocomplete-base', 'widget', function (Y) {",
            "        var MyAC = Y.Base.create('myAC', Y.Widget, [Y.AutoCompleteBase], {",
            "            // Custom prototype methods and properties.",
            "        }, {",
            "            // Custom static methods and properties.",
            "        });",
            "",
            "        // Custom implementation code.",
            "    });",
            "",
            "`Y.Base`-based example:",
            "",
            "    YUI().use('autocomplete-base', function (Y) {",
            "        var MyAC = Y.Base.create('myAC', Y.Base, [Y.AutoCompleteBase], {",
            "            initializer: function () {",
            "                this._bindUIACBase();",
            "                this._syncUIACBase();",
            "            },",
            "",
            "            // Custom prototype methods and properties.",
            "        }, {",
            "            // Custom static methods and properties.",
            "        });",
            "",
            "        // Custom implementation code.",
            "    });",
            "",
            "@class AutoCompleteBase",
            "**/",
            "",
            "var Escape  = Y.Escape,",
            "    Lang    = Y.Lang,",
            "    YArray  = Y.Array,",
            "    YObject = Y.Object,",
            "",
            "    isFunction = Lang.isFunction,",
            "    isString   = Lang.isString,",
            "    trim       = Lang.trim,",
            "",
            "    INVALID_VALUE = Y.Attribute.INVALID_VALUE,",
            "",
            "    _FUNCTION_VALIDATOR = '_functionValidator',",
            "    _SOURCE_SUCCESS     = '_sourceSuccess',",
            "",
            "    ALLOW_BROWSER_AC    = 'allowBrowserAutocomplete',",
            "    INPUT_NODE          = 'inputNode',",
            "    QUERY               = 'query',",
            "    QUERY_DELIMITER     = 'queryDelimiter',",
            "    REQUEST_TEMPLATE    = 'requestTemplate',",
            "    RESULTS             = 'results',",
            "    RESULT_LIST_LOCATOR = 'resultListLocator',",
            "    VALUE               = 'value',",
            "    VALUE_CHANGE        = 'valueChange',",
            "",
            "    EVT_CLEAR   = 'clear',",
            "    EVT_QUERY   = QUERY,",
            "    EVT_RESULTS = RESULTS;",
            "",
            "function AutoCompleteBase() {}",
            "",
            "AutoCompleteBase.prototype = {",
            "    // -- Lifecycle Methods ----------------------------------------------------",
            "    initializer: function () {",
            "        // AOP bindings.",
            "        Y.before(this._bindUIACBase, this, 'bindUI');",
            "        Y.before(this._syncUIACBase, this, 'syncUI');",
            "",
            "        // -- Public Events ----------------------------------------------------",
            "",
            "        /**",
            "        Fires after the query has been completely cleared or no longer meets the",
            "        minimum query length requirement.",
            "",
            "        @event clear",
            "        @param {String} prevVal Value of the query before it was cleared.",
            "        @param {String} src Source of the event.",
            "        @preventable _defClearFn",
            "        **/",
            "        this.publish(EVT_CLEAR, {",
            "            defaultFn: this._defClearFn",
            "        });",
            "",
            "        /**",
            "        Fires when the contents of the input field have changed and the input",
            "        value meets the criteria necessary to generate an autocomplete query.",
            "",
            "        @event query",
            "        @param {String} inputValue Full contents of the text input field or",
            "            textarea that generated the query.",
            "        @param {String} query AutoComplete query. This is the string that will",
            "            be used to request completion results. It may or may not be the same",
            "            as `inputValue`.",
            "        @param {String} src Source of the event.",
            "        @preventable _defQueryFn",
            "        **/",
            "        this.publish(EVT_QUERY, {",
            "            defaultFn: this._defQueryFn",
            "        });",
            "",
            "        /**",
            "        Fires after query results are received from the source. If no source has",
            "        been set, this event will not fire.",
            "",
            "        @event results",
            "        @param {Array|Object} data Raw, unfiltered result data (if available).",
            "        @param {String} query Query that generated these results.",
            "        @param {Object[]} results Array of filtered, formatted, and highlighted",
            "            results. Each item in the array is an object with the following",
            "            properties:",
            "",
            "            @param {Node|HTMLElement|String} results.display Formatted result",
            "                HTML suitable for display to the user. If no custom formatter is",
            "                set, this will be an HTML-escaped version of the string in the",
            "                `text` property.",
            "            @param {String} [results.highlighted] Highlighted (but not",
            "                formatted) result text. This property will only be set if a",
            "                highlighter is in use.",
            "            @param {Any} results.raw Raw, unformatted result in whatever form it",
            "                was provided by the source.",
            "            @param {String} results.text Plain text version of the result,",
            "                suitable for being inserted into the value of a text input field",
            "                or textarea when the result is selected by a user. This value is",
            "                not HTML-escaped and should not be inserted into the page using",
            "                `innerHTML` or `Node#setContent()`.",
            "",
            "        @preventable _defResultsFn",
            "        **/",
            "        this.publish(EVT_RESULTS, {",
            "            defaultFn: this._defResultsFn",
            "        });",
            "    },",
            "",
            "    destructor: function () {",
            "        this._acBaseEvents && this._acBaseEvents.detach();",
            "",
            "        delete this._acBaseEvents;",
            "        delete this._cache;",
            "        delete this._inputNode;",
            "        delete this._rawSource;",
            "    },",
            "",
            "    // -- Public Prototype Methods ---------------------------------------------",
            "",
            "    /**",
            "    Clears the result cache.",
            "",
            "    @method clearCache",
            "    @chainable",
            "    @since 3.5.0",
            "    **/",
            "    clearCache: function () {",
            "        this._cache && (this._cache = {});",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Sends a request to the configured source. If no source is configured, this",
            "    method won't do anything.",
            "",
            "    Usually there's no reason to call this method manually; it will be called",
            "    automatically when user input causes a `query` event to be fired. The only",
            "    time you'll need to call this method manually is if you want to force a",
            "    request to be sent when no user input has occurred.",
            "",
            "    @method sendRequest",
            "    @param {String} [query] Query to send. If specified, the `query` attribute",
            "        will be set to this query. If not specified, the current value of the",
            "        `query` attribute will be used.",
            "    @param {Function} [requestTemplate] Request template function. If not",
            "        specified, the current value of the `requestTemplate` attribute will be",
            "        used.",
            "    @chainable",
            "    **/",
            "    sendRequest: function (query, requestTemplate) {",
            "        var request,",
            "            source = this.get('source');",
            "",
            "        if (query || query === '') {",
            "            this._set(QUERY, query);",
            "        } else {",
            "            query = this.get(QUERY) || '';",
            "        }",
            "",
            "        if (source) {",
            "            if (!requestTemplate) {",
            "                requestTemplate = this.get(REQUEST_TEMPLATE);",
            "            }",
            "",
            "            request = requestTemplate ?",
            "                requestTemplate.call(this, query) : query;",
            "",
            "",
            "            source.sendRequest({",
            "                query  : query,",
            "                request: request,",
            "",
            "                callback: {",
            "                    success: Y.bind(this._onResponse, this, query)",
            "                }",
            "            });",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    // -- Protected Lifecycle Methods ------------------------------------------",
            "",
            "    /**",
            "    Attaches event listeners and behaviors.",
            "",
            "    @method _bindUIACBase",
            "    @protected",
            "    **/",
            "    _bindUIACBase: function () {",
            "        var inputNode  = this.get(INPUT_NODE),",
            "            tokenInput = inputNode && inputNode.tokenInput;",
            "",
            "        // If the inputNode has a node-tokeninput plugin attached, bind to the",
            "        // plugin's inputNode instead.",
            "        if (tokenInput) {",
            "            inputNode = tokenInput.get(INPUT_NODE);",
            "            this._set('tokenInput', tokenInput);",
            "        }",
            "",
            "        if (!inputNode) {",
            "            Y.error('No inputNode specified.');",
            "            return;",
            "        }",
            "",
            "        this._inputNode = inputNode;",
            "",
            "        this._acBaseEvents = new Y.EventHandle([",
            "            // This is the valueChange event on the inputNode, provided by the",
            "            // event-valuechange module, not our own valueChange.",
            "            inputNode.on(VALUE_CHANGE, this._onInputValueChange, this),",
            "            inputNode.on('blur', this._onInputBlur, this),",
            "",
            "            this.after(ALLOW_BROWSER_AC + 'Change', this._syncBrowserAutocomplete),",
            "            this.after('sourceTypeChange', this._afterSourceTypeChange),",
            "            this.after(VALUE_CHANGE, this._afterValueChange)",
            "        ]);",
            "    },",
            "",
            "    /**",
            "    Synchronizes the UI state of the `inputNode`.",
            "",
            "    @method _syncUIACBase",
            "    @protected",
            "    **/",
            "    _syncUIACBase: function () {",
            "        this._syncBrowserAutocomplete();",
            "        this.set(VALUE, this.get(INPUT_NODE).get(VALUE));",
            "    },",
            "",
            "    // -- Protected Prototype Methods ------------------------------------------",
            "",
            "    /**",
            "    Creates a DataSource-like object that simply returns the specified array as",
            "    a response. See the `source` attribute for more details.",
            "",
            "    @method _createArraySource",
            "    @param {Array} source",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    **/",
            "    _createArraySource: function (source) {",
            "        var that = this;",
            "",
            "        return {",
            "            type: 'array',",
            "            sendRequest: function (request) {",
            "                that[_SOURCE_SUCCESS](source.concat(), request);",
            "            }",
            "        };",
            "    },",
            "",
            "    /**",
            "    Creates a DataSource-like object that passes the query to a custom-defined",
            "    function, which is expected to call the provided callback with an array of",
            "    results. See the `source` attribute for more details.",
            "",
            "    @method _createFunctionSource",
            "    @param {Function} source Function that accepts a query and a callback as",
            "      parameters, and calls the callback with an array of results.",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    **/",
            "    _createFunctionSource: function (source) {",
            "        var that = this;",
            "",
            "        return {",
            "            type: 'function',",
            "            sendRequest: function (request) {",
            "                var value;",
            "",
            "                function afterResults(results) {",
            "                    that[_SOURCE_SUCCESS](results || [], request);",
            "                }",
            "",
            "                // Allow both synchronous and asynchronous functions. If we get",
            "                // a truthy return value, assume the function is synchronous.",
            "                if ((value = source(request.query, afterResults))) {",
            "                    afterResults(value);",
            "                }",
            "            }",
            "        };",
            "    },",
            "",
            "    /**",
            "    Creates a DataSource-like object that looks up queries as properties on the",
            "    specified object, and returns the found value (if any) as a response. See",
            "    the `source` attribute for more details.",
            "",
            "    @method _createObjectSource",
            "    @param {Object} source",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    **/",
            "    _createObjectSource: function (source) {",
            "        var that = this;",
            "",
            "        return {",
            "            type: 'object',",
            "            sendRequest: function (request) {",
            "                var query = request.query;",
            "",
            "                that[_SOURCE_SUCCESS](",
            "                    YObject.owns(source, query) ? source[query] : [],",
            "                    request",
            "                );",
            "            }",
            "        };",
            "    },",
            "",
            "    /**",
            "    Returns `true` if _value_ is either a function or `null`.",
            "",
            "    @method _functionValidator",
            "    @param {Function|null} value Value to validate.",
            "    @protected",
            "    **/",
            "    _functionValidator: function (value) {",
            "        return value === null || isFunction(value);",
            "    },",
            "",
            "    /**",
            "    Faster and safer alternative to `Y.Object.getValue()`. Doesn't bother",
            "    casting the path to an array (since we already know it's an array) and",
            "    doesn't throw an error if a value in the middle of the object hierarchy is",
            "    neither `undefined` nor an object.",
            "",
            "    @method _getObjectValue",
            "    @param {Object} obj",
            "    @param {Array} path",
            "    @return {Any} Located value, or `undefined` if the value was",
            "        not found at the specified path.",
            "    @protected",
            "    **/",
            "    _getObjectValue: function (obj, path) {",
            "        if (!obj) {",
            "            return;",
            "        }",
            "",
            "        for (var i = 0, len = path.length; obj && i < len; i++) {",
            "            obj = obj[path[i]];",
            "        }",
            "",
            "        return obj;",
            "    },",
            "",
            "    /**",
            "    Parses result responses, performs filtering and highlighting, and fires the",
            "    `results` event.",
            "",
            "    @method _parseResponse",
            "    @param {String} query Query that generated these results.",
            "    @param {Object} response Response containing results.",
            "    @param {Object} data Raw response data.",
            "    @protected",
            "    **/",
            "    _parseResponse: function (query, response, data) {",
            "        var facade = {",
            "                data   : data,",
            "                query  : query,",
            "                results: []",
            "            },",
            "",
            "            listLocator = this.get(RESULT_LIST_LOCATOR),",
            "            results     = [],",
            "            unfiltered  = response && response.results,",
            "",
            "            filters,",
            "            formatted,",
            "            formatter,",
            "            highlighted,",
            "            highlighter,",
            "            i,",
            "            len,",
            "            maxResults,",
            "            result,",
            "            text,",
            "            textLocator;",
            "",
            "        if (unfiltered && listLocator) {",
            "            unfiltered = listLocator.call(this, unfiltered);",
            "        }",
            "",
            "        if (unfiltered && unfiltered.length) {",
            "            filters     = this.get('resultFilters');",
            "            textLocator = this.get('resultTextLocator');",
            "",
            "            // Create a lightweight result object for each result to make them",
            "            // easier to work with. The various properties on the object",
            "            // represent different formats of the result, and will be populated",
            "            // as we go.",
            "            for (i = 0, len = unfiltered.length; i < len; ++i) {",
            "                result = unfiltered[i];",
            "",
            "                text = textLocator ?",
            "                        textLocator.call(this, result) :",
            "                        result.toString();",
            "",
            "                results.push({",
            "                    display: Escape.html(text),",
            "                    raw    : result,",
            "                    text   : text",
            "                });",
            "            }",
            "",
            "            // Run the results through all configured result filters. Each",
            "            // filter returns an array of (potentially fewer) result objects,",
            "            // which is then passed to the next filter, and so on.",
            "            for (i = 0, len = filters.length; i < len; ++i) {",
            "                results = filters[i].call(this, query, results.concat());",
            "",
            "                if (!results) {",
            "                    return;",
            "                }",
            "",
            "                if (!results.length) {",
            "                    break;",
            "                }",
            "            }",
            "",
            "            if (results.length) {",
            "                formatter   = this.get('resultFormatter');",
            "                highlighter = this.get('resultHighlighter');",
            "                maxResults  = this.get('maxResults');",
            "",
            "                // If maxResults is set and greater than 0, limit the number of",
            "                // results.",
            "                if (maxResults && maxResults > 0 &&",
            "                        results.length > maxResults) {",
            "                    results.length = maxResults;",
            "                }",
            "",
            "                // Run the results through the configured highlighter (if any).",
            "                // The highlighter returns an array of highlighted strings (not",
            "                // an array of result objects), and these strings are then added",
            "                // to each result object.",
            "                if (highlighter) {",
            "                    highlighted = highlighter.call(this, query,",
            "                            results.concat());",
            "",
            "                    if (!highlighted) {",
            "                        return;",
            "                    }",
            "",
            "                    for (i = 0, len = highlighted.length; i < len; ++i) {",
            "                        result = results[i];",
            "                        result.highlighted = highlighted[i];",
            "                        result.display     = result.highlighted;",
            "                    }",
            "                }",
            "",
            "                // Run the results through the configured formatter (if any) to",
            "                // produce the final formatted results. The formatter returns an",
            "                // array of strings or Node instances (not an array of result",
            "                // objects), and these strings/Nodes are then added to each",
            "                // result object.",
            "                if (formatter) {",
            "                    formatted = formatter.call(this, query, results.concat());",
            "",
            "                    if (!formatted) {",
            "                        return;",
            "                    }",
            "",
            "                    for (i = 0, len = formatted.length; i < len; ++i) {",
            "                        results[i].display = formatted[i];",
            "                    }",
            "                }",
            "            }",
            "        }",
            "",
            "        facade.results = results;",
            "        this.fire(EVT_RESULTS, facade);",
            "    },",
            "",
            "    /**",
            "    Returns the query portion of the specified input value, or `null` if there",
            "    is no suitable query within the input value.",
            "",
            "    If a query delimiter is defined, the query will be the last delimited part",
            "    of of the string.",
            "",
            "    @method _parseValue",
            "    @param {String} value Input value from which to extract the query.",
            "    @return {String|null} query",
            "    @protected",
            "    **/",
            "    _parseValue: function (value) {",
            "        var delim = this.get(QUERY_DELIMITER);",
            "",
            "        if (delim) {",
            "            value = value.split(delim);",
            "            value = value[value.length - 1];",
            "        }",
            "",
            "        return Lang.trimLeft(value);",
            "    },",
            "",
            "    /**",
            "    Setter for the `enableCache` attribute.",
            "",
            "    @method _setEnableCache",
            "    @param {Boolean} value",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _setEnableCache: function (value) {",
            "        // When `this._cache` is an object, result sources will store cached",
            "        // results in it. When it's falsy, they won't. This way result sources",
            "        // don't need to get the value of the `enableCache` attribute on every",
            "        // request, which would be sloooow.",
            "        this._cache = value ? {} : null;",
            "    },",
            "",
            "    /**",
            "    Setter for locator attributes.",
            "",
            "    @method _setLocator",
            "    @param {Function|String|null} locator",
            "    @return {Function|null}",
            "    @protected",
            "    **/",
            "    _setLocator: function (locator) {",
            "        if (this[_FUNCTION_VALIDATOR](locator)) {",
            "            return locator;",
            "        }",
            "",
            "        var that = this;",
            "",
            "        locator = locator.toString().split('.');",
            "",
            "        return function (result) {",
            "            return result && that._getObjectValue(result, locator);",
            "        };",
            "    },",
            "",
            "    /**",
            "    Setter for the `requestTemplate` attribute.",
            "",
            "    @method _setRequestTemplate",
            "    @param {Function|String|null} template",
            "    @return {Function|null}",
            "    @protected",
            "    **/",
            "    _setRequestTemplate: function (template) {",
            "        if (this[_FUNCTION_VALIDATOR](template)) {",
            "            return template;",
            "        }",
            "",
            "        template = template.toString();",
            "",
            "        return function (query) {",
            "            return Lang.sub(template, {query: encodeURIComponent(query)});",
            "        };",
            "    },",
            "",
            "    /**",
            "    Setter for the `resultFilters` attribute.",
            "",
            "    @method _setResultFilters",
            "    @param {Array|Function|String|null} filters `null`, a filter",
            "        function, an array of filter functions, or a string or array of strings",
            "        representing the names of methods on `Y.AutoCompleteFilters`.",
            "    @return {Function[]} Array of filter functions (empty if <i>filters</i> is",
            "        `null`).",
            "    @protected",
            "    **/",
            "    _setResultFilters: function (filters) {",
            "        var acFilters, getFilterFunction;",
            "",
            "        if (filters === null) {",
            "            return [];",
            "        }",
            "",
            "        acFilters = Y.AutoCompleteFilters;",
            "",
            "        getFilterFunction = function (filter) {",
            "            if (isFunction(filter)) {",
            "                return filter;",
            "            }",
            "",
            "            if (isString(filter) && acFilters &&",
            "                    isFunction(acFilters[filter])) {",
            "                return acFilters[filter];",
            "            }",
            "",
            "            return false;",
            "        };",
            "",
            "        if (Lang.isArray(filters)) {",
            "            filters = YArray.map(filters, getFilterFunction);",
            "            return YArray.every(filters, function (f) { return !!f; }) ?",
            "                    filters : INVALID_VALUE;",
            "        } else {",
            "            filters = getFilterFunction(filters);",
            "            return filters ? [filters] : INVALID_VALUE;",
            "        }",
            "    },",
            "",
            "    /**",
            "    Setter for the `resultHighlighter` attribute.",
            "",
            "    @method _setResultHighlighter",
            "    @param {Function|String|null} highlighter `null`, a highlighter function, or",
            "        a string representing the name of a method on",
            "        `Y.AutoCompleteHighlighters`.",
            "    @return {Function|null}",
            "    @protected",
            "    **/",
            "    _setResultHighlighter: function (highlighter) {",
            "        var acHighlighters;",
            "",
            "        if (this[_FUNCTION_VALIDATOR](highlighter)) {",
            "            return highlighter;",
            "        }",
            "",
            "        acHighlighters = Y.AutoCompleteHighlighters;",
            "",
            "        if (isString(highlighter) && acHighlighters &&",
            "                isFunction(acHighlighters[highlighter])) {",
            "            return acHighlighters[highlighter];",
            "        }",
            "",
            "        return INVALID_VALUE;",
            "    },",
            "",
            "    /**",
            "    Setter for the `source` attribute. Returns a DataSource or a DataSource-like",
            "    object depending on the type of _source_ and/or the value of the",
            "    `sourceType` attribute.",
            "",
            "    @method _setSource",
            "    @param {Any} source AutoComplete source. See the `source` attribute for",
            "        details.",
            "    @return {DataSource|Object}",
            "    @protected",
            "    **/",
            "    _setSource: function (source) {",
            "        var sourceType = this.get('sourceType') || Lang.type(source),",
            "            sourceSetter;",
            "",
            "        if ((source && isFunction(source.sendRequest))",
            "                || source === null",
            "                || sourceType === 'datasource') {",
            "",
            "            // Quacks like a DataSource instance (or null). Make it so!",
            "            this._rawSource = source;",
            "            return source;",
            "        }",
            "",
            "        // See if there's a registered setter for this source type.",
            "        if ((sourceSetter = AutoCompleteBase.SOURCE_TYPES[sourceType])) {",
            "            this._rawSource = source;",
            "            return Lang.isString(sourceSetter) ?",
            "                    this[sourceSetter](source) : sourceSetter(source);",
            "        }",
            "",
            "        Y.error(\"Unsupported source type '\" + sourceType + \"'. Maybe autocomplete-sources isn't loaded?\");",
            "        return INVALID_VALUE;",
            "    },",
            "",
            "    /**",
            "    Shared success callback for non-DataSource sources.",
            "",
            "    @method _sourceSuccess",
            "    @param {Any} data Response data.",
            "    @param {Object} request Request object.",
            "    @protected",
            "    **/",
            "    _sourceSuccess: function (data, request) {",
            "        request.callback.success({",
            "            data: data,",
            "            response: {results: data}",
            "        });",
            "    },",
            "",
            "    /**",
            "    Synchronizes the UI state of the `allowBrowserAutocomplete` attribute.",
            "",
            "    @method _syncBrowserAutocomplete",
            "    @protected",
            "    **/",
            "    _syncBrowserAutocomplete: function () {",
            "        var inputNode = this.get(INPUT_NODE);",
            "",
            "        if (inputNode.get('nodeName').toLowerCase() === 'input') {",
            "            inputNode.setAttribute('autocomplete',",
            "                    this.get(ALLOW_BROWSER_AC) ? 'on' : 'off');",
            "        }",
            "    },",
            "",
            "    /**",
            "    Updates the query portion of the `value` attribute.",
            "",
            "    If a query delimiter is defined, the last delimited portion of the input",
            "    value will be replaced with the specified _value_.",
            "",
            "    @method _updateValue",
            "    @param {String} newVal New value.",
            "    @protected",
            "    **/",
            "    _updateValue: function (newVal) {",
            "        var delim = this.get(QUERY_DELIMITER),",
            "            insertDelim,",
            "            len,",
            "            prevVal;",
            "",
            "        newVal = Lang.trimLeft(newVal);",
            "",
            "        if (delim) {",
            "            insertDelim = trim(delim); // so we don't double up on spaces",
            "            prevVal     = YArray.map(trim(this.get(VALUE)).split(delim), trim);",
            "            len         = prevVal.length;",
            "",
            "            if (len > 1) {",
            "                prevVal[len - 1] = newVal;",
            "                newVal = prevVal.join(insertDelim + ' ');",
            "            }",
            "",
            "            newVal = newVal + insertDelim + ' ';",
            "        }",
            "",
            "        this.set(VALUE, newVal);",
            "    },",
            "",
            "    // -- Protected Event Handlers ---------------------------------------------",
            "",
            "    /**",
            "    Updates the current `source` based on the new `sourceType` to ensure that",
            "    the two attributes don't get out of sync when they're changed separately.",
            "",
            "    @method _afterSourceTypeChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterSourceTypeChange: function (e) {",
            "        if (this._rawSource) {",
            "            this.set('source', this._rawSource);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles change events for the `value` attribute.",
            "",
            "    @method _afterValueChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterValueChange: function (e) {",
            "        var newVal   = e.newVal,",
            "            self     = this,",
            "            uiChange = e.src === AutoCompleteBase.UI_SRC,",
            "            delay, fire, minQueryLength, query;",
            "",
            "        // Update the UI if the value was changed programmatically.",
            "        if (!uiChange) {",
            "            self._inputNode.set(VALUE, newVal);",
            "        }",
            "",
            "",
            "        minQueryLength = self.get('minQueryLength');",
            "        query          = self._parseValue(newVal) || '';",
            "",
            "        if (minQueryLength >= 0 && query.length >= minQueryLength) {",
            "            // Only query on changes that originate from the UI.",
            "            if (uiChange) {",
            "                delay = self.get('queryDelay');",
            "",
            "                fire = function () {",
            "                    self.fire(EVT_QUERY, {",
            "                        inputValue: newVal,",
            "                        query     : query,",
            "                        src       : e.src",
            "                    });",
            "                };",
            "",
            "                if (delay) {",
            "                    clearTimeout(self._delay);",
            "                    self._delay = setTimeout(fire, delay);",
            "                } else {",
            "                    fire();",
            "                }",
            "            } else {",
            "                // For programmatic value changes, just update the query",
            "                // attribute without sending a query.",
            "                self._set(QUERY, query);",
            "            }",
            "        } else {",
            "            clearTimeout(self._delay);",
            "",
            "            self.fire(EVT_CLEAR, {",
            "                prevVal: e.prevVal ? self._parseValue(e.prevVal) : null,",
            "                src    : e.src",
            "            });",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `blur` events on the input node.",
            "",
            "    @method _onInputBlur",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _onInputBlur: function (e) {",
            "        var delim = this.get(QUERY_DELIMITER),",
            "            delimPos,",
            "            newVal,",
            "            value;",
            "",
            "        // If a query delimiter is set and the input's value contains one or",
            "        // more trailing delimiters, strip them.",
            "        if (delim && !this.get('allowTrailingDelimiter')) {",
            "            delim = Lang.trimRight(delim);",
            "            value = newVal = this._inputNode.get(VALUE);",
            "",
            "            if (delim) {",
            "                while ((newVal = Lang.trimRight(newVal)) &&",
            "                        (delimPos = newVal.length - delim.length) &&",
            "                        newVal.lastIndexOf(delim) === delimPos) {",
            "",
            "                    newVal = newVal.substring(0, delimPos);",
            "                }",
            "            } else {",
            "                // Delimiter is one or more space characters, so just trim the",
            "                // value.",
            "                newVal = Lang.trimRight(newVal);",
            "            }",
            "",
            "            if (newVal !== value) {",
            "                this.set(VALUE, newVal);",
            "            }",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `valueChange` events on the input node and fires a `query` event",
            "    when the input value meets the configured criteria.",
            "",
            "    @method _onInputValueChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _onInputValueChange: function (e) {",
            "        var newVal = e.newVal;",
            "",
            "        // Don't query if the internal value is the same as the new value",
            "        // reported by valueChange.",
            "        if (newVal !== this.get(VALUE)) {",
            "            this.set(VALUE, newVal, {src: AutoCompleteBase.UI_SRC});",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles source responses and fires the `results` event.",
            "",
            "    @method _onResponse",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _onResponse: function (query, e) {",
            "        // Ignore stale responses that aren't for the current query.",
            "        if (query === (this.get(QUERY) || '')) {",
            "            this._parseResponse(query || '', e.response, e.data);",
            "        }",
            "    },",
            "",
            "    // -- Protected Default Event Handlers -------------------------------------",
            "",
            "    /**",
            "    Default `clear` event handler. Sets the `results` attribute to an empty",
            "    array and `query` to null.",
            "",
            "    @method _defClearFn",
            "    @protected",
            "    **/",
            "    _defClearFn: function () {",
            "        this._set(QUERY, null);",
            "        this._set(RESULTS, []);",
            "    },",
            "",
            "    /**",
            "    Default `query` event handler. Sets the `query` attribute and sends a",
            "    request to the source if one is configured.",
            "",
            "    @method _defQueryFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defQueryFn: function (e) {",
            "        this.sendRequest(e.query); // sendRequest will set the 'query' attribute",
            "    },",
            "",
            "    /**",
            "    Default `results` event handler. Sets the `results` attribute to the latest",
            "    results.",
            "",
            "    @method _defResultsFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defResultsFn: function (e) {",
            "        this._set(RESULTS, e[RESULTS]);",
            "    }",
            "};",
            "",
            "AutoCompleteBase.ATTRS = {",
            "    /**",
            "    Whether or not to enable the browser's built-in autocomplete functionality",
            "    for input fields.",
            "",
            "    @attribute allowBrowserAutocomplete",
            "    @type Boolean",
            "    @default false",
            "    **/",
            "    allowBrowserAutocomplete: {",
            "        value: false",
            "    },",
            "",
            "    /**",
            "    When a `queryDelimiter` is set, trailing delimiters will automatically be",
            "    stripped from the input value by default when the input node loses focus.",
            "    Set this to `true` to allow trailing delimiters.",
            "",
            "    @attribute allowTrailingDelimiter",
            "    @type Boolean",
            "    @default false",
            "    **/",
            "    allowTrailingDelimiter: {",
            "        value: false",
            "    },",
            "",
            "    /**",
            "    Whether or not to enable in-memory caching in result sources that support",
            "    it.",
            "",
            "    @attribute enableCache",
            "    @type Boolean",
            "    @default true",
            "    @since 3.5.0",
            "    **/",
            "    enableCache: {",
            "        lazyAdd: false, // we need the setter to run on init",
            "        setter: '_setEnableCache',",
            "        value: true",
            "    },",
            "",
            "    /**",
            "    Node to monitor for changes, which will generate `query` events when",
            "    appropriate. May be either an `<input>` or a `<textarea>`.",
            "",
            "    @attribute inputNode",
            "    @type Node|HTMLElement|String",
            "    @initOnly",
            "    **/",
            "    inputNode: {",
            "        setter: Y.one,",
            "        writeOnce: 'initOnly'",
            "    },",
            "",
            "    /**",
            "    Maximum number of results to return. A value of `0` or less will allow an",
            "    unlimited number of results.",
            "",
            "    @attribute maxResults",
            "    @type Number",
            "    @default 0",
            "    **/",
            "    maxResults: {",
            "        value: 0",
            "    },",
            "",
            "    /**",
            "    Minimum number of characters that must be entered before a `query` event",
            "    will be fired. A value of `0` allows empty queries; a negative value will",
            "    effectively disable all `query` events.",
            "",
            "    @attribute minQueryLength",
            "    @type Number",
            "    @default 1",
            "    **/",
            "    minQueryLength: {",
            "        value: 1",
            "    },",
            "",
            "    /**",
            "    Current query, or `null` if there is no current query.",
            "",
            "    The query might not be the same as the current value of the input node, both",
            "    for timing reasons (due to `queryDelay`) and because when one or more",
            "    `queryDelimiter` separators are in use, only the last portion of the",
            "    delimited input string will be used as the query value.",
            "",
            "    @attribute query",
            "    @type String|null",
            "    @default null",
            "    @readonly",
            "    **/",
            "    query: {",
            "        readOnly: true,",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    Number of milliseconds to delay after input before triggering a `query`",
            "    event. If new input occurs before this delay is over, the previous input",
            "    event will be ignored and a new delay will begin.",
            "",
            "    This can be useful both to throttle queries to a remote data source and to",
            "    avoid distracting the user by showing them less relevant results before",
            "    they've paused their typing.",
            "",
            "    @attribute queryDelay",
            "    @type Number",
            "    @default 100",
            "    **/",
            "    queryDelay: {",
            "        value: 100",
            "    },",
            "",
            "    /**",
            "    Query delimiter string. When a delimiter is configured, the input value",
            "    will be split on the delimiter, and only the last portion will be used in",
            "    autocomplete queries and updated when the `query` attribute is",
            "    modified.",
            "",
            "    @attribute queryDelimiter",
            "    @type String|null",
            "    @default null",
            "    **/",
            "    queryDelimiter: {",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    Source request template. This can be a function that accepts a query as a",
            "    parameter and returns a request string, or it can be a string containing the",
            "    placeholder \"{query}\", which will be replaced with the actual URI-encoded",
            "    query. In either case, the resulting string will be appended to the request",
            "    URL when the `source` attribute is set to a remote DataSource, JSONP URL, or",
            "    XHR URL (it will not be appended to YQL URLs).",
            "",
            "    While `requestTemplate` may be set to either a function or a string, it will",
            "    always be returned as a function that accepts a query argument and returns a",
            "    string.",
            "",
            "    @attribute requestTemplate",
            "    @type Function|String|null",
            "    @default null",
            "    **/",
            "    requestTemplate: {",
            "        setter: '_setRequestTemplate',",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    Array of local result filter functions. If provided, each filter will be",
            "    called with two arguments when results are received: the query and an array",
            "    of result objects. See the documentation for the `results` event for a list",
            "    of the properties available on each result object.",
            "",
            "    Each filter is expected to return a filtered or modified version of the",
            "    results array, which will then be passed on to subsequent filters, then the",
            "    `resultHighlighter` function (if set), then the `resultFormatter` function",
            "    (if set), and finally to subscribers to the `results` event.",
            "",
            "    If no `source` is set, result filters will not be called.",
            "",
            "    Prepackaged result filters provided by the autocomplete-filters and",
            "    autocomplete-filters-accentfold modules can be used by specifying the filter",
            "    name as a string, such as `'phraseMatch'` (assuming the necessary filters",
            "    module is loaded).",
            "",
            "    @attribute resultFilters",
            "    @type Array",
            "    @default []",
            "    **/",
            "    resultFilters: {",
            "        setter: '_setResultFilters',",
            "        value: []",
            "    },",
            "",
            "    /**",
            "    Function which will be used to format results. If provided, this function",
            "    will be called with two arguments after results have been received and",
            "    filtered: the query and an array of result objects. The formatter is",
            "    expected to return an array of HTML strings or Node instances containing the",
            "    desired HTML for each result.",
            "",
            "    See the documentation for the `results` event for a list of the properties",
            "    available on each result object.",
            "",
            "    If no `source` is set, the formatter will not be called.",
            "",
            "    @attribute resultFormatter",
            "    @type Function|null",
            "    **/",
            "    resultFormatter: {",
            "        validator: _FUNCTION_VALIDATOR,",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    Function which will be used to highlight results. If provided, this function",
            "    will be called with two arguments after results have been received and",
            "    filtered: the query and an array of filtered result objects. The highlighter",
            "    is expected to return an array of highlighted result text in the form of",
            "    HTML strings.",
            "",
            "    See the documentation for the `results` event for a list of the properties",
            "    available on each result object.",
            "",
            "    If no `source` is set, the highlighter will not be called.",
            "",
            "    @attribute resultHighlighter",
            "    @type Function|null",
            "    **/",
            "    resultHighlighter: {",
            "        setter: '_setResultHighlighter',",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    Locator that should be used to extract an array of results from a non-array",
            "    response.",
            "",
            "    By default, no locator is applied, and all responses are assumed to be",
            "    arrays by default. If all responses are already arrays, you don't need to",
            "    define a locator.",
            "",
            "    The locator may be either a function (which will receive the raw response as",
            "    an argument and must return an array) or a string representing an object",
            "    path, such as \"foo.bar.baz\" (which would return the value of",
            "    `result.foo.bar.baz` if the response is an object).",
            "",
            "    While `resultListLocator` may be set to either a function or a string, it",
            "    will always be returned as a function that accepts a response argument and",
            "    returns an array.",
            "",
            "    @attribute resultListLocator",
            "    @type Function|String|null",
            "    **/",
            "    resultListLocator: {",
            "        setter: '_setLocator',",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    Current results, or an empty array if there are no results.",
            "",
            "    @attribute results",
            "    @type Array",
            "    @default []",
            "    @readonly",
            "    **/",
            "    results: {",
            "        readOnly: true,",
            "        value: []",
            "    },",
            "",
            "    /**",
            "    Locator that should be used to extract a plain text string from a non-string",
            "    result item. The resulting text value will typically be the value that ends",
            "    up being inserted into an input field or textarea when the user of an",
            "    autocomplete implementation selects a result.",
            "",
            "    By default, no locator is applied, and all results are assumed to be plain",
            "    text strings. If all results are already plain text strings, you don't need",
            "    to define a locator.",
            "",
            "    The locator may be either a function (which will receive the raw result as",
            "    an argument and must return a string) or a string representing an object",
            "    path, such as \"foo.bar.baz\" (which would return the value of",
            "    `result.foo.bar.baz` if the result is an object).",
            "",
            "    While `resultTextLocator` may be set to either a function or a string, it",
            "    will always be returned as a function that accepts a result argument and",
            "    returns a string.",
            "",
            "    @attribute resultTextLocator",
            "    @type Function|String|null",
            "    **/",
            "    resultTextLocator: {",
            "        setter: '_setLocator',",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    Source for autocomplete results. The following source types are supported:",
            "",
            "    <dl>",
            "      <dt>Array</dt>",
            "      <dd>",
            "        <p>",
            "        The full array will be provided to any configured filters for each",
            "        query. This is an easy way to create a fully client-side autocomplete",
            "        implementation.",
            "        </p>",
            "",
            "        <p>",
            "        Example: `['first result', 'second result', 'etc']`",
            "        </p>",
            "      </dd>",
            "",
            "      <dt>DataSource</dt>",
            "      <dd>",
            "        A `DataSource` instance or other object that provides a DataSource-like",
            "        `sendRequest` method. See the `DataSource` documentation for details.",
            "      </dd>",
            "",
            "      <dt>Function</dt>",
            "      <dd>",
            "        <p>",
            "        A function source will be called with the current query and a",
            "        callback function as parameters, and should either return an array of",
            "        results (for synchronous operation) or return nothing and pass an",
            "        array of results to the provided callback (for asynchronous",
            "        operation).",
            "        </p>",
            "",
            "        <p>",
            "        Example (synchronous):",
            "        </p>",
            "",
            "        <pre>",
            "        function (query) {",
            "            return ['foo', 'bar'];",
            "        }",
            "        </pre>",
            "",
            "        <p>",
            "        Example (async):",
            "        </p>",
            "",
            "        <pre>",
            "        function (query, callback) {",
            "            callback(['foo', 'bar']);",
            "        }",
            "        </pre>",
            "      </dd>",
            "",
            "      <dt>Object</dt>",
            "      <dd>",
            "        <p>",
            "        An object will be treated as a query hashmap. If a property on the",
            "        object matches the current query, the value of that property will be",
            "        used as the response.",
            "        </p>",
            "",
            "        <p>",
            "        The response is assumed to be an array of results by default. If the",
            "        response is not an array, provide a `resultListLocator` to",
            "        process the response and return an array.",
            "        </p>",
            "",
            "        <p>",
            "        Example: `{foo: ['foo result 1', 'foo result 2'], bar: ['bar result']}`",
            "        </p>",
            "      </dd>",
            "    </dl>",
            "",
            "    If the optional `autocomplete-sources` module is loaded, then",
            "    the following additional source types will be supported as well:",
            "",
            "    <dl>",
            "      <dt>&lt;select&gt; Node</dt>",
            "      <dd>",
            "        You may provide a YUI Node instance wrapping a &lt;select&gt;",
            "        element, and the options in the list will be used as results. You",
            "        will also need to specify a `resultTextLocator` of 'text'",
            "        or 'value', depending on what you want to use as the text of the",
            "        result.",
            "",
            "        Each result will be an object with the following properties:",
            "",
            "        <dl>",
            "          <dt>html (String)</dt>",
            "          <dd>",
            "            <p>HTML content of the &lt;option&gt; element.</p>",
            "          </dd>",
            "",
            "          <dt>index (Number)</dt>",
            "          <dd>",
            "            <p>Index of the &lt;option&gt; element in the list.</p>",
            "          </dd>",
            "",
            "          <dt>node (Y.Node)</dt>",
            "          <dd>",
            "            <p>Node instance referring to the original &lt;option&gt; element.</p>",
            "          </dd>",
            "",
            "          <dt>selected (Boolean)</dt>",
            "          <dd>",
            "            <p>Whether or not this item is currently selected in the",
            "            &lt;select&gt; list.</p>",
            "          </dd>",
            "",
            "          <dt>text (String)</dt>",
            "          <dd>",
            "            <p>Text content of the &lt;option&gt; element.</p>",
            "          </dd>",
            "",
            "          <dt>value (String)</dt>",
            "          <dd>",
            "            <p>Value of the &lt;option&gt; element.</p>",
            "          </dd>",
            "        </dl>",
            "      </dd>",
            "",
            "      <dt>String (JSONP URL)</dt>",
            "      <dd>",
            "        <p>",
            "        If a URL with a `{callback}` placeholder is provided, it will be used to",
            "        make a JSONP request. The `{query}` placeholder will be replaced with",
            "        the current query, and the `{callback}` placeholder will be replaced",
            "        with an internally-generated JSONP callback name. Both placeholders must",
            "        appear in the URL, or the request will fail. An optional `{maxResults}`",
            "        placeholder may also be provided, and will be replaced with the value of",
            "        the maxResults attribute (or 1000 if the maxResults attribute is 0 or",
            "        less).",
            "        </p>",
            "",
            "        <p>",
            "        The response is assumed to be an array of results by default. If the",
            "        response is not an array, provide a `resultListLocator` to process the",
            "        response and return an array.",
            "        </p>",
            "",
            "        <p>",
            "        <strong>The `jsonp` module must be loaded in order for",
            "        JSONP URL sources to work.</strong> If the `jsonp` module",
            "        is not already loaded, it will be loaded on demand if possible.",
            "        </p>",
            "",
            "        <p>",
            "        Example: `'http://example.com/search?q={query}&callback={callback}'`",
            "        </p>",
            "      </dd>",
            "",
            "      <dt>String (XHR URL)</dt>",
            "      <dd>",
            "        <p>",
            "        If a URL without a `{callback}` placeholder is provided, it will be used",
            "        to make a same-origin XHR request. The `{query}` placeholder will be",
            "        replaced with the current query. An optional `{maxResults}` placeholder",
            "        may also be provided, and will be replaced with the value of the",
            "        maxResults attribute (or 1000 if the maxResults attribute is 0 or less).",
            "        </p>",
            "",
            "        <p>",
            "        The response is assumed to be a JSON array of results by default. If the",
            "        response is a JSON object and not an array, provide a",
            "        `resultListLocator` to process the response and return an array. If the",
            "        response is in some form other than JSON, you will need to use a custom",
            "        DataSource instance as the source.",
            "        </p>",
            "",
            "        <p>",
            "        <strong>The `io-base` and `json-parse` modules",
            "        must be loaded in order for XHR URL sources to work.</strong> If",
            "        these modules are not already loaded, they will be loaded on demand",
            "        if possible.",
            "        </p>",
            "",
            "        <p>",
            "        Example: `'http://example.com/search?q={query}'`",
            "        </p>",
            "      </dd>",
            "",
            "      <dt>String (YQL query)</dt>",
            "      <dd>",
            "        <p>",
            "        If a YQL query is provided, it will be used to make a YQL request. The",
            "        `{query}` placeholder will be replaced with the current autocomplete",
            "        query. This placeholder must appear in the YQL query, or the request",
            "        will fail. An optional `{maxResults}` placeholder may also be provided,",
            "        and will be replaced with the value of the maxResults attribute (or 1000",
            "        if the maxResults attribute is 0 or less).",
            "        </p>",
            "",
            "        <p>",
            "        <strong>The `yql` module must be loaded in order for YQL",
            "        sources to work.</strong> If the `yql` module is not",
            "        already loaded, it will be loaded on demand if possible.",
            "        </p>",
            "",
            "        <p>",
            "        Example: `'select * from search.suggest where query=\"{query}\"'`",
            "        </p>",
            "      </dd>",
            "    </dl>",
            "",
            "    As an alternative to providing a source, you could simply listen for `query`",
            "    events and handle them any way you see fit. Providing a source is optional,",
            "    but will usually be simpler.",
            "",
            "    @attribute source",
            "    @type Array|DataSource|Function|Node|Object|String|null",
            "    **/",
            "    source: {",
            "        setter: '_setSource',",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    May be used to force a specific source type, overriding the automatic source",
            "    type detection. It should almost never be necessary to do this, but as they",
            "    taught us in the Boy Scouts, one should always be prepared, so it's here if",
            "    you need it. Be warned that if you set this attribute and something breaks,",
            "    it's your own fault.",
            "",
            "    Supported `sourceType` values are: 'array', 'datasource', 'function', and",
            "    'object'.",
            "",
            "    If the `autocomplete-sources` module is loaded, the following additional",
            "    source types are supported: 'io', 'jsonp', 'select', 'string', 'yql'",
            "",
            "    @attribute sourceType",
            "    @type String",
            "    **/",
            "    sourceType: {",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    If the `inputNode` specified at instantiation time has a `node-tokeninput`",
            "    plugin attached to it, this attribute will be a reference to the",
            "    `Y.Plugin.TokenInput` instance.",
            "",
            "    @attribute tokenInput",
            "    @type Plugin.TokenInput",
            "    @readonly",
            "    **/",
            "    tokenInput: {",
            "        readOnly: true",
            "    },",
            "",
            "    /**",
            "    Current value of the input node.",
            "",
            "    @attribute value",
            "    @type String",
            "    @default ''",
            "    **/",
            "    value: {",
            "        // Why duplicate this._inputNode.get('value')? Because we need a",
            "        // reliable way to track the source of value changes. We want to perform",
            "        // completion when the user changes the value, but not when we change",
            "        // the value.",
            "        value: ''",
            "    }",
            "};",
            "",
            "// This tells Y.Base.create() to copy these static properties to any class",
            "// AutoCompleteBase is mixed into.",
            "AutoCompleteBase._buildCfg = {",
            "    aggregates: ['SOURCE_TYPES'],",
            "    statics   : ['UI_SRC']",
            "};",
            "",
            "/**",
            "Mapping of built-in source types to their setter functions. DataSource instances",
            "and DataSource-like objects are handled natively, so are not mapped here.",
            "",
            "@property SOURCE_TYPES",
            "@type {Object}",
            "@static",
            "**/",
            "AutoCompleteBase.SOURCE_TYPES = {",
            "    array     : '_createArraySource',",
            "    'function': '_createFunctionSource',",
            "    object    : '_createObjectSource'",
            "};",
            "",
            "AutoCompleteBase.UI_SRC = (Y.Widget && Y.Widget.UI_SRC) || 'ui';",
            "",
            "Y.AutoCompleteBase = AutoCompleteBase;",
            "",
            "",
            "}, '@VERSION@', {",
            "    \"optional\": [",
            "        \"autocomplete-sources\"",
            "    ],",
            "    \"requires\": [",
            "        \"array-extras\",",
            "        \"base-build\",",
            "        \"escape\",",
            "        \"event-valuechange\",",
            "        \"node-base\"",
            "    ]",
            "});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "66": 1,
            "94": 1,
            "96": 1,
            "100": 77,
            "101": 77,
            "114": 77,
            "131": 77,
            "163": 77,
            "169": 72,
            "171": 72,
            "172": 72,
            "173": 72,
            "174": 72,
            "187": 0,
            "188": 0,
            "210": 22,
            "213": 22,
            "214": 22,
            "216": 0,
            "219": 22,
            "220": 13,
            "221": 13,
            "224": 13,
            "228": 13,
            "238": 22,
            "250": 76,
            "255": 76,
            "256": 0,
            "257": 0,
            "260": 76,
            "261": 0,
            "262": 0,
            "265": 76,
            "267": 76,
            "286": 76,
            "287": 76,
            "302": 5,
            "304": 5,
            "307": 5,
            "324": 2,
            "326": 2,
            "329": 2,
            "331": 2,
            "332": 2,
            "337": 2,
            "338": 1,
            "355": 2,
            "357": 2,
            "360": 3,
            "362": 3,
            "378": 114,
            "395": 5,
            "396": 0,
            "399": 5,
            "400": 7,
            "403": 5,
            "417": 23,
            "439": 23,
            "440": 2,
            "443": 23,
            "444": 21,
            "445": 21,
            "451": 21,
            "452": 46,
            "454": 46,
            "458": 46,
            "468": 21,
            "469": 1,
            "471": 1,
            "472": 0,
            "475": 1,
            "476": 0,
            "480": 21,
            "481": 21,
            "482": 21,
            "483": 21,
            "487": 21,
            "489": 1,
            "496": 21,
            "497": 1,
            "500": 1,
            "501": 0,
            "504": 1,
            "505": 1,
            "506": 1,
            "507": 1,
            "516": 21,
            "517": 1,
            "519": 1,
            "520": 0,
            "523": 1,
            "524": 1,
            "530": 23,
            "531": 23,
            "547": 36,
            "549": 36,
            "550": 5,
            "551": 5,
            "554": 36,
            "570": 77,
            "582": 45,
            "583": 41,
            "586": 4,
            "588": 4,
            "590": 4,
            "591": 5,
            "604": 23,
            "605": 17,
            "608": 6,
            "610": 6,
            "611": 7,
            "627": 26,
            "629": 26,
            "630": 2,
            "633": 24,
            "635": 24,
            "636": 8,
            "637": 3,
            "640": 5,
            "642": 3,
            "645": 2,
            "648": 24,
            "649": 21,
            "650": 21,
            "653": 3,
            "654": 3,
            "669": 22,
            "671": 22,
            "672": 21,
            "675": 1,
            "677": 1,
            "679": 1,
            "682": 0,
            "697": 54,
            "700": 54,
            "705": 27,
            "706": 27,
            "710": 27,
            "711": 27,
            "712": 27,
            "716": 0,
            "717": 0,
            "729": 11,
            "742": 77,
            "744": 77,
            "745": 77,
            "761": 4,
            "766": 4,
            "768": 4,
            "769": 0,
            "770": 0,
            "771": 0,
            "773": 0,
            "774": 0,
            "775": 0,
            "778": 0,
            "781": 4,
            "795": 2,
            "796": 2,
            "808": 27,
            "814": 27,
            "815": 8,
            "819": 27,
            "820": 27,
            "822": 27,
            "824": 19,
            "825": 13,
            "827": 13,
            "828": 12,
            "835": 13,
            "836": 2,
            "837": 2,
            "839": 11,
            "844": 6,
            "847": 8,
            "849": 8,
            "864": 0,
            "871": 0,
            "872": 0,
            "873": 0,
            "875": 0,
            "876": 0,
            "880": 0,
            "885": 0,
            "888": 0,
            "889": 0,
            "903": 19,
            "907": 19,
            "908": 19,
            "921": 12,
            "922": 12,
            "936": 7,
            "937": 7,
            "949": 11,
            "961": 22,
            "965": 1,
            "1514": 1,
            "1527": 1,
            "1533": 1,
            "1535": 1
        }
    },
    "build/autocomplete-sources/autocomplete-sources.js": {
        "path": "build/autocomplete-sources/autocomplete-sources.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 5,
            "5": 2,
            "6": 3,
            "7": 1,
            "8": 2,
            "9": 6,
            "10": 6,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 6,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 6,
            "34": 6,
            "35": 6,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 6,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 6,
            "55": 2,
            "56": 2,
            "57": 1,
            "58": 1,
            "59": 3,
            "60": 1,
            "61": 14,
            "62": 4,
            "63": 10,
            "64": 4,
            "65": 6,
            "66": 4,
            "67": 4,
            "68": 1,
            "69": 4,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "87": 4,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 4,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 1,
            "104": 1,
            "105": 1,
            "106": 1,
            "107": 3,
            "108": 3,
            "109": 2,
            "110": 3,
            "111": 1,
            "112": 1
        },
        "b": {
            "1": [
                2,
                3
            ],
            "2": [
                5,
                2
            ],
            "3": [
                1,
                2
            ],
            "4": [
                3,
                3
            ],
            "5": [
                0,
                0
            ],
            "6": [
                0,
                0
            ],
            "7": [
                0,
                0
            ],
            "8": [
                0,
                0
            ],
            "9": [
                0,
                0
            ],
            "10": [
                0,
                0
            ],
            "11": [
                0,
                0
            ],
            "12": [
                0,
                0
            ],
            "13": [
                0,
                0
            ],
            "14": [
                0,
                0
            ],
            "15": [
                0,
                0
            ],
            "16": [
                0,
                0
            ],
            "17": [
                4,
                10
            ],
            "18": [
                4,
                6
            ],
            "19": [
                1,
                3
            ],
            "20": [
                0,
                0
            ],
            "21": [
                0,
                0
            ],
            "22": [
                0,
                0
            ],
            "23": [
                0,
                0
            ],
            "24": [
                0,
                0
            ],
            "25": [
                0,
                0
            ],
            "26": [
                0,
                0
            ],
            "27": [
                0,
                0
            ],
            "28": [
                0,
                0,
                0
            ],
            "29": [
                0,
                0
            ],
            "30": [
                0,
                0
            ],
            "31": [
                0,
                0
            ],
            "32": [
                0,
                0
            ],
            "33": [
                0,
                0
            ],
            "34": [
                1,
                0
            ],
            "35": [
                0,
                1
            ],
            "36": [
                2,
                1
            ],
            "37": [
                0,
                3
            ]
        },
        "f": {
            "1": 1,
            "2": 5,
            "3": 6,
            "4": 0,
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 6,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 2,
            "14": 1,
            "15": 3,
            "16": 14,
            "17": 4,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 1,
            "24": 3
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 32
                    },
                    "end": {
                        "line": 1,
                        "column": 51
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 40,
                "loc": {
                    "start": {
                        "line": 40,
                        "column": 31
                    },
                    "end": {
                        "line": 40,
                        "column": 49
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 69,
                "loc": {
                    "start": {
                        "line": 69,
                        "column": 21
                    },
                    "end": {
                        "line": 69,
                        "column": 39
                    }
                }
            },
            "4": {
                "name": "_sendRequest",
                "line": 76,
                "loc": {
                    "start": {
                        "line": 76,
                        "column": 8
                    },
                    "end": {
                        "line": 76,
                        "column": 39
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 92,
                "loc": {
                    "start": {
                        "line": 92,
                        "column": 29
                    },
                    "end": {
                        "line": 92,
                        "column": 54
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 110,
                "loc": {
                    "start": {
                        "line": 110,
                        "column": 31
                    },
                    "end": {
                        "line": 110,
                        "column": 50
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 123,
                "loc": {
                    "start": {
                        "line": 123,
                        "column": 43
                    },
                    "end": {
                        "line": 123,
                        "column": 55
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 142,
                "loc": {
                    "start": {
                        "line": 142,
                        "column": 24
                    },
                    "end": {
                        "line": 142,
                        "column": 42
                    }
                }
            },
            "9": {
                "name": "_sendRequest",
                "line": 147,
                "loc": {
                    "start": {
                        "line": 147,
                        "column": 8
                    },
                    "end": {
                        "line": 147,
                        "column": 39
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 164,
                "loc": {
                    "start": {
                        "line": 164,
                        "column": 40
                    },
                    "end": {
                        "line": 164,
                        "column": 56
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 172,
                "loc": {
                    "start": {
                        "line": 172,
                        "column": 34
                    },
                    "end": {
                        "line": 172,
                        "column": 53
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 184,
                "loc": {
                    "start": {
                        "line": 184,
                        "column": 27
                    },
                    "end": {
                        "line": 184,
                        "column": 39
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 211,
                "loc": {
                    "start": {
                        "line": 211,
                        "column": 25
                    },
                    "end": {
                        "line": 211,
                        "column": 43
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 216,
                "loc": {
                    "start": {
                        "line": 216,
                        "column": 25
                    },
                    "end": {
                        "line": 216,
                        "column": 44
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 219,
                "loc": {
                    "start": {
                        "line": 219,
                        "column": 43
                    },
                    "end": {
                        "line": 219,
                        "column": 61
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 249,
                "loc": {
                    "start": {
                        "line": 249,
                        "column": 25
                    },
                    "end": {
                        "line": 249,
                        "column": 43
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 275,
                "loc": {
                    "start": {
                        "line": 275,
                        "column": 22
                    },
                    "end": {
                        "line": 275,
                        "column": 40
                    }
                }
            },
            "18": {
                "name": "_sendRequest",
                "line": 284,
                "loc": {
                    "start": {
                        "line": 284,
                        "column": 8
                    },
                    "end": {
                        "line": 284,
                        "column": 39
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 301,
                "loc": {
                    "start": {
                        "line": 301,
                        "column": 23
                    },
                    "end": {
                        "line": 301,
                        "column": 39
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 329,
                "loc": {
                    "start": {
                        "line": 329,
                        "column": 32
                    },
                    "end": {
                        "line": 329,
                        "column": 51
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 340,
                "loc": {
                    "start": {
                        "line": 340,
                        "column": 29
                    },
                    "end": {
                        "line": 340,
                        "column": 41
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 360,
                "loc": {
                    "start": {
                        "line": 360,
                        "column": 24
                    },
                    "end": {
                        "line": 360,
                        "column": 44
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 394,
                "loc": {
                    "start": {
                        "line": 394,
                        "column": 16
                    },
                    "end": {
                        "line": 394,
                        "column": 40
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 419,
                "loc": {
                    "start": {
                        "line": 419,
                        "column": 21
                    },
                    "end": {
                        "line": 419,
                        "column": 50
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 475,
                    "column": 108
                }
            },
            "2": {
                "start": {
                    "line": 10,
                    "column": 0
                },
                "end": {
                    "line": 17,
                    "column": 46
                }
            },
            "3": {
                "start": {
                    "line": 20,
                    "column": 0
                },
                "end": {
                    "line": 433,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 43,
                    "column": 8
                },
                "end": {
                    "line": 47,
                    "column": 9
                }
            },
            "5": {
                "start": {
                    "line": 46,
                    "column": 12
                },
                "end": {
                    "line": 46,
                    "column": 52
                }
            },
            "6": {
                "start": {
                    "line": 51,
                    "column": 8
                },
                "end": {
                    "line": 53,
                    "column": 9
                }
            },
            "7": {
                "start": {
                    "line": 52,
                    "column": 12
                },
                "end": {
                    "line": 52,
                    "column": 51
                }
            },
            "8": {
                "start": {
                    "line": 56,
                    "column": 8
                },
                "end": {
                    "line": 56,
                    "column": 48
                }
            },
            "9": {
                "start": {
                    "line": 70,
                    "column": 8
                },
                "end": {
                    "line": 72,
                    "column": 44
                }
            },
            "10": {
                "start": {
                    "line": 76,
                    "column": 8
                },
                "end": {
                    "line": 108,
                    "column": 9
                }
            },
            "11": {
                "start": {
                    "line": 77,
                    "column": 12
                },
                "end": {
                    "line": 77,
                    "column": 43
                }
            },
            "12": {
                "start": {
                    "line": 80,
                    "column": 12
                },
                "end": {
                    "line": 83,
                    "column": 13
                }
            },
            "13": {
                "start": {
                    "line": 81,
                    "column": 16
                },
                "end": {
                    "line": 81,
                    "column": 70
                }
            },
            "14": {
                "start": {
                    "line": 82,
                    "column": 16
                },
                "end": {
                    "line": 82,
                    "column": 23
                }
            },
            "15": {
                "start": {
                    "line": 86,
                    "column": 12
                },
                "end": {
                    "line": 88,
                    "column": 13
                }
            },
            "16": {
                "start": {
                    "line": 87,
                    "column": 16
                },
                "end": {
                    "line": 87,
                    "column": 34
                }
            },
            "17": {
                "start": {
                    "line": 90,
                    "column": 12
                },
                "end": {
                    "line": 107,
                    "column": 15
                }
            },
            "18": {
                "start": {
                    "line": 93,
                    "column": 24
                },
                "end": {
                    "line": 93,
                    "column": 33
                }
            },
            "19": {
                "start": {
                    "line": 95,
                    "column": 24
                },
                "end": {
                    "line": 99,
                    "column": 25
                }
            },
            "20": {
                "start": {
                    "line": 96,
                    "column": 28
                },
                "end": {
                    "line": 96,
                    "column": 71
                }
            },
            "21": {
                "start": {
                    "line": 98,
                    "column": 28
                },
                "end": {
                    "line": 98,
                    "column": 60
                }
            },
            "22": {
                "start": {
                    "line": 101,
                    "column": 24
                },
                "end": {
                    "line": 104,
                    "column": 25
                }
            },
            "23": {
                "start": {
                    "line": 102,
                    "column": 28
                },
                "end": {
                    "line": 102,
                    "column": 74
                }
            },
            "24": {
                "start": {
                    "line": 103,
                    "column": 28
                },
                "end": {
                    "line": 103,
                    "column": 65
                }
            },
            "25": {
                "start": {
                    "line": 110,
                    "column": 8
                },
                "end": {
                    "line": 127,
                    "column": 10
                }
            },
            "26": {
                "start": {
                    "line": 114,
                    "column": 12
                },
                "end": {
                    "line": 114,
                    "column": 34
                }
            },
            "27": {
                "start": {
                    "line": 116,
                    "column": 12
                },
                "end": {
                    "line": 116,
                    "column": 36
                }
            },
            "28": {
                "start": {
                    "line": 116,
                    "column": 27
                },
                "end": {
                    "line": 116,
                    "column": 34
                }
            },
            "29": {
                "start": {
                    "line": 118,
                    "column": 12
                },
                "end": {
                    "line": 118,
                    "column": 27
                }
            },
            "30": {
                "start": {
                    "line": 123,
                    "column": 12
                },
                "end": {
                    "line": 126,
                    "column": 15
                }
            },
            "31": {
                "start": {
                    "line": 124,
                    "column": 16
                },
                "end": {
                    "line": 124,
                    "column": 52
                }
            },
            "32": {
                "start": {
                    "line": 125,
                    "column": 16
                },
                "end": {
                    "line": 125,
                    "column": 42
                }
            },
            "33": {
                "start": {
                    "line": 129,
                    "column": 8
                },
                "end": {
                    "line": 129,
                    "column": 24
                }
            },
            "34": {
                "start": {
                    "line": 143,
                    "column": 8
                },
                "end": {
                    "line": 145,
                    "column": 33
                }
            },
            "35": {
                "start": {
                    "line": 147,
                    "column": 8
                },
                "end": {
                    "line": 170,
                    "column": 9
                }
            },
            "36": {
                "start": {
                    "line": 148,
                    "column": 12
                },
                "end": {
                    "line": 149,
                    "column": 41
                }
            },
            "37": {
                "start": {
                    "line": 151,
                    "column": 12
                },
                "end": {
                    "line": 154,
                    "column": 13
                }
            },
            "38": {
                "start": {
                    "line": 152,
                    "column": 16
                },
                "end": {
                    "line": 152,
                    "column": 70
                }
            },
            "39": {
                "start": {
                    "line": 153,
                    "column": 16
                },
                "end": {
                    "line": 153,
                    "column": 23
                }
            },
            "40": {
                "start": {
                    "line": 164,
                    "column": 12
                },
                "end": {
                    "line": 167,
                    "column": 14
                }
            },
            "41": {
                "start": {
                    "line": 165,
                    "column": 16
                },
                "end": {
                    "line": 165,
                    "column": 62
                }
            },
            "42": {
                "start": {
                    "line": 166,
                    "column": 16
                },
                "end": {
                    "line": 166,
                    "column": 53
                }
            },
            "43": {
                "start": {
                    "line": 169,
                    "column": 12
                },
                "end": {
                    "line": 169,
                    "column": 31
                }
            },
            "44": {
                "start": {
                    "line": 172,
                    "column": 8
                },
                "end": {
                    "line": 196,
                    "column": 10
                }
            },
            "45": {
                "start": {
                    "line": 176,
                    "column": 12
                },
                "end": {
                    "line": 176,
                    "column": 34
                }
            },
            "46": {
                "start": {
                    "line": 178,
                    "column": 12
                },
                "end": {
                    "line": 178,
                    "column": 36
                }
            },
            "47": {
                "start": {
                    "line": 178,
                    "column": 27
                },
                "end": {
                    "line": 178,
                    "column": 34
                }
            },
            "48": {
                "start": {
                    "line": 180,
                    "column": 12
                },
                "end": {
                    "line": 180,
                    "column": 27
                }
            },
            "49": {
                "start": {
                    "line": 184,
                    "column": 12
                },
                "end": {
                    "line": 195,
                    "column": 15
                }
            },
            "50": {
                "start": {
                    "line": 187,
                    "column": 16
                },
                "end": {
                    "line": 191,
                    "column": 17
                }
            },
            "51": {
                "start": {
                    "line": 188,
                    "column": 20
                },
                "end": {
                    "line": 190,
                    "column": 23
                }
            },
            "52": {
                "start": {
                    "line": 193,
                    "column": 16
                },
                "end": {
                    "line": 193,
                    "column": 55
                }
            },
            "53": {
                "start": {
                    "line": 194,
                    "column": 16
                },
                "end": {
                    "line": 194,
                    "column": 42
                }
            },
            "54": {
                "start": {
                    "line": 198,
                    "column": 8
                },
                "end": {
                    "line": 198,
                    "column": 27
                }
            },
            "55": {
                "start": {
                    "line": 212,
                    "column": 8
                },
                "end": {
                    "line": 212,
                    "column": 24
                }
            },
            "56": {
                "start": {
                    "line": 214,
                    "column": 8
                },
                "end": {
                    "line": 232,
                    "column": 10
                }
            },
            "57": {
                "start": {
                    "line": 217,
                    "column": 16
                },
                "end": {
                    "line": 217,
                    "column": 33
                }
            },
            "58": {
                "start": {
                    "line": 219,
                    "column": 16
                },
                "end": {
                    "line": 228,
                    "column": 19
                }
            },
            "59": {
                "start": {
                    "line": 220,
                    "column": 20
                },
                "end": {
                    "line": 227,
                    "column": 23
                }
            },
            "60": {
                "start": {
                    "line": 230,
                    "column": 16
                },
                "end": {
                    "line": 230,
                    "column": 56
                }
            },
            "61": {
                "start": {
                    "line": 250,
                    "column": 8
                },
                "end": {
                    "line": 260,
                    "column": 9
                }
            },
            "62": {
                "start": {
                    "line": 252,
                    "column": 12
                },
                "end": {
                    "line": 252,
                    "column": 49
                }
            },
            "63": {
                "start": {
                    "line": 253,
                    "column": 15
                },
                "end": {
                    "line": 260,
                    "column": 9
                }
            },
            "64": {
                "start": {
                    "line": 256,
                    "column": 12
                },
                "end": {
                    "line": 256,
                    "column": 51
                }
            },
            "65": {
                "start": {
                    "line": 259,
                    "column": 12
                },
                "end": {
                    "line": 259,
                    "column": 48
                }
            },
            "66": {
                "start": {
                    "line": 276,
                    "column": 8
                },
                "end": {
                    "line": 278,
                    "column": 45
                }
            },
            "67": {
                "start": {
                    "line": 280,
                    "column": 8
                },
                "end": {
                    "line": 282,
                    "column": 9
                }
            },
            "68": {
                "start": {
                    "line": 281,
                    "column": 12
                },
                "end": {
                    "line": 281,
                    "column": 67
                }
            },
            "69": {
                "start": {
                    "line": 284,
                    "column": 8
                },
                "end": {
                    "line": 327,
                    "column": 9
                }
            },
            "70": {
                "start": {
                    "line": 285,
                    "column": 12
                },
                "end": {
                    "line": 288,
                    "column": 41
                }
            },
            "71": {
                "start": {
                    "line": 290,
                    "column": 12
                },
                "end": {
                    "line": 294,
                    "column": 15
                }
            },
            "72": {
                "start": {
                    "line": 296,
                    "column": 12
                },
                "end": {
                    "line": 299,
                    "column": 13
                }
            },
            "73": {
                "start": {
                    "line": 297,
                    "column": 16
                },
                "end": {
                    "line": 297,
                    "column": 70
                }
            },
            "74": {
                "start": {
                    "line": 298,
                    "column": 16
                },
                "end": {
                    "line": 298,
                    "column": 23
                }
            },
            "75": {
                "start": {
                    "line": 301,
                    "column": 12
                },
                "end": {
                    "line": 304,
                    "column": 14
                }
            },
            "76": {
                "start": {
                    "line": 302,
                    "column": 16
                },
                "end": {
                    "line": 302,
                    "column": 62
                }
            },
            "77": {
                "start": {
                    "line": 303,
                    "column": 16
                },
                "end": {
                    "line": 303,
                    "column": 53
                }
            },
            "78": {
                "start": {
                    "line": 306,
                    "column": 12
                },
                "end": {
                    "line": 306,
                    "column": 52
                }
            },
            "79": {
                "start": {
                    "line": 311,
                    "column": 12
                },
                "end": {
                    "line": 324,
                    "column": 13
                }
            },
            "80": {
                "start": {
                    "line": 312,
                    "column": 16
                },
                "end": {
                    "line": 312,
                    "column": 50
                }
            },
            "81": {
                "start": {
                    "line": 313,
                    "column": 16
                },
                "end": {
                    "line": 313,
                    "column": 46
                }
            },
            "82": {
                "start": {
                    "line": 314,
                    "column": 16
                },
                "end": {
                    "line": 314,
                    "column": 50
                }
            },
            "83": {
                "start": {
                    "line": 316,
                    "column": 16
                },
                "end": {
                    "line": 318,
                    "column": 17
                }
            },
            "84": {
                "start": {
                    "line": 317,
                    "column": 20
                },
                "end": {
                    "line": 317,
                    "column": 49
                }
            },
            "85": {
                "start": {
                    "line": 320,
                    "column": 16
                },
                "end": {
                    "line": 323,
                    "column": 50
                }
            },
            "86": {
                "start": {
                    "line": 326,
                    "column": 12
                },
                "end": {
                    "line": 326,
                    "column": 30
                }
            },
            "87": {
                "start": {
                    "line": 329,
                    "column": 8
                },
                "end": {
                    "line": 345,
                    "column": 10
                }
            },
            "88": {
                "start": {
                    "line": 333,
                    "column": 12
                },
                "end": {
                    "line": 333,
                    "column": 34
                }
            },
            "89": {
                "start": {
                    "line": 335,
                    "column": 12
                },
                "end": {
                    "line": 344,
                    "column": 13
                }
            },
            "90": {
                "start": {
                    "line": 338,
                    "column": 16
                },
                "end": {
                    "line": 338,
                    "column": 31
                }
            },
            "91": {
                "start": {
                    "line": 340,
                    "column": 16
                },
                "end": {
                    "line": 343,
                    "column": 19
                }
            },
            "92": {
                "start": {
                    "line": 341,
                    "column": 20
                },
                "end": {
                    "line": 341,
                    "column": 57
                }
            },
            "93": {
                "start": {
                    "line": 342,
                    "column": 20
                },
                "end": {
                    "line": 342,
                    "column": 46
                }
            },
            "94": {
                "start": {
                    "line": 347,
                    "column": 8
                },
                "end": {
                    "line": 347,
                    "column": 25
                }
            },
            "95": {
                "start": {
                    "line": 361,
                    "column": 8
                },
                "end": {
                    "line": 362,
                    "column": 19
                }
            },
            "96": {
                "start": {
                    "line": 364,
                    "column": 8
                },
                "end": {
                    "line": 377,
                    "column": 9
                }
            },
            "97": {
                "start": {
                    "line": 369,
                    "column": 12
                },
                "end": {
                    "line": 369,
                    "column": 53
                }
            },
            "98": {
                "start": {
                    "line": 370,
                    "column": 12
                },
                "end": {
                    "line": 370,
                    "column": 63
                }
            },
            "99": {
                "start": {
                    "line": 372,
                    "column": 12
                },
                "end": {
                    "line": 374,
                    "column": 13
                }
            },
            "100": {
                "start": {
                    "line": 373,
                    "column": 16
                },
                "end": {
                    "line": 373,
                    "column": 36
                }
            },
            "101": {
                "start": {
                    "line": 376,
                    "column": 12
                },
                "end": {
                    "line": 376,
                    "column": 25
                }
            },
            "102": {
                "start": {
                    "line": 379,
                    "column": 8
                },
                "end": {
                    "line": 379,
                    "column": 23
                }
            },
            "103": {
                "start": {
                    "line": 395,
                    "column": 8
                },
                "end": {
                    "line": 395,
                    "column": 47
                }
            },
            "104": {
                "start": {
                    "line": 397,
                    "column": 8
                },
                "end": {
                    "line": 400,
                    "column": 9
                }
            },
            "105": {
                "start": {
                    "line": 399,
                    "column": 12
                },
                "end": {
                    "line": 399,
                    "column": 35
                }
            },
            "106": {
                "start": {
                    "line": 402,
                    "column": 8
                },
                "end": {
                    "line": 405,
                    "column": 11
                }
            },
            "107": {
                "start": {
                    "line": 420,
                    "column": 8
                },
                "end": {
                    "line": 421,
                    "column": 57
                }
            },
            "108": {
                "start": {
                    "line": 423,
                    "column": 8
                },
                "end": {
                    "line": 425,
                    "column": 9
                }
            },
            "109": {
                "start": {
                    "line": 424,
                    "column": 12
                },
                "end": {
                    "line": 424,
                    "column": 42
                }
            },
            "110": {
                "start": {
                    "line": 427,
                    "column": 8
                },
                "end": {
                    "line": 431,
                    "column": 11
                }
            },
            "111": {
                "start": {
                    "line": 436,
                    "column": 0
                },
                "end": {
                    "line": 462,
                    "column": 3
                }
            },
            "112": {
                "start": {
                    "line": 465,
                    "column": 0
                },
                "end": {
                    "line": 472,
                    "column": 9
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 43,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 43,
                            "column": 8
                        },
                        "end": {
                            "line": 43,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 43,
                            "column": 8
                        },
                        "end": {
                            "line": 43,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 43,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 43,
                            "column": 12
                        },
                        "end": {
                            "line": 43,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 44,
                            "column": 16
                        },
                        "end": {
                            "line": 44,
                            "column": 65
                        }
                    }
                ]
            },
            "3": {
                "line": 51,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 51,
                            "column": 8
                        },
                        "end": {
                            "line": 51,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 51,
                            "column": 8
                        },
                        "end": {
                            "line": 51,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 51,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 51,
                            "column": 12
                        },
                        "end": {
                            "line": 51,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 51,
                            "column": 30
                        },
                        "end": {
                            "line": 51,
                            "column": 62
                        }
                    }
                ]
            },
            "5": {
                "line": 80,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 80,
                            "column": 12
                        },
                        "end": {
                            "line": 80,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 12
                        },
                        "end": {
                            "line": 80,
                            "column": 12
                        }
                    }
                ]
            },
            "6": {
                "line": 80,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 80,
                            "column": 16
                        },
                        "end": {
                            "line": 80,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 31
                        },
                        "end": {
                            "line": 80,
                            "column": 54
                        }
                    }
                ]
            },
            "7": {
                "line": 86,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 86,
                            "column": 12
                        },
                        "end": {
                            "line": 86,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 86,
                            "column": 12
                        },
                        "end": {
                            "line": 86,
                            "column": 12
                        }
                    }
                ]
            },
            "8": {
                "line": 86,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 86,
                            "column": 16
                        },
                        "end": {
                            "line": 86,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 86,
                            "column": 29
                        },
                        "end": {
                            "line": 86,
                            "column": 53
                        }
                    }
                ]
            },
            "9": {
                "line": 101,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 101,
                            "column": 24
                        },
                        "end": {
                            "line": 101,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 101,
                            "column": 24
                        },
                        "end": {
                            "line": 101,
                            "column": 24
                        }
                    }
                ]
            },
            "10": {
                "line": 102,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 102,
                            "column": 28
                        },
                        "end": {
                            "line": 102,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 102,
                            "column": 44
                        },
                        "end": {
                            "line": 102,
                            "column": 72
                        }
                    }
                ]
            },
            "11": {
                "line": 116,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 116,
                            "column": 12
                        },
                        "end": {
                            "line": 116,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 116,
                            "column": 12
                        },
                        "end": {
                            "line": 116,
                            "column": 12
                        }
                    }
                ]
            },
            "12": {
                "line": 151,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 151,
                            "column": 12
                        },
                        "end": {
                            "line": 151,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 151,
                            "column": 12
                        },
                        "end": {
                            "line": 151,
                            "column": 12
                        }
                    }
                ]
            },
            "13": {
                "line": 151,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 151,
                            "column": 16
                        },
                        "end": {
                            "line": 151,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 151,
                            "column": 31
                        },
                        "end": {
                            "line": 151,
                            "column": 54
                        }
                    }
                ]
            },
            "14": {
                "line": 165,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 165,
                            "column": 16
                        },
                        "end": {
                            "line": 165,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 165,
                            "column": 32
                        },
                        "end": {
                            "line": 165,
                            "column": 60
                        }
                    }
                ]
            },
            "15": {
                "line": 178,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 178,
                            "column": 12
                        },
                        "end": {
                            "line": 178,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 178,
                            "column": 12
                        },
                        "end": {
                            "line": 178,
                            "column": 12
                        }
                    }
                ]
            },
            "16": {
                "line": 187,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 187,
                            "column": 16
                        },
                        "end": {
                            "line": 187,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 187,
                            "column": 16
                        },
                        "end": {
                            "line": 187,
                            "column": 16
                        }
                    }
                ]
            },
            "17": {
                "line": 250,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 250,
                            "column": 8
                        },
                        "end": {
                            "line": 250,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 250,
                            "column": 8
                        },
                        "end": {
                            "line": 250,
                            "column": 8
                        }
                    }
                ]
            },
            "18": {
                "line": 253,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 253,
                            "column": 15
                        },
                        "end": {
                            "line": 253,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 253,
                            "column": 15
                        },
                        "end": {
                            "line": 253,
                            "column": 15
                        }
                    }
                ]
            },
            "19": {
                "line": 280,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 280,
                            "column": 8
                        },
                        "end": {
                            "line": 280,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 280,
                            "column": 8
                        },
                        "end": {
                            "line": 280,
                            "column": 8
                        }
                    }
                ]
            },
            "20": {
                "line": 291,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 291,
                            "column": 45
                        },
                        "end": {
                            "line": 291,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 291,
                            "column": 58
                        },
                        "end": {
                            "line": 291,
                            "column": 62
                        }
                    }
                ]
            },
            "21": {
                "line": 296,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 296,
                            "column": 12
                        },
                        "end": {
                            "line": 296,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 296,
                            "column": 12
                        },
                        "end": {
                            "line": 296,
                            "column": 12
                        }
                    }
                ]
            },
            "22": {
                "line": 296,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 296,
                            "column": 16
                        },
                        "end": {
                            "line": 296,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 296,
                            "column": 31
                        },
                        "end": {
                            "line": 296,
                            "column": 54
                        }
                    }
                ]
            },
            "23": {
                "line": 302,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 302,
                            "column": 16
                        },
                        "end": {
                            "line": 302,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 302,
                            "column": 32
                        },
                        "end": {
                            "line": 302,
                            "column": 60
                        }
                    }
                ]
            },
            "24": {
                "line": 311,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 311,
                            "column": 12
                        },
                        "end": {
                            "line": 311,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 311,
                            "column": 12
                        },
                        "end": {
                            "line": 311,
                            "column": 12
                        }
                    }
                ]
            },
            "25": {
                "line": 316,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 316,
                            "column": 16
                        },
                        "end": {
                            "line": 316,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 316,
                            "column": 16
                        },
                        "end": {
                            "line": 316,
                            "column": 16
                        }
                    }
                ]
            },
            "26": {
                "line": 323,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 323,
                            "column": 25
                        },
                        "end": {
                            "line": 323,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 323,
                            "column": 38
                        },
                        "end": {
                            "line": 323,
                            "column": 42
                        }
                    }
                ]
            },
            "27": {
                "line": 335,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 335,
                            "column": 12
                        },
                        "end": {
                            "line": 335,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 335,
                            "column": 12
                        },
                        "end": {
                            "line": 335,
                            "column": 12
                        }
                    }
                ]
            },
            "28": {
                "line": 361,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 361,
                            "column": 22
                        },
                        "end": {
                            "line": 361,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 361,
                            "column": 34
                        },
                        "end": {
                            "line": 361,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 361,
                            "column": 52
                        },
                        "end": {
                            "line": 361,
                            "column": 74
                        }
                    }
                ]
            },
            "29": {
                "line": 364,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 364,
                            "column": 8
                        },
                        "end": {
                            "line": 364,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 364,
                            "column": 8
                        },
                        "end": {
                            "line": 364,
                            "column": 8
                        }
                    }
                ]
            },
            "30": {
                "line": 364,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 364,
                            "column": 12
                        },
                        "end": {
                            "line": 364,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 364,
                            "column": 23
                        },
                        "end": {
                            "line": 364,
                            "column": 45
                        }
                    }
                ]
            },
            "31": {
                "line": 369,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 369,
                            "column": 22
                        },
                        "end": {
                            "line": 369,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 369,
                            "column": 50
                        },
                        "end": {
                            "line": 369,
                            "column": 52
                        }
                    }
                ]
            },
            "32": {
                "line": 370,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 370,
                            "column": 44
                        },
                        "end": {
                            "line": 370,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 370,
                            "column": 56
                        },
                        "end": {
                            "line": 370,
                            "column": 62
                        }
                    }
                ]
            },
            "33": {
                "line": 372,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 372,
                            "column": 12
                        },
                        "end": {
                            "line": 372,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 372,
                            "column": 12
                        },
                        "end": {
                            "line": 372,
                            "column": 12
                        }
                    }
                ]
            },
            "34": {
                "line": 397,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 397,
                            "column": 8
                        },
                        "end": {
                            "line": 397,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 397,
                            "column": 8
                        },
                        "end": {
                            "line": 397,
                            "column": 8
                        }
                    }
                ]
            },
            "35": {
                "line": 403,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 403,
                            "column": 41
                        },
                        "end": {
                            "line": 403,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 403,
                            "column": 54
                        },
                        "end": {
                            "line": 403,
                            "column": 58
                        }
                    }
                ]
            },
            "36": {
                "line": 423,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 423,
                            "column": 8
                        },
                        "end": {
                            "line": 423,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 423,
                            "column": 8
                        },
                        "end": {
                            "line": 423,
                            "column": 8
                        }
                    }
                ]
            },
            "37": {
                "line": 429,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 429,
                            "column": 41
                        },
                        "end": {
                            "line": 429,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 429,
                            "column": 54
                        },
                        "end": {
                            "line": 429,
                            "column": 58
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('autocomplete-sources', function (Y, NAME) {",
            "",
            "/**",
            "Mixes support for JSONP and YQL result sources into AutoCompleteBase.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-sources",
            "**/",
            "",
            "var ACBase = Y.AutoCompleteBase,",
            "    Lang   = Y.Lang,",
            "",
            "    _SOURCE_SUCCESS = '_sourceSuccess',",
            "",
            "    MAX_RESULTS         = 'maxResults',",
            "    REQUEST_TEMPLATE    = 'requestTemplate',",
            "    RESULT_LIST_LOCATOR = 'resultListLocator';",
            "",
            "// Add prototype properties and methods to AutoCompleteBase.",
            "Y.mix(ACBase.prototype, {",
            "    /**",
            "    Regular expression used to determine whether a String source is a YQL query.",
            "",
            "    @property _YQL_SOURCE_REGEX",
            "    @type RegExp",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _YQL_SOURCE_REGEX: /^(?:select|set|use)\\s+/i,",
            "",
            "    /**",
            "    Runs before AutoCompleteBase's `_createObjectSource()` method and augments",
            "    it to support additional object-based source types.",
            "",
            "    @method _beforeCreateObjectSource",
            "    @param {String} source",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _beforeCreateObjectSource: function (source) {",
            "        // If the object is a <select> node, use the options as the result",
            "        // source.",
            "        if (source instanceof Y.Node &&",
            "                source.get('nodeName').toLowerCase() === 'select') {",
            "",
            "            return this._createSelectSource(source);",
            "        }",
            "",
            "        // If the object is a JSONPRequest instance, try to use it as a JSONP",
            "        // source.",
            "        if (Y.JSONPRequest && source instanceof Y.JSONPRequest) {",
            "            return this._createJSONPSource(source);",
            "        }",
            "",
            "        // Fall back to a basic object source.",
            "        return this._createObjectSource(source);",
            "    },",
            "",
            "    /**",
            "    Creates a DataSource-like object that uses `Y.io` as a source. See the",
            "    `source` attribute for more details.",
            "",
            "    @method _createIOSource",
            "    @param {String} source URL.",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _createIOSource: function (source) {",
            "        var ioSource = {type: 'io'},",
            "            that     = this,",
            "            ioRequest, lastRequest, loading;",
            "",
            "        // Private internal _sendRequest method that will be assigned to",
            "        // ioSource.sendRequest once io-base and json-parse are available.",
            "        function _sendRequest(request) {",
            "            var cacheKey = request.request;",
            "",
            "            // Return immediately on a cached response.",
            "            if (that._cache && cacheKey in that._cache) {",
            "                that[_SOURCE_SUCCESS](that._cache[cacheKey], request);",
            "                return;",
            "            }",
            "",
            "            // Cancel any outstanding requests.",
            "            if (ioRequest && ioRequest.isInProgress()) {",
            "                ioRequest.abort();",
            "            }",
            "",
            "            ioRequest = Y.io(that._getXHRUrl(source, request), {",
            "                on: {",
            "                    success: function (tid, response) {",
            "                        var data;",
            "",
            "                        try {",
            "                            data = Y.JSON.parse(response.responseText);",
            "                        } catch (ex) {",
            "                            Y.error('JSON parse error', ex);",
            "                        }",
            "",
            "                        if (data) {",
            "                            that._cache && (that._cache[cacheKey] = data);",
            "                            that[_SOURCE_SUCCESS](data, request);",
            "                        }",
            "                    }",
            "                }",
            "            });",
            "        }",
            "",
            "        ioSource.sendRequest = function (request) {",
            "            // Keep track of the most recent request in case there are multiple",
            "            // requests while we're waiting for the IO module to load. Only the",
            "            // most recent request will be sent.",
            "            lastRequest = request;",
            "",
            "            if (loading) { return; }",
            "",
            "            loading = true;",
            "",
            "            // Lazy-load the io-base and json-parse modules if necessary,",
            "            // then overwrite the sendRequest method to bypass this check in",
            "            // the future.",
            "            Y.use('io-base', 'json-parse', function () {",
            "                ioSource.sendRequest = _sendRequest;",
            "                _sendRequest(lastRequest);",
            "            });",
            "        };",
            "",
            "        return ioSource;",
            "    },",
            "",
            "    /**",
            "    Creates a DataSource-like object that uses the specified JSONPRequest",
            "    instance as a source. See the `source` attribute for more details.",
            "",
            "    @method _createJSONPSource",
            "    @param {JSONPRequest|String} source URL string or JSONPRequest instance.",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _createJSONPSource: function (source) {",
            "        var jsonpSource = {type: 'jsonp'},",
            "            that        = this,",
            "            lastRequest, loading;",
            "",
            "        function _sendRequest(request) {",
            "            var cacheKey = request.request,",
            "                query    = request.query;",
            "",
            "            if (that._cache && cacheKey in that._cache) {",
            "                that[_SOURCE_SUCCESS](that._cache[cacheKey], request);",
            "                return;",
            "            }",
            "",
            "            // Hack alert: JSONPRequest currently doesn't support",
            "            // per-request callbacks, so we're reaching into the protected",
            "            // _config object to make it happen.",
            "            //",
            "            // This limitation is mentioned in the following JSONP",
            "            // enhancement ticket:",
            "            //",
            "            // http://yuilibrary.com/projects/yui3/ticket/2529371",
            "            source._config.on.success = function (data) {",
            "                that._cache && (that._cache[cacheKey] = data);",
            "                that[_SOURCE_SUCCESS](data, request);",
            "            };",
            "",
            "            source.send(query);",
            "        }",
            "",
            "        jsonpSource.sendRequest = function (request) {",
            "            // Keep track of the most recent request in case there are multiple",
            "            // requests while we're waiting for the JSONP module to load. Only",
            "            // the most recent request will be sent.",
            "            lastRequest = request;",
            "",
            "            if (loading) { return; }",
            "",
            "            loading = true;",
            "",
            "            // Lazy-load the JSONP module if necessary, then overwrite the",
            "            // sendRequest method to bypass this check in the future.",
            "            Y.use('jsonp', function () {",
            "                // Turn the source into a JSONPRequest instance if it isn't",
            "                // one already.",
            "                if (!(source instanceof Y.JSONPRequest)) {",
            "                    source = new Y.JSONPRequest(source, {",
            "                        format: Y.bind(that._jsonpFormatter, that)",
            "                    });",
            "                }",
            "",
            "                jsonpSource.sendRequest = _sendRequest;",
            "                _sendRequest(lastRequest);",
            "            });",
            "        };",
            "",
            "        return jsonpSource;",
            "    },",
            "",
            "    /**",
            "    Creates a DataSource-like object that uses the specified `<select>` node as",
            "    a source.",
            "",
            "    @method _createSelectSource",
            "    @param {Node} source YUI Node instance wrapping a `<select>` node.",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _createSelectSource: function (source) {",
            "        var that = this;",
            "",
            "        return {",
            "            type: 'select',",
            "            sendRequest: function (request) {",
            "                var options = [];",
            "",
            "                source.get('options').each(function (option) {",
            "                    options.push({",
            "                        html    : option.get('innerHTML'),",
            "                        index   : option.get('index'),",
            "                        node    : option,",
            "                        selected: option.get('selected'),",
            "                        text    : option.get('text'),",
            "                        value   : option.get('value')",
            "                    });",
            "                });",
            "",
            "                that[_SOURCE_SUCCESS](options, request);",
            "            }",
            "        };",
            "    },",
            "",
            "    /**",
            "    Creates a DataSource-like object that calls the specified  URL or executes",
            "    the specified YQL query for results. If the string starts with \"select \",",
            "    \"use \", or \"set \" (case-insensitive), it's assumed to be a YQL query;",
            "    otherwise, it's assumed to be a URL (which may be absolute or relative).",
            "    URLs containing a \"{callback}\" placeholder are assumed to be JSONP URLs; all",
            "    others will use XHR. See the `source` attribute for more details.",
            "",
            "    @method _createStringSource",
            "    @param {String} source URL or YQL query.",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _createStringSource: function (source) {",
            "        if (this._YQL_SOURCE_REGEX.test(source)) {",
            "            // Looks like a YQL query.",
            "            return this._createYQLSource(source);",
            "        } else if (source.indexOf('{callback}') !== -1) {",
            "            // Contains a {callback} param and isn't a YQL query, so it must be",
            "            // JSONP.",
            "            return this._createJSONPSource(source);",
            "        } else {",
            "            // Not a YQL query or JSONP, so we'll assume it's an XHR URL.",
            "            return this._createIOSource(source);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Creates a DataSource-like object that uses the specified YQL query string to",
            "    create a YQL-based source. See the `source` attribute for details. If no",
            "    `resultListLocator` is defined, this method will set a best-guess locator",
            "    that might work for many typical YQL queries.",
            "",
            "    @method _createYQLSource",
            "    @param {String} source YQL query.",
            "    @return {Object} DataSource-like object.",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _createYQLSource: function (source) {",
            "        var that      = this,",
            "            yqlSource = {type: 'yql'},",
            "            lastRequest, loading, yqlRequest;",
            "",
            "        if (!that.get(RESULT_LIST_LOCATOR)) {",
            "            that.set(RESULT_LIST_LOCATOR, that._defaultYQLLocator);",
            "        }",
            "",
            "        function _sendRequest(request) {",
            "            var query      = request.query,",
            "                env        = that.get('yqlEnv'),",
            "                maxResults = that.get(MAX_RESULTS),",
            "                callback, opts, yqlQuery;",
            "",
            "            yqlQuery = Lang.sub(source, {",
            "                maxResults: maxResults > 0 ? maxResults : 1000,",
            "                request   : request.request,",
            "                query     : query",
            "            });",
            "",
            "            if (that._cache && yqlQuery in that._cache) {",
            "                that[_SOURCE_SUCCESS](that._cache[yqlQuery], request);",
            "                return;",
            "            }",
            "",
            "            callback = function (data) {",
            "                that._cache && (that._cache[yqlQuery] = data);",
            "                that[_SOURCE_SUCCESS](data, request);",
            "            };",
            "",
            "            opts = {proto: that.get('yqlProtocol')};",
            "",
            "            // Only create a new YQLRequest instance if this is the",
            "            // first request. For subsequent requests, we'll reuse the",
            "            // original instance.",
            "            if (yqlRequest) {",
            "                yqlRequest._callback   = callback;",
            "                yqlRequest._opts       = opts;",
            "                yqlRequest._params.q   = yqlQuery;",
            "",
            "                if (env) {",
            "                    yqlRequest._params.env = env;",
            "                }",
            "            } else {",
            "                yqlRequest = new Y.YQLRequest(yqlQuery, {",
            "                    on: {success: callback},",
            "                    allowCache: false // temp workaround until JSONP has per-URL callback proxies",
            "                }, env ? {env: env} : null, opts);",
            "            }",
            "",
            "            yqlRequest.send();",
            "        }",
            "",
            "        yqlSource.sendRequest = function (request) {",
            "            // Keep track of the most recent request in case there are multiple",
            "            // requests while we're waiting for the YQL module to load. Only the",
            "            // most recent request will be sent.",
            "            lastRequest = request;",
            "",
            "            if (!loading) {",
            "                // Lazy-load the YQL module if necessary, then overwrite the",
            "                // sendRequest method to bypass this check in the future.",
            "                loading = true;",
            "",
            "                Y.use('yql', function () {",
            "                    yqlSource.sendRequest = _sendRequest;",
            "                    _sendRequest(lastRequest);",
            "                });",
            "            }",
            "        };",
            "",
            "        return yqlSource;",
            "    },",
            "",
            "    /**",
            "    Default resultListLocator used when a string-based YQL source is set and the",
            "    implementer hasn't already specified one.",
            "",
            "    @method _defaultYQLLocator",
            "    @param {Object} response YQL response object.",
            "    @return {Array}",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _defaultYQLLocator: function (response) {",
            "        var results = response && response.query && response.query.results,",
            "            values;",
            "",
            "        if (results && Lang.isObject(results)) {",
            "            // If there's only a single value on YQL's results object, that",
            "            // value almost certainly contains the array of results we want. If",
            "            // there are 0 or 2+ values, then the values themselves are most",
            "            // likely the results we want.",
            "            values  = Y.Object.values(results) || [];",
            "            results = values.length === 1 ? values[0] : values;",
            "",
            "            if (!Lang.isArray(results)) {",
            "                results = [results];",
            "            }",
            "        } else {",
            "            results = [];",
            "        }",
            "",
            "        return results;",
            "    },",
            "",
            "    /**",
            "    Returns a formatted XHR URL based on the specified base _url_, _query_, and",
            "    the current _requestTemplate_ if any.",
            "",
            "    @method _getXHRUrl",
            "    @param {String} url Base URL.",
            "    @param {Object} request Request object containing `query` and `request`",
            "      properties.",
            "    @return {String} Formatted URL.",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _getXHRUrl: function (url, request) {",
            "        var maxResults = this.get(MAX_RESULTS);",
            "",
            "        if (request.query !== request.request) {",
            "            // Append the request template to the URL.",
            "            url += request.request;",
            "        }",
            "",
            "        return Lang.sub(url, {",
            "            maxResults: maxResults > 0 ? maxResults : 1000,",
            "            query     : encodeURIComponent(request.query)",
            "        });",
            "    },",
            "",
            "    /**",
            "    URL formatter passed to `JSONPRequest` instances.",
            "",
            "    @method _jsonpFormatter",
            "    @param {String} url",
            "    @param {String} proxy",
            "    @param {String} query",
            "    @return {String} Formatted URL",
            "    @protected",
            "    @for AutoCompleteBase",
            "    **/",
            "    _jsonpFormatter: function (url, proxy, query) {",
            "        var maxResults      = this.get(MAX_RESULTS),",
            "            requestTemplate = this.get(REQUEST_TEMPLATE);",
            "",
            "        if (requestTemplate) {",
            "            url += requestTemplate(query);",
            "        }",
            "",
            "        return Lang.sub(url, {",
            "            callback  : proxy,",
            "            maxResults: maxResults > 0 ? maxResults : 1000,",
            "            query     : encodeURIComponent(query)",
            "        });",
            "    }",
            "});",
            "",
            "// Add attributes to AutoCompleteBase.",
            "Y.mix(ACBase.ATTRS, {",
            "    /**",
            "    YQL environment file URL to load when the `source` is set to a YQL query.",
            "    Set this to `null` to use the default Open Data Tables environment file",
            "    (http://datatables.org/alltables.env).",
            "",
            "    @attribute yqlEnv",
            "    @type String",
            "    @default null",
            "    @for AutoCompleteBase",
            "    **/",
            "    yqlEnv: {",
            "        value: null",
            "    },",
            "",
            "    /**",
            "    URL protocol to use when the `source` is set to a YQL query.",
            "",
            "    @attribute yqlProtocol",
            "    @type String",
            "    @default 'http'",
            "    @for AutoCompleteBase",
            "    **/",
            "    yqlProtocol: {",
            "        value: 'http'",
            "    }",
            "});",
            "",
            "// Tell AutoCompleteBase about the new source types it can now support.",
            "Y.mix(ACBase.SOURCE_TYPES, {",
            "    io    : '_createIOSource',",
            "    jsonp : '_createJSONPSource',",
            "    object: '_beforeCreateObjectSource', // Run our version before the base version.",
            "    select: '_createSelectSource',",
            "    string: '_createStringSource',",
            "    yql   : '_createYQLSource'",
            "}, true);",
            "",
            "",
            "}, '@VERSION@', {\"optional\": [\"io-base\", \"json-parse\", \"jsonp\", \"yql\"], \"requires\": [\"autocomplete-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "10": 1,
            "20": 1,
            "43": 5,
            "46": 2,
            "51": 3,
            "52": 1,
            "56": 2,
            "70": 6,
            "76": 6,
            "77": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "86": 0,
            "87": 0,
            "90": 0,
            "93": 0,
            "95": 0,
            "96": 0,
            "98": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "110": 6,
            "114": 0,
            "116": 0,
            "118": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "129": 6,
            "143": 6,
            "147": 6,
            "148": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "164": 0,
            "165": 0,
            "166": 0,
            "169": 0,
            "172": 6,
            "176": 0,
            "178": 0,
            "180": 0,
            "184": 0,
            "187": 0,
            "188": 0,
            "193": 0,
            "194": 0,
            "198": 6,
            "212": 2,
            "214": 2,
            "217": 1,
            "219": 1,
            "220": 3,
            "230": 1,
            "250": 14,
            "252": 4,
            "253": 10,
            "256": 4,
            "259": 6,
            "276": 4,
            "280": 4,
            "281": 1,
            "284": 4,
            "285": 0,
            "290": 0,
            "296": 0,
            "297": 0,
            "298": 0,
            "301": 0,
            "302": 0,
            "303": 0,
            "306": 0,
            "311": 0,
            "312": 0,
            "313": 0,
            "314": 0,
            "316": 0,
            "317": 0,
            "320": 0,
            "326": 0,
            "329": 4,
            "333": 0,
            "335": 0,
            "338": 0,
            "340": 0,
            "341": 0,
            "342": 0,
            "347": 4,
            "361": 0,
            "364": 0,
            "369": 0,
            "370": 0,
            "372": 0,
            "373": 0,
            "376": 0,
            "379": 0,
            "395": 1,
            "397": 1,
            "399": 1,
            "402": 1,
            "420": 3,
            "423": 3,
            "424": 2,
            "427": 3,
            "436": 1,
            "465": 1
        }
    },
    "build/autocomplete-list/autocomplete-list.js": {
        "path": "build/autocomplete-list/autocomplete-list.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 22,
            "8": 22,
            "9": 0,
            "10": 0,
            "11": 22,
            "12": 22,
            "13": 22,
            "14": 22,
            "15": 22,
            "16": 22,
            "17": 22,
            "18": 22,
            "19": 21,
            "20": 120,
            "21": 21,
            "22": 20,
            "23": 21,
            "24": 21,
            "25": 21,
            "26": 21,
            "27": 21,
            "28": 21,
            "29": 0,
            "30": 21,
            "31": 21,
            "32": 21,
            "33": 21,
            "34": 21,
            "35": 21,
            "36": 21,
            "37": 7,
            "38": 4,
            "39": 4,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 4,
            "45": 4,
            "46": 7,
            "47": 7,
            "48": 4,
            "49": 3,
            "50": 7,
            "51": 7,
            "52": 7,
            "53": 7,
            "54": 7,
            "55": 9,
            "56": 9,
            "57": 17,
            "58": 9,
            "59": 9,
            "60": 9,
            "61": 13,
            "62": 13,
            "63": 21,
            "64": 21,
            "65": 21,
            "66": 21,
            "67": 21,
            "68": 21,
            "69": 19,
            "70": 21,
            "71": 21,
            "72": 30,
            "73": 30,
            "74": 30,
            "75": 21,
            "76": 21,
            "77": 17,
            "78": 17,
            "79": 21,
            "80": 21,
            "81": 21,
            "82": 21,
            "83": 21,
            "84": 4,
            "85": 2,
            "86": 43,
            "87": 43,
            "88": 30,
            "89": 21,
            "90": 30,
            "91": 30,
            "92": 9,
            "93": 9,
            "94": 30,
            "95": 30,
            "96": 1,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 36,
            "101": 3,
            "102": 3,
            "103": 36,
            "104": 20,
            "105": 36,
            "106": 36,
            "107": 36,
            "108": 13,
            "109": 23,
            "110": 23,
            "111": 23,
            "112": 36,
            "113": 0,
            "114": 24,
            "115": 24,
            "116": 15,
            "117": 24,
            "118": 17,
            "119": 17,
            "120": 7,
            "121": 24,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 2,
            "126": 0,
            "127": 0,
            "128": 0,
            "129": 4,
            "130": 4,
            "131": 2,
            "132": 4,
            "133": 2,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 3,
            "138": 2,
            "139": 2,
            "140": 2,
            "141": 2,
            "142": 2,
            "143": 2,
            "144": 9,
            "145": 9,
            "146": 9,
            "147": 15,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 4,
            "152": 4,
            "153": 4,
            "154": 4,
            "155": 4,
            "156": 22,
            "157": 1,
            "158": 1
        },
        "b": {
            "1": [
                1,
                0
            ],
            "2": [
                0,
                22
            ],
            "3": [
                20,
                1
            ],
            "4": [
                0,
                21
            ],
            "5": [
                4,
                3
            ],
            "6": [
                4,
                0
            ],
            "7": [
                0,
                4
            ],
            "8": [
                0,
                0
            ],
            "9": [
                4,
                2
            ],
            "10": [
                4,
                3
            ],
            "11": [
                4,
                2
            ],
            "12": [
                1,
                1
            ],
            "13": [
                4,
                3
            ],
            "14": [
                3,
                2
            ],
            "15": [
                7,
                3
            ],
            "16": [
                9,
                0
            ],
            "17": [
                4,
                9
            ],
            "18": [
                21,
                0
            ],
            "19": [
                21,
                0,
                21
            ],
            "20": [
                19,
                2
            ],
            "21": [
                21,
                20
            ],
            "22": [
                21,
                21
            ],
            "23": [
                21,
                9
            ],
            "24": [
                9,
                21
            ],
            "25": [
                1,
                29
            ],
            "26": [
                30,
                1
            ],
            "27": [
                0,
                1
            ],
            "28": [
                0,
                0
            ],
            "29": [
                3,
                33
            ],
            "30": [
                20,
                16
            ],
            "31": [
                13,
                23
            ],
            "32": [
                0,
                36
            ],
            "33": [
                15,
                9
            ],
            "34": [
                24,
                15
            ],
            "35": [
                17,
                7
            ],
            "36": [
                0,
                24
            ],
            "37": [
                0,
                0
            ],
            "38": [
                0,
                0
            ],
            "39": [
                0,
                0
            ],
            "40": [
                2,
                0
            ],
            "41": [
                0,
                0
            ],
            "42": [
                0,
                0,
                0
            ],
            "43": [
                2,
                2
            ],
            "44": [
                2,
                2
            ],
            "45": [
                0,
                0
            ],
            "46": [
                0,
                0,
                0,
                0,
                0
            ],
            "47": [
                2,
                0
            ],
            "48": [
                9,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 1,
            "3": 22,
            "4": 21,
            "5": 21,
            "6": 21,
            "7": 21,
            "8": 7,
            "9": 4,
            "10": 7,
            "11": 7,
            "12": 9,
            "13": 17,
            "14": 13,
            "15": 21,
            "16": 21,
            "17": 30,
            "18": 21,
            "19": 17,
            "20": 21,
            "21": 4,
            "22": 2,
            "23": 43,
            "24": 30,
            "25": 0,
            "26": 43,
            "27": 36,
            "28": 24,
            "29": 2,
            "30": 0,
            "31": 4,
            "32": 0,
            "33": 3,
            "34": 2,
            "35": 2,
            "36": 9,
            "37": 15,
            "38": 0,
            "39": 4,
            "40": 22
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 29
                    },
                    "end": {
                        "line": 1,
                        "column": 48
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 70,
                "loc": {
                    "start": {
                        "line": 70,
                        "column": 16
                    },
                    "end": {
                        "line": 70,
                        "column": 28
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 80,
                "loc": {
                    "start": {
                        "line": 80,
                        "column": 17
                    },
                    "end": {
                        "line": 80,
                        "column": 29
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 115,
                "loc": {
                    "start": {
                        "line": 115,
                        "column": 16
                    },
                    "end": {
                        "line": 115,
                        "column": 28
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 125,
                "loc": {
                    "start": {
                        "line": 125,
                        "column": 12
                    },
                    "end": {
                        "line": 125,
                        "column": 24
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 130,
                "loc": {
                    "start": {
                        "line": 130,
                        "column": 14
                    },
                    "end": {
                        "line": 130,
                        "column": 26
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 160,
                "loc": {
                    "start": {
                        "line": 160,
                        "column": 12
                    },
                    "end": {
                        "line": 160,
                        "column": 24
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 176,
                "loc": {
                    "start": {
                        "line": 176,
                        "column": 10
                    },
                    "end": {
                        "line": 176,
                        "column": 22
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 190,
                "loc": {
                    "start": {
                        "line": 190,
                        "column": 16
                    },
                    "end": {
                        "line": 190,
                        "column": 49
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 223,
                "loc": {
                    "start": {
                        "line": 223,
                        "column": 23
                    },
                    "end": {
                        "line": 223,
                        "column": 35
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 248,
                "loc": {
                    "start": {
                        "line": 248,
                        "column": 23
                    },
                    "end": {
                        "line": 248,
                        "column": 35
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 267,
                "loc": {
                    "start": {
                        "line": 267,
                        "column": 10
                    },
                    "end": {
                        "line": 267,
                        "column": 27
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 270,
                "loc": {
                    "start": {
                        "line": 270,
                        "column": 59
                    },
                    "end": {
                        "line": 270,
                        "column": 75
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 289,
                "loc": {
                    "start": {
                        "line": 289,
                        "column": 14
                    },
                    "end": {
                        "line": 289,
                        "column": 40
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 300,
                "loc": {
                    "start": {
                        "line": 300,
                        "column": 16
                    },
                    "end": {
                        "line": 300,
                        "column": 28
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 339,
                "loc": {
                    "start": {
                        "line": 339,
                        "column": 15
                    },
                    "end": {
                        "line": 339,
                        "column": 27
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 366,
                "loc": {
                    "start": {
                        "line": 366,
                        "column": 12
                    },
                    "end": {
                        "line": 366,
                        "column": 24
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 380,
                "loc": {
                    "start": {
                        "line": 380,
                        "column": 21
                    },
                    "end": {
                        "line": 380,
                        "column": 33
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 397,
                "loc": {
                    "start": {
                        "line": 397,
                        "column": 21
                    },
                    "end": {
                        "line": 397,
                        "column": 39
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 414,
                "loc": {
                    "start": {
                        "line": 414,
                        "column": 21
                    },
                    "end": {
                        "line": 414,
                        "column": 33
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 435,
                "loc": {
                    "start": {
                        "line": 435,
                        "column": 23
                    },
                    "end": {
                        "line": 435,
                        "column": 35
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 446,
                "loc": {
                    "start": {
                        "line": 446,
                        "column": 22
                    },
                    "end": {
                        "line": 446,
                        "column": 34
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 456,
                "loc": {
                    "start": {
                        "line": 456,
                        "column": 19
                    },
                    "end": {
                        "line": 456,
                        "column": 31
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 472,
                "loc": {
                    "start": {
                        "line": 472,
                        "column": 18
                    },
                    "end": {
                        "line": 472,
                        "column": 37
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 498,
                "loc": {
                    "start": {
                        "line": 498,
                        "column": 25
                    },
                    "end": {
                        "line": 498,
                        "column": 37
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 504,
                "loc": {
                    "start": {
                        "line": 504,
                        "column": 8
                    },
                    "end": {
                        "line": 504,
                        "column": 20
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 514,
                "loc": {
                    "start": {
                        "line": 514,
                        "column": 21
                    },
                    "end": {
                        "line": 514,
                        "column": 40
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 562,
                "loc": {
                    "start": {
                        "line": 562,
                        "column": 28
                    },
                    "end": {
                        "line": 562,
                        "column": 41
                    }
                }
            },
            "29": {
                "name": "(anonymous_29)",
                "line": 599,
                "loc": {
                    "start": {
                        "line": 599,
                        "column": 32
                    },
                    "end": {
                        "line": 599,
                        "column": 45
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 612,
                "loc": {
                    "start": {
                        "line": 612,
                        "column": 20
                    },
                    "end": {
                        "line": 612,
                        "column": 33
                    }
                }
            },
            "31": {
                "name": "(anonymous_31)",
                "line": 629,
                "loc": {
                    "start": {
                        "line": 629,
                        "column": 29
                    },
                    "end": {
                        "line": 629,
                        "column": 42
                    }
                }
            },
            "32": {
                "name": "(anonymous_32)",
                "line": 648,
                "loc": {
                    "start": {
                        "line": 648,
                        "column": 25
                    },
                    "end": {
                        "line": 648,
                        "column": 37
                    }
                }
            },
            "33": {
                "name": "(anonymous_33)",
                "line": 666,
                "loc": {
                    "start": {
                        "line": 666,
                        "column": 26
                    },
                    "end": {
                        "line": 666,
                        "column": 38
                    }
                }
            },
            "34": {
                "name": "(anonymous_34)",
                "line": 677,
                "loc": {
                    "start": {
                        "line": 677,
                        "column": 21
                    },
                    "end": {
                        "line": 677,
                        "column": 34
                    }
                }
            },
            "35": {
                "name": "(anonymous_35)",
                "line": 694,
                "loc": {
                    "start": {
                        "line": 694,
                        "column": 20
                    },
                    "end": {
                        "line": 694,
                        "column": 32
                    }
                }
            },
            "36": {
                "name": "(anonymous_36)",
                "line": 706,
                "loc": {
                    "start": {
                        "line": 706,
                        "column": 25
                    },
                    "end": {
                        "line": 706,
                        "column": 38
                    }
                }
            },
            "37": {
                "name": "(anonymous_37)",
                "line": 721,
                "loc": {
                    "start": {
                        "line": 721,
                        "column": 25
                    },
                    "end": {
                        "line": 721,
                        "column": 38
                    }
                }
            },
            "38": {
                "name": "(anonymous_38)",
                "line": 732,
                "loc": {
                    "start": {
                        "line": 732,
                        "column": 18
                    },
                    "end": {
                        "line": 732,
                        "column": 31
                    }
                }
            },
            "39": {
                "name": "(anonymous_39)",
                "line": 748,
                "loc": {
                    "start": {
                        "line": 748,
                        "column": 18
                    },
                    "end": {
                        "line": 748,
                        "column": 31
                    }
                }
            },
            "40": {
                "name": "(anonymous_40)",
                "line": 850,
                "loc": {
                    "start": {
                        "line": 850,
                        "column": 21
                    },
                    "end": {
                        "line": 850,
                        "column": 33
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 906,
                    "column": 3
                }
            },
            "2": {
                "start": {
                    "line": 22,
                    "column": 0
                },
                "end": {
                    "line": 874,
                    "column": 3
                }
            },
            "3": {
                "start": {
                    "line": 71,
                    "column": 8
                },
                "end": {
                    "line": 71,
                    "column": 50
                }
            },
            "4": {
                "start": {
                    "line": 73,
                    "column": 8
                },
                "end": {
                    "line": 73,
                    "column": 36
                }
            },
            "5": {
                "start": {
                    "line": 74,
                    "column": 8
                },
                "end": {
                    "line": 74,
                    "column": 36
                }
            },
            "6": {
                "start": {
                    "line": 76,
                    "column": 8
                },
                "end": {
                    "line": 76,
                    "column": 24
                }
            },
            "7": {
                "start": {
                    "line": 81,
                    "column": 8
                },
                "end": {
                    "line": 81,
                    "column": 46
                }
            },
            "8": {
                "start": {
                    "line": 83,
                    "column": 8
                },
                "end": {
                    "line": 86,
                    "column": 9
                }
            },
            "9": {
                "start": {
                    "line": 84,
                    "column": 12
                },
                "end": {
                    "line": 84,
                    "column": 47
                }
            },
            "10": {
                "start": {
                    "line": 85,
                    "column": 12
                },
                "end": {
                    "line": 85,
                    "column": 19
                }
            },
            "11": {
                "start": {
                    "line": 88,
                    "column": 8
                },
                "end": {
                    "line": 88,
                    "column": 37
                }
            },
            "12": {
                "start": {
                    "line": 89,
                    "column": 8
                },
                "end": {
                    "line": 89,
                    "column": 30
                }
            },
            "13": {
                "start": {
                    "line": 93,
                    "column": 8
                },
                "end": {
                    "line": 93,
                    "column": 59
                }
            },
            "14": {
                "start": {
                    "line": 96,
                    "column": 8
                },
                "end": {
                    "line": 96,
                    "column": 59
                }
            },
            "15": {
                "start": {
                    "line": 97,
                    "column": 8
                },
                "end": {
                    "line": 97,
                    "column": 69
                }
            },
            "16": {
                "start": {
                    "line": 98,
                    "column": 8
                },
                "end": {
                    "line": 98,
                    "column": 68
                }
            },
            "17": {
                "start": {
                    "line": 99,
                    "column": 8
                },
                "end": {
                    "line": 99,
                    "column": 59
                }
            },
            "18": {
                "start": {
                    "line": 110,
                    "column": 8
                },
                "end": {
                    "line": 112,
                    "column": 11
                }
            },
            "19": {
                "start": {
                    "line": 116,
                    "column": 8
                },
                "end": {
                    "line": 118,
                    "column": 9
                }
            },
            "20": {
                "start": {
                    "line": 117,
                    "column": 12
                },
                "end": {
                    "line": 117,
                    "column": 44
                }
            },
            "21": {
                "start": {
                    "line": 120,
                    "column": 8
                },
                "end": {
                    "line": 122,
                    "column": 9
                }
            },
            "22": {
                "start": {
                    "line": 121,
                    "column": 12
                },
                "end": {
                    "line": 121,
                    "column": 50
                }
            },
            "23": {
                "start": {
                    "line": 126,
                    "column": 8
                },
                "end": {
                    "line": 126,
                    "column": 26
                }
            },
            "24": {
                "start": {
                    "line": 127,
                    "column": 8
                },
                "end": {
                    "line": 127,
                    "column": 25
                }
            },
            "25": {
                "start": {
                    "line": 131,
                    "column": 8
                },
                "end": {
                    "line": 136,
                    "column": 54
                }
            },
            "26": {
                "start": {
                    "line": 138,
                    "column": 8
                },
                "end": {
                    "line": 142,
                    "column": 11
                }
            },
            "27": {
                "start": {
                    "line": 146,
                    "column": 8
                },
                "end": {
                    "line": 146,
                    "column": 36
                }
            },
            "28": {
                "start": {
                    "line": 149,
                    "column": 8
                },
                "end": {
                    "line": 151,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 150,
                    "column": 12
                },
                "end": {
                    "line": 150,
                    "column": 44
                }
            },
            "30": {
                "start": {
                    "line": 153,
                    "column": 8
                },
                "end": {
                    "line": 153,
                    "column": 37
                }
            },
            "31": {
                "start": {
                    "line": 154,
                    "column": 8
                },
                "end": {
                    "line": 154,
                    "column": 40
                }
            },
            "32": {
                "start": {
                    "line": 155,
                    "column": 8
                },
                "end": {
                    "line": 155,
                    "column": 39
                }
            },
            "33": {
                "start": {
                    "line": 156,
                    "column": 8
                },
                "end": {
                    "line": 156,
                    "column": 37
                }
            },
            "34": {
                "start": {
                    "line": 157,
                    "column": 8
                },
                "end": {
                    "line": 157,
                    "column": 39
                }
            },
            "35": {
                "start": {
                    "line": 163,
                    "column": 8
                },
                "end": {
                    "line": 163,
                    "column": 28
                }
            },
            "36": {
                "start": {
                    "line": 164,
                    "column": 8
                },
                "end": {
                    "line": 164,
                    "column": 31
                }
            },
            "37": {
                "start": {
                    "line": 177,
                    "column": 8
                },
                "end": {
                    "line": 177,
                    "column": 76
                }
            },
            "38": {
                "start": {
                    "line": 191,
                    "column": 8
                },
                "end": {
                    "line": 201,
                    "column": 9
                }
            },
            "39": {
                "start": {
                    "line": 192,
                    "column": 12
                },
                "end": {
                    "line": 194,
                    "column": 13
                }
            },
            "40": {
                "start": {
                    "line": 193,
                    "column": 16
                },
                "end": {
                    "line": 193,
                    "column": 28
                }
            },
            "41": {
                "start": {
                    "line": 196,
                    "column": 12
                },
                "end": {
                    "line": 196,
                    "column": 45
                }
            },
            "42": {
                "start": {
                    "line": 198,
                    "column": 12
                },
                "end": {
                    "line": 200,
                    "column": 13
                }
            },
            "43": {
                "start": {
                    "line": 199,
                    "column": 16
                },
                "end": {
                    "line": 199,
                    "column": 28
                }
            },
            "44": {
                "start": {
                    "line": 203,
                    "column": 8
                },
                "end": {
                    "line": 207,
                    "column": 11
                }
            },
            "45": {
                "start": {
                    "line": 209,
                    "column": 8
                },
                "end": {
                    "line": 209,
                    "column": 20
                }
            },
            "46": {
                "start": {
                    "line": 224,
                    "column": 8
                },
                "end": {
                    "line": 225,
                    "column": 21
                }
            },
            "47": {
                "start": {
                    "line": 227,
                    "column": 8
                },
                "end": {
                    "line": 232,
                    "column": 9
                }
            },
            "48": {
                "start": {
                    "line": 228,
                    "column": 12
                },
                "end": {
                    "line": 229,
                    "column": 55
                }
            },
            "49": {
                "start": {
                    "line": 231,
                    "column": 12
                },
                "end": {
                    "line": 231,
                    "column": 48
                }
            },
            "50": {
                "start": {
                    "line": 234,
                    "column": 8
                },
                "end": {
                    "line": 234,
                    "column": 40
                }
            },
            "51": {
                "start": {
                    "line": 236,
                    "column": 8
                },
                "end": {
                    "line": 236,
                    "column": 20
                }
            },
            "52": {
                "start": {
                    "line": 249,
                    "column": 8
                },
                "end": {
                    "line": 251,
                    "column": 66
                }
            },
            "53": {
                "start": {
                    "line": 253,
                    "column": 8
                },
                "end": {
                    "line": 253,
                    "column": 48
                }
            },
            "54": {
                "start": {
                    "line": 255,
                    "column": 8
                },
                "end": {
                    "line": 255,
                    "column": 20
                }
            },
            "55": {
                "start": {
                    "line": 268,
                    "column": 8
                },
                "end": {
                    "line": 268,
                    "column": 27
                }
            },
            "56": {
                "start": {
                    "line": 270,
                    "column": 8
                },
                "end": {
                    "line": 272,
                    "column": 17
                }
            },
            "57": {
                "start": {
                    "line": 271,
                    "column": 12
                },
                "end": {
                    "line": 271,
                    "column": 77
                }
            },
            "58": {
                "start": {
                    "line": 274,
                    "column": 8
                },
                "end": {
                    "line": 274,
                    "column": 37
                }
            },
            "59": {
                "start": {
                    "line": 275,
                    "column": 8
                },
                "end": {
                    "line": 275,
                    "column": 50
                }
            },
            "60": {
                "start": {
                    "line": 277,
                    "column": 8
                },
                "end": {
                    "line": 277,
                    "column": 25
                }
            },
            "61": {
                "start": {
                    "line": 290,
                    "column": 8
                },
                "end": {
                    "line": 290,
                    "column": 54
                }
            },
            "62": {
                "start": {
                    "line": 291,
                    "column": 8
                },
                "end": {
                    "line": 291,
                    "column": 77
                }
            },
            "63": {
                "start": {
                    "line": 301,
                    "column": 8
                },
                "end": {
                    "line": 302,
                    "column": 46
                }
            },
            "64": {
                "start": {
                    "line": 307,
                    "column": 8
                },
                "end": {
                    "line": 324,
                    "column": 9
                }
            },
            "65": {
                "start": {
                    "line": 310,
                    "column": 12
                },
                "end": {
                    "line": 310,
                    "column": 48
                }
            },
            "66": {
                "start": {
                    "line": 311,
                    "column": 12
                },
                "end": {
                    "line": 311,
                    "column": 84
                }
            },
            "67": {
                "start": {
                    "line": 313,
                    "column": 12
                },
                "end": {
                    "line": 316,
                    "column": 15
                }
            },
            "68": {
                "start": {
                    "line": 321,
                    "column": 12
                },
                "end": {
                    "line": 323,
                    "column": 13
                }
            },
            "69": {
                "start": {
                    "line": 322,
                    "column": 16
                },
                "end": {
                    "line": 322,
                    "column": 44
                }
            },
            "70": {
                "start": {
                    "line": 327,
                    "column": 8
                },
                "end": {
                    "line": 330,
                    "column": 11
                }
            },
            "71": {
                "start": {
                    "line": 340,
                    "column": 8
                },
                "end": {
                    "line": 357,
                    "column": 11
                }
            },
            "72": {
                "start": {
                    "line": 367,
                    "column": 8
                },
                "end": {
                    "line": 367,
                    "column": 36
                }
            },
            "73": {
                "start": {
                    "line": 368,
                    "column": 8
                },
                "end": {
                    "line": 368,
                    "column": 38
                }
            },
            "74": {
                "start": {
                    "line": 370,
                    "column": 8
                },
                "end": {
                    "line": 370,
                    "column": 52
                }
            },
            "75": {
                "start": {
                    "line": 381,
                    "column": 8
                },
                "end": {
                    "line": 381,
                    "column": 55
                }
            },
            "76": {
                "start": {
                    "line": 383,
                    "column": 8
                },
                "end": {
                    "line": 386,
                    "column": 11
                }
            },
            "77": {
                "start": {
                    "line": 398,
                    "column": 8
                },
                "end": {
                    "line": 398,
                    "column": 55
                }
            },
            "78": {
                "start": {
                    "line": 400,
                    "column": 8
                },
                "end": {
                    "line": 403,
                    "column": 73
                }
            },
            "79": {
                "start": {
                    "line": 415,
                    "column": 8
                },
                "end": {
                    "line": 415,
                    "column": 79
                }
            },
            "80": {
                "start": {
                    "line": 417,
                    "column": 8
                },
                "end": {
                    "line": 420,
                    "column": 11
                }
            },
            "81": {
                "start": {
                    "line": 422,
                    "column": 8
                },
                "end": {
                    "line": 422,
                    "column": 40
                }
            },
            "82": {
                "start": {
                    "line": 423,
                    "column": 8
                },
                "end": {
                    "line": 423,
                    "column": 48
                }
            },
            "83": {
                "start": {
                    "line": 425,
                    "column": 8
                },
                "end": {
                    "line": 425,
                    "column": 24
                }
            },
            "84": {
                "start": {
                    "line": 436,
                    "column": 8
                },
                "end": {
                    "line": 436,
                    "column": 56
                }
            },
            "85": {
                "start": {
                    "line": 447,
                    "column": 8
                },
                "end": {
                    "line": 447,
                    "column": 72
                }
            },
            "86": {
                "start": {
                    "line": 458,
                    "column": 8
                },
                "end": {
                    "line": 458,
                    "column": 31
                }
            },
            "87": {
                "start": {
                    "line": 461,
                    "column": 8
                },
                "end": {
                    "line": 461,
                    "column": 25
                }
            },
            "88": {
                "start": {
                    "line": 473,
                    "column": 8
                },
                "end": {
                    "line": 475,
                    "column": 9
                }
            },
            "89": {
                "start": {
                    "line": 474,
                    "column": 12
                },
                "end": {
                    "line": 474,
                    "column": 40
                }
            },
            "90": {
                "start": {
                    "line": 477,
                    "column": 8
                },
                "end": {
                    "line": 477,
                    "column": 22
                }
            },
            "91": {
                "start": {
                    "line": 479,
                    "column": 8
                },
                "end": {
                    "line": 482,
                    "column": 9
                }
            },
            "92": {
                "start": {
                    "line": 480,
                    "column": 12
                },
                "end": {
                    "line": 480,
                    "column": 31
                }
            },
            "93": {
                "start": {
                    "line": 481,
                    "column": 12
                },
                "end": {
                    "line": 481,
                    "column": 45
                }
            },
            "94": {
                "start": {
                    "line": 484,
                    "column": 8
                },
                "end": {
                    "line": 484,
                    "column": 29
                }
            },
            "95": {
                "start": {
                    "line": 486,
                    "column": 8
                },
                "end": {
                    "line": 488,
                    "column": 9
                }
            },
            "96": {
                "start": {
                    "line": 487,
                    "column": 12
                },
                "end": {
                    "line": 487,
                    "column": 60
                }
            },
            "97": {
                "start": {
                    "line": 499,
                    "column": 8
                },
                "end": {
                    "line": 499,
                    "column": 42
                }
            },
            "98": {
                "start": {
                    "line": 501,
                    "column": 8
                },
                "end": {
                    "line": 503,
                    "column": 9
                }
            },
            "99": {
                "start": {
                    "line": 502,
                    "column": 12
                },
                "end": {
                    "line": 502,
                    "column": 24
                }
            },
            "100": {
                "start": {
                    "line": 515,
                    "column": 8
                },
                "end": {
                    "line": 518,
                    "column": 9
                }
            },
            "101": {
                "start": {
                    "line": 516,
                    "column": 12
                },
                "end": {
                    "line": 516,
                    "column": 27
                }
            },
            "102": {
                "start": {
                    "line": 517,
                    "column": 12
                },
                "end": {
                    "line": 517,
                    "column": 39
                }
            },
            "103": {
                "start": {
                    "line": 520,
                    "column": 8
                },
                "end": {
                    "line": 522,
                    "column": 9
                }
            },
            "104": {
                "start": {
                    "line": 521,
                    "column": 12
                },
                "end": {
                    "line": 521,
                    "column": 40
                }
            },
            "105": {
                "start": {
                    "line": 524,
                    "column": 8
                },
                "end": {
                    "line": 524,
                    "column": 54
                }
            },
            "106": {
                "start": {
                    "line": 525,
                    "column": 8
                },
                "end": {
                    "line": 525,
                    "column": 55
                }
            },
            "107": {
                "start": {
                    "line": 527,
                    "column": 8
                },
                "end": {
                    "line": 537,
                    "column": 9
                }
            },
            "108": {
                "start": {
                    "line": 528,
                    "column": 12
                },
                "end": {
                    "line": 528,
                    "column": 33
                }
            },
            "109": {
                "start": {
                    "line": 530,
                    "column": 12
                },
                "end": {
                    "line": 530,
                    "column": 40
                }
            },
            "110": {
                "start": {
                    "line": 531,
                    "column": 12
                },
                "end": {
                    "line": 531,
                    "column": 42
                }
            },
            "111": {
                "start": {
                    "line": 536,
                    "column": 12
                },
                "end": {
                    "line": 536,
                    "column": 49
                }
            },
            "112": {
                "start": {
                    "line": 542,
                    "column": 8
                },
                "end": {
                    "line": 550,
                    "column": 9
                }
            },
            "113": {
                "start": {
                    "line": 547,
                    "column": 12
                },
                "end": {
                    "line": 549,
                    "column": 47
                }
            },
            "114": {
                "start": {
                    "line": 563,
                    "column": 8
                },
                "end": {
                    "line": 566,
                    "column": 17
                }
            },
            "115": {
                "start": {
                    "line": 570,
                    "column": 8
                },
                "end": {
                    "line": 572,
                    "column": 9
                }
            },
            "116": {
                "start": {
                    "line": 571,
                    "column": 12
                },
                "end": {
                    "line": 571,
                    "column": 58
                }
            },
            "117": {
                "start": {
                    "line": 574,
                    "column": 8
                },
                "end": {
                    "line": 579,
                    "column": 9
                }
            },
            "118": {
                "start": {
                    "line": 575,
                    "column": 12
                },
                "end": {
                    "line": 575,
                    "column": 54
                }
            },
            "119": {
                "start": {
                    "line": 576,
                    "column": 12
                },
                "end": {
                    "line": 576,
                    "column": 67
                }
            },
            "120": {
                "start": {
                    "line": 578,
                    "column": 12
                },
                "end": {
                    "line": 578,
                    "column": 63
                }
            },
            "121": {
                "start": {
                    "line": 581,
                    "column": 8
                },
                "end": {
                    "line": 589,
                    "column": 9
                }
            },
            "122": {
                "start": {
                    "line": 582,
                    "column": 12
                },
                "end": {
                    "line": 582,
                    "column": 39
                }
            },
            "123": {
                "start": {
                    "line": 584,
                    "column": 12
                },
                "end": {
                    "line": 588,
                    "column": 13
                }
            },
            "124": {
                "start": {
                    "line": 587,
                    "column": 16
                },
                "end": {
                    "line": 587,
                    "column": 38
                }
            },
            "125": {
                "start": {
                    "line": 600,
                    "column": 8
                },
                "end": {
                    "line": 600,
                    "column": 68
                }
            },
            "126": {
                "start": {
                    "line": 613,
                    "column": 8
                },
                "end": {
                    "line": 614,
                    "column": 35
                }
            },
            "127": {
                "start": {
                    "line": 616,
                    "column": 8
                },
                "end": {
                    "line": 619,
                    "column": 9
                }
            },
            "128": {
                "start": {
                    "line": 618,
                    "column": 12
                },
                "end": {
                    "line": 618,
                    "column": 24
                }
            },
            "129": {
                "start": {
                    "line": 630,
                    "column": 8
                },
                "end": {
                    "line": 631,
                    "column": 32
                }
            },
            "130": {
                "start": {
                    "line": 633,
                    "column": 8
                },
                "end": {
                    "line": 635,
                    "column": 9
                }
            },
            "131": {
                "start": {
                    "line": 634,
                    "column": 12
                },
                "end": {
                    "line": 634,
                    "column": 57
                }
            },
            "132": {
                "start": {
                    "line": 637,
                    "column": 8
                },
                "end": {
                    "line": 639,
                    "column": 9
                }
            },
            "133": {
                "start": {
                    "line": 638,
                    "column": 12
                },
                "end": {
                    "line": 638,
                    "column": 53
                }
            },
            "134": {
                "start": {
                    "line": 649,
                    "column": 8
                },
                "end": {
                    "line": 649,
                    "column": 39
                }
            },
            "135": {
                "start": {
                    "line": 651,
                    "column": 8
                },
                "end": {
                    "line": 657,
                    "column": 9
                }
            },
            "136": {
                "start": {
                    "line": 656,
                    "column": 12
                },
                "end": {
                    "line": 656,
                    "column": 24
                }
            },
            "137": {
                "start": {
                    "line": 667,
                    "column": 8
                },
                "end": {
                    "line": 667,
                    "column": 38
                }
            },
            "138": {
                "start": {
                    "line": 678,
                    "column": 8
                },
                "end": {
                    "line": 678,
                    "column": 78
                }
            },
            "139": {
                "start": {
                    "line": 680,
                    "column": 8
                },
                "end": {
                    "line": 680,
                    "column": 35
                }
            },
            "140": {
                "start": {
                    "line": 682,
                    "column": 8
                },
                "end": {
                    "line": 684,
                    "column": 9
                }
            },
            "141": {
                "start": {
                    "line": 683,
                    "column": 12
                },
                "end": {
                    "line": 683,
                    "column": 46
                }
            },
            "142": {
                "start": {
                    "line": 695,
                    "column": 8
                },
                "end": {
                    "line": 695,
                    "column": 36
                }
            },
            "143": {
                "start": {
                    "line": 696,
                    "column": 8
                },
                "end": {
                    "line": 696,
                    "column": 38
                }
            },
            "144": {
                "start": {
                    "line": 707,
                    "column": 8
                },
                "end": {
                    "line": 707,
                    "column": 36
                }
            },
            "145": {
                "start": {
                    "line": 709,
                    "column": 8
                },
                "end": {
                    "line": 711,
                    "column": 9
                }
            },
            "146": {
                "start": {
                    "line": 710,
                    "column": 12
                },
                "end": {
                    "line": 710,
                    "column": 49
                }
            },
            "147": {
                "start": {
                    "line": 722,
                    "column": 8
                },
                "end": {
                    "line": 722,
                    "column": 41
                }
            },
            "148": {
                "start": {
                    "line": 733,
                    "column": 8
                },
                "end": {
                    "line": 733,
                    "column": 39
                }
            },
            "149": {
                "start": {
                    "line": 735,
                    "column": 8
                },
                "end": {
                    "line": 735,
                    "column": 40
                }
            },
            "150": {
                "start": {
                    "line": 736,
                    "column": 8
                },
                "end": {
                    "line": 736,
                    "column": 37
                }
            },
            "151": {
                "start": {
                    "line": 749,
                    "column": 8
                },
                "end": {
                    "line": 749,
                    "column": 33
                }
            },
            "152": {
                "start": {
                    "line": 752,
                    "column": 8
                },
                "end": {
                    "line": 752,
                    "column": 32
                }
            },
            "153": {
                "start": {
                    "line": 753,
                    "column": 8
                },
                "end": {
                    "line": 753,
                    "column": 32
                }
            },
            "154": {
                "start": {
                    "line": 754,
                    "column": 8
                },
                "end": {
                    "line": 754,
                    "column": 53
                }
            },
            "155": {
                "start": {
                    "line": 755,
                    "column": 8
                },
                "end": {
                    "line": 755,
                    "column": 20
                }
            },
            "156": {
                "start": {
                    "line": 851,
                    "column": 16
                },
                "end": {
                    "line": 851,
                    "column": 55
                }
            },
            "157": {
                "start": {
                    "line": 876,
                    "column": 0
                },
                "end": {
                    "line": 876,
                    "column": 26
                }
            },
            "158": {
                "start": {
                    "line": 885,
                    "column": 0
                },
                "end": {
                    "line": 885,
                    "column": 22
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 27,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 27,
                            "column": 14
                        },
                        "end": {
                            "line": 27,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 27,
                            "column": 25
                        },
                        "end": {
                            "line": 27,
                            "column": 36
                        }
                    }
                ]
            },
            "2": {
                "line": 83,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 83,
                            "column": 8
                        },
                        "end": {
                            "line": 83,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 83,
                            "column": 8
                        },
                        "end": {
                            "line": 83,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 120,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 120,
                            "column": 8
                        },
                        "end": {
                            "line": 120,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 120,
                            "column": 8
                        },
                        "end": {
                            "line": 120,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 149,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 149,
                            "column": 8
                        },
                        "end": {
                            "line": 149,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 149,
                            "column": 8
                        },
                        "end": {
                            "line": 149,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 177,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 177,
                            "column": 44
                        },
                        "end": {
                            "line": 177,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 177,
                            "column": 51
                        },
                        "end": {
                            "line": 177,
                            "column": 75
                        }
                    }
                ]
            },
            "6": {
                "line": 191,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 191,
                            "column": 8
                        },
                        "end": {
                            "line": 191,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 191,
                            "column": 8
                        },
                        "end": {
                            "line": 191,
                            "column": 8
                        }
                    }
                ]
            },
            "7": {
                "line": 192,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 192,
                            "column": 12
                        },
                        "end": {
                            "line": 192,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 192,
                            "column": 12
                        },
                        "end": {
                            "line": 192,
                            "column": 12
                        }
                    }
                ]
            },
            "8": {
                "line": 198,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 198,
                            "column": 12
                        },
                        "end": {
                            "line": 198,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 198,
                            "column": 12
                        },
                        "end": {
                            "line": 198,
                            "column": 12
                        }
                    }
                ]
            },
            "9": {
                "line": 205,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 205,
                            "column": 25
                        },
                        "end": {
                            "line": 205,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 205,
                            "column": 40
                        },
                        "end": {
                            "line": 205,
                            "column": 44
                        }
                    }
                ]
            },
            "10": {
                "line": 227,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 227,
                            "column": 8
                        },
                        "end": {
                            "line": 227,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 227,
                            "column": 8
                        },
                        "end": {
                            "line": 227,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 228,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 228,
                            "column": 23
                        },
                        "end": {
                            "line": 228,
                            "column": 54
                        }
                    },
                    {
                        "start": {
                            "line": 229,
                            "column": 21
                        },
                        "end": {
                            "line": 229,
                            "column": 53
                        }
                    }
                ]
            },
            "12": {
                "line": 229,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 229,
                            "column": 42
                        },
                        "end": {
                            "line": 229,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 229,
                            "column": 49
                        },
                        "end": {
                            "line": 229,
                            "column": 53
                        }
                    }
                ]
            },
            "13": {
                "line": 250,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 250,
                            "column": 30
                        },
                        "end": {
                            "line": 250,
                            "column": 65
                        }
                    },
                    {
                        "start": {
                            "line": 251,
                            "column": 20
                        },
                        "end": {
                            "line": 251,
                            "column": 65
                        }
                    }
                ]
            },
            "14": {
                "line": 251,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 251,
                            "column": 20
                        },
                        "end": {
                            "line": 251,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 251,
                            "column": 42
                        },
                        "end": {
                            "line": 251,
                            "column": 65
                        }
                    }
                ]
            },
            "15": {
                "line": 253,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 253,
                            "column": 30
                        },
                        "end": {
                            "line": 253,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 253,
                            "column": 42
                        },
                        "end": {
                            "line": 253,
                            "column": 46
                        }
                    }
                ]
            },
            "16": {
                "line": 270,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 270,
                            "column": 42
                        },
                        "end": {
                            "line": 270,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 270,
                            "column": 50
                        },
                        "end": {
                            "line": 270,
                            "column": 57
                        }
                    }
                ]
            },
            "17": {
                "line": 291,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 291,
                            "column": 42
                        },
                        "end": {
                            "line": 291,
                            "column": 65
                        }
                    },
                    {
                        "start": {
                            "line": 291,
                            "column": 68
                        },
                        "end": {
                            "line": 291,
                            "column": 75
                        }
                    }
                ]
            },
            "18": {
                "line": 307,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 307,
                            "column": 8
                        },
                        "end": {
                            "line": 307,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 307,
                            "column": 8
                        },
                        "end": {
                            "line": 307,
                            "column": 8
                        }
                    }
                ]
            },
            "19": {
                "line": 311,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 311,
                            "column": 26
                        },
                        "end": {
                            "line": 311,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 311,
                            "column": 40
                        },
                        "end": {
                            "line": 311,
                            "column": 69
                        }
                    },
                    {
                        "start": {
                            "line": 311,
                            "column": 74
                        },
                        "end": {
                            "line": 311,
                            "column": 83
                        }
                    }
                ]
            },
            "20": {
                "line": 321,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 321,
                            "column": 12
                        },
                        "end": {
                            "line": 321,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 321,
                            "column": 12
                        },
                        "end": {
                            "line": 321,
                            "column": 12
                        }
                    }
                ]
            },
            "21": {
                "line": 321,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 321,
                            "column": 16
                        },
                        "end": {
                            "line": 321,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 321,
                            "column": 37
                        },
                        "end": {
                            "line": 321,
                            "column": 78
                        }
                    }
                ]
            },
            "22": {
                "line": 415,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 415,
                            "column": 23
                        },
                        "end": {
                            "line": 415,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 415,
                            "column": 47
                        },
                        "end": {
                            "line": 415,
                            "column": 78
                        }
                    }
                ]
            },
            "23": {
                "line": 473,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 473,
                            "column": 8
                        },
                        "end": {
                            "line": 473,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 473,
                            "column": 8
                        },
                        "end": {
                            "line": 473,
                            "column": 8
                        }
                    }
                ]
            },
            "24": {
                "line": 479,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 479,
                            "column": 8
                        },
                        "end": {
                            "line": 479,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 479,
                            "column": 8
                        },
                        "end": {
                            "line": 479,
                            "column": 8
                        }
                    }
                ]
            },
            "25": {
                "line": 486,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 486,
                            "column": 8
                        },
                        "end": {
                            "line": 486,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 486,
                            "column": 8
                        },
                        "end": {
                            "line": 486,
                            "column": 8
                        }
                    }
                ]
            },
            "26": {
                "line": 486,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 486,
                            "column": 12
                        },
                        "end": {
                            "line": 486,
                            "column": 41
                        }
                    },
                    {
                        "start": {
                            "line": 486,
                            "column": 45
                        },
                        "end": {
                            "line": 486,
                            "column": 67
                        }
                    }
                ]
            },
            "27": {
                "line": 498,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 498,
                            "column": 25
                        },
                        "end": {
                            "line": 504,
                            "column": 5
                        }
                    },
                    {
                        "start": {
                            "line": 504,
                            "column": 8
                        },
                        "end": {
                            "line": 504,
                            "column": 22
                        }
                    }
                ]
            },
            "28": {
                "line": 501,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 501,
                            "column": 8
                        },
                        "end": {
                            "line": 501,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 501,
                            "column": 8
                        },
                        "end": {
                            "line": 501,
                            "column": 8
                        }
                    }
                ]
            },
            "29": {
                "line": 515,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 515,
                            "column": 8
                        },
                        "end": {
                            "line": 515,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 515,
                            "column": 8
                        },
                        "end": {
                            "line": 515,
                            "column": 8
                        }
                    }
                ]
            },
            "30": {
                "line": 520,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 520,
                            "column": 8
                        },
                        "end": {
                            "line": 520,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 520,
                            "column": 8
                        },
                        "end": {
                            "line": 520,
                            "column": 8
                        }
                    }
                ]
            },
            "31": {
                "line": 527,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 527,
                            "column": 8
                        },
                        "end": {
                            "line": 527,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 527,
                            "column": 8
                        },
                        "end": {
                            "line": 527,
                            "column": 8
                        }
                    }
                ]
            },
            "32": {
                "line": 542,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 542,
                            "column": 8
                        },
                        "end": {
                            "line": 542,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 542,
                            "column": 8
                        },
                        "end": {
                            "line": 542,
                            "column": 8
                        }
                    }
                ]
            },
            "33": {
                "line": 570,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 570,
                            "column": 8
                        },
                        "end": {
                            "line": 570,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 570,
                            "column": 8
                        },
                        "end": {
                            "line": 570,
                            "column": 8
                        }
                    }
                ]
            },
            "34": {
                "line": 570,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 570,
                            "column": 12
                        },
                        "end": {
                            "line": 570,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 570,
                            "column": 23
                        },
                        "end": {
                            "line": 570,
                            "column": 36
                        }
                    }
                ]
            },
            "35": {
                "line": 574,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 574,
                            "column": 8
                        },
                        "end": {
                            "line": 574,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 574,
                            "column": 8
                        },
                        "end": {
                            "line": 574,
                            "column": 8
                        }
                    }
                ]
            },
            "36": {
                "line": 581,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 581,
                            "column": 8
                        },
                        "end": {
                            "line": 581,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 581,
                            "column": 8
                        },
                        "end": {
                            "line": 581,
                            "column": 8
                        }
                    }
                ]
            },
            "37": {
                "line": 582,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 582,
                            "column": 19
                        },
                        "end": {
                            "line": 582,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 582,
                            "column": 29
                        },
                        "end": {
                            "line": 582,
                            "column": 38
                        }
                    }
                ]
            },
            "38": {
                "line": 584,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 584,
                            "column": 12
                        },
                        "end": {
                            "line": 584,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 584,
                            "column": 12
                        },
                        "end": {
                            "line": 584,
                            "column": 12
                        }
                    }
                ]
            },
            "39": {
                "line": 584,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 584,
                            "column": 16
                        },
                        "end": {
                            "line": 584,
                            "column": 60
                        }
                    },
                    {
                        "start": {
                            "line": 585,
                            "column": 23
                        },
                        "end": {
                            "line": 585,
                            "column": 61
                        }
                    }
                ]
            },
            "40": {
                "line": 600,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 600,
                            "column": 26
                        },
                        "end": {
                            "line": 600,
                            "column": 34
                        }
                    },
                    {
                        "start": {
                            "line": 600,
                            "column": 38
                        },
                        "end": {
                            "line": 600,
                            "column": 66
                        }
                    }
                ]
            },
            "41": {
                "line": 616,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 616,
                            "column": 8
                        },
                        "end": {
                            "line": 616,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 616,
                            "column": 8
                        },
                        "end": {
                            "line": 616,
                            "column": 8
                        }
                    }
                ]
            },
            "42": {
                "line": 616,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 616,
                            "column": 11
                        },
                        "end": {
                            "line": 616,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 616,
                            "column": 41
                        },
                        "end": {
                            "line": 616,
                            "column": 63
                        }
                    },
                    {
                        "start": {
                            "line": 617,
                            "column": 16
                        },
                        "end": {
                            "line": 617,
                            "column": 66
                        }
                    }
                ]
            },
            "43": {
                "line": 633,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 633,
                            "column": 8
                        },
                        "end": {
                            "line": 633,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 633,
                            "column": 8
                        },
                        "end": {
                            "line": 633,
                            "column": 8
                        }
                    }
                ]
            },
            "44": {
                "line": 637,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 637,
                            "column": 8
                        },
                        "end": {
                            "line": 637,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 637,
                            "column": 8
                        },
                        "end": {
                            "line": 637,
                            "column": 8
                        }
                    }
                ]
            },
            "45": {
                "line": 651,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 651,
                            "column": 8
                        },
                        "end": {
                            "line": 651,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 651,
                            "column": 8
                        },
                        "end": {
                            "line": 651,
                            "column": 8
                        }
                    }
                ]
            },
            "46": {
                "line": 651,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 651,
                            "column": 12
                        },
                        "end": {
                            "line": 651,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 652,
                            "column": 16
                        },
                        "end": {
                            "line": 652,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 653,
                            "column": 17
                        },
                        "end": {
                            "line": 653,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 654,
                            "column": 20
                        },
                        "end": {
                            "line": 654,
                            "column": 42
                        }
                    },
                    {
                        "start": {
                            "line": 655,
                            "column": 20
                        },
                        "end": {
                            "line": 655,
                            "column": 42
                        }
                    }
                ]
            },
            "47": {
                "line": 682,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 682,
                            "column": 8
                        },
                        "end": {
                            "line": 682,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 682,
                            "column": 8
                        },
                        "end": {
                            "line": 682,
                            "column": 8
                        }
                    }
                ]
            },
            "48": {
                "line": 709,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 709,
                            "column": 8
                        },
                        "end": {
                            "line": 709,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 709,
                            "column": 8
                        },
                        "end": {
                            "line": 709,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('autocomplete-list', function (Y, NAME) {",
            "",
            "/**",
            "Traditional autocomplete dropdown list widget, just like Mom used to make.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-list",
            "**/",
            "",
            "/**",
            "Traditional autocomplete dropdown list widget, just like Mom used to make.",
            "",
            "@class AutoCompleteList",
            "@extends Widget",
            "@uses AutoCompleteBase",
            "@uses WidgetPosition",
            "@uses WidgetPositionAlign",
            "@constructor",
            "@param {Object} config Configuration object.",
            "**/",
            "",
            "var Lang   = Y.Lang,",
            "    Node   = Y.Node,",
            "    YArray = Y.Array,",
            "",
            "    // Whether or not we need an iframe shim.",
            "    useShim = Y.UA.ie && Y.UA.ie < 7,",
            "",
            "    // keyCode constants.",
            "    KEY_TAB = 9,",
            "",
            "    // String shorthand.",
            "    _CLASS_ITEM        = '_CLASS_ITEM',",
            "    _CLASS_ITEM_ACTIVE = '_CLASS_ITEM_ACTIVE',",
            "    _CLASS_ITEM_HOVER  = '_CLASS_ITEM_HOVER',",
            "    _SELECTOR_ITEM     = '_SELECTOR_ITEM',",
            "",
            "    ACTIVE_ITEM      = 'activeItem',",
            "    ALWAYS_SHOW_LIST = 'alwaysShowList',",
            "    CIRCULAR         = 'circular',",
            "    HOVERED_ITEM     = 'hoveredItem',",
            "    ID               = 'id',",
            "    ITEM             = 'item',",
            "    LIST             = 'list',",
            "    RESULT           = 'result',",
            "    RESULTS          = 'results',",
            "    VISIBLE          = 'visible',",
            "    WIDTH            = 'width',",
            "",
            "    // Event names.",
            "    EVT_SELECT = 'select',",
            "",
            "List = Y.Base.create('autocompleteList', Y.Widget, [",
            "    Y.AutoCompleteBase,",
            "    Y.WidgetPosition,",
            "    Y.WidgetPositionAlign",
            "], {",
            "    // -- Prototype Properties -------------------------------------------------",
            "    ARIA_TEMPLATE: '<div/>',",
            "    ITEM_TEMPLATE: '<li/>',",
            "    LIST_TEMPLATE: '<ul/>',",
            "",
            "    // Widget automatically attaches delegated event handlers to everything in",
            "    // Y.Node.DOM_EVENTS, including synthetic events. Since Widget's event",
            "    // delegation won't work for the synthetic valuechange event, and since",
            "    // it creates a name collision between the backcompat \"valueChange\" synth",
            "    // event alias and AutoCompleteList's \"valueChange\" event for the \"value\"",
            "    // attr, this hack is necessary in order to prevent Widget from attaching",
            "    // valuechange handlers.",
            "    UI_EVENTS: (function () {",
            "        var uiEvents = Y.merge(Y.Node.DOM_EVENTS);",
            "",
            "        delete uiEvents.valuechange;",
            "        delete uiEvents.valueChange;",
            "",
            "        return uiEvents;",
            "    }()),",
            "",
            "    // -- Lifecycle Prototype Methods ------------------------------------------",
            "    initializer: function () {",
            "        var inputNode = this.get('inputNode');",
            "",
            "        if (!inputNode) {",
            "            Y.error('No inputNode specified.');",
            "            return;",
            "        }",
            "",
            "        this._inputNode  = inputNode;",
            "        this._listEvents = [];",
            "",
            "        // This ensures that the list is rendered inside the same parent as the",
            "        // input node by default, which is necessary for proper ARIA support.",
            "        this.DEF_PARENT_NODE = inputNode.get('parentNode');",
            "",
            "        // Cache commonly used classnames and selectors for performance.",
            "        this[_CLASS_ITEM]        = this.getClassName(ITEM);",
            "        this[_CLASS_ITEM_ACTIVE] = this.getClassName(ITEM, 'active');",
            "        this[_CLASS_ITEM_HOVER]  = this.getClassName(ITEM, 'hover');",
            "        this[_SELECTOR_ITEM]     = '.' + this[_CLASS_ITEM];",
            "",
            "        /**",
            "        Fires when an autocomplete suggestion is selected from the list,",
            "        typically via a keyboard action or mouse click.",
            "",
            "        @event select",
            "        @param {Node} itemNode List item node that was selected.",
            "        @param {Object} result AutoComplete result object.",
            "        @preventable _defSelectFn",
            "        **/",
            "        this.publish(EVT_SELECT, {",
            "            defaultFn: this._defSelectFn",
            "        });",
            "    },",
            "",
            "    destructor: function () {",
            "        while (this._listEvents.length) {",
            "            this._listEvents.pop().detach();",
            "        }",
            "",
            "        if (this._ariaNode) {",
            "            this._ariaNode.remove().destroy(true);",
            "        }",
            "    },",
            "",
            "    bindUI: function () {",
            "        this._bindInput();",
            "        this._bindList();",
            "    },",
            "",
            "    renderUI: function () {",
            "        var ariaNode    = this._createAriaNode(),",
            "            boundingBox = this.get('boundingBox'),",
            "            contentBox  = this.get('contentBox'),",
            "            inputNode   = this._inputNode,",
            "            listNode    = this._createListNode(),",
            "            parentNode  = inputNode.get('parentNode');",
            "",
            "        inputNode.addClass(this.getClassName('input')).setAttrs({",
            "            'aria-autocomplete': LIST,",
            "            'aria-expanded'    : false,",
            "            'aria-owns'        : listNode.get('id')",
            "        });",
            "",
            "        // ARIA node must be outside the widget or announcements won't be made",
            "        // when the widget is hidden.",
            "        parentNode.append(ariaNode);",
            "",
            "        // Add an iframe shim for IE6.",
            "        if (useShim) {",
            "            boundingBox.plug(Y.Plugin.Shim);",
            "        }",
            "",
            "        this._ariaNode    = ariaNode;",
            "        this._boundingBox = boundingBox;",
            "        this._contentBox  = contentBox;",
            "        this._listNode    = listNode;",
            "        this._parentNode  = parentNode;",
            "    },",
            "",
            "    syncUI: function () {",
            "        // No need to call _syncPosition() here; the other _sync methods will",
            "        // call it when necessary.",
            "        this._syncResults();",
            "        this._syncVisibility();",
            "    },",
            "",
            "    // -- Public Prototype Methods ---------------------------------------------",
            "",
            "    /**",
            "    Hides the list, unless the `alwaysShowList` attribute is `true`.",
            "",
            "    @method hide",
            "    @see show",
            "    @chainable",
            "    **/",
            "    hide: function () {",
            "        return this.get(ALWAYS_SHOW_LIST) ? this : this.set(VISIBLE, false);",
            "    },",
            "",
            "    /**",
            "    Selects the specified _itemNode_, or the current `activeItem` if _itemNode_",
            "    is not specified.",
            "",
            "    @method selectItem",
            "    @param {Node} [itemNode] Item node to select.",
            "    @param {EventFacade} [originEvent] Event that triggered the selection, if",
            "        any.",
            "    @chainable",
            "    **/",
            "    selectItem: function (itemNode, originEvent) {",
            "        if (itemNode) {",
            "            if (!itemNode.hasClass(this[_CLASS_ITEM])) {",
            "                return this;",
            "            }",
            "        } else {",
            "            itemNode = this.get(ACTIVE_ITEM);",
            "",
            "            if (!itemNode) {",
            "                return this;",
            "            }",
            "        }",
            "",
            "        this.fire(EVT_SELECT, {",
            "            itemNode   : itemNode,",
            "            originEvent: originEvent || null,",
            "            result     : itemNode.getData(RESULT)",
            "        });",
            "",
            "        return this;",
            "    },",
            "",
            "    // -- Protected Prototype Methods ------------------------------------------",
            "",
            "    /**",
            "    Activates the next item after the currently active item. If there is no next",
            "    item and the `circular` attribute is `true`, focus will wrap back to the",
            "    input node.",
            "",
            "    @method _activateNextItem",
            "    @chainable",
            "    @protected",
            "    **/",
            "    _activateNextItem: function () {",
            "        var item = this.get(ACTIVE_ITEM),",
            "            nextItem;",
            "",
            "        if (item) {",
            "            nextItem = item.next(this[_SELECTOR_ITEM]) ||",
            "                    (this.get(CIRCULAR) ? null : item);",
            "        } else {",
            "            nextItem = this._getFirstItemNode();",
            "        }",
            "",
            "        this.set(ACTIVE_ITEM, nextItem);",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Activates the item previous to the currently active item. If there is no",
            "    previous item and the `circular` attribute is `true`, focus will wrap back",
            "    to the input node.",
            "",
            "    @method _activatePrevItem",
            "    @chainable",
            "    @protected",
            "    **/",
            "    _activatePrevItem: function () {",
            "        var item     = this.get(ACTIVE_ITEM),",
            "            prevItem = item ? item.previous(this[_SELECTOR_ITEM]) :",
            "                    this.get(CIRCULAR) && this._getLastItemNode();",
            "",
            "        this.set(ACTIVE_ITEM, prevItem || null);",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Appends the specified result _items_ to the list inside a new item node.",
            "",
            "    @method _add",
            "    @param {Array|Node|HTMLElement|String} items Result item or array of",
            "        result items.",
            "    @return {NodeList} Added nodes.",
            "    @protected",
            "    **/",
            "    _add: function (items) {",
            "        var itemNodes = [];",
            "",
            "        YArray.each(Lang.isArray(items) ? items : [items], function (item) {",
            "            itemNodes.push(this._createItemNode(item).setData(RESULT, item));",
            "        }, this);",
            "",
            "        itemNodes = Y.all(itemNodes);",
            "        this._listNode.append(itemNodes.toFrag());",
            "",
            "        return itemNodes;",
            "    },",
            "",
            "    /**",
            "    Updates the ARIA live region with the specified message.",
            "",
            "    @method _ariaSay",
            "    @param {String} stringId String id (from the `strings` attribute) of the",
            "        message to speak.",
            "    @param {Object} [subs] Substitutions for placeholders in the string.",
            "    @protected",
            "    **/",
            "    _ariaSay: function (stringId, subs) {",
            "        var message = this.get('strings.' + stringId);",
            "        this._ariaNode.set('text', subs ? Lang.sub(message, subs) : message);",
            "    },",
            "",
            "    /**",
            "    Binds `inputNode` events and behavior.",
            "",
            "    @method _bindInput",
            "    @protected",
            "    **/",
            "    _bindInput: function () {",
            "        var inputNode = this._inputNode,",
            "            alignNode, alignWidth, tokenInput;",
            "",
            "        // Null align means we can auto-align. Set align to false to prevent",
            "        // auto-alignment, or a valid alignment config to customize the",
            "        // alignment.",
            "        if (this.get('align') === null) {",
            "            // If this is a tokenInput, align with its bounding box.",
            "            // Otherwise, align with the inputNode. Bit of a cheat.",
            "            tokenInput = this.get('tokenInput');",
            "            alignNode  = (tokenInput && tokenInput.get('boundingBox')) || inputNode;",
            "",
            "            this.set('align', {",
            "                node  : alignNode,",
            "                points: ['tl', 'bl']",
            "            });",
            "",
            "            // If no width config is set, attempt to set the list's width to the",
            "            // width of the alignment node. If the alignment node's width is",
            "            // falsy, do nothing.",
            "            if (!this.get(WIDTH) && (alignWidth = alignNode.get('offsetWidth'))) {",
            "                this.set(WIDTH, alignWidth);",
            "            }",
            "        }",
            "",
            "        // Attach inputNode events.",
            "        this._listEvents = this._listEvents.concat([",
            "            inputNode.after('blur',  this._afterListInputBlur, this),",
            "            inputNode.after('focus', this._afterListInputFocus, this)",
            "        ]);",
            "    },",
            "",
            "    /**",
            "    Binds list events.",
            "",
            "    @method _bindList",
            "    @protected",
            "    **/",
            "    _bindList: function () {",
            "        this._listEvents = this._listEvents.concat([",
            "            Y.one('doc').after('click', this._afterDocClick, this),",
            "            Y.one('win').after('windowresize', this._syncPosition, this),",
            "",
            "            this.after({",
            "                mouseover: this._afterMouseOver,",
            "                mouseout : this._afterMouseOut,",
            "",
            "                activeItemChange    : this._afterActiveItemChange,",
            "                alwaysShowListChange: this._afterAlwaysShowListChange,",
            "                hoveredItemChange   : this._afterHoveredItemChange,",
            "                resultsChange       : this._afterResultsChange,",
            "                visibleChange       : this._afterVisibleChange",
            "            }),",
            "",
            "            this._listNode.delegate('click', this._onItemClick,",
            "                    this[_SELECTOR_ITEM], this)",
            "        ]);",
            "    },",
            "",
            "    /**",
            "    Clears the contents of the tray.",
            "",
            "    @method _clear",
            "    @protected",
            "    **/",
            "    _clear: function () {",
            "        this.set(ACTIVE_ITEM, null);",
            "        this._set(HOVERED_ITEM, null);",
            "",
            "        this._listNode.get('children').remove(true);",
            "    },",
            "",
            "    /**",
            "    Creates and returns an ARIA live region node.",
            "",
            "    @method _createAriaNode",
            "    @return {Node} ARIA node.",
            "    @protected",
            "    **/",
            "    _createAriaNode: function () {",
            "        var ariaNode = Node.create(this.ARIA_TEMPLATE);",
            "",
            "        return ariaNode.addClass(this.getClassName('aria')).setAttrs({",
            "            'aria-live': 'polite',",
            "            role       : 'status'",
            "        });",
            "    },",
            "",
            "    /**",
            "    Creates and returns an item node with the specified _content_.",
            "",
            "    @method _createItemNode",
            "    @param {Object} result Result object.",
            "    @return {Node} Item node.",
            "    @protected",
            "    **/",
            "    _createItemNode: function (result) {",
            "        var itemNode = Node.create(this.ITEM_TEMPLATE);",
            "",
            "        return itemNode.addClass(this[_CLASS_ITEM]).setAttrs({",
            "            id  : Y.stamp(itemNode),",
            "            role: 'option'",
            "        }).setAttribute('data-text', result.text).append(result.display);",
            "    },",
            "",
            "    /**",
            "    Creates and returns a list node. If the `listNode` attribute is already set",
            "    to an existing node, that node will be used.",
            "",
            "    @method _createListNode",
            "    @return {Node} List node.",
            "    @protected",
            "    **/",
            "    _createListNode: function () {",
            "        var listNode = this.get('listNode') || Node.create(this.LIST_TEMPLATE);",
            "",
            "        listNode.addClass(this.getClassName(LIST)).setAttrs({",
            "            id  : Y.stamp(listNode),",
            "            role: 'listbox'",
            "        });",
            "",
            "        this._set('listNode', listNode);",
            "        this.get('contentBox').append(listNode);",
            "",
            "        return listNode;",
            "    },",
            "",
            "    /**",
            "    Gets the first item node in the list, or `null` if the list is empty.",
            "",
            "    @method _getFirstItemNode",
            "    @return {Node|null}",
            "    @protected",
            "    **/",
            "    _getFirstItemNode: function () {",
            "        return this._listNode.one(this[_SELECTOR_ITEM]);",
            "    },",
            "",
            "    /**",
            "    Gets the last item node in the list, or `null` if the list is empty.",
            "",
            "    @method _getLastItemNode",
            "    @return {Node|null}",
            "    @protected",
            "    **/",
            "    _getLastItemNode: function () {",
            "        return this._listNode.one(this[_SELECTOR_ITEM] + ':last-child');",
            "    },",
            "",
            "    /**",
            "    Synchronizes the result list's position and alignment.",
            "",
            "    @method _syncPosition",
            "    @protected",
            "    **/",
            "    _syncPosition: function () {",
            "        // Force WidgetPositionAlign to refresh its alignment.",
            "        this._syncUIPosAlign();",
            "",
            "        // Resize the IE6 iframe shim to match the list's dimensions.",
            "        this._syncShim();",
            "    },",
            "",
            "    /**",
            "    Synchronizes the results displayed in the list with those in the _results_",
            "    argument, or with the `results` attribute if an argument is not provided.",
            "",
            "    @method _syncResults",
            "    @param {Array} [results] Results.",
            "    @protected",
            "    **/",
            "    _syncResults: function (results) {",
            "        if (!results) {",
            "            results = this.get(RESULTS);",
            "        }",
            "",
            "        this._clear();",
            "",
            "        if (results.length) {",
            "            this._add(results);",
            "            this._ariaSay('items_available');",
            "        }",
            "",
            "        this._syncPosition();",
            "",
            "        if (this.get('activateFirstItem') && !this.get(ACTIVE_ITEM)) {",
            "            this.set(ACTIVE_ITEM, this._getFirstItemNode());",
            "        }",
            "    },",
            "",
            "    /**",
            "    Synchronizes the size of the iframe shim used for IE6 and lower. In other",
            "    browsers, this method is a noop.",
            "",
            "    @method _syncShim",
            "    @protected",
            "    **/",
            "    _syncShim: useShim ? function () {",
            "        var shim = this._boundingBox.shim;",
            "",
            "        if (shim) {",
            "            shim.sync();",
            "        }",
            "    } : function () {},",
            "",
            "    /**",
            "    Synchronizes the visibility of the tray with the _visible_ argument, or with",
            "    the `visible` attribute if an argument is not provided.",
            "",
            "    @method _syncVisibility",
            "    @param {Boolean} [visible] Visibility.",
            "    @protected",
            "    **/",
            "    _syncVisibility: function (visible) {",
            "        if (this.get(ALWAYS_SHOW_LIST)) {",
            "            visible = true;",
            "            this.set(VISIBLE, visible);",
            "        }",
            "",
            "        if (typeof visible === 'undefined') {",
            "            visible = this.get(VISIBLE);",
            "        }",
            "",
            "        this._inputNode.set('aria-expanded', visible);",
            "        this._boundingBox.set('aria-hidden', !visible);",
            "",
            "        if (visible) {",
            "            this._syncPosition();",
            "        } else {",
            "            this.set(ACTIVE_ITEM, null);",
            "            this._set(HOVERED_ITEM, null);",
            "",
            "            // Force a reflow to work around a glitch in IE6 and 7 where some of",
            "            // the contents of the list will sometimes remain visible after the",
            "            // container is hidden.",
            "            this._boundingBox.get('offsetWidth');",
            "        }",
            "",
            "        // In some pages, IE7 fails to repaint the contents of the list after it",
            "        // becomes visible. Toggling a bogus class on the body forces a repaint",
            "        // that fixes the issue.",
            "        if (Y.UA.ie === 7) {",
            "            // Note: We don't actually need to use ClassNameManager here. This",
            "            // class isn't applying any actual styles; it's just frobbing the",
            "            // body element to force a repaint. The actual class name doesn't",
            "            // really matter.",
            "            Y.one('body')",
            "                .addClass('yui3-ie7-sucks')",
            "                .removeClass('yui3-ie7-sucks');",
            "        }",
            "    },",
            "",
            "    // -- Protected Event Handlers ---------------------------------------------",
            "",
            "    /**",
            "    Handles `activeItemChange` events.",
            "",
            "    @method _afterActiveItemChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterActiveItemChange: function (e) {",
            "        var inputNode = this._inputNode,",
            "            newVal    = e.newVal,",
            "            prevVal   = e.prevVal,",
            "            node;",
            "",
            "        // The previous item may have disappeared by the time this handler runs,",
            "        // so we need to be careful.",
            "        if (prevVal && prevVal._node) {",
            "            prevVal.removeClass(this[_CLASS_ITEM_ACTIVE]);",
            "        }",
            "",
            "        if (newVal) {",
            "            newVal.addClass(this[_CLASS_ITEM_ACTIVE]);",
            "            inputNode.set('aria-activedescendant', newVal.get(ID));",
            "        } else {",
            "            inputNode.removeAttribute('aria-activedescendant');",
            "        }",
            "",
            "        if (this.get('scrollIntoView')) {",
            "            node = newVal || inputNode;",
            "",
            "            if (!node.inRegion(Y.DOM.viewportRegion(), true)",
            "                    || !node.inRegion(this._contentBox, true)) {",
            "",
            "                node.scrollIntoView();",
            "            }",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `alwaysShowListChange` events.",
            "",
            "    @method _afterAlwaysShowListChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterAlwaysShowListChange: function (e) {",
            "        this.set(VISIBLE, e.newVal || this.get(RESULTS).length > 0);",
            "    },",
            "",
            "    /**",
            "    Handles click events on the document. If the click is outside both the",
            "    input node and the bounding box, the list will be hidden.",
            "",
            "    @method _afterDocClick",
            "    @param {EventFacade} e",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _afterDocClick: function (e) {",
            "        var boundingBox = this._boundingBox,",
            "            target      = e.target;",
            "",
            "        if(target !== this._inputNode && target !== boundingBox &&",
            "                target.ancestor('#' + boundingBox.get('id'), true)){",
            "            this.hide();",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `hoveredItemChange` events.",
            "",
            "    @method _afterHoveredItemChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterHoveredItemChange: function (e) {",
            "        var newVal  = e.newVal,",
            "            prevVal = e.prevVal;",
            "",
            "        if (prevVal) {",
            "            prevVal.removeClass(this[_CLASS_ITEM_HOVER]);",
            "        }",
            "",
            "        if (newVal) {",
            "            newVal.addClass(this[_CLASS_ITEM_HOVER]);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `inputNode` blur events.",
            "",
            "    @method _afterListInputBlur",
            "    @protected",
            "    **/",
            "    _afterListInputBlur: function () {",
            "        this._listInputFocused = false;",
            "",
            "        if (this.get(VISIBLE) &&",
            "                !this._mouseOverList &&",
            "                (this._lastInputKey !== KEY_TAB ||",
            "                    !this.get('tabSelect') ||",
            "                    !this.get(ACTIVE_ITEM))) {",
            "            this.hide();",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `inputNode` focus events.",
            "",
            "    @method _afterListInputFocus",
            "    @protected",
            "    **/",
            "    _afterListInputFocus: function () {",
            "        this._listInputFocused = true;",
            "    },",
            "",
            "    /**",
            "    Handles `mouseover` events.",
            "",
            "    @method _afterMouseOver",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterMouseOver: function (e) {",
            "        var itemNode = e.domEvent.target.ancestor(this[_SELECTOR_ITEM], true);",
            "",
            "        this._mouseOverList = true;",
            "",
            "        if (itemNode) {",
            "            this._set(HOVERED_ITEM, itemNode);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `mouseout` events.",
            "",
            "    @method _afterMouseOut",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterMouseOut: function () {",
            "        this._mouseOverList = false;",
            "        this._set(HOVERED_ITEM, null);",
            "    },",
            "",
            "    /**",
            "    Handles `resultsChange` events.",
            "",
            "    @method _afterResultsChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterResultsChange: function (e) {",
            "        this._syncResults(e.newVal);",
            "",
            "        if (!this.get(ALWAYS_SHOW_LIST)) {",
            "            this.set(VISIBLE, !!e.newVal.length);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Handles `visibleChange` events.",
            "",
            "    @method _afterVisibleChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterVisibleChange: function (e) {",
            "        this._syncVisibility(!!e.newVal);",
            "    },",
            "",
            "    /**",
            "    Delegated event handler for item `click` events.",
            "",
            "    @method _onItemClick",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _onItemClick: function (e) {",
            "        var itemNode = e.currentTarget;",
            "",
            "        this.set(ACTIVE_ITEM, itemNode);",
            "        this.selectItem(itemNode, e);",
            "    },",
            "",
            "    // -- Protected Default Event Handlers -------------------------------------",
            "",
            "    /**",
            "    Default `select` event handler.",
            "",
            "    @method _defSelectFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defSelectFn: function (e) {",
            "        var text = e.result.text;",
            "",
            "        // TODO: support typeahead completion, etc.",
            "        this._inputNode.focus();",
            "        this._updateValue(text);",
            "        this._ariaSay('item_selected', {item: text});",
            "        this.hide();",
            "    }",
            "}, {",
            "    ATTRS: {",
            "        /**",
            "        If `true`, the first item in the list will be activated by default when",
            "        the list is initially displayed and when results change.",
            "",
            "        @attribute activateFirstItem",
            "        @type Boolean",
            "        @default false",
            "        **/",
            "        activateFirstItem: {",
            "            value: false",
            "        },",
            "",
            "        /**",
            "        Item that's currently active, if any. When the user presses enter, this",
            "        is the item that will be selected.",
            "",
            "        @attribute activeItem",
            "        @type Node",
            "        **/",
            "        activeItem: {",
            "            setter: Y.one,",
            "            value: null",
            "        },",
            "",
            "        /**",
            "        If `true`, the list will remain visible even when there are no results",
            "        to display.",
            "",
            "        @attribute alwaysShowList",
            "        @type Boolean",
            "        @default false",
            "        **/",
            "        alwaysShowList: {",
            "            value: false",
            "        },",
            "",
            "        /**",
            "        If `true`, keyboard navigation will wrap around to the opposite end of",
            "        the list when navigating past the first or last item.",
            "",
            "        @attribute circular",
            "        @type Boolean",
            "        @default true",
            "        **/",
            "        circular: {",
            "            value: true",
            "        },",
            "",
            "        /**",
            "        Item currently being hovered over by the mouse, if any.",
            "",
            "        @attribute hoveredItem",
            "        @type Node|null",
            "        @readOnly",
            "        **/",
            "        hoveredItem: {",
            "            readOnly: true,",
            "            value: null",
            "        },",
            "",
            "        /**",
            "        Node that will contain result items.",
            "",
            "        @attribute listNode",
            "        @type Node|null",
            "        @initOnly",
            "        **/",
            "        listNode: {",
            "            writeOnce: 'initOnly',",
            "            value: null",
            "        },",
            "",
            "        /**",
            "        If `true`, the viewport will be scrolled to ensure that the active list",
            "        item is visible when necessary.",
            "",
            "        @attribute scrollIntoView",
            "        @type Boolean",
            "        @default false",
            "        **/",
            "        scrollIntoView: {",
            "            value: false",
            "        },",
            "",
            "        /**",
            "        Translatable strings used by the AutoCompleteList widget.",
            "",
            "        @attribute strings",
            "        @type Object",
            "        **/",
            "        strings: {",
            "            valueFn: function () {",
            "                return Y.Intl.get('autocomplete-list');",
            "            }",
            "        },",
            "",
            "        /**",
            "        If `true`, pressing the tab key while the list is visible will select",
            "        the active item, if any.",
            "",
            "        @attribute tabSelect",
            "        @type Boolean",
            "        @default true",
            "        **/",
            "        tabSelect: {",
            "            value: true",
            "        },",
            "",
            "        // The \"visible\" attribute is documented in Widget.",
            "        visible: {",
            "            value: false",
            "        }",
            "    },",
            "",
            "    CSS_PREFIX: Y.ClassNameManager.getClassName('aclist')",
            "});",
            "",
            "Y.AutoCompleteList = List;",
            "",
            "/**",
            "Alias for <a href=\"AutoCompleteList.html\">`AutoCompleteList`</a>. See that class",
            "for API docs.",
            "",
            "@class AutoComplete",
            "**/",
            "",
            "Y.AutoComplete = List;",
            "",
            "",
            "}, '@VERSION@', {",
            "    \"lang\": [",
            "        \"en\",",
            "        \"es\",",
            "        \"hu\",",
            "        \"it\"",
            "    ],",
            "    \"requires\": [",
            "        \"autocomplete-base\",",
            "        \"event-resize\",",
            "        \"node-screen\",",
            "        \"selector-css3\",",
            "        \"shim-plugin\",",
            "        \"widget\",",
            "        \"widget-position\",",
            "        \"widget-position-align\"",
            "    ],",
            "    \"skinnable\": true",
            "});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "22": 1,
            "71": 1,
            "73": 1,
            "74": 1,
            "76": 1,
            "81": 22,
            "83": 22,
            "84": 0,
            "85": 0,
            "88": 22,
            "89": 22,
            "93": 22,
            "96": 22,
            "97": 22,
            "98": 22,
            "99": 22,
            "110": 22,
            "116": 21,
            "117": 120,
            "120": 21,
            "121": 20,
            "126": 21,
            "127": 21,
            "131": 21,
            "138": 21,
            "146": 21,
            "149": 21,
            "150": 0,
            "153": 21,
            "154": 21,
            "155": 21,
            "156": 21,
            "157": 21,
            "163": 21,
            "164": 21,
            "177": 7,
            "191": 4,
            "192": 4,
            "193": 0,
            "196": 0,
            "198": 0,
            "199": 0,
            "203": 4,
            "209": 4,
            "224": 7,
            "227": 7,
            "228": 4,
            "231": 3,
            "234": 7,
            "236": 7,
            "249": 7,
            "253": 7,
            "255": 7,
            "268": 9,
            "270": 9,
            "271": 17,
            "274": 9,
            "275": 9,
            "277": 9,
            "290": 13,
            "291": 13,
            "301": 21,
            "307": 21,
            "310": 21,
            "311": 21,
            "313": 21,
            "321": 21,
            "322": 19,
            "327": 21,
            "340": 21,
            "367": 30,
            "368": 30,
            "370": 30,
            "381": 21,
            "383": 21,
            "398": 17,
            "400": 17,
            "415": 21,
            "417": 21,
            "422": 21,
            "423": 21,
            "425": 21,
            "436": 4,
            "447": 2,
            "458": 43,
            "461": 43,
            "473": 30,
            "474": 21,
            "477": 30,
            "479": 30,
            "480": 9,
            "481": 9,
            "484": 30,
            "486": 30,
            "487": 1,
            "499": 0,
            "501": 0,
            "502": 0,
            "515": 36,
            "516": 3,
            "517": 3,
            "520": 36,
            "521": 20,
            "524": 36,
            "525": 36,
            "527": 36,
            "528": 13,
            "530": 23,
            "531": 23,
            "536": 23,
            "542": 36,
            "547": 0,
            "563": 24,
            "570": 24,
            "571": 15,
            "574": 24,
            "575": 17,
            "576": 17,
            "578": 7,
            "581": 24,
            "582": 0,
            "584": 0,
            "587": 0,
            "600": 2,
            "613": 0,
            "616": 0,
            "618": 0,
            "630": 4,
            "633": 4,
            "634": 2,
            "637": 4,
            "638": 2,
            "649": 0,
            "651": 0,
            "656": 0,
            "667": 3,
            "678": 2,
            "680": 2,
            "682": 2,
            "683": 2,
            "695": 2,
            "696": 2,
            "707": 9,
            "709": 9,
            "710": 9,
            "722": 15,
            "733": 0,
            "735": 0,
            "736": 0,
            "749": 4,
            "752": 4,
            "753": 4,
            "754": 4,
            "755": 4,
            "851": 22,
            "876": 1,
            "885": 1
        }
    },
    "build/autocomplete-plugin/autocomplete-plugin.js": {
        "path": "build/autocomplete-plugin/autocomplete-plugin.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 3,
            "5": 3,
            "6": 3,
            "7": 3,
            "8": 1,
            "9": 1,
            "10": 1
        },
        "b": {
            "1": [
                3,
                0
            ],
            "2": [
                3,
                3
            ]
        },
        "f": {
            "1": 1,
            "2": 3
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 31
                    },
                    "end": {
                        "line": 1,
                        "column": 50
                    }
                }
            },
            "2": {
                "name": "ACListPlugin",
                "line": 27,
                "loc": {
                    "start": {
                        "line": 27,
                        "column": 0
                    },
                    "end": {
                        "line": 27,
                        "column": 30
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 48,
                    "column": 72
                }
            },
            "2": {
                "start": {
                    "line": 25,
                    "column": 0
                },
                "end": {
                    "line": 25,
                    "column": 22
                }
            },
            "3": {
                "start": {
                    "line": 27,
                    "column": 0
                },
                "end": {
                    "line": 36,
                    "column": 1
                }
            },
            "4": {
                "start": {
                    "line": 28,
                    "column": 4
                },
                "end": {
                    "line": 28,
                    "column": 35
                }
            },
            "5": {
                "start": {
                    "line": 31,
                    "column": 4
                },
                "end": {
                    "line": 33,
                    "column": 5
                }
            },
            "6": {
                "start": {
                    "line": 32,
                    "column": 6
                },
                "end": {
                    "line": 32,
                    "column": 27
                }
            },
            "7": {
                "start": {
                    "line": 35,
                    "column": 4
                },
                "end": {
                    "line": 35,
                    "column": 63
                }
            },
            "8": {
                "start": {
                    "line": 38,
                    "column": 0
                },
                "end": {
                    "line": 42,
                    "column": 3
                }
            },
            "9": {
                "start": {
                    "line": 44,
                    "column": 0
                },
                "end": {
                    "line": 44,
                    "column": 39
                }
            },
            "10": {
                "start": {
                    "line": 45,
                    "column": 0
                },
                "end": {
                    "line": 45,
                    "column": 39
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 31,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 31,
                            "column": 4
                        },
                        "end": {
                            "line": 31,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 31,
                            "column": 4
                        },
                        "end": {
                            "line": 31,
                            "column": 4
                        }
                    }
                ]
            },
            "2": {
                "line": 31,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 31,
                            "column": 8
                        },
                        "end": {
                            "line": 31,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 31,
                            "column": 26
                        },
                        "end": {
                            "line": 31,
                            "column": 49
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('autocomplete-plugin', function (Y, NAME) {",
            "",
            "/**",
            "Binds an AutoCompleteList instance to a Node instance.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-plugin",
            "**/",
            "",
            "/**",
            "Binds an AutoCompleteList instance to a Node instance.",
            "",
            "@example",
            "",
            "    Y.one('#my-input').plug(Y.Plugin.AutoComplete, {",
            "        source: 'select * from search.suggest where query=\"{query}\"'",
            "    });",
            "",
            "    // You can now access the AutoCompleteList instance at Y.one('#my-input').ac",
            "",
            "@class Plugin.AutoComplete",
            "@extends AutoCompleteList",
            "**/",
            "",
            "var Plugin = Y.Plugin;",
            "",
            "function ACListPlugin(config) {",
            "    config.inputNode = config.host;",
            "",
            "    // Render by default.",
            "    if (!config.render && config.render !== false) {",
            "      config.render = true;",
            "    }",
            "",
            "    ACListPlugin.superclass.constructor.apply(this, arguments);",
            "}",
            "",
            "Y.extend(ACListPlugin, Y.AutoCompleteList, {}, {",
            "    NAME      : 'autocompleteListPlugin',",
            "    NS        : 'ac',",
            "    CSS_PREFIX: Y.ClassNameManager.getClassName('aclist')",
            "});",
            "",
            "Plugin.AutoComplete     = ACListPlugin;",
            "Plugin.AutoCompleteList = ACListPlugin;",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"autocomplete-list\", \"node-pluginhost\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "25": 1,
            "27": 1,
            "28": 3,
            "31": 3,
            "32": 3,
            "35": 3,
            "38": 1,
            "44": 1,
            "45": 1
        }
    },
    "build/autocomplete-filters/autocomplete-filters.js": {
        "path": "build/autocomplete-filters/autocomplete-filters.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 4,
            "4": 0,
            "5": 4,
            "6": 4,
            "7": 11,
            "8": 11,
            "9": 9,
            "10": 11,
            "11": 21,
            "12": 1,
            "13": 7,
            "14": 0,
            "15": 7,
            "16": 6,
            "17": 7,
            "18": 19,
            "19": 1,
            "20": 4,
            "21": 0,
            "22": 4,
            "23": 3,
            "24": 4,
            "25": 10,
            "26": 1,
            "27": 9,
            "28": 0,
            "29": 9,
            "30": 9,
            "31": 26,
            "32": 26,
            "33": 37,
            "34": 1,
            "35": 5,
            "36": 0,
            "37": 5,
            "38": 5,
            "39": 15,
            "40": 15,
            "41": 19,
            "42": 1
        },
        "b": {
            "1": [
                0,
                4
            ],
            "2": [
                1,
                3
            ],
            "3": [
                9,
                2
            ],
            "4": [
                0,
                7
            ],
            "5": [
                6,
                1
            ],
            "6": [
                2,
                17
            ],
            "7": [
                0,
                4
            ],
            "8": [
                3,
                1
            ],
            "9": [
                2,
                8
            ],
            "10": [
                0,
                9
            ],
            "11": [
                2,
                24
            ],
            "12": [
                0,
                5
            ]
        },
        "f": {
            "1": 1,
            "2": 4,
            "3": 11,
            "4": 21,
            "5": 1,
            "6": 7,
            "7": 19,
            "8": 1,
            "9": 4,
            "10": 10,
            "11": 1,
            "12": 9,
            "13": 26,
            "14": 37,
            "15": 1,
            "16": 5,
            "17": 15,
            "18": 19,
            "19": 1
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 32
                    },
                    "end": {
                        "line": 1,
                        "column": 51
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 29,
                "loc": {
                    "start": {
                        "line": 29,
                        "column": 15
                    },
                    "end": {
                        "line": 29,
                        "column": 56
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 38,
                "loc": {
                    "start": {
                        "line": 38,
                        "column": 38
                    },
                    "end": {
                        "line": 38,
                        "column": 56
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 45,
                "loc": {
                    "start": {
                        "line": 45,
                        "column": 44
                    },
                    "end": {
                        "line": 45,
                        "column": 59
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 60,
                "loc": {
                    "start": {
                        "line": 60,
                        "column": 19
                    },
                    "end": {
                        "line": 60,
                        "column": 45
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 74,
                "loc": {
                    "start": {
                        "line": 74,
                        "column": 17
                    },
                    "end": {
                        "line": 74,
                        "column": 58
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 84,
                "loc": {
                    "start": {
                        "line": 84,
                        "column": 38
                    },
                    "end": {
                        "line": 84,
                        "column": 56
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 98,
                "loc": {
                    "start": {
                        "line": 98,
                        "column": 21
                    },
                    "end": {
                        "line": 98,
                        "column": 47
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 112,
                "loc": {
                    "start": {
                        "line": 112,
                        "column": 16
                    },
                    "end": {
                        "line": 112,
                        "column": 57
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 122,
                "loc": {
                    "start": {
                        "line": 122,
                        "column": 38
                    },
                    "end": {
                        "line": 122,
                        "column": 56
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 136,
                "loc": {
                    "start": {
                        "line": 136,
                        "column": 20
                    },
                    "end": {
                        "line": 136,
                        "column": 46
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 160,
                "loc": {
                    "start": {
                        "line": 160,
                        "column": 18
                    },
                    "end": {
                        "line": 160,
                        "column": 59
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 170,
                "loc": {
                    "start": {
                        "line": 170,
                        "column": 38
                    },
                    "end": {
                        "line": 170,
                        "column": 56
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 174,
                "loc": {
                    "start": {
                        "line": 174,
                        "column": 44
                    },
                    "end": {
                        "line": 174,
                        "column": 65
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 189,
                "loc": {
                    "start": {
                        "line": 189,
                        "column": 22
                    },
                    "end": {
                        "line": 189,
                        "column": 48
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 204,
                "loc": {
                    "start": {
                        "line": 204,
                        "column": 15
                    },
                    "end": {
                        "line": 204,
                        "column": 56
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 213,
                "loc": {
                    "start": {
                        "line": 213,
                        "column": 38
                    },
                    "end": {
                        "line": 213,
                        "column": 56
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 218,
                "loc": {
                    "start": {
                        "line": 218,
                        "column": 44
                    },
                    "end": {
                        "line": 218,
                        "column": 60
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 233,
                "loc": {
                    "start": {
                        "line": 233,
                        "column": 19
                    },
                    "end": {
                        "line": 233,
                        "column": 45
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 239,
                    "column": 66
                }
            },
            "2": {
                "start": {
                    "line": 12,
                    "column": 0
                },
                "end": {
                    "line": 236,
                    "column": 3
                }
            },
            "3": {
                "start": {
                    "line": 33,
                    "column": 8
                },
                "end": {
                    "line": 33,
                    "column": 39
                }
            },
            "4": {
                "start": {
                    "line": 33,
                    "column": 22
                },
                "end": {
                    "line": 33,
                    "column": 37
                }
            },
            "5": {
                "start": {
                    "line": 35,
                    "column": 8
                },
                "end": {
                    "line": 36,
                    "column": 48
                }
            },
            "6": {
                "start": {
                    "line": 38,
                    "column": 8
                },
                "end": {
                    "line": 48,
                    "column": 11
                }
            },
            "7": {
                "start": {
                    "line": 39,
                    "column": 12
                },
                "end": {
                    "line": 39,
                    "column": 33
                }
            },
            "8": {
                "start": {
                    "line": 41,
                    "column": 12
                },
                "end": {
                    "line": 43,
                    "column": 13
                }
            },
            "9": {
                "start": {
                    "line": 42,
                    "column": 16
                },
                "end": {
                    "line": 42,
                    "column": 46
                }
            },
            "10": {
                "start": {
                    "line": 45,
                    "column": 12
                },
                "end": {
                    "line": 47,
                    "column": 15
                }
            },
            "11": {
                "start": {
                    "line": 46,
                    "column": 16
                },
                "end": {
                    "line": 46,
                    "column": 50
                }
            },
            "12": {
                "start": {
                    "line": 61,
                    "column": 8
                },
                "end": {
                    "line": 61,
                    "column": 55
                }
            },
            "13": {
                "start": {
                    "line": 78,
                    "column": 8
                },
                "end": {
                    "line": 78,
                    "column": 39
                }
            },
            "14": {
                "start": {
                    "line": 78,
                    "column": 22
                },
                "end": {
                    "line": 78,
                    "column": 37
                }
            },
            "15": {
                "start": {
                    "line": 80,
                    "column": 8
                },
                "end": {
                    "line": 82,
                    "column": 9
                }
            },
            "16": {
                "start": {
                    "line": 81,
                    "column": 12
                },
                "end": {
                    "line": 81,
                    "column": 40
                }
            },
            "17": {
                "start": {
                    "line": 84,
                    "column": 8
                },
                "end": {
                    "line": 86,
                    "column": 11
                }
            },
            "18": {
                "start": {
                    "line": 85,
                    "column": 12
                },
                "end": {
                    "line": 85,
                    "column": 99
                }
            },
            "19": {
                "start": {
                    "line": 99,
                    "column": 8
                },
                "end": {
                    "line": 99,
                    "column": 57
                }
            },
            "20": {
                "start": {
                    "line": 116,
                    "column": 8
                },
                "end": {
                    "line": 116,
                    "column": 39
                }
            },
            "21": {
                "start": {
                    "line": 116,
                    "column": 22
                },
                "end": {
                    "line": 116,
                    "column": 37
                }
            },
            "22": {
                "start": {
                    "line": 118,
                    "column": 8
                },
                "end": {
                    "line": 120,
                    "column": 9
                }
            },
            "23": {
                "start": {
                    "line": 119,
                    "column": 12
                },
                "end": {
                    "line": 119,
                    "column": 40
                }
            },
            "24": {
                "start": {
                    "line": 122,
                    "column": 8
                },
                "end": {
                    "line": 124,
                    "column": 11
                }
            },
            "25": {
                "start": {
                    "line": 123,
                    "column": 12
                },
                "end": {
                    "line": 123,
                    "column": 98
                }
            },
            "26": {
                "start": {
                    "line": 137,
                    "column": 8
                },
                "end": {
                    "line": 137,
                    "column": 56
                }
            },
            "27": {
                "start": {
                    "line": 164,
                    "column": 8
                },
                "end": {
                    "line": 164,
                    "column": 39
                }
            },
            "28": {
                "start": {
                    "line": 164,
                    "column": 22
                },
                "end": {
                    "line": 164,
                    "column": 37
                }
            },
            "29": {
                "start": {
                    "line": 166,
                    "column": 8
                },
                "end": {
                    "line": 168,
                    "column": 11
                }
            },
            "30": {
                "start": {
                    "line": 170,
                    "column": 8
                },
                "end": {
                    "line": 177,
                    "column": 11
                }
            },
            "31": {
                "start": {
                    "line": 171,
                    "column": 12
                },
                "end": {
                    "line": 172,
                    "column": 46
                }
            },
            "32": {
                "start": {
                    "line": 174,
                    "column": 12
                },
                "end": {
                    "line": 176,
                    "column": 15
                }
            },
            "33": {
                "start": {
                    "line": 175,
                    "column": 16
                },
                "end": {
                    "line": 175,
                    "column": 60
                }
            },
            "34": {
                "start": {
                    "line": 190,
                    "column": 8
                },
                "end": {
                    "line": 190,
                    "column": 58
                }
            },
            "35": {
                "start": {
                    "line": 208,
                    "column": 8
                },
                "end": {
                    "line": 208,
                    "column": 39
                }
            },
            "36": {
                "start": {
                    "line": 208,
                    "column": 22
                },
                "end": {
                    "line": 208,
                    "column": 37
                }
            },
            "37": {
                "start": {
                    "line": 210,
                    "column": 8
                },
                "end": {
                    "line": 211,
                    "column": 66
                }
            },
            "38": {
                "start": {
                    "line": 213,
                    "column": 8
                },
                "end": {
                    "line": 221,
                    "column": 11
                }
            },
            "39": {
                "start": {
                    "line": 215,
                    "column": 12
                },
                "end": {
                    "line": 216,
                    "column": 42
                }
            },
            "40": {
                "start": {
                    "line": 218,
                    "column": 12
                },
                "end": {
                    "line": 220,
                    "column": 15
                }
            },
            "41": {
                "start": {
                    "line": 219,
                    "column": 16
                },
                "end": {
                    "line": 219,
                    "column": 55
                }
            },
            "42": {
                "start": {
                    "line": 234,
                    "column": 8
                },
                "end": {
                    "line": 234,
                    "column": 55
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 33,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 33,
                            "column": 8
                        },
                        "end": {
                            "line": 33,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 33,
                            "column": 8
                        },
                        "end": {
                            "line": 33,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 35,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 35,
                            "column": 56
                        },
                        "end": {
                            "line": 35,
                            "column": 61
                        }
                    },
                    {
                        "start": {
                            "line": 36,
                            "column": 16
                        },
                        "end": {
                            "line": 36,
                            "column": 35
                        }
                    }
                ]
            },
            "3": {
                "line": 41,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 41,
                            "column": 12
                        },
                        "end": {
                            "line": 41,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 41,
                            "column": 12
                        },
                        "end": {
                            "line": 41,
                            "column": 12
                        }
                    }
                ]
            },
            "4": {
                "line": 78,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 78,
                            "column": 8
                        },
                        "end": {
                            "line": 78,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 78,
                            "column": 8
                        },
                        "end": {
                            "line": 78,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 80,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 80,
                            "column": 8
                        },
                        "end": {
                            "line": 80,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 8
                        },
                        "end": {
                            "line": 80,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 85,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 85,
                            "column": 36
                        },
                        "end": {
                            "line": 85,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 85,
                            "column": 50
                        },
                        "end": {
                            "line": 85,
                            "column": 75
                        }
                    }
                ]
            },
            "7": {
                "line": 116,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 116,
                            "column": 8
                        },
                        "end": {
                            "line": 116,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 116,
                            "column": 8
                        },
                        "end": {
                            "line": 116,
                            "column": 8
                        }
                    }
                ]
            },
            "8": {
                "line": 118,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 118,
                            "column": 8
                        },
                        "end": {
                            "line": 118,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 118,
                            "column": 8
                        },
                        "end": {
                            "line": 118,
                            "column": 8
                        }
                    }
                ]
            },
            "9": {
                "line": 123,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 123,
                            "column": 36
                        },
                        "end": {
                            "line": 123,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 123,
                            "column": 50
                        },
                        "end": {
                            "line": 123,
                            "column": 75
                        }
                    }
                ]
            },
            "10": {
                "line": 164,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 164,
                            "column": 8
                        },
                        "end": {
                            "line": 164,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 164,
                            "column": 8
                        },
                        "end": {
                            "line": 164,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 171,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 171,
                            "column": 45
                        },
                        "end": {
                            "line": 171,
                            "column": 56
                        }
                    },
                    {
                        "start": {
                            "line": 172,
                            "column": 20
                        },
                        "end": {
                            "line": 172,
                            "column": 45
                        }
                    }
                ]
            },
            "12": {
                "line": 208,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 208,
                            "column": 8
                        },
                        "end": {
                            "line": 208,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 208,
                            "column": 8
                        },
                        "end": {
                            "line": 208,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('autocomplete-filters', function (Y, NAME) {",
            "",
            "/**",
            "Provides pre-built result matching filters for AutoComplete.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-filters",
            "@class AutoCompleteFilters",
            "@static",
            "**/",
            "",
            "var YArray     = Y.Array,",
            "    YObject    = Y.Object,",
            "    WordBreak  = Y.Text.WordBreak,",
            "",
            "Filters = Y.mix(Y.namespace('AutoCompleteFilters'), {",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Returns an array of results that contain all of the characters in the query,",
            "    in any order (not necessarily consecutive). Case-insensitive.",
            "",
            "    @method charMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    charMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // charMatchCase(). It's intentionally undocumented.",
            "",
            "        if (!query) { return results; }",
            "",
            "        var queryChars = YArray.unique((caseSensitive ? query :",
            "                query.toLowerCase()).split(''));",
            "",
            "        return YArray.filter(results, function (result) {",
            "            result = result.text;",
            "",
            "            if (!caseSensitive) {",
            "                result = result.toLowerCase();",
            "            }",
            "",
            "            return YArray.every(queryChars, function (chr) {",
            "                return result.indexOf(chr) !== -1;",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `charMatch()`.",
            "",
            "    @method charMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    charMatchCase: function (query, results) {",
            "        return Filters.charMatch(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Returns an array of results that contain the complete query as a phrase.",
            "    Case-insensitive.",
            "",
            "    @method phraseMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    phraseMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // phraseMatchCase(). It's intentionally undocumented.",
            "",
            "        if (!query) { return results; }",
            "",
            "        if (!caseSensitive) {",
            "            query = query.toLowerCase();",
            "        }",
            "",
            "        return YArray.filter(results, function (result) {",
            "            return (caseSensitive ? result.text : result.text.toLowerCase()).indexOf(query) !== -1;",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `phraseMatch()`.",
            "",
            "    @method phraseMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    phraseMatchCase: function (query, results) {",
            "        return Filters.phraseMatch(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Returns an array of results that start with the complete query as a phrase.",
            "    Case-insensitive.",
            "",
            "    @method startsWith",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    startsWith: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // startsWithCase(). It's intentionally undocumented.",
            "",
            "        if (!query) { return results; }",
            "",
            "        if (!caseSensitive) {",
            "            query = query.toLowerCase();",
            "        }",
            "",
            "        return YArray.filter(results, function (result) {",
            "            return (caseSensitive ? result.text : result.text.toLowerCase()).indexOf(query) === 0;",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `startsWith()`.",
            "",
            "    @method startsWithCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    startsWithCase: function (query, results) {",
            "        return Filters.startsWith(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Returns an array of results in which all the words of the query match either",
            "    whole words or parts of words in the result. Non-word characters like",
            "    whitespace and certain punctuation are ignored. Case-insensitive.",
            "",
            "    This is basically a combination of `wordMatch()` (by ignoring whitespace and",
            "    word order) and `phraseMatch()` (by allowing partial matching instead of",
            "    requiring the entire word to match).",
            "",
            "    Example use case: Trying to find personal names independently of name order",
            "    (Western or Eastern order) and supporting immediate feedback by allowing",
            "    partial occurences. So queries like \"J. Doe\", \"Doe, John\", and \"J. D.\" would",
            "    all match \"John Doe\".",
            "",
            "    @method subWordMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    subWordMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // subWordMatchCase(). It's intentionally undocumented.",
            "",
            "        if (!query) { return results; }",
            "",
            "        var queryWords = WordBreak.getUniqueWords(query, {",
            "            ignoreCase: !caseSensitive",
            "        });",
            "",
            "        return YArray.filter(results, function (result) {",
            "            var resultText = caseSensitive ? result.text :",
            "                    result.text.toLowerCase();",
            "",
            "            return YArray.every(queryWords, function (queryWord) {",
            "                return resultText.indexOf(queryWord) !== -1;",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `subWordMatch()`.",
            "",
            "    @method subWordMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    subWordMatchCase: function (query, results) {",
            "        return Filters.subWordMatch(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Returns an array of results that contain all of the words in the query, in",
            "    any order. Non-word characters like whitespace and certain punctuation are",
            "    ignored. Case-insensitive.",
            "",
            "    @method wordMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    wordMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // wordMatchCase(). It's intentionally undocumented.",
            "",
            "        if (!query) { return results; }",
            "",
            "        var options    = {ignoreCase: !caseSensitive},",
            "            queryWords = WordBreak.getUniqueWords(query, options);",
            "",
            "        return YArray.filter(results, function (result) {",
            "            // Convert resultWords array to a hash for fast lookup.",
            "            var resultWords = YArray.hash(WordBreak.getUniqueWords(result.text,",
            "                                options));",
            "",
            "            return YArray.every(queryWords, function (word) {",
            "                return YObject.owns(resultWords, word);",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `wordMatch()`.",
            "",
            "    @method wordMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    wordMatchCase: function (query, results) {",
            "        return Filters.wordMatch(query, results, true);",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"array-extras\", \"text-wordbreak\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "12": 1,
            "33": 4,
            "35": 4,
            "38": 4,
            "39": 11,
            "41": 11,
            "42": 9,
            "45": 11,
            "46": 21,
            "61": 1,
            "78": 7,
            "80": 7,
            "81": 6,
            "84": 7,
            "85": 19,
            "99": 1,
            "116": 4,
            "118": 4,
            "119": 3,
            "122": 4,
            "123": 10,
            "137": 1,
            "164": 9,
            "166": 9,
            "170": 9,
            "171": 26,
            "174": 26,
            "175": 37,
            "190": 1,
            "208": 5,
            "210": 5,
            "213": 5,
            "215": 15,
            "218": 15,
            "219": 19,
            "234": 1
        }
    },
    "build/autocomplete-filters-accentfold/autocomplete-filters-accentfold.js": {
        "path": "build/autocomplete-filters-accentfold/autocomplete-filters-accentfold.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 2,
            "5": 0,
            "6": 2,
            "7": 2,
            "8": 8,
            "9": 8,
            "10": 8,
            "11": 2,
            "12": 0,
            "13": 2,
            "14": 2,
            "15": 8,
            "16": 2,
            "17": 0,
            "18": 2,
            "19": 2,
            "20": 8,
            "21": 3,
            "22": 0,
            "23": 3,
            "24": 3,
            "25": 7,
            "26": 7,
            "27": 11,
            "28": 2,
            "29": 0,
            "30": 2,
            "31": 2,
            "32": 8,
            "33": 8,
            "34": 8
        },
        "b": {
            "1": [
                0,
                2
            ],
            "2": [
                0,
                2
            ],
            "3": [
                0,
                2
            ],
            "4": [
                0,
                3
            ],
            "5": [
                0,
                2
            ]
        },
        "f": {
            "1": 1,
            "2": 2,
            "3": 8,
            "4": 8,
            "5": 2,
            "6": 8,
            "7": 2,
            "8": 8,
            "9": 3,
            "10": 7,
            "11": 11,
            "12": 2,
            "13": 8,
            "14": 8
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 43
                    },
                    "end": {
                        "line": 1,
                        "column": 62
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 34,
                "loc": {
                    "start": {
                        "line": 34,
                        "column": 19
                    },
                    "end": {
                        "line": 34,
                        "column": 45
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 39,
                "loc": {
                    "start": {
                        "line": 39,
                        "column": 38
                    },
                    "end": {
                        "line": 39,
                        "column": 56
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 42,
                "loc": {
                    "start": {
                        "line": 42,
                        "column": 44
                    },
                    "end": {
                        "line": 42,
                        "column": 59
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 57,
                "loc": {
                    "start": {
                        "line": 57,
                        "column": 21
                    },
                    "end": {
                        "line": 57,
                        "column": 47
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 62,
                "loc": {
                    "start": {
                        "line": 62,
                        "column": 38
                    },
                    "end": {
                        "line": 62,
                        "column": 56
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 76,
                "loc": {
                    "start": {
                        "line": 76,
                        "column": 20
                    },
                    "end": {
                        "line": 76,
                        "column": 46
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 81,
                "loc": {
                    "start": {
                        "line": 81,
                        "column": 38
                    },
                    "end": {
                        "line": 81,
                        "column": 56
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 95,
                "loc": {
                    "start": {
                        "line": 95,
                        "column": 22
                    },
                    "end": {
                        "line": 95,
                        "column": 48
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 100,
                "loc": {
                    "start": {
                        "line": 100,
                        "column": 38
                    },
                    "end": {
                        "line": 100,
                        "column": 56
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 103,
                "loc": {
                    "start": {
                        "line": 103,
                        "column": 44
                    },
                    "end": {
                        "line": 103,
                        "column": 65
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 118,
                "loc": {
                    "start": {
                        "line": 118,
                        "column": 19
                    },
                    "end": {
                        "line": 118,
                        "column": 45
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 123,
                "loc": {
                    "start": {
                        "line": 123,
                        "column": 38
                    },
                    "end": {
                        "line": 123,
                        "column": 56
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 128,
                "loc": {
                    "start": {
                        "line": 128,
                        "column": 44
                    },
                    "end": {
                        "line": 128,
                        "column": 60
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 136,
                    "column": 85
                }
            },
            "2": {
                "start": {
                    "line": 19,
                    "column": 0
                },
                "end": {
                    "line": 22,
                    "column": 26
                }
            },
            "3": {
                "start": {
                    "line": 24,
                    "column": 0
                },
                "end": {
                    "line": 133,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 35,
                    "column": 8
                },
                "end": {
                    "line": 35,
                    "column": 39
                }
            },
            "5": {
                "start": {
                    "line": 35,
                    "column": 22
                },
                "end": {
                    "line": 35,
                    "column": 37
                }
            },
            "6": {
                "start": {
                    "line": 37,
                    "column": 8
                },
                "end": {
                    "line": 37,
                    "column": 73
                }
            },
            "7": {
                "start": {
                    "line": 39,
                    "column": 8
                },
                "end": {
                    "line": 45,
                    "column": 11
                }
            },
            "8": {
                "start": {
                    "line": 40,
                    "column": 12
                },
                "end": {
                    "line": 40,
                    "column": 52
                }
            },
            "9": {
                "start": {
                    "line": 42,
                    "column": 12
                },
                "end": {
                    "line": 44,
                    "column": 15
                }
            },
            "10": {
                "start": {
                    "line": 43,
                    "column": 16
                },
                "end": {
                    "line": 43,
                    "column": 48
                }
            },
            "11": {
                "start": {
                    "line": 58,
                    "column": 8
                },
                "end": {
                    "line": 58,
                    "column": 39
                }
            },
            "12": {
                "start": {
                    "line": 58,
                    "column": 22
                },
                "end": {
                    "line": 58,
                    "column": 37
                }
            },
            "13": {
                "start": {
                    "line": 60,
                    "column": 8
                },
                "end": {
                    "line": 60,
                    "column": 39
                }
            },
            "14": {
                "start": {
                    "line": 62,
                    "column": 8
                },
                "end": {
                    "line": 64,
                    "column": 11
                }
            },
            "15": {
                "start": {
                    "line": 63,
                    "column": 12
                },
                "end": {
                    "line": 63,
                    "column": 70
                }
            },
            "16": {
                "start": {
                    "line": 77,
                    "column": 8
                },
                "end": {
                    "line": 77,
                    "column": 39
                }
            },
            "17": {
                "start": {
                    "line": 77,
                    "column": 22
                },
                "end": {
                    "line": 77,
                    "column": 37
                }
            },
            "18": {
                "start": {
                    "line": 79,
                    "column": 8
                },
                "end": {
                    "line": 79,
                    "column": 39
                }
            },
            "19": {
                "start": {
                    "line": 81,
                    "column": 8
                },
                "end": {
                    "line": 83,
                    "column": 11
                }
            },
            "20": {
                "start": {
                    "line": 82,
                    "column": 12
                },
                "end": {
                    "line": 82,
                    "column": 69
                }
            },
            "21": {
                "start": {
                    "line": 96,
                    "column": 8
                },
                "end": {
                    "line": 96,
                    "column": 39
                }
            },
            "22": {
                "start": {
                    "line": 96,
                    "column": 22
                },
                "end": {
                    "line": 96,
                    "column": 37
                }
            },
            "23": {
                "start": {
                    "line": 98,
                    "column": 8
                },
                "end": {
                    "line": 98,
                    "column": 74
                }
            },
            "24": {
                "start": {
                    "line": 100,
                    "column": 8
                },
                "end": {
                    "line": 106,
                    "column": 11
                }
            },
            "25": {
                "start": {
                    "line": 101,
                    "column": 12
                },
                "end": {
                    "line": 101,
                    "column": 58
                }
            },
            "26": {
                "start": {
                    "line": 103,
                    "column": 12
                },
                "end": {
                    "line": 105,
                    "column": 15
                }
            },
            "27": {
                "start": {
                    "line": 104,
                    "column": 16
                },
                "end": {
                    "line": 104,
                    "column": 60
                }
            },
            "28": {
                "start": {
                    "line": 119,
                    "column": 8
                },
                "end": {
                    "line": 119,
                    "column": 39
                }
            },
            "29": {
                "start": {
                    "line": 119,
                    "column": 22
                },
                "end": {
                    "line": 119,
                    "column": 37
                }
            },
            "30": {
                "start": {
                    "line": 121,
                    "column": 8
                },
                "end": {
                    "line": 121,
                    "column": 74
                }
            },
            "31": {
                "start": {
                    "line": 123,
                    "column": 8
                },
                "end": {
                    "line": 131,
                    "column": 11
                }
            },
            "32": {
                "start": {
                    "line": 125,
                    "column": 12
                },
                "end": {
                    "line": 126,
                    "column": 51
                }
            },
            "33": {
                "start": {
                    "line": 128,
                    "column": 12
                },
                "end": {
                    "line": 130,
                    "column": 15
                }
            },
            "34": {
                "start": {
                    "line": 129,
                    "column": 16
                },
                "end": {
                    "line": 129,
                    "column": 55
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 35,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 35,
                            "column": 8
                        },
                        "end": {
                            "line": 35,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 35,
                            "column": 8
                        },
                        "end": {
                            "line": 35,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 58,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 58,
                            "column": 8
                        },
                        "end": {
                            "line": 58,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 58,
                            "column": 8
                        },
                        "end": {
                            "line": 58,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 77,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 77,
                            "column": 8
                        },
                        "end": {
                            "line": 77,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 77,
                            "column": 8
                        },
                        "end": {
                            "line": 77,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 96,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 96,
                            "column": 8
                        },
                        "end": {
                            "line": 96,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 96,
                            "column": 8
                        },
                        "end": {
                            "line": 96,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 119,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 119,
                            "column": 8
                        },
                        "end": {
                            "line": 119,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 119,
                            "column": 8
                        },
                        "end": {
                            "line": 119,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('autocomplete-filters-accentfold', function (Y, NAME) {",
            "",
            "/**",
            "Provides pre-built accent-folding result matching filters for AutoComplete.",
            "",
            "These filters are similar to the ones provided by the `autocomplete-filters`",
            "module, but use accent-aware comparisons. For example, \"resume\" and \"résumé\"",
            "will be considered equal when using the accent-folding filters.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-filters-accentfold",
            "**/",
            "",
            "/**",
            "@class AutoCompleteFilters",
            "@static",
            "**/",
            "",
            "var AccentFold = Y.Text.AccentFold,",
            "    WordBreak  = Y.Text.WordBreak,",
            "    YArray     = Y.Array,",
            "    YObject    = Y.Object;",
            "",
            "Y.mix(Y.namespace('AutoCompleteFilters'), {",
            "    /**",
            "    Accent folding version of `charMatch()`.",
            "",
            "    @method charMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    charMatchFold: function (query, results) {",
            "        if (!query) { return results; }",
            "",
            "        var queryChars = YArray.unique(AccentFold.fold(query).split(''));",
            "",
            "        return YArray.filter(results, function (result) {",
            "            var text = AccentFold.fold(result.text);",
            "",
            "            return YArray.every(queryChars, function (chr) {",
            "                return text.indexOf(chr) !== -1;",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent folding version of `phraseMatch()`.",
            "",
            "    @method phraseMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    phraseMatchFold: function (query, results) {",
            "        if (!query) { return results; }",
            "",
            "        query = AccentFold.fold(query);",
            "",
            "        return YArray.filter(results, function (result) {",
            "            return AccentFold.fold(result.text).indexOf(query) !== -1;",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent folding version of `startsWith()`.",
            "",
            "    @method startsWithFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    startsWithFold: function (query, results) {",
            "        if (!query) { return results; }",
            "",
            "        query = AccentFold.fold(query);",
            "",
            "        return YArray.filter(results, function (result) {",
            "            return AccentFold.fold(result.text).indexOf(query) === 0;",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent folding version of `subWordMatch()`.",
            "",
            "    @method subWordMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    subWordMatchFold: function (query, results) {",
            "        if (!query) { return results; }",
            "",
            "        var queryWords = WordBreak.getUniqueWords(AccentFold.fold(query));",
            "",
            "        return YArray.filter(results, function (result) {",
            "            var resultText = AccentFold.fold(result.text);",
            "",
            "            return YArray.every(queryWords, function (queryWord) {",
            "                return resultText.indexOf(queryWord) !== -1;",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent folding version of `wordMatch()`.",
            "",
            "    @method wordMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to filter",
            "    @return {Array} Filtered results",
            "    @static",
            "    **/",
            "    wordMatchFold: function (query, results) {",
            "        if (!query) { return results; }",
            "",
            "        var queryWords = WordBreak.getUniqueWords(AccentFold.fold(query));",
            "",
            "        return YArray.filter(results, function (result) {",
            "            // Convert resultWords array to a hash for fast lookup.",
            "            var resultWords = YArray.hash(WordBreak.getUniqueWords(",
            "                    AccentFold.fold(result.text)));",
            "",
            "            return YArray.every(queryWords, function (word) {",
            "                return YObject.owns(resultWords, word);",
            "            });",
            "        });",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"array-extras\", \"text-accentfold\", \"text-wordbreak\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "19": 1,
            "24": 1,
            "35": 2,
            "37": 2,
            "39": 2,
            "40": 8,
            "42": 8,
            "43": 8,
            "58": 2,
            "60": 2,
            "62": 2,
            "63": 8,
            "77": 2,
            "79": 2,
            "81": 2,
            "82": 8,
            "96": 3,
            "98": 3,
            "100": 3,
            "101": 7,
            "103": 7,
            "104": 11,
            "119": 2,
            "121": 2,
            "123": 2,
            "125": 8,
            "128": 8,
            "129": 8
        }
    },
    "build/autocomplete-highlighters/autocomplete-highlighters.js": {
        "path": "build/autocomplete-highlighters/autocomplete-highlighters.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 3,
            "4": 3,
            "5": 7,
            "6": 1,
            "7": 6,
            "8": 16,
            "9": 1,
            "10": 4,
            "11": 10,
            "12": 1,
            "13": 5,
            "14": 5,
            "15": 11,
            "16": 1,
            "17": 4,
            "18": 10,
            "19": 1
        },
        "b": {
            "1": [
                1,
                2
            ]
        },
        "f": {
            "1": 1,
            "2": 3,
            "3": 7,
            "4": 1,
            "5": 6,
            "6": 16,
            "7": 1,
            "8": 4,
            "9": 10,
            "10": 1,
            "11": 5,
            "12": 11,
            "13": 1,
            "14": 4,
            "15": 10,
            "16": 1
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 37
                    },
                    "end": {
                        "line": 1,
                        "column": 56
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 28,
                "loc": {
                    "start": {
                        "line": 28,
                        "column": 15
                    },
                    "end": {
                        "line": 28,
                        "column": 56
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 35,
                "loc": {
                    "start": {
                        "line": 35,
                        "column": 35
                    },
                    "end": {
                        "line": 35,
                        "column": 53
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 51,
                "loc": {
                    "start": {
                        "line": 51,
                        "column": 19
                    },
                    "end": {
                        "line": 51,
                        "column": 45
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 65,
                "loc": {
                    "start": {
                        "line": 65,
                        "column": 17
                    },
                    "end": {
                        "line": 65,
                        "column": 58
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 69,
                "loc": {
                    "start": {
                        "line": 69,
                        "column": 35
                    },
                    "end": {
                        "line": 69,
                        "column": 53
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 85,
                "loc": {
                    "start": {
                        "line": 85,
                        "column": 21
                    },
                    "end": {
                        "line": 85,
                        "column": 47
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 99,
                "loc": {
                    "start": {
                        "line": 99,
                        "column": 16
                    },
                    "end": {
                        "line": 99,
                        "column": 57
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 103,
                "loc": {
                    "start": {
                        "line": 103,
                        "column": 35
                    },
                    "end": {
                        "line": 103,
                        "column": 53
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 120,
                "loc": {
                    "start": {
                        "line": 120,
                        "column": 20
                    },
                    "end": {
                        "line": 120,
                        "column": 46
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 135,
                "loc": {
                    "start": {
                        "line": 135,
                        "column": 18
                    },
                    "end": {
                        "line": 135,
                        "column": 59
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 143,
                "loc": {
                    "start": {
                        "line": 143,
                        "column": 35
                    },
                    "end": {
                        "line": 143,
                        "column": 53
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 159,
                "loc": {
                    "start": {
                        "line": 159,
                        "column": 22
                    },
                    "end": {
                        "line": 159,
                        "column": 48
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 173,
                "loc": {
                    "start": {
                        "line": 173,
                        "column": 15
                    },
                    "end": {
                        "line": 173,
                        "column": 56
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 177,
                "loc": {
                    "start": {
                        "line": 177,
                        "column": 35
                    },
                    "end": {
                        "line": 177,
                        "column": 53
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 193,
                "loc": {
                    "start": {
                        "line": 193,
                        "column": 19
                    },
                    "end": {
                        "line": 193,
                        "column": 45
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 199,
                    "column": 66
                }
            },
            "2": {
                "start": {
                    "line": 12,
                    "column": 0
                },
                "end": {
                    "line": 196,
                    "column": 3
                }
            },
            "3": {
                "start": {
                    "line": 32,
                    "column": 8
                },
                "end": {
                    "line": 33,
                    "column": 48
                }
            },
            "4": {
                "start": {
                    "line": 35,
                    "column": 8
                },
                "end": {
                    "line": 39,
                    "column": 11
                }
            },
            "5": {
                "start": {
                    "line": 36,
                    "column": 12
                },
                "end": {
                    "line": 38,
                    "column": 15
                }
            },
            "6": {
                "start": {
                    "line": 52,
                    "column": 8
                },
                "end": {
                    "line": 52,
                    "column": 60
                }
            },
            "7": {
                "start": {
                    "line": 69,
                    "column": 8
                },
                "end": {
                    "line": 73,
                    "column": 11
                }
            },
            "8": {
                "start": {
                    "line": 70,
                    "column": 12
                },
                "end": {
                    "line": 72,
                    "column": 15
                }
            },
            "9": {
                "start": {
                    "line": 86,
                    "column": 8
                },
                "end": {
                    "line": 86,
                    "column": 62
                }
            },
            "10": {
                "start": {
                    "line": 103,
                    "column": 8
                },
                "end": {
                    "line": 108,
                    "column": 11
                }
            },
            "11": {
                "start": {
                    "line": 104,
                    "column": 12
                },
                "end": {
                    "line": 107,
                    "column": 15
                }
            },
            "12": {
                "start": {
                    "line": 121,
                    "column": 8
                },
                "end": {
                    "line": 121,
                    "column": 61
                }
            },
            "13": {
                "start": {
                    "line": 139,
                    "column": 8
                },
                "end": {
                    "line": 141,
                    "column": 11
                }
            },
            "14": {
                "start": {
                    "line": 143,
                    "column": 8
                },
                "end": {
                    "line": 147,
                    "column": 11
                }
            },
            "15": {
                "start": {
                    "line": 144,
                    "column": 12
                },
                "end": {
                    "line": 146,
                    "column": 15
                }
            },
            "16": {
                "start": {
                    "line": 160,
                    "column": 8
                },
                "end": {
                    "line": 160,
                    "column": 63
                }
            },
            "17": {
                "start": {
                    "line": 177,
                    "column": 8
                },
                "end": {
                    "line": 181,
                    "column": 11
                }
            },
            "18": {
                "start": {
                    "line": 178,
                    "column": 12
                },
                "end": {
                    "line": 180,
                    "column": 15
                }
            },
            "19": {
                "start": {
                    "line": 194,
                    "column": 8
                },
                "end": {
                    "line": 194,
                    "column": 60
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 32,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 32,
                            "column": 56
                        },
                        "end": {
                            "line": 32,
                            "column": 61
                        }
                    },
                    {
                        "start": {
                            "line": 33,
                            "column": 16
                        },
                        "end": {
                            "line": 33,
                            "column": 35
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('autocomplete-highlighters', function (Y, NAME) {",
            "",
            "/**",
            "Provides pre-built result highlighters for AutoComplete.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-highlighters",
            "@class AutoCompleteHighlighters",
            "@static",
            "**/",
            "",
            "var YArray    = Y.Array,",
            "    Highlight = Y.Highlight,",
            "",
            "Highlighters = Y.mix(Y.namespace('AutoCompleteHighlighters'), {",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Highlights any individual query character that occurs anywhere in a result.",
            "    Case-insensitive.",
            "",
            "    @method charMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    charMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // charMatchCase(). It's intentionally undocumented.",
            "",
            "        var queryChars = YArray.unique((caseSensitive ? query :",
            "                query.toLowerCase()).split(''));",
            "",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.all(result.text, queryChars, {",
            "                caseSensitive: caseSensitive",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `charMatch()`.",
            "",
            "    @method charMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    charMatchCase: function (query, results) {",
            "        return Highlighters.charMatch(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Highlights the complete query as a phrase anywhere within a result. Case-",
            "    insensitive.",
            "",
            "    @method phraseMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    phraseMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // phraseMatchCase(). It's intentionally undocumented.",
            "",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.all(result.text, [query], {",
            "                caseSensitive: caseSensitive",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `phraseMatch()`.",
            "",
            "    @method phraseMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    phraseMatchCase: function (query, results) {",
            "        return Highlighters.phraseMatch(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Highlights the complete query as a phrase at the beginning of a result.",
            "    Case-insensitive.",
            "",
            "    @method startsWith",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    startsWith: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // startsWithCase(). It's intentionally undocumented.",
            "",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.all(result.text, [query], {",
            "                caseSensitive: caseSensitive,",
            "                startsWith   : true",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `startsWith()`.",
            "",
            "    @method startsWithCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    startsWithCase: function (query, results) {",
            "        return Highlighters.startsWith(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Highlights portions of results in which words from the query match either",
            "    whole words or parts of words in the result. Non-word characters like",
            "    whitespace and certain punctuation are ignored. Case-insensitive.",
            "",
            "    @method subWordMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    subWordMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // subWordMatchCase(). It's intentionally undocumented.",
            "",
            "        var queryWords = Y.Text.WordBreak.getUniqueWords(query, {",
            "            ignoreCase: !caseSensitive",
            "        });",
            "",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.all(result.text, queryWords, {",
            "                caseSensitive: caseSensitive",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `subWordMatch()`.",
            "",
            "    @method subWordMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    subWordMatchCase: function (query, results) {",
            "        return Highlighters.subWordMatch(query, results, true);",
            "    },",
            "",
            "    /**",
            "    Highlights individual words in results that are also in the query. Non-word",
            "    characters like punctuation are ignored. Case-insensitive.",
            "",
            "    @method wordMatch",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    wordMatch: function (query, results, caseSensitive) {",
            "        // The caseSensitive parameter is only intended for use by",
            "        // wordMatchCase(). It's intentionally undocumented.",
            "",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.words(result.text, query, {",
            "                caseSensitive: caseSensitive",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Case-sensitive version of `wordMatch()`.",
            "",
            "    @method wordMatchCase",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    wordMatchCase: function (query, results) {",
            "        return Highlighters.wordMatch(query, results, true);",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"array-extras\", \"highlight-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "12": 1,
            "32": 3,
            "35": 3,
            "36": 7,
            "52": 1,
            "69": 6,
            "70": 16,
            "86": 1,
            "103": 4,
            "104": 10,
            "121": 1,
            "139": 5,
            "143": 5,
            "144": 11,
            "160": 1,
            "177": 4,
            "178": 10,
            "194": 1
        }
    },
    "build/autocomplete-highlighters-accentfold/autocomplete-highlighters-accentfold.js": {
        "path": "build/autocomplete-highlighters-accentfold/autocomplete-highlighters-accentfold.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 2,
            "5": 2,
            "6": 6,
            "7": 2,
            "8": 6,
            "9": 2,
            "10": 6,
            "11": 3,
            "12": 3,
            "13": 7,
            "14": 2,
            "15": 6
        },
        "b": {},
        "f": {
            "1": 1,
            "2": 2,
            "3": 6,
            "4": 2,
            "5": 6,
            "6": 2,
            "7": 6,
            "8": 3,
            "9": 7,
            "10": 2,
            "11": 6
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 48
                    },
                    "end": {
                        "line": 1,
                        "column": 67
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 33,
                "loc": {
                    "start": {
                        "line": 33,
                        "column": 19
                    },
                    "end": {
                        "line": 33,
                        "column": 45
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 36,
                "loc": {
                    "start": {
                        "line": 36,
                        "column": 35
                    },
                    "end": {
                        "line": 36,
                        "column": 53
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 50,
                "loc": {
                    "start": {
                        "line": 50,
                        "column": 21
                    },
                    "end": {
                        "line": 50,
                        "column": 47
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 51,
                "loc": {
                    "start": {
                        "line": 51,
                        "column": 35
                    },
                    "end": {
                        "line": 51,
                        "column": 53
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 65,
                "loc": {
                    "start": {
                        "line": 65,
                        "column": 20
                    },
                    "end": {
                        "line": 65,
                        "column": 46
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 66,
                "loc": {
                    "start": {
                        "line": 66,
                        "column": 35
                    },
                    "end": {
                        "line": 66,
                        "column": 53
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 82,
                "loc": {
                    "start": {
                        "line": 82,
                        "column": 22
                    },
                    "end": {
                        "line": 82,
                        "column": 48
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 85,
                "loc": {
                    "start": {
                        "line": 85,
                        "column": 35
                    },
                    "end": {
                        "line": 85,
                        "column": 53
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 99,
                "loc": {
                    "start": {
                        "line": 99,
                        "column": 19
                    },
                    "end": {
                        "line": 99,
                        "column": 45
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 100,
                "loc": {
                    "start": {
                        "line": 100,
                        "column": 35
                    },
                    "end": {
                        "line": 100,
                        "column": 53
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 107,
                    "column": 72
                }
            },
            "2": {
                "start": {
                    "line": 20,
                    "column": 0
                },
                "end": {
                    "line": 21,
                    "column": 24
                }
            },
            "3": {
                "start": {
                    "line": 23,
                    "column": 0
                },
                "end": {
                    "line": 104,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 34,
                    "column": 8
                },
                "end": {
                    "line": 34,
                    "column": 56
                }
            },
            "5": {
                "start": {
                    "line": 36,
                    "column": 8
                },
                "end": {
                    "line": 38,
                    "column": 11
                }
            },
            "6": {
                "start": {
                    "line": 37,
                    "column": 12
                },
                "end": {
                    "line": 37,
                    "column": 62
                }
            },
            "7": {
                "start": {
                    "line": 51,
                    "column": 8
                },
                "end": {
                    "line": 53,
                    "column": 11
                }
            },
            "8": {
                "start": {
                    "line": 52,
                    "column": 12
                },
                "end": {
                    "line": 52,
                    "column": 59
                }
            },
            "9": {
                "start": {
                    "line": 66,
                    "column": 8
                },
                "end": {
                    "line": 70,
                    "column": 11
                }
            },
            "10": {
                "start": {
                    "line": 67,
                    "column": 12
                },
                "end": {
                    "line": 69,
                    "column": 15
                }
            },
            "11": {
                "start": {
                    "line": 83,
                    "column": 8
                },
                "end": {
                    "line": 83,
                    "column": 64
                }
            },
            "12": {
                "start": {
                    "line": 85,
                    "column": 8
                },
                "end": {
                    "line": 87,
                    "column": 11
                }
            },
            "13": {
                "start": {
                    "line": 86,
                    "column": 12
                },
                "end": {
                    "line": 86,
                    "column": 62
                }
            },
            "14": {
                "start": {
                    "line": 100,
                    "column": 8
                },
                "end": {
                    "line": 102,
                    "column": 11
                }
            },
            "15": {
                "start": {
                    "line": 101,
                    "column": 12
                },
                "end": {
                    "line": 101,
                    "column": 59
                }
            }
        },
        "branchMap": {},
        "code": [
            "(function () { YUI.add('autocomplete-highlighters-accentfold', function (Y, NAME) {",
            "",
            "/**",
            "Provides pre-built accent-folding result highlighters for AutoComplete.",
            "",
            "These highlighters are similar to the ones provided by the `autocomplete-",
            "highlighters` module, but use accent-aware comparisons. For example, \"resume\"",
            "and \"résumé\" will be considered equal when using the accent-folding",
            "highlighters.",
            "",
            "@module autocomplete",
            "@submodule autocomplete-highlighters-accentfold",
            "**/",
            "",
            "/**",
            "@class AutoCompleteHighlighters",
            "@static",
            "**/",
            "",
            "var Highlight = Y.Highlight,",
            "    YArray    = Y.Array;",
            "",
            "Y.mix(Y.namespace('AutoCompleteHighlighters'), {",
            "    /**",
            "    Accent-folding version of `charMatch()`.",
            "",
            "    @method charMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    charMatchFold: function (query, results) {",
            "        var queryChars = YArray.unique(query.split(''));",
            "",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.allFold(result.text, queryChars);",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent-folding version of `phraseMatch()`.",
            "",
            "    @method phraseMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    phraseMatchFold: function (query, results) {",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.allFold(result.text, [query]);",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent-folding version of `startsWith()`.",
            "",
            "    @method startsWithFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    startsWithFold: function (query, results) {",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.allFold(result.text, [query], {",
            "                startsWith: true",
            "            });",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent-folding version of `subWordMatch()`.",
            "",
            "    @method subWordMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    subWordMatchFold: function (query, results) {",
            "        var queryWords = Y.Text.WordBreak.getUniqueWords(query);",
            "",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.allFold(result.text, queryWords);",
            "        });",
            "    },",
            "",
            "    /**",
            "    Accent-folding version of `wordMatch()`.",
            "",
            "    @method wordMatchFold",
            "    @param {String} query Query to match",
            "    @param {Array} results Results to highlight",
            "    @return {Array} Highlighted results",
            "    @static",
            "    **/",
            "    wordMatchFold: function (query, results) {",
            "        return YArray.map(results, function (result) {",
            "            return Highlight.wordsFold(result.text, query);",
            "        });",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"array-extras\", \"highlight-accentfold\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "20": 1,
            "23": 1,
            "34": 2,
            "36": 2,
            "37": 6,
            "51": 2,
            "52": 6,
            "66": 2,
            "67": 6,
            "83": 3,
            "85": 3,
            "86": 7,
            "100": 2,
            "101": 6
        }
    }
}