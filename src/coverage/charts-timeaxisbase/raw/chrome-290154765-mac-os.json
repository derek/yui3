{
    "build/axis-time-base/axis-time-base.js": {
        "path": "build/axis-time-base/axis-time-base.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 10,
            "8": 10,
            "9": 2,
            "10": 10,
            "11": 4,
            "12": 4,
            "13": 10,
            "14": 10,
            "15": 2,
            "16": 10,
            "17": 4,
            "18": 4,
            "19": 8,
            "20": 8,
            "21": 8,
            "22": 8,
            "23": 4,
            "24": 4,
            "25": 2,
            "26": 2,
            "27": 30,
            "28": 30,
            "29": 490,
            "30": 490,
            "31": 22,
            "32": 468,
            "33": 468,
            "34": 420,
            "35": 48,
            "36": 48,
            "37": 44,
            "38": 4,
            "39": 2,
            "40": 4,
            "41": 0,
            "42": 490,
            "43": 30,
            "44": 40,
            "45": 40,
            "46": 38,
            "47": 38,
            "48": 38,
            "49": 32,
            "50": 634,
            "51": 634,
            "52": 2,
            "53": 632,
            "54": 632,
            "55": 40,
            "56": 40,
            "57": 48,
            "58": 0,
            "59": 48,
            "60": 8,
            "61": 48,
            "62": 1,
            "63": 1
        },
        "b": {
            "1": [
                2,
                8
            ],
            "2": [
                2,
                8
            ],
            "3": [
                2,
                2
            ],
            "4": [
                22,
                468
            ],
            "5": [
                420,
                48
            ],
            "6": [
                48,
                0
            ],
            "7": [
                44,
                4
            ],
            "8": [
                2,
                2
            ],
            "9": [
                38,
                2
            ],
            "10": [
                40,
                40,
                38
            ],
            "11": [
                32,
                6
            ],
            "12": [
                2,
                632
            ],
            "13": [
                0,
                48
            ],
            "14": [
                8,
                40
            ],
            "15": [
                48,
                20
            ]
        },
        "f": {
            "1": 1,
            "2": 32,
            "3": 10,
            "4": 4,
            "5": 10,
            "6": 4,
            "7": 8,
            "8": 8,
            "9": 4,
            "10": 30,
            "11": 40,
            "12": 48
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 26
                    },
                    "end": {
                        "line": 1,
                        "column": 45
                    }
                }
            },
            "2": {
                "name": "TimeImpl",
                "line": 22,
                "loc": {
                    "start": {
                        "line": 22,
                        "column": 0
                    },
                    "end": {
                        "line": 23,
                        "column": 0
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 73,
                "loc": {
                    "start": {
                        "line": 73,
                        "column": 20
                    },
                    "end": {
                        "line": 74,
                        "column": 4
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 90,
                "loc": {
                    "start": {
                        "line": 90,
                        "column": 20
                    },
                    "end": {
                        "line": 91,
                        "column": 4
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 103,
                "loc": {
                    "start": {
                        "line": 103,
                        "column": 20
                    },
                    "end": {
                        "line": 104,
                        "column": 4
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 120,
                "loc": {
                    "start": {
                        "line": 120,
                        "column": 20
                    },
                    "end": {
                        "line": 121,
                        "column": 4
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 133,
                "loc": {
                    "start": {
                        "line": 133,
                        "column": 16
                    },
                    "end": {
                        "line": 134,
                        "column": 4
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 146,
                "loc": {
                    "start": {
                        "line": 146,
                        "column": 16
                    },
                    "end": {
                        "line": 147,
                        "column": 4
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 160,
                "loc": {
                    "start": {
                        "line": 160,
                        "column": 17
                    },
                    "end": {
                        "line": 161,
                        "column": 4
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 197,
                "loc": {
                    "start": {
                        "line": 197,
                        "column": 18
                    },
                    "end": {
                        "line": 198,
                        "column": 4
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 249,
                "loc": {
                    "start": {
                        "line": 249,
                        "column": 22
                    },
                    "end": {
                        "line": 250,
                        "column": 4
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 287,
                "loc": {
                    "start": {
                        "line": 287,
                        "column": 16
                    },
                    "end": {
                        "line": 288,
                        "column": 4
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 317,
                    "column": 45
                }
            },
            "2": {
                "start": {
                    "line": 10,
                    "column": 0
                },
                "end": {
                    "line": 10,
                    "column": 20
                }
            },
            "3": {
                "start": {
                    "line": 22,
                    "column": 0
                },
                "end": {
                    "line": 24,
                    "column": 1
                }
            },
            "4": {
                "start": {
                    "line": 26,
                    "column": 0
                },
                "end": {
                    "line": 26,
                    "column": 27
                }
            },
            "5": {
                "start": {
                    "line": 28,
                    "column": 0
                },
                "end": {
                    "line": 54,
                    "column": 2
                }
            },
            "6": {
                "start": {
                    "line": 56,
                    "column": 0
                },
                "end": {
                    "line": 300,
                    "column": 2
                }
            },
            "7": {
                "start": {
                    "line": 75,
                    "column": 8
                },
                "end": {
                    "line": 75,
                    "column": 52
                }
            },
            "8": {
                "start": {
                    "line": 76,
                    "column": 8
                },
                "end": {
                    "line": 79,
                    "column": 9
                }
            },
            "9": {
                "start": {
                    "line": 78,
                    "column": 12
                },
                "end": {
                    "line": 78,
                    "column": 59
                }
            },
            "10": {
                "start": {
                    "line": 80,
                    "column": 8
                },
                "end": {
                    "line": 80,
                    "column": 31
                }
            },
            "11": {
                "start": {
                    "line": 92,
                    "column": 8
                },
                "end": {
                    "line": 92,
                    "column": 50
                }
            },
            "12": {
                "start": {
                    "line": 93,
                    "column": 8
                },
                "end": {
                    "line": 93,
                    "column": 21
                }
            },
            "13": {
                "start": {
                    "line": 105,
                    "column": 8
                },
                "end": {
                    "line": 105,
                    "column": 52
                }
            },
            "14": {
                "start": {
                    "line": 106,
                    "column": 8
                },
                "end": {
                    "line": 109,
                    "column": 9
                }
            },
            "15": {
                "start": {
                    "line": 108,
                    "column": 12
                },
                "end": {
                    "line": 108,
                    "column": 59
                }
            },
            "16": {
                "start": {
                    "line": 110,
                    "column": 8
                },
                "end": {
                    "line": 110,
                    "column": 31
                }
            },
            "17": {
                "start": {
                    "line": 122,
                    "column": 8
                },
                "end": {
                    "line": 122,
                    "column": 50
                }
            },
            "18": {
                "start": {
                    "line": 123,
                    "column": 8
                },
                "end": {
                    "line": 123,
                    "column": 21
                }
            },
            "19": {
                "start": {
                    "line": 135,
                    "column": 8
                },
                "end": {
                    "line": 135,
                    "column": 52
                }
            },
            "20": {
                "start": {
                    "line": 136,
                    "column": 8
                },
                "end": {
                    "line": 136,
                    "column": 38
                }
            },
            "21": {
                "start": {
                    "line": 148,
                    "column": 8
                },
                "end": {
                    "line": 148,
                    "column": 52
                }
            },
            "22": {
                "start": {
                    "line": 149,
                    "column": 8
                },
                "end": {
                    "line": 149,
                    "column": 38
                }
            },
            "23": {
                "start": {
                    "line": 162,
                    "column": 8
                },
                "end": {
                    "line": 162,
                    "column": 41
                }
            },
            "24": {
                "start": {
                    "line": 163,
                    "column": 8
                },
                "end": {
                    "line": 166,
                    "column": 9
                }
            },
            "25": {
                "start": {
                    "line": 165,
                    "column": 12
                },
                "end": {
                    "line": 165,
                    "column": 64
                }
            },
            "26": {
                "start": {
                    "line": 167,
                    "column": 8
                },
                "end": {
                    "line": 167,
                    "column": 19
                }
            },
            "27": {
                "start": {
                    "line": 199,
                    "column": 8
                },
                "end": {
                    "line": 203,
                    "column": 30
                }
            },
            "28": {
                "start": {
                    "line": 204,
                    "column": 8
                },
                "end": {
                    "line": 239,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 206,
                    "column": 12
                },
                "end": {
                    "line": 206,
                    "column": 31
                }
            },
            "30": {
                "start": {
                    "line": 207,
                    "column": 12
                },
                "end": {
                    "line": 237,
                    "column": 13
                }
            },
            "31": {
                "start": {
                    "line": 209,
                    "column": 16
                },
                "end": {
                    "line": 209,
                    "column": 36
                }
            },
            "32": {
                "start": {
                    "line": 213,
                    "column": 16
                },
                "end": {
                    "line": 213,
                    "column": 36
                }
            },
            "33": {
                "start": {
                    "line": 214,
                    "column": 16
                },
                "end": {
                    "line": 236,
                    "column": 17
                }
            },
            "34": {
                "start": {
                    "line": 216,
                    "column": 20
                },
                "end": {
                    "line": 216,
                    "column": 40
                }
            },
            "35": {
                "start": {
                    "line": 218,
                    "column": 21
                },
                "end": {
                    "line": 236,
                    "column": 17
                }
            },
            "36": {
                "start": {
                    "line": 220,
                    "column": 20
                },
                "end": {
                    "line": 231,
                    "column": 21
                }
            },
            "37": {
                "start": {
                    "line": 222,
                    "column": 24
                },
                "end": {
                    "line": 222,
                    "column": 46
                }
            },
            "38": {
                "start": {
                    "line": 226,
                    "column": 24
                },
                "end": {
                    "line": 229,
                    "column": 25
                }
            },
            "39": {
                "start": {
                    "line": 228,
                    "column": 28
                },
                "end": {
                    "line": 228,
                    "column": 38
                }
            },
            "40": {
                "start": {
                    "line": 230,
                    "column": 24
                },
                "end": {
                    "line": 230,
                    "column": 54
                }
            },
            "41": {
                "start": {
                    "line": 235,
                    "column": 20
                },
                "end": {
                    "line": 235,
                    "column": 30
                }
            },
            "42": {
                "start": {
                    "line": 238,
                    "column": 12
                },
                "end": {
                    "line": 238,
                    "column": 30
                }
            },
            "43": {
                "start": {
                    "line": 240,
                    "column": 8
                },
                "end": {
                    "line": 240,
                    "column": 24
                }
            },
            "44": {
                "start": {
                    "line": 251,
                    "column": 8
                },
                "end": {
                    "line": 256,
                    "column": 14
                }
            },
            "45": {
                "start": {
                    "line": 257,
                    "column": 8
                },
                "end": {
                    "line": 274,
                    "column": 9
                }
            },
            "46": {
                "start": {
                    "line": 259,
                    "column": 12
                },
                "end": {
                    "line": 259,
                    "column": 30
                }
            },
            "47": {
                "start": {
                    "line": 260,
                    "column": 12
                },
                "end": {
                    "line": 260,
                    "column": 32
                }
            },
            "48": {
                "start": {
                    "line": 261,
                    "column": 12
                },
                "end": {
                    "line": 273,
                    "column": 13
                }
            },
            "49": {
                "start": {
                    "line": 263,
                    "column": 16
                },
                "end": {
                    "line": 272,
                    "column": 17
                }
            },
            "50": {
                "start": {
                    "line": 265,
                    "column": 20
                },
                "end": {
                    "line": 265,
                    "column": 34
                }
            },
            "51": {
                "start": {
                    "line": 266,
                    "column": 20
                },
                "end": {
                    "line": 269,
                    "column": 21
                }
            },
            "52": {
                "start": {
                    "line": 268,
                    "column": 24
                },
                "end": {
                    "line": 268,
                    "column": 33
                }
            },
            "53": {
                "start": {
                    "line": 270,
                    "column": 20
                },
                "end": {
                    "line": 270,
                    "column": 45
                }
            },
            "54": {
                "start": {
                    "line": 271,
                    "column": 20
                },
                "end": {
                    "line": 271,
                    "column": 45
                }
            },
            "55": {
                "start": {
                    "line": 275,
                    "column": 8
                },
                "end": {
                    "line": 275,
                    "column": 32
                }
            },
            "56": {
                "start": {
                    "line": 276,
                    "column": 8
                },
                "end": {
                    "line": 276,
                    "column": 32
                }
            },
            "57": {
                "start": {
                    "line": 289,
                    "column": 8
                },
                "end": {
                    "line": 296,
                    "column": 9
                }
            },
            "58": {
                "start": {
                    "line": 291,
                    "column": 12
                },
                "end": {
                    "line": 291,
                    "column": 32
                }
            },
            "59": {
                "start": {
                    "line": 293,
                    "column": 13
                },
                "end": {
                    "line": 296,
                    "column": 9
                }
            },
            "60": {
                "start": {
                    "line": 295,
                    "column": 12
                },
                "end": {
                    "line": 295,
                    "column": 42
                }
            },
            "61": {
                "start": {
                    "line": 298,
                    "column": 8
                },
                "end": {
                    "line": 298,
                    "column": 19
                }
            },
            "62": {
                "start": {
                    "line": 302,
                    "column": 0
                },
                "end": {
                    "line": 302,
                    "column": 22
                }
            },
            "63": {
                "start": {
                    "line": 314,
                    "column": 0
                },
                "end": {
                    "line": 314,
                    "column": 73
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 76,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 76,
                            "column": 8
                        },
                        "end": {
                            "line": 76,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 76,
                            "column": 8
                        },
                        "end": {
                            "line": 76,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 106,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 106,
                            "column": 8
                        },
                        "end": {
                            "line": 106,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 106,
                            "column": 8
                        },
                        "end": {
                            "line": 106,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 163,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 163,
                            "column": 8
                        },
                        "end": {
                            "line": 163,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 163,
                            "column": 8
                        },
                        "end": {
                            "line": 163,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 207,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 207,
                            "column": 12
                        },
                        "end": {
                            "line": 207,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 207,
                            "column": 12
                        },
                        "end": {
                            "line": 207,
                            "column": 12
                        }
                    }
                ]
            },
            "5": {
                "line": 214,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 214,
                            "column": 16
                        },
                        "end": {
                            "line": 214,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 214,
                            "column": 16
                        },
                        "end": {
                            "line": 214,
                            "column": 16
                        }
                    }
                ]
            },
            "6": {
                "line": 218,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 218,
                            "column": 21
                        },
                        "end": {
                            "line": 218,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 218,
                            "column": 21
                        },
                        "end": {
                            "line": 218,
                            "column": 21
                        }
                    }
                ]
            },
            "7": {
                "line": 220,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 220,
                            "column": 20
                        },
                        "end": {
                            "line": 220,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 220,
                            "column": 20
                        },
                        "end": {
                            "line": 220,
                            "column": 20
                        }
                    }
                ]
            },
            "8": {
                "line": 226,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 226,
                            "column": 24
                        },
                        "end": {
                            "line": 226,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 226,
                            "column": 24
                        },
                        "end": {
                            "line": 226,
                            "column": 24
                        }
                    }
                ]
            },
            "9": {
                "line": 257,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 257,
                            "column": 8
                        },
                        "end": {
                            "line": 257,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 257,
                            "column": 8
                        },
                        "end": {
                            "line": 257,
                            "column": 8
                        }
                    }
                ]
            },
            "10": {
                "line": 257,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 257,
                            "column": 11
                        },
                        "end": {
                            "line": 257,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 257,
                            "column": 19
                        },
                        "end": {
                            "line": 257,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 257,
                            "column": 34
                        },
                        "end": {
                            "line": 257,
                            "column": 49
                        }
                    }
                ]
            },
            "11": {
                "line": 261,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 261,
                            "column": 12
                        },
                        "end": {
                            "line": 261,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 261,
                            "column": 12
                        },
                        "end": {
                            "line": 261,
                            "column": 12
                        }
                    }
                ]
            },
            "12": {
                "line": 266,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 266,
                            "column": 20
                        },
                        "end": {
                            "line": 266,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 266,
                            "column": 20
                        },
                        "end": {
                            "line": 266,
                            "column": 20
                        }
                    }
                ]
            },
            "13": {
                "line": 289,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 289,
                            "column": 8
                        },
                        "end": {
                            "line": 289,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 289,
                            "column": 8
                        },
                        "end": {
                            "line": 289,
                            "column": 8
                        }
                    }
                ]
            },
            "14": {
                "line": 293,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 293,
                            "column": 13
                        },
                        "end": {
                            "line": 293,
                            "column": 13
                        }
                    },
                    {
                        "start": {
                            "line": 293,
                            "column": 13
                        },
                        "end": {
                            "line": 293,
                            "column": 13
                        }
                    }
                ]
            },
            "15": {
                "line": 293,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 293,
                            "column": 16
                        },
                        "end": {
                            "line": 293,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 293,
                            "column": 41
                        },
                        "end": {
                            "line": 293,
                            "column": 44
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('axis-time-base', function (Y, NAME) {",
            "",
            "/**",
            " * Provides functionality for the handling of time axis data for a chart.",
            " *",
            " * @module charts",
            " * @submodule axis-time-base",
            " */",
            "",
            "var Y_Lang = Y.Lang;",
            "/**",
            " * TimeImpl contains logic for time data. TimeImpl is used by the following classes:",
            " * <ul>",
            " *      <li>{{#crossLink \"TimeAxisBase\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"TimeAxis\"}}{{/crossLink}}</li>",
            " *  </ul>",
            " *",
            " * @class TimeImpl",
            " * @constructor",
            " * @submodule axis-time-base",
            " */",
            "function TimeImpl()",
            "{",
            "}",
            "",
            "TimeImpl.NAME = \"timeImpl\";",
            "",
            "TimeImpl.ATTRS =",
            "{",
            "    /**",
            "     * Method used for formatting a label. This attribute allows for the default label formatting method to overridden.",
            "     * The method use would need to implement the arguments below and return a `String` or an `HTMLElement`. The default",
            "     * implementation of the method returns a `String`. The output of this method will be rendered to the DOM using",
            "     * `appendChild`. If you override the `labelFunction` method and return an html string, you will also need to override",
            "     * the Axis' `appendLabelFunction` to accept html as a `String`.",
            "     * <dl>",
            "     *      <dt>val</dt><dd>Label to be formatted. (`String`)</dd>",
            "     *      <dt>format</dt><dd>STRFTime string used to format the label. (optional)</dd>",
            "     * </dl>",
            "     *",
            "     * @attribute labelFunction",
            "     * @type Function",
            "     */",
            "",
            "    /**",
            "     * Pattern used by the `labelFunction` to format a label.",
            "     *",
            "     * @attribute labelFormat",
            "     * @type String",
            "     */",
            "    labelFormat: {",
            "        value: \"%b %d, %y\"",
            "    }",
            "};",
            "",
            "TimeImpl.prototype = {",
            "    /**",
            "     * Type of data used in `Data`.",
            "     *",
            "     * @property _type",
            "     * @readOnly",
            "     * @private",
            "     */",
            "    _type: \"time\",",
            "",
            "    /**",
            "     * Getter method for maximum attribute.",
            "     *",
            "     * @method _maximumGetter",
            "     * @return Number",
            "     * @private",
            "     */",
            "    _maximumGetter: function ()",
            "    {",
            "        var max = this._getNumber(this._setMaximum);",
            "        if(!Y_Lang.isNumber(max))",
            "        {",
            "            max = this._getNumber(this.get(\"dataMaximum\"));",
            "        }",
            "        return parseFloat(max);",
            "    },",
            "",
            "    /**",
            "     * Setter method for maximum attribute.",
            "     *",
            "     * @method _maximumSetter",
            "     * @param {Object} value",
            "     * @private",
            "     */",
            "    _maximumSetter: function (value)",
            "    {",
            "        this._setMaximum = this._getNumber(value);",
            "        return value;",
            "    },",
            "",
            "    /**",
            "     * Getter method for minimum attribute.",
            "     *",
            "     * @method _minimumGetter",
            "     * @return Number",
            "     * @private",
            "     */",
            "    _minimumGetter: function ()",
            "    {",
            "        var min = this._getNumber(this._setMinimum);",
            "        if(!Y_Lang.isNumber(min))",
            "        {",
            "            min = this._getNumber(this.get(\"dataMinimum\"));",
            "        }",
            "        return parseFloat(min);",
            "    },",
            "",
            "    /**",
            "     * Setter method for minimum attribute.",
            "     *",
            "     * @method _minimumSetter",
            "     * @param {Object} value",
            "     * @private",
            "     */",
            "    _minimumSetter: function (value)",
            "    {",
            "        this._setMinimum = this._getNumber(value);",
            "        return value;",
            "    },",
            "",
            "    /**",
            "     * Indicates whether or not the maximum attribute has been explicitly set.",
            "     *",
            "     * @method _getSetMax",
            "     * @return Boolean",
            "     * @private",
            "     */",
            "    _getSetMax: function()",
            "    {",
            "        var max = this._getNumber(this._setMaximum);",
            "        return (Y_Lang.isNumber(max));",
            "    },",
            "",
            "    /**",
            "     * Indicates whether or not the minimum attribute has been explicitly set.",
            "     *",
            "     * @method _getSetMin",
            "     * @return Boolean",
            "     * @private",
            "     */",
            "    _getSetMin: function()",
            "    {",
            "        var min = this._getNumber(this._setMinimum);",
            "        return (Y_Lang.isNumber(min));",
            "    },",
            "",
            "    /**",
            "     * Formats a label based on the axis type and optionally specified format.",
            "     *",
            "     * @method formatLabel",
            "     * @param {Object} value",
            "     * @param {Object} format Pattern used to format the value.",
            "     * @return String",
            "     */",
            "    formatLabel: function(val, format)",
            "    {",
            "        val = Y.DataType.Date.parse(val);",
            "        if(format)",
            "        {",
            "            return Y.DataType.Date.format(val, {format:format});",
            "        }",
            "        return val;",
            "    },",
            "",
            "    /**",
            "     * Constant used to generate unique id.",
            "     *",
            "     * @property GUID",
            "     * @type String",
            "     * @private",
            "     */",
            "    GUID: \"yuitimeaxis\",",
            "",
            "    /**",
            "     * Type of data used in `Axis`.",
            "     *",
            "     * @property _dataType",
            "     * @readOnly",
            "     * @private",
            "     */",
            "    _dataType: \"time\",",
            "",
            "    /**",
            "     * Gets an array of values based on a key.",
            "     *",
            "     * @method _getKeyArray",
            "     * @param {String} key Value key associated with the data array.",
            "     * @param {Array} data Array in which the data resides.",
            "     * @return Array",
            "     * @private",
            "     */",
            "    _getKeyArray: function(key, data)",
            "    {",
            "        var obj,",
            "            keyArray = [],",
            "            i = 0,",
            "            val,",
            "            len = data.length;",
            "        for(; i < len; ++i)",
            "        {",
            "            obj = data[i][key];",
            "            if(Y_Lang.isDate(obj))",
            "            {",
            "                val = obj.valueOf();",
            "            }",
            "            else",
            "            {",
            "                val = new Date(obj);",
            "                if(Y_Lang.isDate(val))",
            "                {",
            "                    val = val.valueOf();",
            "                }",
            "                else if(!Y_Lang.isNumber(obj))",
            "                {",
            "                    if(Y_Lang.isNumber(parseFloat(obj)))",
            "                    {",
            "                        val = parseFloat(obj);",
            "                    }",
            "                    else",
            "                    {",
            "                        if(typeof obj !== \"string\")",
            "                        {",
            "                            obj = obj;",
            "                        }",
            "                        val = new Date(obj).valueOf();",
            "                    }",
            "                }",
            "                else",
            "                {",
            "                    val = obj;",
            "                }",
            "            }",
            "            keyArray[i] = val;",
            "        }",
            "        return keyArray;",
            "    },",
            "",
            "    /**",
            "     * Calculates the maximum and minimum values for the `Axis`.",
            "     *",
            "     * @method _updateMinAndMax",
            "     * @private",
            "     */",
            "    _updateMinAndMax: function()",
            "    {",
            "        var data = this.get(\"data\"),",
            "            max = 0,",
            "            min = 0,",
            "            len,",
            "            num,",
            "            i;",
            "        if(data && data.length && data.length > 0)",
            "        {",
            "            len = data.length;",
            "            max = min = data[0];",
            "            if(len > 1)",
            "            {",
            "                for(i = 1; i < len; i++)",
            "                {",
            "                    num = data[i];",
            "                    if(isNaN(num))",
            "                    {",
            "                        continue;",
            "                    }",
            "                    max = Math.max(num, max);",
            "                    min = Math.min(num, min);",
            "                }",
            "            }",
            "        }",
            "        this._dataMaximum = max;",
            "        this._dataMinimum = min;",
            "    },",
            "",
            "    /**",
            "     * Parses value into a number.",
            "     *",
            "     * @method _getNumber",
            "     * @param val {Object} Value to parse into a number",
            "     * @return Number",
            "     * @private",
            "     */",
            "    _getNumber: function(val)",
            "    {",
            "        if(Y_Lang.isDate(val))",
            "        {",
            "            val = val.valueOf();",
            "        }",
            "        else if(!Y_Lang.isNumber(val) && val)",
            "        {",
            "            val = new Date(val).valueOf();",
            "        }",
            "",
            "        return val;",
            "    }",
            "};",
            "",
            "Y.TimeImpl = TimeImpl;",
            "",
            "/**",
            " * TimeAxisBase manages time data for an axis.",
            " *",
            " * @class TimeAxisBase",
            " * @extends AxisBase",
            " * @uses TimeImpl",
            " * @constructor",
            " * @param {Object} config (optional) Configuration parameters.",
            " * @submodule axis-time-base",
            " */",
            "Y.TimeAxisBase = Y.Base.create(\"timeAxisBase\", Y.AxisBase, [Y.TimeImpl]);",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"axis-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "10": 1,
            "22": 1,
            "26": 1,
            "28": 1,
            "56": 1,
            "75": 10,
            "76": 10,
            "78": 2,
            "80": 10,
            "92": 4,
            "93": 4,
            "105": 10,
            "106": 10,
            "108": 2,
            "110": 10,
            "122": 4,
            "123": 4,
            "135": 8,
            "136": 8,
            "148": 8,
            "149": 8,
            "162": 4,
            "163": 4,
            "165": 2,
            "167": 2,
            "199": 30,
            "204": 30,
            "206": 490,
            "207": 490,
            "209": 22,
            "213": 468,
            "214": 468,
            "216": 420,
            "218": 48,
            "220": 48,
            "222": 44,
            "226": 4,
            "228": 2,
            "230": 4,
            "235": 0,
            "238": 490,
            "240": 30,
            "251": 40,
            "257": 40,
            "259": 38,
            "260": 38,
            "261": 38,
            "263": 32,
            "265": 634,
            "266": 634,
            "268": 2,
            "270": 632,
            "271": 632,
            "275": 40,
            "276": 40,
            "289": 48,
            "291": 0,
            "293": 48,
            "295": 8,
            "298": 48,
            "302": 1,
            "314": 1
        }
    }
}