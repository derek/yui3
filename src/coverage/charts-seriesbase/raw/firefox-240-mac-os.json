{
    "build/series-base/series-base.js": {
        "path": "build/series-base/series-base.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 4,
            "9": 4,
            "10": 2,
            "11": 4,
            "12": 3,
            "13": 4,
            "14": 2,
            "15": 2,
            "16": 1,
            "17": 1,
            "18": 5,
            "19": 5,
            "20": 4,
            "21": 4,
            "22": 4,
            "23": 4,
            "24": 5,
            "25": 4,
            "26": 4,
            "27": 3,
            "28": 5,
            "29": 1,
            "30": 1,
            "31": 5,
            "32": 1,
            "33": 1,
            "34": 5,
            "35": 1,
            "36": 1,
            "37": 75,
            "38": 75,
            "39": 75,
            "40": 25,
            "41": 75,
            "42": 75,
            "43": 1,
            "44": 1,
            "45": 5,
            "46": 3,
            "47": 5,
            "48": 2,
            "49": 2,
            "50": 1,
            "51": 2,
            "52": 3,
            "53": 3,
            "54": 2,
            "55": 2,
            "56": 1,
            "57": 3,
            "58": 1,
            "59": 1
        },
        "b": {
            "1": [
                2,
                2
            ],
            "2": [
                3,
                1
            ],
            "3": [
                1,
                1
            ],
            "4": [
                4,
                1
            ],
            "5": [
                9,
                7
            ],
            "6": [
                3,
                1
            ],
            "7": [
                4,
                4
            ],
            "8": [
                1,
                4
            ],
            "9": [
                1,
                4
            ],
            "10": [
                1,
                4
            ],
            "11": [
                75,
                15
            ],
            "12": [
                75,
                5
            ],
            "13": [
                25,
                50
            ],
            "14": [
                75,
                15
            ],
            "15": [
                3,
                2
            ],
            "16": [
                1,
                1
            ],
            "17": [
                2,
                1
            ],
            "18": [
                1,
                1
            ]
        },
        "f": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 4,
            "5": 2,
            "6": 1,
            "7": 1,
            "8": 5,
            "9": 75,
            "10": 1,
            "11": 1,
            "12": 5,
            "13": 2,
            "14": 3,
            "15": 1
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 23
                    },
                    "end": {
                        "line": 1,
                        "column": 42
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 30,
                "loc": {
                    "start": {
                        "line": 30,
                        "column": 12
                    },
                    "end": {
                        "line": 31,
                        "column": 4
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 43,
                "loc": {
                    "start": {
                        "line": 43,
                        "column": 16
                    },
                    "end": {
                        "line": 44,
                        "column": 4
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 60,
                "loc": {
                    "start": {
                        "line": 60,
                        "column": 14
                    },
                    "end": {
                        "line": 60,
                        "column": 25
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 80,
                "loc": {
                    "start": {
                        "line": 80,
                        "column": 20
                    },
                    "end": {
                        "line": 81,
                        "column": 4
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 95,
                "loc": {
                    "start": {
                        "line": 95,
                        "column": 23
                    },
                    "end": {
                        "line": 96,
                        "column": 4
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 112,
                "loc": {
                    "start": {
                        "line": 112,
                        "column": 26
                    },
                    "end": {
                        "line": 113,
                        "column": 4
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 123,
                "loc": {
                    "start": {
                        "line": 123,
                        "column": 16
                    },
                    "end": {
                        "line": 124,
                        "column": 4
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 248,
                "loc": {
                    "start": {
                        "line": 248,
                        "column": 22
                    },
                    "end": {
                        "line": 249,
                        "column": 4
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 277,
                "loc": {
                    "start": {
                        "line": 277,
                        "column": 20
                    },
                    "end": {
                        "line": 278,
                        "column": 12
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 292,
                "loc": {
                    "start": {
                        "line": 292,
                        "column": 20
                    },
                    "end": {
                        "line": 293,
                        "column": 12
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 307,
                "loc": {
                    "start": {
                        "line": 307,
                        "column": 20
                    },
                    "end": {
                        "line": 307,
                        "column": 34
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 324,
                "loc": {
                    "start": {
                        "line": 324,
                        "column": 20
                    },
                    "end": {
                        "line": 325,
                        "column": 12
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 372,
                "loc": {
                    "start": {
                        "line": 372,
                        "column": 20
                    },
                    "end": {
                        "line": 373,
                        "column": 12
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 386,
                "loc": {
                    "start": {
                        "line": 386,
                        "column": 20
                    },
                    "end": {
                        "line": 387,
                        "column": 12
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 396,
                    "column": 57
                }
            },
            "2": {
                "start": {
                    "line": 25,
                    "column": 0
                },
                "end": {
                    "line": 393,
                    "column": 3
                }
            },
            "3": {
                "start": {
                    "line": 32,
                    "column": 8
                },
                "end": {
                    "line": 32,
                    "column": 26
                }
            },
            "4": {
                "start": {
                    "line": 33,
                    "column": 8
                },
                "end": {
                    "line": 33,
                    "column": 28
                }
            },
            "5": {
                "start": {
                    "line": 34,
                    "column": 8
                },
                "end": {
                    "line": 34,
                    "column": 24
                }
            },
            "6": {
                "start": {
                    "line": 45,
                    "column": 8
                },
                "end": {
                    "line": 46,
                    "column": 43
                }
            },
            "7": {
                "start": {
                    "line": 47,
                    "column": 8
                },
                "end": {
                    "line": 47,
                    "column": 37
                }
            },
            "8": {
                "start": {
                    "line": 61,
                    "column": 8
                },
                "end": {
                    "line": 62,
                    "column": 38
                }
            },
            "9": {
                "start": {
                    "line": 63,
                    "column": 8
                },
                "end": {
                    "line": 66,
                    "column": 9
                }
            },
            "10": {
                "start": {
                    "line": 65,
                    "column": 12
                },
                "end": {
                    "line": 65,
                    "column": 39
                }
            },
            "11": {
                "start": {
                    "line": 67,
                    "column": 8
                },
                "end": {
                    "line": 70,
                    "column": 9
                }
            },
            "12": {
                "start": {
                    "line": 69,
                    "column": 12
                },
                "end": {
                    "line": 69,
                    "column": 40
                }
            },
            "13": {
                "start": {
                    "line": 71,
                    "column": 8
                },
                "end": {
                    "line": 71,
                    "column": 21
                }
            },
            "14": {
                "start": {
                    "line": 82,
                    "column": 8
                },
                "end": {
                    "line": 83,
                    "column": 94
                }
            },
            "15": {
                "start": {
                    "line": 84,
                    "column": 8
                },
                "end": {
                    "line": 84,
                    "column": 21
                }
            },
            "16": {
                "start": {
                    "line": 97,
                    "column": 8
                },
                "end": {
                    "line": 102,
                    "column": 15
                }
            },
            "17": {
                "start": {
                    "line": 114,
                    "column": 8
                },
                "end": {
                    "line": 114,
                    "column": 49
                }
            },
            "18": {
                "start": {
                    "line": 125,
                    "column": 8
                },
                "end": {
                    "line": 126,
                    "column": 42
                }
            },
            "19": {
                "start": {
                    "line": 127,
                    "column": 8
                },
                "end": {
                    "line": 133,
                    "column": 9
                }
            },
            "20": {
                "start": {
                    "line": 129,
                    "column": 12
                },
                "end": {
                    "line": 129,
                    "column": 46
                }
            },
            "21": {
                "start": {
                    "line": 130,
                    "column": 12
                },
                "end": {
                    "line": 130,
                    "column": 45
                }
            },
            "22": {
                "start": {
                    "line": 131,
                    "column": 12
                },
                "end": {
                    "line": 131,
                    "column": 46
                }
            },
            "23": {
                "start": {
                    "line": 132,
                    "column": 12
                },
                "end": {
                    "line": 132,
                    "column": 47
                }
            },
            "24": {
                "start": {
                    "line": 134,
                    "column": 8
                },
                "end": {
                    "line": 141,
                    "column": 9
                }
            },
            "25": {
                "start": {
                    "line": 136,
                    "column": 12
                },
                "end": {
                    "line": 136,
                    "column": 37
                }
            },
            "26": {
                "start": {
                    "line": 137,
                    "column": 12
                },
                "end": {
                    "line": 140,
                    "column": 13
                }
            },
            "27": {
                "start": {
                    "line": 139,
                    "column": 16
                },
                "end": {
                    "line": 139,
                    "column": 33
                }
            },
            "28": {
                "start": {
                    "line": 142,
                    "column": 8
                },
                "end": {
                    "line": 146,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 144,
                    "column": 12
                },
                "end": {
                    "line": 144,
                    "column": 33
                }
            },
            "30": {
                "start": {
                    "line": 145,
                    "column": 12
                },
                "end": {
                    "line": 145,
                    "column": 30
                }
            },
            "31": {
                "start": {
                    "line": 147,
                    "column": 8
                },
                "end": {
                    "line": 151,
                    "column": 9
                }
            },
            "32": {
                "start": {
                    "line": 149,
                    "column": 12
                },
                "end": {
                    "line": 149,
                    "column": 40
                }
            },
            "33": {
                "start": {
                    "line": 150,
                    "column": 12
                },
                "end": {
                    "line": 150,
                    "column": 37
                }
            },
            "34": {
                "start": {
                    "line": 152,
                    "column": 8
                },
                "end": {
                    "line": 156,
                    "column": 9
                }
            },
            "35": {
                "start": {
                    "line": 154,
                    "column": 12
                },
                "end": {
                    "line": 154,
                    "column": 40
                }
            },
            "36": {
                "start": {
                    "line": 155,
                    "column": 12
                },
                "end": {
                    "line": 155,
                    "column": 37
                }
            },
            "37": {
                "start": {
                    "line": 250,
                    "column": 8
                },
                "end": {
                    "line": 257,
                    "column": 27
                }
            },
            "38": {
                "start": {
                    "line": 258,
                    "column": 8
                },
                "end": {
                    "line": 258,
                    "column": 27
                }
            },
            "39": {
                "start": {
                    "line": 259,
                    "column": 8
                },
                "end": {
                    "line": 262,
                    "column": 9
                }
            },
            "40": {
                "start": {
                    "line": 261,
                    "column": 12
                },
                "end": {
                    "line": 261,
                    "column": 30
                }
            },
            "41": {
                "start": {
                    "line": 263,
                    "column": 8
                },
                "end": {
                    "line": 263,
                    "column": 30
                }
            },
            "42": {
                "start": {
                    "line": 264,
                    "column": 8
                },
                "end": {
                    "line": 264,
                    "column": 35
                }
            },
            "43": {
                "start": {
                    "line": 279,
                    "column": 16
                },
                "end": {
                    "line": 279,
                    "column": 56
                }
            },
            "44": {
                "start": {
                    "line": 294,
                    "column": 16
                },
                "end": {
                    "line": 294,
                    "column": 57
                }
            },
            "45": {
                "start": {
                    "line": 309,
                    "column": 16
                },
                "end": {
                    "line": 311,
                    "column": 17
                }
            },
            "46": {
                "start": {
                    "line": 310,
                    "column": 20
                },
                "end": {
                    "line": 310,
                    "column": 47
                }
            },
            "47": {
                "start": {
                    "line": 312,
                    "column": 16
                },
                "end": {
                    "line": 312,
                    "column": 27
                }
            },
            "48": {
                "start": {
                    "line": 326,
                    "column": 16
                },
                "end": {
                    "line": 327,
                    "column": 46
                }
            },
            "49": {
                "start": {
                    "line": 328,
                    "column": 16
                },
                "end": {
                    "line": 331,
                    "column": 17
                }
            },
            "50": {
                "start": {
                    "line": 330,
                    "column": 20
                },
                "end": {
                    "line": 330,
                    "column": 47
                }
            },
            "51": {
                "start": {
                    "line": 332,
                    "column": 16
                },
                "end": {
                    "line": 332,
                    "column": 29
                }
            },
            "52": {
                "start": {
                    "line": 374,
                    "column": 16
                },
                "end": {
                    "line": 375,
                    "column": 54
                }
            },
            "53": {
                "start": {
                    "line": 376,
                    "column": 16
                },
                "end": {
                    "line": 382,
                    "column": 17
                }
            },
            "54": {
                "start": {
                    "line": 377,
                    "column": 20
                },
                "end": {
                    "line": 377,
                    "column": 46
                }
            },
            "55": {
                "start": {
                    "line": 378,
                    "column": 20
                },
                "end": {
                    "line": 381,
                    "column": 21
                }
            },
            "56": {
                "start": {
                    "line": 380,
                    "column": 24
                },
                "end": {
                    "line": 380,
                    "column": 65
                }
            },
            "57": {
                "start": {
                    "line": 383,
                    "column": 16
                },
                "end": {
                    "line": 383,
                    "column": 36
                }
            },
            "58": {
                "start": {
                    "line": 388,
                    "column": 16
                },
                "end": {
                    "line": 388,
                    "column": 41
                }
            },
            "59": {
                "start": {
                    "line": 389,
                    "column": 16
                },
                "end": {
                    "line": 389,
                    "column": 27
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 63,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 63,
                            "column": 8
                        },
                        "end": {
                            "line": 63,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 63,
                            "column": 8
                        },
                        "end": {
                            "line": 63,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 67,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 67,
                            "column": 8
                        },
                        "end": {
                            "line": 67,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 67,
                            "column": 8
                        },
                        "end": {
                            "line": 67,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 82,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 82,
                            "column": 64
                        },
                        "end": {
                            "line": 82,
                            "column": 67
                        }
                    },
                    {
                        "start": {
                            "line": 82,
                            "column": 70
                        },
                        "end": {
                            "line": 82,
                            "column": 73
                        }
                    }
                ]
            },
            "4": {
                "line": 127,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 127,
                            "column": 8
                        },
                        "end": {
                            "line": 127,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 127,
                            "column": 8
                        },
                        "end": {
                            "line": 127,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 134,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 134,
                            "column": 14
                        },
                        "end": {
                            "line": 134,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 134,
                            "column": 25
                        },
                        "end": {
                            "line": 134,
                            "column": 43
                        }
                    }
                ]
            },
            "6": {
                "line": 137,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 137,
                            "column": 12
                        },
                        "end": {
                            "line": 137,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 137,
                            "column": 12
                        },
                        "end": {
                            "line": 137,
                            "column": 12
                        }
                    }
                ]
            },
            "7": {
                "line": 137,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 137,
                            "column": 15
                        },
                        "end": {
                            "line": 137,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 137,
                            "column": 25
                        },
                        "end": {
                            "line": 137,
                            "column": 50
                        }
                    }
                ]
            },
            "8": {
                "line": 142,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 142,
                            "column": 8
                        },
                        "end": {
                            "line": 142,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 142,
                            "column": 8
                        },
                        "end": {
                            "line": 142,
                            "column": 8
                        }
                    }
                ]
            },
            "9": {
                "line": 147,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 147,
                            "column": 8
                        },
                        "end": {
                            "line": 147,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 147,
                            "column": 8
                        },
                        "end": {
                            "line": 147,
                            "column": 8
                        }
                    }
                ]
            },
            "10": {
                "line": 152,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 152,
                            "column": 8
                        },
                        "end": {
                            "line": 152,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 152,
                            "column": 8
                        },
                        "end": {
                            "line": 152,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 256,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 256,
                            "column": 18
                        },
                        "end": {
                            "line": 256,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 256,
                            "column": 34
                        },
                        "end": {
                            "line": 256,
                            "column": 45
                        }
                    }
                ]
            },
            "12": {
                "line": 258,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 258,
                            "column": 16
                        },
                        "end": {
                            "line": 258,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 258,
                            "column": 25
                        },
                        "end": {
                            "line": 258,
                            "column": 26
                        }
                    }
                ]
            },
            "13": {
                "line": 259,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 259,
                            "column": 8
                        },
                        "end": {
                            "line": 259,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 259,
                            "column": 8
                        },
                        "end": {
                            "line": 259,
                            "column": 8
                        }
                    }
                ]
            },
            "14": {
                "line": 263,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 263,
                            "column": 15
                        },
                        "end": {
                            "line": 263,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 263,
                            "column": 23
                        },
                        "end": {
                            "line": 263,
                            "column": 29
                        }
                    }
                ]
            },
            "15": {
                "line": 309,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 309,
                            "column": 16
                        },
                        "end": {
                            "line": 309,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 309,
                            "column": 16
                        },
                        "end": {
                            "line": 309,
                            "column": 16
                        }
                    }
                ]
            },
            "16": {
                "line": 328,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 328,
                            "column": 16
                        },
                        "end": {
                            "line": 328,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 328,
                            "column": 16
                        },
                        "end": {
                            "line": 328,
                            "column": 16
                        }
                    }
                ]
            },
            "17": {
                "line": 376,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 376,
                            "column": 16
                        },
                        "end": {
                            "line": 376,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 376,
                            "column": 16
                        },
                        "end": {
                            "line": 376,
                            "column": 16
                        }
                    }
                ]
            },
            "18": {
                "line": 378,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 378,
                            "column": 20
                        },
                        "end": {
                            "line": 378,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 378,
                            "column": 20
                        },
                        "end": {
                            "line": 378,
                            "column": 20
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('series-base', function (Y, NAME) {",
            "",
            "/**",
            " * Provides functionality for creating a chart series.",
            " *",
            " * @module charts",
            " * @submodule series-base",
            " */",
            "",
            "/**",
            " * An abstract class for creating series instances.",
            " * SeriesBase is used by the following classes:",
            " * <ul>",
            " *      <li>{{#crossLink \"CartesianSeries\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"PieSeries\"}}{{/crossLink}}</li>",
            " *  </ul>",
            " *",
            " * @class SeriesBase",
            " * @extends Base",
            " * @uses Renderer",
            " * @constructor",
            " * @param {Object} config (optional) Configuration parameters.",
            " * @submodule series-base",
            " */",
            "Y.SeriesBase = Y.Base.create(\"seriesBase\", Y.Base, [Y.Renderer], {",
            "    /**",
            "     * @method render",
            "     * @private",
            "     */",
            "    render: function()",
            "    {",
            "        this._setCanvas();",
            "        this.addListeners();",
            "        this.validate();",
            "    },",
            "",
            "    /**",
            "     * Creates a `Graphic` instance.",
            "     *",
            "     * @method _setCanvas",
            "     * @protected",
            "     */",
            "    _setCanvas: function()",
            "    {",
            "        var graph = this.get(\"graph\"),",
            "            graphic = graph.get(\"graphic\");",
            "        this.set(\"graphic\", graphic);",
            "    },",
            "",
            "    /**",
            "     * Returns a reference to the parent container to which all chart elements are contained.",
            "     * When the series is bound to a `Chart` instance, the `Chart` instance is the reference.",
            "     * If nothing is set as the `chart` attribute, the `_getChart` method will return a reference",
            "     * to the `graphic` attribute.",
            "     *",
            "     * @method _getChart",
            "     * @return {Object}",
            "     * @private",
            "     */",
            "    _getChart:function() {",
            "        var chart,",
            "            graph = this.get(\"graph\");",
            "        if(graph)",
            "        {",
            "            chart = graph.get(\"chart\");",
            "        }",
            "        if(!chart)",
            "        {",
            "            chart = this.get(\"graphic\");",
            "        }",
            "        return chart;",
            "    },",
            "",
            "    /**",
            "     * Returns the sum of all values for the series.",
            "     *",
            "     * @method getTotalValues",
            "     * @return Number",
            "     */",
            "    getTotalValues: function()",
            "    {",
            "        var valueCoord = this.get(\"direction\") === \"vertical\" ? \"x\" : \"y\",",
            "            total = this.get(valueCoord + \"Axis\").getTotalByKey(this.get(valueCoord + \"Key\"));",
            "        return total;",
            "    },",
            "",
            "    /**",
            "     * Gets the default value for the `styles` attribute. Overrides",
            "     * base implementation.",
            "     *",
            "     * @method _getDefaultStyles",
            "     * @return Object",
            "     * @protected",
            "     */",
            "    _getDefaultStyles: function()",
            "    {",
            "        return {padding:{",
            "                top: 0,",
            "                left: 0,",
            "                right: 0,",
            "                bottom: 0",
            "            }};",
            "    },",
            "",
            "    /**",
            "     * Shows/hides contents of the series.",
            "     *",
            "     * @method _handleVisibleChange",
            "     * @param {Object} e Event object.",
            "     * @protected",
            "     */",
            "    _handleVisibleChange: function()",
            "    {",
            "        this._toggleVisible(this.get(\"visible\"));",
            "    },",
            "",
            "    /**",
            "     * Destructor implementation for the CartesianSeries class. Calls destroy on all Graphic instances.",
            "     *",
            "     * @method destructor",
            "     * @protected",
            "     */",
            "    destructor: function()",
            "    {",
            "        var marker,",
            "            markers = this.get(\"markers\");",
            "        if(this.get(\"rendered\"))",
            "        {",
            "            this._stylesChangeHandle.detach();",
            "            this._widthChangeHandle.detach();",
            "            this._heightChangeHandle.detach();",
            "            this._visibleChangeHandle.detach();",
            "        }",
            "        while(markers && markers.length > 0)",
            "        {",
            "            marker = markers.shift();",
            "            if(marker && marker instanceof Y.Shape)",
            "            {",
            "                marker.destroy();",
            "            }",
            "        }",
            "        if(this._path)",
            "        {",
            "            this._path.destroy();",
            "            this._path = null;",
            "        }",
            "        if(this._lineGraphic)",
            "        {",
            "            this._lineGraphic.destroy();",
            "            this._lineGraphic = null;",
            "        }",
            "        if(this._groupMarker)",
            "        {",
            "            this._groupMarker.destroy();",
            "            this._groupMarker = null;",
            "        }",
            "    },",
            "",
            "    /**",
            "     * Collection of default colors used for lines in a series when not specified by user.",
            "     *",
            "     * @property _defaultLineColors",
            "     * @type Array",
            "     * @protected",
            "     */",
            "    _defaultLineColors:[",
            "        \"#426ab3\",",
            "        \"#d09b2c\",",
            "        \"#000000\",",
            "        \"#b82837\",",
            "        \"#b384b5\",",
            "        \"#ff7200\",",
            "        \"#779de3\",",
            "        \"#cbc8ba\",",
            "        \"#7ed7a6\",",
            "        \"#007a6c\"",
            "    ],",
            "",
            "    /**",
            "     * Collection of default colors used for marker fills in a series when not specified by user.",
            "     *",
            "     * @property _defaultFillColors",
            "     * @type Array",
            "     * @protected",
            "     */",
            "    _defaultFillColors:[",
            "        \"#6084d0\",",
            "        \"#eeb647\",",
            "        \"#6c6b5f\",",
            "        \"#d6484f\",",
            "        \"#ce9ed1\",",
            "        \"#ff9f3b\",",
            "        \"#93b7ff\",",
            "        \"#e0ddd0\",",
            "        \"#94ecba\",",
            "        \"#309687\"",
            "    ],",
            "",
            "    /**",
            "     * Collection of default colors used for marker borders in a series when not specified by user.",
            "     *",
            "     * @property _defaultBorderColors",
            "     * @type Array",
            "     * @protected",
            "     */",
            "    _defaultBorderColors:[",
            "        \"#205096\",",
            "        \"#b38206\",",
            "        \"#000000\",",
            "        \"#94001e\",",
            "        \"#9d6fa0\",",
            "        \"#e55b00\",",
            "        \"#5e85c9\",",
            "        \"#adab9e\",",
            "        \"#6ac291\",",
            "        \"#006457\"",
            "    ],",
            "",
            "    /**",
            "     * Collection of default colors used for area fills, histogram fills and pie fills in a series when not specified by user.",
            "     *",
            "     * @property _defaultSliceColors",
            "     * @type Array",
            "     * @protected",
            "     */",
            "    _defaultSliceColors: [",
            "        \"#66007f\",",
            "        \"#a86f41\",",
            "        \"#295454\",",
            "        \"#996ab2\",",
            "        \"#e8cdb7\",",
            "        \"#90bdbd\",",
            "        \"#000000\",",
            "        \"#c3b8ca\",",
            "        \"#968373\",",
            "        \"#678585\"",
            "    ],",
            "",
            "    /**",
            "     * Parses a color based on a series order and type.",
            "     *",
            "     * @method _getDefaultColor",
            "     * @param {Number} index Index indicating the series order.",
            "     * @param {String} type Indicates which type of object needs the color.",
            "     * @return String",
            "     * @protected",
            "     */",
            "    _getDefaultColor: function(index, type)",
            "    {",
            "        var colors = {",
            "                line: this._defaultLineColors,",
            "                fill: this._defaultFillColors,",
            "                border: this._defaultBorderColors,",
            "                slice: this._defaultSliceColors",
            "            },",
            "            col = colors[type] || colors.fill,",
            "            l = col.length;",
            "        index = index || 0;",
            "        if(index >= l)",
            "        {",
            "            index = index % l;",
            "        }",
            "        type = type || \"fill\";",
            "        return colors[type][index];",
            "    }",
            "}, {",
            "    ATTRS: {",
            "        /*",
            "         * Returns the width of the parent graph",
            "         *",
            "         * @attribute width",
            "         * @type Number",
            "         */",
            "        width: {",
            "            readOnly: true,",
            "",
            "            getter: function()",
            "            {",
            "                return this.get(\"graphic\").get(\"width\");",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Returns the height of the parent graph",
            "         *",
            "         * @attribute height",
            "         * @type Number",
            "         */",
            "        height: {",
            "            readOnly: true,",
            "",
            "            getter: function()",
            "            {",
            "                return this.get(\"graphic\").get(\"height\");",
            "            }",
            "        },",
            "",
            "        /**",
            "         * The graphic in which drawings will be rendered.",
            "         *",
            "         * @attribute graphic",
            "         * @type Graphic",
            "         */",
            "        graphic: {",
            "            lazyAdd: false,",
            "",
            "            setter: function(val) {",
            "                //woraround for Attribute order of operations bug",
            "                if(!this.get(\"rendered\")) {",
            "                    this.set(\"rendered\", true);",
            "                }",
            "                return val;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Reference to the `Chart` application. If no `Chart` application is present,",
            "         * a reference to the `Graphic` instance that the series is drawn into will be returned.",
            "         *",
            "         * @attribute chart",
            "         * @type ChartBase",
            "         */",
            "        chart: {",
            "            getter: function()",
            "            {",
            "                var chart,",
            "                    graph = this.get(\"graph\");",
            "                if(graph)",
            "                {",
            "                    chart = graph.get(\"chart\");",
            "                }",
            "                return chart;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Reference to the `Graph` in which the series is drawn into.",
            "         *",
            "         * @attribute graph",
            "         * @type Graph",
            "         */",
            "        graph: {},",
            "",
            "        /**",
            "         * Indicates whether the Series has been through its initial set up.",
            "         *",
            "         * @attribute rendered",
            "         * @type Boolean",
            "         */",
            "        rendered: {",
            "            value: false",
            "        },",
            "",
            "        /**",
            "         * Indicates whether to show the series",
            "         *",
            "         * @attribute visible",
            "         * @type Boolean",
            "         * @default true",
            "         */",
            "        visible: {",
            "            value: true",
            "        },",
            "",
            "        /**",
            "         * Indicates whether or not markers for a series will be grouped and rendered in a single complex shape instance.",
            "         *",
            "         * @attribute groupMarkers",
            "         * @type Boolean",
            "         */",
            "        groupMarkers: {",
            "            getter: function()",
            "            {",
            "                var graph,",
            "                    groupMarkers = this._groupMarkers;",
            "                if(!groupMarkers) {",
            "                    graph = this.get(\"graph\");",
            "                    if(graph)",
            "                    {",
            "                        groupMarkers = graph.get(\"groupMarkers\");",
            "                    }",
            "                }",
            "                return groupMarkers;",
            "            },",
            "",
            "            setter: function(val)",
            "            {",
            "                this._groupMarkers = val;",
            "                return val;",
            "            }",
            "        }",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"graphics\", \"axis-base\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "25": 1,
            "32": 1,
            "33": 1,
            "34": 1,
            "45": 1,
            "47": 1,
            "61": 4,
            "63": 4,
            "65": 2,
            "67": 4,
            "69": 3,
            "71": 4,
            "82": 2,
            "84": 2,
            "97": 1,
            "114": 1,
            "125": 5,
            "127": 5,
            "129": 4,
            "130": 4,
            "131": 4,
            "132": 4,
            "134": 5,
            "136": 4,
            "137": 4,
            "139": 3,
            "142": 5,
            "144": 1,
            "145": 1,
            "147": 5,
            "149": 1,
            "150": 1,
            "152": 5,
            "154": 1,
            "155": 1,
            "250": 75,
            "258": 75,
            "259": 75,
            "261": 25,
            "263": 75,
            "264": 75,
            "279": 1,
            "294": 1,
            "309": 5,
            "310": 3,
            "312": 5,
            "326": 2,
            "328": 2,
            "330": 1,
            "332": 2,
            "374": 3,
            "376": 3,
            "377": 2,
            "378": 2,
            "380": 1,
            "383": 3,
            "388": 1,
            "389": 1
        }
    }
}