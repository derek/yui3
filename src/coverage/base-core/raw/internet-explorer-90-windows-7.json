{
    "build/base-core/base-core.js": {
        "path": "build/base-core/base-core.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1217,
            "4": 1217,
            "5": 2078,
            "6": 2071,
            "7": 1217,
            "8": 1,
            "9": 92,
            "10": 92,
            "11": 92,
            "12": 1,
            "13": 1,
            "14": 1,
            "15": 1,
            "16": 1,
            "17": 2,
            "18": 0,
            "19": 0,
            "20": 2,
            "21": 2,
            "22": 2,
            "23": 2,
            "24": 2,
            "25": 4,
            "26": 4,
            "27": 4,
            "28": 1,
            "29": 92,
            "30": 92,
            "31": 92,
            "32": 92,
            "33": 8,
            "34": 92,
            "35": 92,
            "36": 92,
            "37": 92,
            "38": 92,
            "39": 84,
            "40": 84,
            "41": 92,
            "42": 92,
            "43": 8,
            "44": 92,
            "45": 2,
            "46": 2,
            "47": 8,
            "48": 6,
            "49": 8,
            "50": 8,
            "51": 110,
            "52": 92,
            "53": 110,
            "54": 92,
            "55": 0,
            "56": 92,
            "57": 92,
            "58": 92,
            "59": 1000,
            "60": 976,
            "61": 976,
            "62": 976,
            "63": 976,
            "64": 150,
            "65": 976,
            "66": 24,
            "67": 24,
            "68": 48,
            "69": 48,
            "70": 48,
            "71": 92,
            "72": 4,
            "73": 4,
            "74": 4,
            "75": 4,
            "76": 10,
            "77": 6,
            "78": 4,
            "79": 92,
            "80": 92,
            "81": 92,
            "82": 24,
            "83": 71,
            "84": 71,
            "85": 69,
            "86": 71,
            "87": 67,
            "88": 67,
            "89": 67,
            "90": 22,
            "91": 228,
            "92": 71,
            "93": 71,
            "94": 24,
            "95": 48,
            "96": 71,
            "97": 24,
            "98": 22,
            "99": 24,
            "100": 92,
            "101": 92,
            "102": 92,
            "103": 116,
            "104": 150,
            "105": 150,
            "106": 10,
            "107": 140,
            "108": 10,
            "109": 130,
            "110": 107,
            "111": 24,
            "112": 24,
            "113": 24,
            "114": 69,
            "115": 69,
            "116": 206,
            "117": 206,
            "118": 206,
            "119": 206,
            "120": 2,
            "121": 2,
            "122": 206,
            "123": 206,
            "124": 2,
            "125": 2,
            "126": 1,
            "127": 2,
            "128": 1,
            "129": 2,
            "130": 204,
            "131": 204,
            "132": 169,
            "133": 35,
            "134": 7,
            "135": 35,
            "136": 24,
            "137": 92,
            "138": 92,
            "139": 231,
            "140": 231,
            "141": 231,
            "142": 231,
            "143": 7,
            "144": 231,
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 92,
            "152": 92,
            "153": 1,
            "154": 92,
            "155": 4,
            "156": 92,
            "157": 92,
            "158": 7,
            "159": 8,
            "160": 8,
            "161": 30,
            "162": 30,
            "163": 30,
            "164": 30,
            "165": 0,
            "166": 0,
            "167": 0,
            "168": 0,
            "169": 30,
            "170": 2,
            "171": 1,
            "172": 1,
            "173": 1,
            "174": 1
        },
        "b": {
            "1": [
                2071,
                7
            ],
            "2": [
                92,
                0
            ],
            "3": [
                0,
                2
            ],
            "4": [
                2,
                0
            ],
            "5": [
                2,
                0
            ],
            "6": [
                4,
                0
            ],
            "7": [
                4,
                2
            ],
            "8": [
                92,
                91
            ],
            "9": [
                8,
                84
            ],
            "10": [
                92,
                8
            ],
            "11": [
                92,
                0
            ],
            "12": [
                8,
                84
            ],
            "13": [
                6,
                2
            ],
            "14": [
                92,
                18
            ],
            "15": [
                0,
                92
            ],
            "16": [
                976,
                24
            ],
            "17": [
                1000,
                1000
            ],
            "18": [
                150,
                826
            ],
            "19": [
                976,
                522
            ],
            "20": [
                24,
                952
            ],
            "21": [
                976,
                384
            ],
            "22": [
                48,
                0
            ],
            "23": [
                4,
                0
            ],
            "24": [
                6,
                4
            ],
            "25": [
                10,
                8,
                6
            ],
            "26": [
                24,
                68
            ],
            "27": [
                69,
                2
            ],
            "28": [
                67,
                4
            ],
            "29": [
                67,
                22
            ],
            "30": [
                22,
                45
            ],
            "31": [
                24,
                47
            ],
            "32": [
                47,
                24
            ],
            "33": [
                22,
                2
            ],
            "34": [
                10,
                140
            ],
            "35": [
                150,
                140
            ],
            "36": [
                10,
                130
            ],
            "37": [
                107,
                23
            ],
            "38": [
                130,
                120,
                23
            ],
            "39": [
                24,
                0
            ],
            "40": [
                206,
                0
            ],
            "41": [
                2,
                204
            ],
            "42": [
                2,
                204
            ],
            "43": [
                206,
                2,
                2
            ],
            "44": [
                1,
                1
            ],
            "45": [
                1,
                1
            ],
            "46": [
                204,
                0
            ],
            "47": [
                169,
                35
            ],
            "48": [
                7,
                28
            ],
            "49": [
                35,
                11
            ],
            "50": [
                231,
                0
            ],
            "51": [
                7,
                224
            ],
            "52": [
                0,
                231
            ],
            "53": [
                0,
                0
            ],
            "54": [
                1,
                91
            ],
            "55": [
                4,
                88
            ],
            "56": [
                30,
                0
            ],
            "57": [
                0,
                30
            ],
            "58": [
                0,
                0
            ],
            "59": [
                2,
                28
            ]
        },
        "f": {
            "1": 1,
            "2": 1217,
            "3": 92,
            "4": 2,
            "5": 92,
            "6": 92,
            "7": 84,
            "8": 92,
            "9": 2,
            "10": 8,
            "11": 110,
            "12": 92,
            "13": 92,
            "14": 4,
            "15": 92,
            "16": 116,
            "17": 150,
            "18": 24,
            "19": 92,
            "20": 8,
            "21": 1
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 21
                    },
                    "end": {
                        "line": 1,
                        "column": 40
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 35,
                "loc": {
                    "start": {
                        "line": 35,
                        "column": 17
                    },
                    "end": {
                        "line": 35,
                        "column": 40
                    }
                }
            },
            "3": {
                "name": "BaseCore",
                "line": 121,
                "loc": {
                    "start": {
                        "line": 121,
                        "column": 4
                    },
                    "end": {
                        "line": 121,
                        "column": 27
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 246,
                "loc": {
                    "start": {
                        "line": 246,
                        "column": 27
                    },
                    "end": {
                        "line": 246,
                        "column": 52
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 281,
                "loc": {
                    "start": {
                        "line": 281,
                        "column": 20
                    },
                    "end": {
                        "line": 281,
                        "column": 37
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 314,
                "loc": {
                    "start": {
                        "line": 314,
                        "column": 24
                    },
                    "end": {
                        "line": 314,
                        "column": 35
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 327,
                "loc": {
                    "start": {
                        "line": 327,
                        "column": 14
                    },
                    "end": {
                        "line": 327,
                        "column": 28
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 340,
                "loc": {
                    "start": {
                        "line": 340,
                        "column": 19
                    },
                    "end": {
                        "line": 340,
                        "column": 33
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 357,
                "loc": {
                    "start": {
                        "line": 357,
                        "column": 17
                    },
                    "end": {
                        "line": 357,
                        "column": 28
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 368,
                "loc": {
                    "start": {
                        "line": 368,
                        "column": 23
                    },
                    "end": {
                        "line": 368,
                        "column": 34
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 385,
                "loc": {
                    "start": {
                        "line": 385,
                        "column": 22
                    },
                    "end": {
                        "line": 385,
                        "column": 33
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 402,
                "loc": {
                    "start": {
                        "line": 402,
                        "column": 23
                    },
                    "end": {
                        "line": 402,
                        "column": 34
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 423,
                "loc": {
                    "start": {
                        "line": 423,
                        "column": 31
                    },
                    "end": {
                        "line": 423,
                        "column": 49
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 479,
                "loc": {
                    "start": {
                        "line": 479,
                        "column": 28
                    },
                    "end": {
                        "line": 479,
                        "column": 57
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 506,
                "loc": {
                    "start": {
                        "line": 506,
                        "column": 29
                    },
                    "end": {
                        "line": 506,
                        "column": 40
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 586,
                "loc": {
                    "start": {
                        "line": 586,
                        "column": 22
                    },
                    "end": {
                        "line": 586,
                        "column": 33
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 598,
                "loc": {
                    "start": {
                        "line": 598,
                        "column": 29
                    },
                    "end": {
                        "line": 598,
                        "column": 49
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 628,
                "loc": {
                    "start": {
                        "line": 628,
                        "column": 26
                    },
                    "end": {
                        "line": 628,
                        "column": 45
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 708,
                "loc": {
                    "start": {
                        "line": 708,
                        "column": 25
                    },
                    "end": {
                        "line": 708,
                        "column": 44
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 785,
                "loc": {
                    "start": {
                        "line": 785,
                        "column": 28
                    },
                    "end": {
                        "line": 785,
                        "column": 39
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 818,
                "loc": {
                    "start": {
                        "line": 818,
                        "column": 18
                    },
                    "end": {
                        "line": 818,
                        "column": 29
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 832,
                    "column": 50
                }
            },
            "2": {
                "start": {
                    "line": 21,
                    "column": 4
                },
                "end": {
                    "line": 43,
                    "column": 10
                }
            },
            "3": {
                "start": {
                    "line": 36,
                    "column": 12
                },
                "end": {
                    "line": 36,
                    "column": 18
                }
            },
            "4": {
                "start": {
                    "line": 37,
                    "column": 12
                },
                "end": {
                    "line": 41,
                    "column": 13
                }
            },
            "5": {
                "start": {
                    "line": 38,
                    "column": 16
                },
                "end": {
                    "line": 40,
                    "column": 17
                }
            },
            "6": {
                "start": {
                    "line": 39,
                    "column": 20
                },
                "end": {
                    "line": 39,
                    "column": 32
                }
            },
            "7": {
                "start": {
                    "line": 42,
                    "column": 12
                },
                "end": {
                    "line": 42,
                    "column": 21
                }
            },
            "8": {
                "start": {
                    "line": 121,
                    "column": 4
                },
                "end": {
                    "line": 127,
                    "column": 5
                }
            },
            "9": {
                "start": {
                    "line": 122,
                    "column": 8
                },
                "end": {
                    "line": 126,
                    "column": 9
                }
            },
            "10": {
                "start": {
                    "line": 123,
                    "column": 12
                },
                "end": {
                    "line": 123,
                    "column": 37
                }
            },
            "11": {
                "start": {
                    "line": 125,
                    "column": 12
                },
                "end": {
                    "line": 125,
                    "column": 32
                }
            },
            "12": {
                "start": {
                    "line": 138,
                    "column": 4
                },
                "end": {
                    "line": 138,
                    "column": 77
                }
            },
            "13": {
                "start": {
                    "line": 153,
                    "column": 4
                },
                "end": {
                    "line": 153,
                    "column": 42
                }
            },
            "14": {
                "start": {
                    "line": 180,
                    "column": 4
                },
                "end": {
                    "line": 180,
                    "column": 31
                }
            },
            "15": {
                "start": {
                    "line": 197,
                    "column": 4
                },
                "end": {
                    "line": 225,
                    "column": 6
                }
            },
            "16": {
                "start": {
                    "line": 246,
                    "column": 4
                },
                "end": {
                    "line": 270,
                    "column": 6
                }
            },
            "17": {
                "start": {
                    "line": 248,
                    "column": 8
                },
                "end": {
                    "line": 251,
                    "column": 9
                }
            },
            "18": {
                "start": {
                    "line": 249,
                    "column": 12
                },
                "end": {
                    "line": 249,
                    "column": 27
                }
            },
            "19": {
                "start": {
                    "line": 250,
                    "column": 12
                },
                "end": {
                    "line": 250,
                    "column": 27
                }
            },
            "20": {
                "start": {
                    "line": 253,
                    "column": 8
                },
                "end": {
                    "line": 253,
                    "column": 30
                }
            },
            "21": {
                "start": {
                    "line": 256,
                    "column": 8
                },
                "end": {
                    "line": 256,
                    "column": 48
                }
            },
            "22": {
                "start": {
                    "line": 258,
                    "column": 8
                },
                "end": {
                    "line": 269,
                    "column": 9
                }
            },
            "23": {
                "start": {
                    "line": 261,
                    "column": 12
                },
                "end": {
                    "line": 261,
                    "column": 43
                }
            },
            "24": {
                "start": {
                    "line": 263,
                    "column": 12
                },
                "end": {
                    "line": 268,
                    "column": 13
                }
            },
            "25": {
                "start": {
                    "line": 264,
                    "column": 16
                },
                "end": {
                    "line": 267,
                    "column": 17
                }
            },
            "26": {
                "start": {
                    "line": 265,
                    "column": 20
                },
                "end": {
                    "line": 265,
                    "column": 61
                }
            },
            "27": {
                "start": {
                    "line": 266,
                    "column": 20
                },
                "end": {
                    "line": 266,
                    "column": 53
                }
            },
            "28": {
                "start": {
                    "line": 272,
                    "column": 4
                },
                "end": {
                    "line": 821,
                    "column": 6
                }
            },
            "29": {
                "start": {
                    "line": 283,
                    "column": 12
                },
                "end": {
                    "line": 283,
                    "column": 26
                }
            },
            "30": {
                "start": {
                    "line": 285,
                    "column": 12
                },
                "end": {
                    "line": 285,
                    "column": 40
                }
            },
            "31": {
                "start": {
                    "line": 289,
                    "column": 12
                },
                "end": {
                    "line": 289,
                    "column": 55
                }
            },
            "32": {
                "start": {
                    "line": 290,
                    "column": 12
                },
                "end": {
                    "line": 292,
                    "column": 13
                }
            },
            "33": {
                "start": {
                    "line": 291,
                    "column": 16
                },
                "end": {
                    "line": 291,
                    "column": 38
                }
            },
            "34": {
                "start": {
                    "line": 294,
                    "column": 12
                },
                "end": {
                    "line": 294,
                    "column": 76
                }
            },
            "35": {
                "start": {
                    "line": 294,
                    "column": 48
                },
                "end": {
                    "line": 294,
                    "column": 74
                }
            },
            "36": {
                "start": {
                    "line": 303,
                    "column": 12
                },
                "end": {
                    "line": 303,
                    "column": 46
                }
            },
            "37": {
                "start": {
                    "line": 305,
                    "column": 12
                },
                "end": {
                    "line": 305,
                    "column": 45
                }
            },
            "38": {
                "start": {
                    "line": 315,
                    "column": 12
                },
                "end": {
                    "line": 315,
                    "column": 37
                }
            },
            "39": {
                "start": {
                    "line": 329,
                    "column": 12
                },
                "end": {
                    "line": 329,
                    "column": 32
                }
            },
            "40": {
                "start": {
                    "line": 331,
                    "column": 12
                },
                "end": {
                    "line": 331,
                    "column": 24
                }
            },
            "41": {
                "start": {
                    "line": 341,
                    "column": 12
                },
                "end": {
                    "line": 341,
                    "column": 37
                }
            },
            "42": {
                "start": {
                    "line": 343,
                    "column": 12
                },
                "end": {
                    "line": 346,
                    "column": 13
                }
            },
            "43": {
                "start": {
                    "line": 345,
                    "column": 16
                },
                "end": {
                    "line": 345,
                    "column": 39
                }
            },
            "44": {
                "start": {
                    "line": 347,
                    "column": 12
                },
                "end": {
                    "line": 347,
                    "column": 41
                }
            },
            "45": {
                "start": {
                    "line": 358,
                    "column": 12
                },
                "end": {
                    "line": 358,
                    "column": 32
                }
            },
            "46": {
                "start": {
                    "line": 359,
                    "column": 12
                },
                "end": {
                    "line": 359,
                    "column": 24
                }
            },
            "47": {
                "start": {
                    "line": 369,
                    "column": 12
                },
                "end": {
                    "line": 371,
                    "column": 13
                }
            },
            "48": {
                "start": {
                    "line": 370,
                    "column": 16
                },
                "end": {
                    "line": 370,
                    "column": 39
                }
            },
            "49": {
                "start": {
                    "line": 372,
                    "column": 12
                },
                "end": {
                    "line": 372,
                    "column": 37
                }
            },
            "50": {
                "start": {
                    "line": 373,
                    "column": 12
                },
                "end": {
                    "line": 373,
                    "column": 39
                }
            },
            "51": {
                "start": {
                    "line": 386,
                    "column": 12
                },
                "end": {
                    "line": 388,
                    "column": 13
                }
            },
            "52": {
                "start": {
                    "line": 387,
                    "column": 16
                },
                "end": {
                    "line": 387,
                    "column": 42
                }
            },
            "53": {
                "start": {
                    "line": 389,
                    "column": 12
                },
                "end": {
                    "line": 389,
                    "column": 33
                }
            },
            "54": {
                "start": {
                    "line": 403,
                    "column": 12
                },
                "end": {
                    "line": 405,
                    "column": 13
                }
            },
            "55": {
                "start": {
                    "line": 404,
                    "column": 16
                },
                "end": {
                    "line": 404,
                    "column": 42
                }
            },
            "56": {
                "start": {
                    "line": 406,
                    "column": 12
                },
                "end": {
                    "line": 406,
                    "column": 31
                }
            },
            "57": {
                "start": {
                    "line": 425,
                    "column": 12
                },
                "end": {
                    "line": 434,
                    "column": 56
                }
            },
            "58": {
                "start": {
                    "line": 436,
                    "column": 12
                },
                "end": {
                    "line": 463,
                    "column": 13
                }
            },
            "59": {
                "start": {
                    "line": 438,
                    "column": 16
                },
                "end": {
                    "line": 462,
                    "column": 17
                }
            },
            "60": {
                "start": {
                    "line": 440,
                    "column": 20
                },
                "end": {
                    "line": 440,
                    "column": 44
                }
            },
            "61": {
                "start": {
                    "line": 443,
                    "column": 20
                },
                "end": {
                    "line": 443,
                    "column": 78
                }
            },
            "62": {
                "start": {
                    "line": 445,
                    "column": 20
                },
                "end": {
                    "line": 445,
                    "column": 36
                }
            },
            "63": {
                "start": {
                    "line": 447,
                    "column": 20
                },
                "end": {
                    "line": 449,
                    "column": 21
                }
            },
            "64": {
                "start": {
                    "line": 448,
                    "column": 24
                },
                "end": {
                    "line": 448,
                    "column": 59
                }
            },
            "65": {
                "start": {
                    "line": 451,
                    "column": 20
                },
                "end": {
                    "line": 461,
                    "column": 21
                }
            },
            "66": {
                "start": {
                    "line": 452,
                    "column": 24
                },
                "end": {
                    "line": 452,
                    "column": 59
                }
            },
            "67": {
                "start": {
                    "line": 454,
                    "column": 24
                },
                "end": {
                    "line": 460,
                    "column": 25
                }
            },
            "68": {
                "start": {
                    "line": 455,
                    "column": 28
                },
                "end": {
                    "line": 455,
                    "column": 60
                }
            },
            "69": {
                "start": {
                    "line": 457,
                    "column": 28
                },
                "end": {
                    "line": 459,
                    "column": 29
                }
            },
            "70": {
                "start": {
                    "line": 458,
                    "column": 32
                },
                "end": {
                    "line": 458,
                    "column": 83
                }
            },
            "71": {
                "start": {
                    "line": 465,
                    "column": 12
                },
                "end": {
                    "line": 465,
                    "column": 24
                }
            },
            "72": {
                "start": {
                    "line": 480,
                    "column": 12
                },
                "end": {
                    "line": 482,
                    "column": 21
                }
            },
            "73": {
                "start": {
                    "line": 484,
                    "column": 12
                },
                "end": {
                    "line": 493,
                    "column": 13
                }
            },
            "74": {
                "start": {
                    "line": 485,
                    "column": 16
                },
                "end": {
                    "line": 485,
                    "column": 28
                }
            },
            "75": {
                "start": {
                    "line": 486,
                    "column": 16
                },
                "end": {
                    "line": 492,
                    "column": 17
                }
            },
            "76": {
                "start": {
                    "line": 487,
                    "column": 20
                },
                "end": {
                    "line": 491,
                    "column": 21
                }
            },
            "77": {
                "start": {
                    "line": 488,
                    "column": 24
                },
                "end": {
                    "line": 490,
                    "column": 26
                }
            },
            "78": {
                "start": {
                    "line": 495,
                    "column": 12
                },
                "end": {
                    "line": 495,
                    "column": 26
                }
            },
            "79": {
                "start": {
                    "line": 508,
                    "column": 12
                },
                "end": {
                    "line": 519,
                    "column": 27
                }
            },
            "80": {
                "start": {
                    "line": 522,
                    "column": 12
                },
                "end": {
                    "line": 522,
                    "column": 21
                }
            },
            "81": {
                "start": {
                    "line": 524,
                    "column": 12
                },
                "end": {
                    "line": 572,
                    "column": 13
                }
            },
            "82": {
                "start": {
                    "line": 526,
                    "column": 16
                },
                "end": {
                    "line": 559,
                    "column": 17
                }
            },
            "83": {
                "start": {
                    "line": 528,
                    "column": 20
                },
                "end": {
                    "line": 528,
                    "column": 48
                }
            },
            "84": {
                "start": {
                    "line": 531,
                    "column": 20
                },
                "end": {
                    "line": 533,
                    "column": 21
                }
            },
            "85": {
                "start": {
                    "line": 532,
                    "column": 24
                },
                "end": {
                    "line": 532,
                    "column": 54
                }
            },
            "86": {
                "start": {
                    "line": 536,
                    "column": 20
                },
                "end": {
                    "line": 545,
                    "column": 21
                }
            },
            "87": {
                "start": {
                    "line": 537,
                    "column": 24
                },
                "end": {
                    "line": 537,
                    "column": 50
                }
            },
            "88": {
                "start": {
                    "line": 538,
                    "column": 24
                },
                "end": {
                    "line": 538,
                    "column": 56
                }
            },
            "89": {
                "start": {
                    "line": 540,
                    "column": 24
                },
                "end": {
                    "line": 544,
                    "column": 25
                }
            },
            "90": {
                "start": {
                    "line": 541,
                    "column": 28
                },
                "end": {
                    "line": 543,
                    "column": 29
                }
            },
            "91": {
                "start": {
                    "line": 542,
                    "column": 32
                },
                "end": {
                    "line": 542,
                    "column": 63
                }
            },
            "92": {
                "start": {
                    "line": 550,
                    "column": 24
                },
                "end": {
                    "line": 550,
                    "column": 55
                }
            },
            "93": {
                "start": {
                    "line": 551,
                    "column": 24
                },
                "end": {
                    "line": 555,
                    "column": 25
                }
            },
            "94": {
                "start": {
                    "line": 552,
                    "column": 28
                },
                "end": {
                    "line": 554,
                    "column": 29
                }
            },
            "95": {
                "start": {
                    "line": 553,
                    "column": 32
                },
                "end": {
                    "line": 553,
                    "column": 64
                }
            },
            "96": {
                "start": {
                    "line": 558,
                    "column": 20
                },
                "end": {
                    "line": 558,
                    "column": 71
                }
            },
            "97": {
                "start": {
                    "line": 562,
                    "column": 16
                },
                "end": {
                    "line": 564,
                    "column": 17
                }
            },
            "98": {
                "start": {
                    "line": 563,
                    "column": 20
                },
                "end": {
                    "line": 563,
                    "column": 54
                }
            },
            "99": {
                "start": {
                    "line": 566,
                    "column": 16
                },
                "end": {
                    "line": 570,
                    "column": 18
                }
            },
            "100": {
                "start": {
                    "line": 574,
                    "column": 12
                },
                "end": {
                    "line": 574,
                    "column": 52
                }
            },
            "101": {
                "start": {
                    "line": 575,
                    "column": 12
                },
                "end": {
                    "line": 575,
                    "column": 48
                }
            },
            "102": {
                "start": {
                    "line": 576,
                    "column": 12
                },
                "end": {
                    "line": 576,
                    "column": 54
                }
            },
            "103": {
                "start": {
                    "line": 587,
                    "column": 12
                },
                "end": {
                    "line": 587,
                    "column": 51
                }
            },
            "104": {
                "start": {
                    "line": 600,
                    "column": 12
                },
                "end": {
                    "line": 601,
                    "column": 46
                }
            },
            "105": {
                "start": {
                    "line": 603,
                    "column": 12
                },
                "end": {
                    "line": 609,
                    "column": 13
                }
            },
            "106": {
                "start": {
                    "line": 604,
                    "column": 16
                },
                "end": {
                    "line": 604,
                    "column": 41
                }
            },
            "107": {
                "start": {
                    "line": 605,
                    "column": 19
                },
                "end": {
                    "line": 609,
                    "column": 13
                }
            },
            "108": {
                "start": {
                    "line": 606,
                    "column": 16
                },
                "end": {
                    "line": 606,
                    "column": 41
                }
            },
            "109": {
                "start": {
                    "line": 607,
                    "column": 19
                },
                "end": {
                    "line": 609,
                    "column": 13
                }
            },
            "110": {
                "start": {
                    "line": 608,
                    "column": 16
                },
                "end": {
                    "line": 608,
                    "column": 41
                }
            },
            "111": {
                "start": {
                    "line": 630,
                    "column": 12
                },
                "end": {
                    "line": 638,
                    "column": 30
                }
            },
            "112": {
                "start": {
                    "line": 640,
                    "column": 12
                },
                "end": {
                    "line": 693,
                    "column": 13
                }
            },
            "113": {
                "start": {
                    "line": 641,
                    "column": 16
                },
                "end": {
                    "line": 692,
                    "column": 17
                }
            },
            "114": {
                "start": {
                    "line": 643,
                    "column": 20
                },
                "end": {
                    "line": 643,
                    "column": 40
                }
            },
            "115": {
                "start": {
                    "line": 645,
                    "column": 20
                },
                "end": {
                    "line": 691,
                    "column": 21
                }
            },
            "116": {
                "start": {
                    "line": 646,
                    "column": 24
                },
                "end": {
                    "line": 690,
                    "column": 25
                }
            },
            "117": {
                "start": {
                    "line": 650,
                    "column": 28
                },
                "end": {
                    "line": 650,
                    "column": 72
                }
            },
            "118": {
                "start": {
                    "line": 652,
                    "column": 28
                },
                "end": {
                    "line": 652,
                    "column": 40
                }
            },
            "119": {
                "start": {
                    "line": 653,
                    "column": 28
                },
                "end": {
                    "line": 656,
                    "column": 29
                }
            },
            "120": {
                "start": {
                    "line": 654,
                    "column": 32
                },
                "end": {
                    "line": 654,
                    "column": 55
                }
            },
            "121": {
                "start": {
                    "line": 655,
                    "column": 32
                },
                "end": {
                    "line": 655,
                    "column": 52
                }
            },
            "122": {
                "start": {
                    "line": 658,
                    "column": 28
                },
                "end": {
                    "line": 658,
                    "column": 53
                }
            },
            "123": {
                "start": {
                    "line": 660,
                    "column": 28
                },
                "end": {
                    "line": 689,
                    "column": 29
                }
            },
            "124": {
                "start": {
                    "line": 662,
                    "column": 32
                },
                "end": {
                    "line": 662,
                    "column": 66
                }
            },
            "125": {
                "start": {
                    "line": 664,
                    "column": 32
                },
                "end": {
                    "line": 666,
                    "column": 33
                }
            },
            "126": {
                "start": {
                    "line": 665,
                    "column": 36
                },
                "end": {
                    "line": 665,
                    "column": 75
                }
            },
            "127": {
                "start": {
                    "line": 668,
                    "column": 32
                },
                "end": {
                    "line": 670,
                    "column": 33
                }
            },
            "128": {
                "start": {
                    "line": 669,
                    "column": 36
                },
                "end": {
                    "line": 669,
                    "column": 60
                }
            },
            "129": {
                "start": {
                    "line": 672,
                    "column": 32
                },
                "end": {
                    "line": 675,
                    "column": 34
                }
            },
            "130": {
                "start": {
                    "line": 677,
                    "column": 35
                },
                "end": {
                    "line": 689,
                    "column": 29
                }
            },
            "131": {
                "start": {
                    "line": 679,
                    "column": 32
                },
                "end": {
                    "line": 688,
                    "column": 33
                }
            },
            "132": {
                "start": {
                    "line": 680,
                    "column": 36
                },
                "end": {
                    "line": 680,
                    "column": 57
                }
            },
            "133": {
                "start": {
                    "line": 682,
                    "column": 36
                },
                "end": {
                    "line": 684,
                    "column": 37
                }
            },
            "134": {
                "start": {
                    "line": 683,
                    "column": 40
                },
                "end": {
                    "line": 683,
                    "column": 63
                }
            },
            "135": {
                "start": {
                    "line": 687,
                    "column": 36
                },
                "end": {
                    "line": 687,
                    "column": 71
                }
            },
            "136": {
                "start": {
                    "line": 695,
                    "column": 12
                },
                "end": {
                    "line": 695,
                    "column": 28
                }
            },
            "137": {
                "start": {
                    "line": 710,
                    "column": 12
                },
                "end": {
                    "line": 725,
                    "column": 40
                }
            },
            "138": {
                "start": {
                    "line": 728,
                    "column": 12
                },
                "end": {
                    "line": 757,
                    "column": 13
                }
            },
            "139": {
                "start": {
                    "line": 730,
                    "column": 16
                },
                "end": {
                    "line": 730,
                    "column": 37
                }
            },
            "140": {
                "start": {
                    "line": 731,
                    "column": 16
                },
                "end": {
                    "line": 731,
                    "column": 47
                }
            },
            "141": {
                "start": {
                    "line": 732,
                    "column": 16
                },
                "end": {
                    "line": 732,
                    "column": 65
                }
            },
            "142": {
                "start": {
                    "line": 737,
                    "column": 16
                },
                "end": {
                    "line": 740,
                    "column": 17
                }
            },
            "143": {
                "start": {
                    "line": 739,
                    "column": 20
                },
                "end": {
                    "line": 739,
                    "column": 80
                }
            },
            "144": {
                "start": {
                    "line": 742,
                    "column": 16
                },
                "end": {
                    "line": 756,
                    "column": 17
                }
            },
            "145": {
                "start": {
                    "line": 743,
                    "column": 20
                },
                "end": {
                    "line": 755,
                    "column": 21
                }
            },
            "146": {
                "start": {
                    "line": 745,
                    "column": 24
                },
                "end": {
                    "line": 745,
                    "column": 39
                }
            },
            "147": {
                "start": {
                    "line": 748,
                    "column": 24
                },
                "end": {
                    "line": 748,
                    "column": 51
                }
            },
            "148": {
                "start": {
                    "line": 750,
                    "column": 24
                },
                "end": {
                    "line": 750,
                    "column": 49
                }
            },
            "149": {
                "start": {
                    "line": 751,
                    "column": 24
                },
                "end": {
                    "line": 754,
                    "column": 25
                }
            },
            "150": {
                "start": {
                    "line": 753,
                    "column": 28
                },
                "end": {
                    "line": 753,
                    "column": 85
                }
            },
            "151": {
                "start": {
                    "line": 760,
                    "column": 12
                },
                "end": {
                    "line": 760,
                    "column": 64
                }
            },
            "152": {
                "start": {
                    "line": 762,
                    "column": 12
                },
                "end": {
                    "line": 764,
                    "column": 13
                }
            },
            "153": {
                "start": {
                    "line": 763,
                    "column": 16
                },
                "end": {
                    "line": 763,
                    "column": 65
                }
            },
            "154": {
                "start": {
                    "line": 766,
                    "column": 12
                },
                "end": {
                    "line": 768,
                    "column": 13
                }
            },
            "155": {
                "start": {
                    "line": 767,
                    "column": 16
                },
                "end": {
                    "line": 767,
                    "column": 90
                }
            },
            "156": {
                "start": {
                    "line": 770,
                    "column": 12
                },
                "end": {
                    "line": 770,
                    "column": 57
                }
            },
            "157": {
                "start": {
                    "line": 773,
                    "column": 12
                },
                "end": {
                    "line": 775,
                    "column": 13
                }
            },
            "158": {
                "start": {
                    "line": 774,
                    "column": 16
                },
                "end": {
                    "line": 774,
                    "column": 55
                }
            },
            "159": {
                "start": {
                    "line": 786,
                    "column": 12
                },
                "end": {
                    "line": 789,
                    "column": 45
                }
            },
            "160": {
                "start": {
                    "line": 791,
                    "column": 12
                },
                "end": {
                    "line": 808,
                    "column": 13
                }
            },
            "161": {
                "start": {
                    "line": 792,
                    "column": 16
                },
                "end": {
                    "line": 792,
                    "column": 37
                }
            },
            "162": {
                "start": {
                    "line": 793,
                    "column": 16
                },
                "end": {
                    "line": 793,
                    "column": 47
                }
            },
            "163": {
                "start": {
                    "line": 794,
                    "column": 16
                },
                "end": {
                    "line": 794,
                    "column": 65
                }
            },
            "164": {
                "start": {
                    "line": 796,
                    "column": 16
                },
                "end": {
                    "line": 803,
                    "column": 17
                }
            },
            "165": {
                "start": {
                    "line": 797,
                    "column": 20
                },
                "end": {
                    "line": 802,
                    "column": 21
                }
            },
            "166": {
                "start": {
                    "line": 798,
                    "column": 24
                },
                "end": {
                    "line": 798,
                    "column": 54
                }
            },
            "167": {
                "start": {
                    "line": 799,
                    "column": 24
                },
                "end": {
                    "line": 801,
                    "column": 25
                }
            },
            "168": {
                "start": {
                    "line": 800,
                    "column": 28
                },
                "end": {
                    "line": 800,
                    "column": 71
                }
            },
            "169": {
                "start": {
                    "line": 805,
                    "column": 16
                },
                "end": {
                    "line": 807,
                    "column": 17
                }
            },
            "170": {
                "start": {
                    "line": 806,
                    "column": 20
                },
                "end": {
                    "line": 806,
                    "column": 66
                }
            },
            "171": {
                "start": {
                    "line": 819,
                    "column": 12
                },
                "end": {
                    "line": 819,
                    "column": 63
                }
            },
            "172": {
                "start": {
                    "line": 824,
                    "column": 4
                },
                "end": {
                    "line": 824,
                    "column": 51
                }
            },
            "173": {
                "start": {
                    "line": 827,
                    "column": 4
                },
                "end": {
                    "line": 827,
                    "column": 46
                }
            },
            "174": {
                "start": {
                    "line": 829,
                    "column": 4
                },
                "end": {
                    "line": 829,
                    "column": 26
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 38,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 38,
                            "column": 16
                        },
                        "end": {
                            "line": 38,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 38,
                            "column": 16
                        },
                        "end": {
                            "line": 38,
                            "column": 16
                        }
                    }
                ]
            },
            "2": {
                "line": 122,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 122,
                            "column": 8
                        },
                        "end": {
                            "line": 122,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 122,
                            "column": 8
                        },
                        "end": {
                            "line": 122,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 248,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 248,
                            "column": 8
                        },
                        "end": {
                            "line": 248,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 248,
                            "column": 8
                        },
                        "end": {
                            "line": 248,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 256,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 256,
                            "column": 16
                        },
                        "end": {
                            "line": 256,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 256,
                            "column": 31
                        },
                        "end": {
                            "line": 256,
                            "column": 46
                        }
                    }
                ]
            },
            "5": {
                "line": 258,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 258,
                            "column": 8
                        },
                        "end": {
                            "line": 258,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 258,
                            "column": 8
                        },
                        "end": {
                            "line": 258,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 264,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 264,
                            "column": 16
                        },
                        "end": {
                            "line": 264,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 264,
                            "column": 16
                        },
                        "end": {
                            "line": 264,
                            "column": 16
                        }
                    }
                ]
            },
            "7": {
                "line": 265,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 265,
                            "column": 27
                        },
                        "end": {
                            "line": 265,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 265,
                            "column": 43
                        },
                        "end": {
                            "line": 265,
                            "column": 59
                        }
                    }
                ]
            },
            "8": {
                "line": 289,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 289,
                            "column": 29
                        },
                        "end": {
                            "line": 289,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 289,
                            "column": 41
                        },
                        "end": {
                            "line": 289,
                            "column": 54
                        }
                    }
                ]
            },
            "9": {
                "line": 290,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 290,
                            "column": 12
                        },
                        "end": {
                            "line": 290,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 290,
                            "column": 12
                        },
                        "end": {
                            "line": 290,
                            "column": 12
                        }
                    }
                ]
            },
            "10": {
                "line": 290,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 290,
                            "column": 16
                        },
                        "end": {
                            "line": 290,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 290,
                            "column": 37
                        },
                        "end": {
                            "line": 290,
                            "column": 47
                        }
                    }
                ]
            },
            "11": {
                "line": 294,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 294,
                            "column": 12
                        },
                        "end": {
                            "line": 294,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 294,
                            "column": 12
                        },
                        "end": {
                            "line": 294,
                            "column": 12
                        }
                    }
                ]
            },
            "12": {
                "line": 343,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 343,
                            "column": 12
                        },
                        "end": {
                            "line": 343,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 343,
                            "column": 12
                        },
                        "end": {
                            "line": 343,
                            "column": 12
                        }
                    }
                ]
            },
            "13": {
                "line": 369,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 369,
                            "column": 12
                        },
                        "end": {
                            "line": 369,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 369,
                            "column": 12
                        },
                        "end": {
                            "line": 369,
                            "column": 12
                        }
                    }
                ]
            },
            "14": {
                "line": 386,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 386,
                            "column": 12
                        },
                        "end": {
                            "line": 386,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 386,
                            "column": 12
                        },
                        "end": {
                            "line": 386,
                            "column": 12
                        }
                    }
                ]
            },
            "15": {
                "line": 403,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 403,
                            "column": 12
                        },
                        "end": {
                            "line": 403,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 403,
                            "column": 12
                        },
                        "end": {
                            "line": 403,
                            "column": 12
                        }
                    }
                ]
            },
            "16": {
                "line": 438,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 438,
                            "column": 16
                        },
                        "end": {
                            "line": 438,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 438,
                            "column": 16
                        },
                        "end": {
                            "line": 438,
                            "column": 16
                        }
                    }
                ]
            },
            "17": {
                "line": 438,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 438,
                            "column": 20
                        },
                        "end": {
                            "line": 438,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 438,
                            "column": 52
                        },
                        "end": {
                            "line": 438,
                            "column": 72
                        }
                    }
                ]
            },
            "18": {
                "line": 447,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 447,
                            "column": 20
                        },
                        "end": {
                            "line": 447,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 447,
                            "column": 20
                        },
                        "end": {
                            "line": 447,
                            "column": 20
                        }
                    }
                ]
            },
            "19": {
                "line": 447,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 447,
                            "column": 24
                        },
                        "end": {
                            "line": 447,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 447,
                            "column": 32
                        },
                        "end": {
                            "line": 447,
                            "column": 55
                        }
                    }
                ]
            },
            "20": {
                "line": 451,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 451,
                            "column": 20
                        },
                        "end": {
                            "line": 451,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 451,
                            "column": 20
                        },
                        "end": {
                            "line": 451,
                            "column": 20
                        }
                    }
                ]
            },
            "21": {
                "line": 451,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 451,
                            "column": 24
                        },
                        "end": {
                            "line": 451,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 451,
                            "column": 39
                        },
                        "end": {
                            "line": 451,
                            "column": 71
                        }
                    }
                ]
            },
            "22": {
                "line": 457,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 457,
                            "column": 28
                        },
                        "end": {
                            "line": 457,
                            "column": 28
                        }
                    },
                    {
                        "start": {
                            "line": 457,
                            "column": 28
                        },
                        "end": {
                            "line": 457,
                            "column": 28
                        }
                    }
                ]
            },
            "23": {
                "line": 484,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 484,
                            "column": 12
                        },
                        "end": {
                            "line": 484,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 484,
                            "column": 12
                        },
                        "end": {
                            "line": 484,
                            "column": 12
                        }
                    }
                ]
            },
            "24": {
                "line": 487,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 487,
                            "column": 20
                        },
                        "end": {
                            "line": 487,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 487,
                            "column": 20
                        },
                        "end": {
                            "line": 487,
                            "column": 20
                        }
                    }
                ]
            },
            "25": {
                "line": 487,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 487,
                            "column": 24
                        },
                        "end": {
                            "line": 487,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 487,
                            "column": 43
                        },
                        "end": {
                            "line": 487,
                            "column": 58
                        }
                    },
                    {
                        "start": {
                            "line": 487,
                            "column": 62
                        },
                        "end": {
                            "line": 487,
                            "column": 91
                        }
                    }
                ]
            },
            "26": {
                "line": 524,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 524,
                            "column": 12
                        },
                        "end": {
                            "line": 524,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 524,
                            "column": 12
                        },
                        "end": {
                            "line": 524,
                            "column": 12
                        }
                    }
                ]
            },
            "27": {
                "line": 531,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 531,
                            "column": 20
                        },
                        "end": {
                            "line": 531,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 531,
                            "column": 20
                        },
                        "end": {
                            "line": 531,
                            "column": 20
                        }
                    }
                ]
            },
            "28": {
                "line": 536,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 536,
                            "column": 20
                        },
                        "end": {
                            "line": 536,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 536,
                            "column": 20
                        },
                        "end": {
                            "line": 536,
                            "column": 20
                        }
                    }
                ]
            },
            "29": {
                "line": 538,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 538,
                            "column": 38
                        },
                        "end": {
                            "line": 538,
                            "column": 49
                        }
                    },
                    {
                        "start": {
                            "line": 538,
                            "column": 53
                        },
                        "end": {
                            "line": 538,
                            "column": 55
                        }
                    }
                ]
            },
            "30": {
                "line": 540,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 540,
                            "column": 24
                        },
                        "end": {
                            "line": 540,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 540,
                            "column": 24
                        },
                        "end": {
                            "line": 540,
                            "column": 24
                        }
                    }
                ]
            },
            "31": {
                "line": 551,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 551,
                            "column": 24
                        },
                        "end": {
                            "line": 551,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 551,
                            "column": 24
                        },
                        "end": {
                            "line": 551,
                            "column": 24
                        }
                    }
                ]
            },
            "32": {
                "line": 558,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 558,
                            "column": 39
                        },
                        "end": {
                            "line": 558,
                            "column": 63
                        }
                    },
                    {
                        "start": {
                            "line": 558,
                            "column": 66
                        },
                        "end": {
                            "line": 558,
                            "column": 70
                        }
                    }
                ]
            },
            "33": {
                "line": 562,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 562,
                            "column": 16
                        },
                        "end": {
                            "line": 562,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 562,
                            "column": 16
                        },
                        "end": {
                            "line": 562,
                            "column": 16
                        }
                    }
                ]
            },
            "34": {
                "line": 603,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 603,
                            "column": 12
                        },
                        "end": {
                            "line": 603,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 603,
                            "column": 12
                        },
                        "end": {
                            "line": 603,
                            "column": 12
                        }
                    }
                ]
            },
            "35": {
                "line": 603,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 603,
                            "column": 16
                        },
                        "end": {
                            "line": 603,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 603,
                            "column": 34
                        },
                        "end": {
                            "line": 603,
                            "column": 48
                        }
                    }
                ]
            },
            "36": {
                "line": 605,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 605,
                            "column": 19
                        },
                        "end": {
                            "line": 605,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 605,
                            "column": 19
                        },
                        "end": {
                            "line": 605,
                            "column": 19
                        }
                    }
                ]
            },
            "37": {
                "line": 607,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 607,
                            "column": 19
                        },
                        "end": {
                            "line": 607,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 607,
                            "column": 19
                        },
                        "end": {
                            "line": 607,
                            "column": 19
                        }
                    }
                ]
            },
            "38": {
                "line": 607,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 607,
                            "column": 24
                        },
                        "end": {
                            "line": 607,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 607,
                            "column": 48
                        },
                        "end": {
                            "line": 607,
                            "column": 86
                        }
                    },
                    {
                        "start": {
                            "line": 607,
                            "column": 90
                        },
                        "end": {
                            "line": 607,
                            "column": 104
                        }
                    }
                ]
            },
            "39": {
                "line": 640,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 640,
                            "column": 12
                        },
                        "end": {
                            "line": 640,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 640,
                            "column": 12
                        },
                        "end": {
                            "line": 640,
                            "column": 12
                        }
                    }
                ]
            },
            "40": {
                "line": 646,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 646,
                            "column": 24
                        },
                        "end": {
                            "line": 646,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 646,
                            "column": 24
                        },
                        "end": {
                            "line": 646,
                            "column": 24
                        }
                    }
                ]
            },
            "41": {
                "line": 653,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 653,
                            "column": 28
                        },
                        "end": {
                            "line": 653,
                            "column": 28
                        }
                    },
                    {
                        "start": {
                            "line": 653,
                            "column": 28
                        },
                        "end": {
                            "line": 653,
                            "column": 28
                        }
                    }
                ]
            },
            "42": {
                "line": 660,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 660,
                            "column": 28
                        },
                        "end": {
                            "line": 660,
                            "column": 28
                        }
                    },
                    {
                        "start": {
                            "line": 660,
                            "column": 28
                        },
                        "end": {
                            "line": 660,
                            "column": 28
                        }
                    }
                ]
            },
            "43": {
                "line": 660,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 660,
                            "column": 32
                        },
                        "end": {
                            "line": 660,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 660,
                            "column": 40
                        },
                        "end": {
                            "line": 660,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 660,
                            "column": 51
                        },
                        "end": {
                            "line": 660,
                            "column": 64
                        }
                    }
                ]
            },
            "44": {
                "line": 664,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 664,
                            "column": 32
                        },
                        "end": {
                            "line": 664,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 664,
                            "column": 32
                        },
                        "end": {
                            "line": 664,
                            "column": 32
                        }
                    }
                ]
            },
            "45": {
                "line": 668,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 668,
                            "column": 32
                        },
                        "end": {
                            "line": 668,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 668,
                            "column": 32
                        },
                        "end": {
                            "line": 668,
                            "column": 32
                        }
                    }
                ]
            },
            "46": {
                "line": 677,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 677,
                            "column": 35
                        },
                        "end": {
                            "line": 677,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 677,
                            "column": 35
                        },
                        "end": {
                            "line": 677,
                            "column": 35
                        }
                    }
                ]
            },
            "47": {
                "line": 679,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 679,
                            "column": 32
                        },
                        "end": {
                            "line": 679,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 679,
                            "column": 32
                        },
                        "end": {
                            "line": 679,
                            "column": 32
                        }
                    }
                ]
            },
            "48": {
                "line": 682,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 682,
                            "column": 36
                        },
                        "end": {
                            "line": 682,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 682,
                            "column": 36
                        },
                        "end": {
                            "line": 682,
                            "column": 36
                        }
                    }
                ]
            },
            "49": {
                "line": 682,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 682,
                            "column": 40
                        },
                        "end": {
                            "line": 682,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 682,
                            "column": 59
                        },
                        "end": {
                            "line": 682,
                            "column": 71
                        }
                    }
                ]
            },
            "50": {
                "line": 732,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 732,
                            "column": 23
                        },
                        "end": {
                            "line": 732,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 732,
                            "column": 43
                        },
                        "end": {
                            "line": 732,
                            "column": 64
                        }
                    }
                ]
            },
            "51": {
                "line": 737,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 737,
                            "column": 16
                        },
                        "end": {
                            "line": 737,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 737,
                            "column": 16
                        },
                        "end": {
                            "line": 737,
                            "column": 16
                        }
                    }
                ]
            },
            "52": {
                "line": 742,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 742,
                            "column": 16
                        },
                        "end": {
                            "line": 742,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 742,
                            "column": 16
                        },
                        "end": {
                            "line": 742,
                            "column": 16
                        }
                    }
                ]
            },
            "53": {
                "line": 751,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 751,
                            "column": 24
                        },
                        "end": {
                            "line": 751,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 751,
                            "column": 24
                        },
                        "end": {
                            "line": 751,
                            "column": 24
                        }
                    }
                ]
            },
            "54": {
                "line": 762,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 762,
                            "column": 12
                        },
                        "end": {
                            "line": 762,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 762,
                            "column": 12
                        },
                        "end": {
                            "line": 762,
                            "column": 12
                        }
                    }
                ]
            },
            "55": {
                "line": 766,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 766,
                            "column": 12
                        },
                        "end": {
                            "line": 766,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 766,
                            "column": 12
                        },
                        "end": {
                            "line": 766,
                            "column": 12
                        }
                    }
                ]
            },
            "56": {
                "line": 794,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 794,
                            "column": 23
                        },
                        "end": {
                            "line": 794,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 794,
                            "column": 43
                        },
                        "end": {
                            "line": 794,
                            "column": 64
                        }
                    }
                ]
            },
            "57": {
                "line": 796,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 796,
                            "column": 16
                        },
                        "end": {
                            "line": 796,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 796,
                            "column": 16
                        },
                        "end": {
                            "line": 796,
                            "column": 16
                        }
                    }
                ]
            },
            "58": {
                "line": 799,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 799,
                            "column": 24
                        },
                        "end": {
                            "line": 799,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 799,
                            "column": 24
                        },
                        "end": {
                            "line": 799,
                            "column": 24
                        }
                    }
                ]
            },
            "59": {
                "line": 805,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 805,
                            "column": 16
                        },
                        "end": {
                            "line": 805,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 805,
                            "column": 16
                        },
                        "end": {
                            "line": 805,
                            "column": 16
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('base-core', function (Y, NAME) {",
            "",
            "    /**",
            "     * The base module provides the Base class, which objects requiring attribute and custom event support can extend.",
            "     * The module also provides two ways to reuse code - It augments Base with the Plugin.Host interface which provides",
            "     * plugin support and also provides the BaseCore.build method which provides a way to build custom classes using extensions.",
            "     *",
            "     * @module base",
            "     */",
            "",
            "    /**",
            "     * <p>The base-core module provides the BaseCore class, the lightest version of Base,",
            "     * which provides Base's basic lifecycle management and ATTRS construction support,",
            "     * but doesn't fire init/destroy or attribute change events.</p>",
            "     *",
            "     * <p>It mixes in AttributeCore, which is the lightest version of Attribute</p>",
            "     *",
            "     * @module base",
            "     * @submodule base-core",
            "     */",
            "    var O = Y.Object,",
            "        L = Y.Lang,",
            "        DOT = \".\",",
            "        INITIALIZED = \"initialized\",",
            "        DESTROYED = \"destroyed\",",
            "        INITIALIZER = \"initializer\",",
            "        VALUE = \"value\",",
            "        OBJECT_CONSTRUCTOR = Object.prototype.constructor,",
            "        DEEP = \"deep\",",
            "        SHALLOW = \"shallow\",",
            "        DESTRUCTOR = \"destructor\",",
            "",
            "        AttributeCore = Y.AttributeCore,",
            "",
            "        _wlmix = function(r, s, wlhash) {",
            "            var p;",
            "            for (p in s) {",
            "                if(wlhash[p]) {",
            "                    r[p] = s[p];",
            "                }",
            "            }",
            "            return r;",
            "        };",
            "",
            "    /**",
            "     * The BaseCore class, is the lightest version of Base, and provides Base's",
            "     * basic lifecycle management and ATTRS construction support, but doesn't",
            "     * fire init/destroy or attribute change events.",
            "     *",
            "     * BaseCore also handles the chaining of initializer and destructor methods across",
            "     * the hierarchy as part of object construction and destruction. Additionally, attributes",
            "     * configured through the static <a href=\"#property_BaseCore.ATTRS\">ATTRS</a>",
            "     * property for each class in the hierarchy will be initialized by BaseCore.",
            "     *",
            "     * Classes which require attribute support, but don't intend to use/expose attribute",
            "     * change events can extend BaseCore instead of Base for optimal kweight and",
            "     * runtime performance.",
            "     *",
            "     * **3.11.0 BACK COMPAT NOTE FOR COMPONENT DEVELOPERS**",
            "     *",
            "     * Prior to version 3.11.0, ATTRS would get added a class at a time. That is:",
            "     *",
            "     * <pre>",
            "     *    for each (class in the hierarchy) {",
            "     *       Call the class Extension constructors.",
            "     *",
            "     *       Add the class ATTRS.",
            "     *",
            "     *       Call the class initializer",
            "     *       Call the class Extension initializers.",
            "     *    }",
            "     * </pre>",
            "     *",
            "     * As of 3.11.0, ATTRS from all classes in the hierarchy are added in one `addAttrs` call",
            "     * before **any** initializers are called. That is, the flow becomes:",
            "     *",
            "     * <pre>",
            "     *    for each (class in the hierarchy) {",
            "     *       Call the class Extension constructors.",
            "     *    }",
            "     *",
            "     *    Add ATTRS for all classes",
            "     *",
            "     *    for each (class in the hierarchy) {",
            "     *       Call the class initializer.",
            "     *       Call the class Extension initializers.",
            "     *    }",
            "     * </pre>",
            "     *",
            "     * Adding all ATTRS at once fixes subtle edge-case issues with subclass ATTRS overriding",
            "     * superclass `setter`, `getter` or `valueFn` definitions and being unable to get/set attributes",
            "     * defined by the subclass. It also leaves us with a cleaner order of operation flow moving",
            "     * forward.",
            "     *",
            "     * However, it may require component developers to upgrade their components, for the following",
            "     * scenarios:",
            "     *",
            "     * 1. It impacts components which may have `setter`, `getter` or `valueFn` code which",
            "     * expects a superclass' initializer to have run.",
            "     *",
            "     * This is expected to be rare, but to support it, Base now supports a `_preAddAttrs()`, method",
            "     * hook (same signature as `addAttrs`). Components can implement this method on their prototype",
            "     * for edge cases which do require finer control over the order in which attributes are added",
            "     * (see widget-htmlparser for example).",
            "     *",
            "     * 2. Extension developers may need to move code from Extension constructors to `initializer`s",
            "     *",
            "     * Older extensions, which were written before `initializer` support was added, had a lot of",
            "     * initialization code in their constructors. For example, code which acccessed superclass",
            "     * attributes. With the new flow this code would not be able to see attributes. The recommendation",
            "     * is to move this initialization code to an `initializer` on the Extension, which was the",
            "     * recommendation for anything created after `initializer` support for Extensions was added.",
            "     *",
            "     * @class BaseCore",
            "     * @constructor",
            "     * @uses AttributeCore",
            "     * @param {Object} cfg Object with configuration property name/value pairs.",
            "     * The object can be used to provide initial values for the objects published",
            "     * attributes.",
            "     */",
            "    function BaseCore(cfg) {",
            "        if (!this._BaseInvoked) {",
            "            this._BaseInvoked = true;",
            "",
            "            this._initBase(cfg);",
            "        }",
            "    }",
            "",
            "    /**",
            "     * The list of properties which can be configured for each attribute",
            "     * (e.g. setter, getter, writeOnce, readOnly etc.)",
            "     *",
            "     * @property _ATTR_CFG",
            "     * @type Array",
            "     * @static",
            "     * @private",
            "     */",
            "    BaseCore._ATTR_CFG = AttributeCore._ATTR_CFG.concat(\"cloneDefaultValue\");",
            "",
            "    /**",
            "     * The array of non-attribute configuration properties supported by this class.",
            "     *",
            "     * For example `BaseCore` defines a \"plugins\" configuration property which",
            "     * should not be set up as an attribute. This property is primarily required so",
            "     * that when <a href=\"#property__allowAdHocAttrs\">`_allowAdHocAttrs`</a> is enabled by a class,",
            "     * non-attribute configuration properties don't get added as ad-hoc attributes.",
            "     *",
            "     * @property _NON_ATTRS_CFG",
            "     * @type Array",
            "     * @static",
            "     * @private",
            "     */",
            "    BaseCore._NON_ATTRS_CFG = [\"plugins\"];",
            "",
            "    /**",
            "     * This property controls whether or not instances of this class should",
            "     * allow users to add ad-hoc attributes through the constructor configuration",
            "     * hash.",
            "     *",
            "     * AdHoc attributes are attributes which are not defined by the class, and are",
            "     * not handled by the MyClass._NON_ATTRS_CFG",
            "     *",
            "     * @property _allowAdHocAttrs",
            "     * @type boolean",
            "     * @default undefined (false)",
            "     * @protected",
            "     */",
            "",
            "    /**",
            "     * The string to be used to identify instances of this class.",
            "     *",
            "     * Classes extending BaseCore, should define their own",
            "     * static NAME property, which should be camelCase by",
            "     * convention (e.g. MyClass.NAME = \"myClass\";).",
            "     *",
            "     * @property NAME",
            "     * @type String",
            "     * @static",
            "     */",
            "    BaseCore.NAME = \"baseCore\";",
            "",
            "    /**",
            "     * The default set of attributes which will be available for instances of this class, and",
            "     * their configuration. In addition to the configuration properties listed by",
            "     * AttributeCore's <a href=\"AttributeCore.html#method_addAttr\">addAttr</a> method,",
            "     * the attribute can also be configured with a \"cloneDefaultValue\" property, which",
            "     * defines how the statically defined value field should be protected",
            "     * (\"shallow\", \"deep\" and false are supported values).",
            "     *",
            "     * By default if the value is an object literal or an array it will be \"shallow\"",
            "     * cloned, to protect the default value.",
            "     *",
            "     * @property ATTRS",
            "     * @type Object",
            "     * @static",
            "     */",
            "    BaseCore.ATTRS = {",
            "        /**",
            "         * Flag indicating whether or not this object",
            "         * has been through the init lifecycle phase.",
            "         *",
            "         * @attribute initialized",
            "         * @readonly",
            "         * @default false",
            "         * @type boolean",
            "         */",
            "        initialized: {",
            "            readOnly:true,",
            "            value:false",
            "        },",
            "",
            "        /**",
            "         * Flag indicating whether or not this object",
            "         * has been through the destroy lifecycle phase.",
            "         *",
            "         * @attribute destroyed",
            "         * @readonly",
            "         * @default false",
            "         * @type boolean",
            "         */",
            "        destroyed: {",
            "            readOnly:true,",
            "            value:false",
            "        }",
            "    };",
            "",
            "    /**",
            "    Provides a way to safely modify a `Y.BaseCore` subclass' static `ATTRS`",
            "    after the class has been defined or created.",
            "",
            "    BaseCore-based classes cache information about the class hierarchy in order",
            "    to efficiently create instances. This cache includes includes the aggregated",
            "    `ATTRS` configs. If the static `ATTRS` configs need to be modified after the",
            "    class has been defined or create, then use this method which will make sure",
            "    to clear any cached data before making any modifications.",
            "",
            "    @method modifyAttrs",
            "    @param {Function} [ctor] The constructor function whose `ATTRS` should be",
            "        modified. If a `ctor` function is not specified, then `this` is assumed",
            "        to be the constructor which hosts the `ATTRS`.",
            "    @param {Object} configs The collection of `ATTRS` configs to mix with the",
            "        existing attribute configurations.",
            "    @static",
            "    @since 3.10.0",
            "    **/",
            "    BaseCore.modifyAttrs = function (ctor, configs) {",
            "        // When called without a constructor, assume `this` is the constructor.",
            "        if (typeof ctor !== 'function') {",
            "            configs = ctor;",
            "            ctor    = this;",
            "        }",
            "",
            "        var attrs, attr, name;",
            "",
            "        // Eagerly create the `ATTRS` object if it doesn't already exist.",
            "        attrs = ctor.ATTRS || (ctor.ATTRS = {});",
            "",
            "        if (configs) {",
            "            // Clear cache because it has ATTRS aggregation data which is about",
            "            // to be modified.",
            "            ctor._CACHED_CLASS_DATA = null;",
            "",
            "            for (name in configs) {",
            "                if (configs.hasOwnProperty(name)) {",
            "                    attr = attrs[name] || (attrs[name] = {});",
            "                    Y.mix(attr, configs[name], true);",
            "                }",
            "            }",
            "        }",
            "    };",
            "",
            "    BaseCore.prototype = {",
            "",
            "        /**",
            "         * Internal construction logic for BaseCore.",
            "         *",
            "         * @method _initBase",
            "         * @param {Object} config The constructor configuration object",
            "         * @private",
            "         */",
            "        _initBase : function(config) {",
            "",
            "            Y.stamp(this);",
            "",
            "            this._initAttribute(config);",
            "",
            "            // If Plugin.Host has been augmented [ through base-pluginhost ], setup it's",
            "            // initial state, but don't initialize Plugins yet. That's done after initialization.",
            "            var PluginHost = Y.Plugin && Y.Plugin.Host;",
            "            if (this._initPlugins && PluginHost) {",
            "                PluginHost.call(this);",
            "            }",
            "",
            "            if (this._lazyAddAttrs !== false) { this._lazyAddAttrs = true; }",
            "",
            "            /**",
            "             * The string used to identify the class of this object.",
            "             *",
            "             * @deprecated Use this.constructor.NAME",
            "             * @property name",
            "             * @type String",
            "             */",
            "            this.name = this.constructor.NAME;",
            "",
            "            this.init.apply(this, arguments);",
            "        },",
            "",
            "        /**",
            "         * Initializes AttributeCore",
            "         *",
            "         * @method _initAttribute",
            "         * @private",
            "         */",
            "        _initAttribute: function() {",
            "            AttributeCore.call(this);",
            "        },",
            "",
            "        /**",
            "         * Init lifecycle method, invoked during construction. Sets up attributes",
            "         * and invokes initializers for the class hierarchy.",
            "         *",
            "         * @method init",
            "         * @chainable",
            "         * @param {Object} cfg Object with configuration property name/value pairs",
            "         * @return {BaseCore} A reference to this object",
            "         */",
            "        init: function(cfg) {",
            "",
            "            this._baseInit(cfg);",
            "",
            "            return this;",
            "        },",
            "",
            "        /**",
            "         * Internal initialization implementation for BaseCore",
            "         *",
            "         * @method _baseInit",
            "         * @private",
            "         */",
            "        _baseInit: function(cfg) {",
            "            this._initHierarchy(cfg);",
            "",
            "            if (this._initPlugins) {",
            "                // Need to initPlugins manually, to handle constructor parsing, static Plug parsing",
            "                this._initPlugins(cfg);",
            "            }",
            "            this._set(INITIALIZED, true);",
            "        },",
            "",
            "        /**",
            "         * Destroy lifecycle method. Invokes destructors for the class hierarchy.",
            "         *",
            "         * @method destroy",
            "         * @return {BaseCore} A reference to this object",
            "         * @chainable",
            "         */",
            "        destroy: function() {",
            "            this._baseDestroy();",
            "            return this;",
            "        },",
            "",
            "        /**",
            "         * Internal destroy implementation for BaseCore",
            "         *",
            "         * @method _baseDestroy",
            "         * @private",
            "         */",
            "        _baseDestroy : function() {",
            "            if (this._destroyPlugins) {",
            "                this._destroyPlugins();",
            "            }",
            "            this._destroyHierarchy();",
            "            this._set(DESTROYED, true);",
            "        },",
            "",
            "        /**",
            "         * Returns the class hierarchy for this object, with BaseCore being the last class in the array.",
            "         *",
            "         * @method _getClasses",
            "         * @protected",
            "         * @return {Function[]} An array of classes (constructor functions), making up the class hierarchy for this object.",
            "         * This value is cached the first time the method, or _getAttrCfgs, is invoked. Subsequent invocations return the",
            "         * cached value.",
            "         */",
            "        _getClasses : function() {",
            "            if (!this._classes) {",
            "                this._initHierarchyData();",
            "            }",
            "            return this._classes;",
            "        },",
            "",
            "        /**",
            "         * Returns an aggregated set of attribute configurations, by traversing",
            "         * the class hierarchy.",
            "         *",
            "         * @method _getAttrCfgs",
            "         * @protected",
            "         * @return {Object} The hash of attribute configurations, aggregated across classes in the hierarchy",
            "         * This value is cached the first time the method, or _getClasses, is invoked. Subsequent invocations return",
            "         * the cached value.",
            "         */",
            "        _getAttrCfgs : function() {",
            "            if (!this._attrs) {",
            "                this._initHierarchyData();",
            "            }",
            "            return this._attrs;",
            "        },",
            "",
            "        /**",
            "         * A helper method used to isolate the attrs config for this instance to pass to `addAttrs`,",
            "         * from the static cached ATTRS for the class.",
            "         *",
            "         * @method _getInstanceAttrCfgs",
            "         * @private",
            "         *",
            "         * @param {Object} allCfgs The set of all attribute configurations for this instance.",
            "         * Attributes will be removed from this set, if they belong to the filtered class, so",
            "         * that by the time all classes are processed, allCfgs will be empty.",
            "         *",
            "         * @return {Object} The set of attributes to be added for this instance, suitable",
            "         * for passing through to `addAttrs`.",
            "         */",
            "        _getInstanceAttrCfgs : function(allCfgs) {",
            "",
            "            var cfgs = {},",
            "                cfg,",
            "                val,",
            "                subAttr,",
            "                subAttrs,",
            "                subAttrPath,",
            "                attr,",
            "                attrCfg,",
            "                allSubAttrs = allCfgs._subAttrs,",
            "                attrCfgProperties = this._attrCfgHash();",
            "",
            "            for (attr in allCfgs) {",
            "",
            "                if (allCfgs.hasOwnProperty(attr) && attr !== \"_subAttrs\") {",
            "",
            "                    attrCfg = allCfgs[attr];",
            "",
            "                    // Need to isolate from allCfgs, because we're going to set values etc.",
            "                    cfg = cfgs[attr] = _wlmix({}, attrCfg, attrCfgProperties);",
            "",
            "                    val = cfg.value;",
            "",
            "                    if (val && (typeof val === \"object\")) {",
            "                        this._cloneDefaultValue(attr, cfg);",
            "                    }",
            "",
            "                    if (allSubAttrs && allSubAttrs.hasOwnProperty(attr)) {",
            "                        subAttrs = allCfgs._subAttrs[attr];",
            "",
            "                        for (subAttrPath in subAttrs) {",
            "                            subAttr = subAttrs[subAttrPath];",
            "",
            "                            if (subAttr.path) {",
            "                                O.setValue(cfg.value, subAttr.path, subAttr.value);",
            "                            }",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "",
            "            return cfgs;",
            "        },",
            "",
            "        /**",
            "         * @method _filterAdHocAttrs",
            "         * @private",
            "         *",
            "         * @param {Object} allAttrs The set of all attribute configurations for this instance.",
            "         * Attributes will be removed from this set, if they belong to the filtered class, so",
            "         * that by the time all classes are processed, allCfgs will be empty.",
            "         * @param {Object} userVals The config object passed in by the user, from which adhoc attrs are to be filtered.",
            "         * @return {Object} The set of adhoc attributes passed in, in the form",
            "         * of an object with attribute name/configuration pairs.",
            "         */",
            "        _filterAdHocAttrs : function(allAttrs, userVals) {",
            "            var adHocs,",
            "                nonAttrs = this._nonAttrs,",
            "                attr;",
            "",
            "            if (userVals) {",
            "                adHocs = {};",
            "                for (attr in userVals) {",
            "                    if (!allAttrs[attr] && !nonAttrs[attr] && userVals.hasOwnProperty(attr)) {",
            "                        adHocs[attr] = {",
            "                            value:userVals[attr]",
            "                        };",
            "                    }",
            "                }",
            "            }",
            "",
            "            return adHocs;",
            "        },",
            "",
            "        /**",
            "         * A helper method used by _getClasses and _getAttrCfgs, which determines both",
            "         * the array of classes and aggregate set of attribute configurations",
            "         * across the class hierarchy for the instance.",
            "         *",
            "         * @method _initHierarchyData",
            "         * @private",
            "         */",
            "        _initHierarchyData : function() {",
            "",
            "            var ctor = this.constructor,",
            "                cachedClassData = ctor._CACHED_CLASS_DATA,",
            "                c,",
            "                i,",
            "                l,",
            "                attrCfg,",
            "                attrCfgHash,",
            "                needsAttrCfgHash = !ctor._ATTR_CFG_HASH,",
            "                nonAttrsCfg,",
            "                nonAttrs = {},",
            "                classes = [],",
            "                attrs = [];",
            "",
            "            // Start with `this` instance's constructor.",
            "            c = ctor;",
            "",
            "            if (!cachedClassData) {",
            "",
            "                while (c) {",
            "                    // Add to classes",
            "                    classes[classes.length] = c;",
            "",
            "                    // Add to attributes",
            "                    if (c.ATTRS) {",
            "                        attrs[attrs.length] = c.ATTRS;",
            "                    }",
            "",
            "                    // Aggregate ATTR cfg whitelist.",
            "                    if (needsAttrCfgHash) {",
            "                        attrCfg     = c._ATTR_CFG;",
            "                        attrCfgHash = attrCfgHash || {};",
            "",
            "                        if (attrCfg) {",
            "                            for (i = 0, l = attrCfg.length; i < l; i += 1) {",
            "                                attrCfgHash[attrCfg[i]] = true;",
            "                            }",
            "                        }",
            "                    }",
            "",
            "                    // Commenting out the if. We always aggregate, since we don't",
            "                    // know if we'll be needing this on the instance or not.",
            "                    // if (this._allowAdHocAttrs) {",
            "                        nonAttrsCfg = c._NON_ATTRS_CFG;",
            "                        if (nonAttrsCfg) {",
            "                            for (i = 0, l = nonAttrsCfg.length; i < l; i++) {",
            "                                nonAttrs[nonAttrsCfg[i]] = true;",
            "                            }",
            "                        }",
            "                    //}",
            "",
            "                    c = c.superclass ? c.superclass.constructor : null;",
            "                }",
            "",
            "                // Cache computed `_ATTR_CFG_HASH` on the constructor.",
            "                if (needsAttrCfgHash) {",
            "                    ctor._ATTR_CFG_HASH = attrCfgHash;",
            "                }",
            "",
            "                cachedClassData = ctor._CACHED_CLASS_DATA = {",
            "                    classes : classes,",
            "                    nonAttrs : nonAttrs,",
            "                    attrs : this._aggregateAttrs(attrs)",
            "                };",
            "",
            "            }",
            "",
            "            this._classes = cachedClassData.classes;",
            "            this._attrs = cachedClassData.attrs;",
            "            this._nonAttrs = cachedClassData.nonAttrs;",
            "        },",
            "",
            "        /**",
            "         * Utility method to define the attribute hash used to filter/whitelist property mixes for",
            "         * this class for iteration performance reasons.",
            "         *",
            "         * @method _attrCfgHash",
            "         * @private",
            "         */",
            "        _attrCfgHash: function() {",
            "            return this.constructor._ATTR_CFG_HASH;",
            "        },",
            "",
            "        /**",
            "         * This method assumes that the value has already been checked to be an object.",
            "         * Since it's on a critical path, we don't want to re-do the check.",
            "         *",
            "         * @method _cloneDefaultValue",
            "         * @param {Object} cfg",
            "         * @private",
            "         */",
            "        _cloneDefaultValue : function(attr, cfg) {",
            "",
            "            var val = cfg.value,",
            "                clone = cfg.cloneDefaultValue;",
            "",
            "            if (clone === DEEP || clone === true) {",
            "                cfg.value = Y.clone(val);",
            "            } else if (clone === SHALLOW) {",
            "                cfg.value = Y.merge(val);",
            "            } else if ((clone === undefined && (OBJECT_CONSTRUCTOR === val.constructor || L.isArray(val)))) {",
            "                cfg.value = Y.clone(val);",
            "            }",
            "            // else if (clone === false), don't clone the static default value.",
            "            // It's intended to be used by reference.",
            "        },",
            "",
            "        /**",
            "         * A helper method, used by _initHierarchyData to aggregate",
            "         * attribute configuration across the instances class hierarchy.",
            "         *",
            "         * The method will protect the attribute configuration value to protect the statically defined",
            "         * default value in ATTRS if required (if the value is an object literal, array or the",
            "         * attribute configuration has cloneDefaultValue set to shallow or deep).",
            "         *",
            "         * @method _aggregateAttrs",
            "         * @private",
            "         * @param {Array} allAttrs An array of ATTRS definitions across classes in the hierarchy",
            "         * (subclass first, Base last)",
            "         * @return {Object} The aggregate set of ATTRS definitions for the instance",
            "         */",
            "        _aggregateAttrs : function(allAttrs) {",
            "",
            "            var attr,",
            "                attrs,",
            "                subAttrsHash,",
            "                cfg,",
            "                path,",
            "                i,",
            "                cfgPropsHash = this._attrCfgHash(),",
            "                aggAttr,",
            "                aggAttrs = {};",
            "",
            "            if (allAttrs) {",
            "                for (i = allAttrs.length-1; i >= 0; --i) {",
            "",
            "                    attrs = allAttrs[i];",
            "",
            "                    for (attr in attrs) {",
            "                        if (attrs.hasOwnProperty(attr)) {",
            "",
            "                            // PERF TODO: Do we need to merge here, since we're merging later in getInstanceAttrCfgs",
            "                            // Should we move this down to only merge if we hit the path or valueFn ifs below?",
            "                            cfg = _wlmix({}, attrs[attr], cfgPropsHash);",
            "",
            "                            path = null;",
            "                            if (attr.indexOf(DOT) !== -1) {",
            "                                path = attr.split(DOT);",
            "                                attr = path.shift();",
            "                            }",
            "",
            "                            aggAttr = aggAttrs[attr];",
            "",
            "                            if (path && aggAttr && aggAttr.value) {",
            "",
            "                                subAttrsHash = aggAttrs._subAttrs;",
            "",
            "                                if (!subAttrsHash) {",
            "                                    subAttrsHash = aggAttrs._subAttrs = {};",
            "                                }",
            "",
            "                                if (!subAttrsHash[attr]) {",
            "                                    subAttrsHash[attr] = {};",
            "                                }",
            "",
            "                                subAttrsHash[attr][path.join(DOT)] = {",
            "                                    value: cfg.value,",
            "                                    path : path",
            "                                };",
            "",
            "                            } else if (!path) {",
            "",
            "                                if (!aggAttr) {",
            "                                    aggAttrs[attr] = cfg;",
            "                                } else {",
            "                                    if (aggAttr.valueFn && VALUE in cfg) {",
            "                                        aggAttr.valueFn = null;",
            "                                    }",
            "",
            "                                    // Mix into existing config.",
            "                                    _wlmix(aggAttr, cfg, cfgPropsHash);",
            "                                }",
            "                            }",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "",
            "            return aggAttrs;",
            "        },",
            "",
            "        /**",
            "         * Initializes the class hierarchy for the instance, which includes",
            "         * initializing attributes for each class defined in the class's",
            "         * static <a href=\"#property_BaseCore.ATTRS\">ATTRS</a> property and",
            "         * invoking the initializer method on the prototype of each class in the hierarchy.",
            "         *",
            "         * @method _initHierarchy",
            "         * @param {Object} userVals Object with configuration property name/value pairs",
            "         * @private",
            "         */",
            "        _initHierarchy : function(userVals) {",
            "",
            "            var lazy = this._lazyAddAttrs,",
            "                constr,",
            "                constrProto,",
            "                i,",
            "                l,",
            "                ci,",
            "                ei,",
            "                el,",
            "                ext,",
            "                extProto,",
            "                exts,",
            "                instanceAttrs,",
            "                initializers = [],",
            "                classes = this._getClasses(),",
            "                attrCfgs = this._getAttrCfgs(),",
            "                cl = classes.length - 1;",
            "",
            "            // Constructors",
            "            for (ci = cl; ci >= 0; ci--) {",
            "",
            "                constr = classes[ci];",
            "                constrProto = constr.prototype;",
            "                exts = constr._yuibuild && constr._yuibuild.exts;",
            "",
            "                // Using INITIALIZER in hasOwnProperty check, for performance reasons (helps IE6 avoid GC thresholds when",
            "                // referencing string literals). Not using it in apply, again, for performance \".\" is faster.",
            "",
            "                if (constrProto.hasOwnProperty(INITIALIZER)) {",
            "                    // Store initializer while we're here and looping",
            "                    initializers[initializers.length] = constrProto.initializer;",
            "                }",
            "",
            "                if (exts) {",
            "                    for (ei = 0, el = exts.length; ei < el; ei++) {",
            "",
            "                        ext = exts[ei];",
            "",
            "                        // Ext Constructor",
            "                        ext.apply(this, arguments);",
            "",
            "                        extProto = ext.prototype;",
            "                        if (extProto.hasOwnProperty(INITIALIZER)) {",
            "                            // Store initializer while we're here and looping",
            "                            initializers[initializers.length] = extProto.initializer;",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "",
            "            // ATTRS",
            "            instanceAttrs = this._getInstanceAttrCfgs(attrCfgs);",
            "",
            "            if (this._preAddAttrs) {",
            "                this._preAddAttrs(instanceAttrs, userVals, lazy);",
            "            }",
            "",
            "            if (this._allowAdHocAttrs) {",
            "                this.addAttrs(this._filterAdHocAttrs(attrCfgs, userVals), userVals, lazy);",
            "            }",
            "",
            "            this.addAttrs(instanceAttrs, userVals, lazy);",
            "",
            "            // Initializers",
            "            for (i = 0, l = initializers.length; i < l; i++) {",
            "                initializers[i].apply(this, arguments);",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Destroys the class hierarchy for this instance by invoking",
            "         * the destructor method on the prototype of each class in the hierarchy.",
            "         *",
            "         * @method _destroyHierarchy",
            "         * @private",
            "         */",
            "        _destroyHierarchy : function() {",
            "            var constr,",
            "                constrProto,",
            "                ci, cl, ei, el, exts, extProto,",
            "                classes = this._getClasses();",
            "",
            "            for (ci = 0, cl = classes.length; ci < cl; ci++) {",
            "                constr = classes[ci];",
            "                constrProto = constr.prototype;",
            "                exts = constr._yuibuild && constr._yuibuild.exts;",
            "",
            "                if (exts) {",
            "                    for (ei = 0, el = exts.length; ei < el; ei++) {",
            "                        extProto = exts[ei].prototype;",
            "                        if (extProto.hasOwnProperty(DESTRUCTOR)) {",
            "                            extProto.destructor.apply(this, arguments);",
            "                        }",
            "                    }",
            "                }",
            "",
            "                if (constrProto.hasOwnProperty(DESTRUCTOR)) {",
            "                    constrProto.destructor.apply(this, arguments);",
            "                }",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Default toString implementation. Provides the constructor NAME",
            "         * and the instance guid, if set.",
            "         *",
            "         * @method toString",
            "         * @return {String} String representation for this object",
            "         */",
            "        toString: function() {",
            "            return this.name + \"[\" + Y.stamp(this, true) + \"]\";",
            "        }",
            "    };",
            "",
            "    // Straightup augment, no wrapper functions",
            "    Y.mix(BaseCore, AttributeCore, false, null, 1);",
            "",
            "    // Fix constructor",
            "    BaseCore.prototype.constructor = BaseCore;",
            "",
            "    Y.BaseCore = BaseCore;",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"attribute-core\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "21": 1,
            "36": 1217,
            "37": 1217,
            "38": 2078,
            "39": 2071,
            "42": 1217,
            "121": 1,
            "122": 92,
            "123": 92,
            "125": 92,
            "138": 1,
            "153": 1,
            "180": 1,
            "197": 1,
            "246": 1,
            "248": 2,
            "249": 0,
            "250": 0,
            "253": 2,
            "256": 2,
            "258": 2,
            "261": 2,
            "263": 2,
            "264": 4,
            "265": 4,
            "266": 4,
            "272": 1,
            "283": 92,
            "285": 92,
            "289": 92,
            "290": 92,
            "291": 8,
            "294": 92,
            "303": 92,
            "305": 92,
            "315": 92,
            "329": 84,
            "331": 84,
            "341": 92,
            "343": 92,
            "345": 8,
            "347": 92,
            "358": 2,
            "359": 2,
            "369": 8,
            "370": 6,
            "372": 8,
            "373": 8,
            "386": 110,
            "387": 92,
            "389": 110,
            "403": 92,
            "404": 0,
            "406": 92,
            "425": 92,
            "436": 92,
            "438": 1000,
            "440": 976,
            "443": 976,
            "445": 976,
            "447": 976,
            "448": 150,
            "451": 976,
            "452": 24,
            "454": 24,
            "455": 48,
            "457": 48,
            "458": 48,
            "465": 92,
            "480": 4,
            "484": 4,
            "485": 4,
            "486": 4,
            "487": 10,
            "488": 6,
            "495": 4,
            "508": 92,
            "522": 92,
            "524": 92,
            "526": 24,
            "528": 71,
            "531": 71,
            "532": 69,
            "536": 71,
            "537": 67,
            "538": 67,
            "540": 67,
            "541": 22,
            "542": 228,
            "550": 71,
            "551": 71,
            "552": 24,
            "553": 48,
            "558": 71,
            "562": 24,
            "563": 22,
            "566": 24,
            "574": 92,
            "575": 92,
            "576": 92,
            "587": 116,
            "600": 150,
            "603": 150,
            "604": 10,
            "605": 140,
            "606": 10,
            "607": 130,
            "608": 107,
            "630": 24,
            "640": 24,
            "641": 24,
            "643": 69,
            "645": 69,
            "646": 206,
            "650": 206,
            "652": 206,
            "653": 206,
            "654": 2,
            "655": 2,
            "658": 206,
            "660": 206,
            "662": 2,
            "664": 2,
            "665": 1,
            "668": 2,
            "669": 1,
            "672": 2,
            "677": 204,
            "679": 204,
            "680": 169,
            "682": 35,
            "683": 7,
            "687": 35,
            "695": 24,
            "710": 92,
            "728": 92,
            "730": 231,
            "731": 231,
            "732": 231,
            "737": 231,
            "739": 7,
            "742": 231,
            "743": 0,
            "745": 0,
            "748": 0,
            "750": 0,
            "751": 0,
            "753": 0,
            "760": 92,
            "762": 92,
            "763": 1,
            "766": 92,
            "767": 4,
            "770": 92,
            "773": 92,
            "774": 7,
            "786": 8,
            "791": 8,
            "792": 30,
            "793": 30,
            "794": 30,
            "796": 30,
            "797": 0,
            "798": 0,
            "799": 0,
            "800": 0,
            "805": 30,
            "806": 2,
            "819": 1,
            "824": 1,
            "827": 1,
            "829": 1
        }
    }
}