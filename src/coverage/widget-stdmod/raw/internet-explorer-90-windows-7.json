{
    "build/widget-stdmod/widget-stdmod.js": {
        "path": "build/widget-stdmod/widget-stdmod.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1,
            "10": 1,
            "11": 1,
            "12": 8,
            "13": 1,
            "14": 1,
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 9,
            "21": 9,
            "22": 9,
            "23": 9,
            "24": 8,
            "25": 8,
            "26": 8,
            "27": 8,
            "28": 8,
            "29": 8,
            "30": 8,
            "31": 8,
            "32": 8,
            "33": 8,
            "34": 8,
            "35": 8,
            "36": 8,
            "37": 8,
            "38": 6,
            "39": 8,
            "40": 2,
            "41": 8,
            "42": 1,
            "43": 8,
            "44": 8,
            "45": 8,
            "46": 20,
            "47": 7,
            "48": 4,
            "49": 1,
            "50": 1,
            "51": 0,
            "52": 0,
            "53": 8,
            "54": 8,
            "55": 8,
            "56": 8,
            "57": 0,
            "58": 8,
            "59": 2,
            "60": 8,
            "61": 40,
            "62": 40,
            "63": 40,
            "64": 13,
            "65": 32,
            "66": 17,
            "67": 17,
            "68": 17,
            "69": 15,
            "70": 32,
            "71": 12,
            "72": 12,
            "73": 12,
            "74": 12,
            "75": 12,
            "76": 12,
            "77": 15,
            "78": 15,
            "79": 0,
            "80": 0,
            "81": 12,
            "82": 12,
            "83": 9,
            "84": 3,
            "85": 0,
            "86": 3,
            "87": 3,
            "88": 0,
            "89": 3,
            "90": 12,
            "91": 17,
            "92": 2,
            "93": 2,
            "94": 2,
            "95": 2,
            "96": 13,
            "97": 17,
            "98": 6,
            "99": 6,
            "100": 6,
            "101": 6,
            "102": 6,
            "103": 6,
            "104": 15,
            "105": 3,
            "106": 3,
            "107": 3,
            "108": 1,
            "109": 1,
            "110": 3,
            "111": 3,
            "112": 0,
            "113": 1,
            "114": 1,
            "115": 1,
            "116": 1,
            "117": 1,
            "118": 17,
            "119": 6,
            "120": 62,
            "121": 62,
            "122": 3,
            "123": 62,
            "124": 15,
            "125": 7,
            "126": 7,
            "127": 21,
            "128": 21,
            "129": 13,
            "130": 6,
            "131": 7,
            "132": 7,
            "133": 7,
            "134": 7,
            "135": 7,
            "136": 7,
            "137": 7,
            "138": 7,
            "139": 7,
            "140": 1
        },
        "b": {
            "1": [
                8,
                0
            ],
            "2": [
                8,
                0
            ],
            "3": [
                8,
                0
            ],
            "4": [
                8,
                0
            ],
            "5": [
                8,
                0
            ],
            "6": [
                8,
                0
            ],
            "7": [
                6,
                2
            ],
            "8": [
                2,
                6
            ],
            "9": [
                1,
                7
            ],
            "10": [
                7,
                13
            ],
            "11": [
                1,
                3
            ],
            "12": [
                0,
                1
            ],
            "13": [
                8,
                8,
                0,
                0
            ],
            "14": [
                0,
                8
            ],
            "15": [
                8,
                0
            ],
            "16": [
                2,
                6
            ],
            "17": [
                40,
                0
            ],
            "18": [
                13,
                27
            ],
            "19": [
                40,
                13
            ],
            "20": [
                17,
                15
            ],
            "21": [
                12,
                0
            ],
            "22": [
                0,
                15
            ],
            "23": [
                9,
                3
            ],
            "24": [
                12,
                11
            ],
            "25": [
                0,
                3
            ],
            "26": [
                0,
                3
            ],
            "27": [
                2,
                2,
                13
            ],
            "28": [
                6,
                0
            ],
            "29": [
                6,
                0
            ],
            "30": [
                6,
                6
            ],
            "31": [
                6,
                0
            ],
            "32": [
                3,
                0
            ],
            "33": [
                1,
                2
            ],
            "34": [
                1,
                0
            ],
            "35": [
                1,
                1
            ],
            "36": [
                1,
                1
            ],
            "37": [
                1,
                1
            ],
            "38": [
                17,
                0
            ],
            "39": [
                62,
                34
            ],
            "40": [
                3,
                59
            ],
            "41": [
                62,
                34
            ],
            "42": [
                7,
                8
            ],
            "43": [
                13,
                8
            ],
            "44": [
                6,
                7
            ],
            "45": [
                7,
                0
            ],
            "46": [
                7,
                0
            ],
            "47": [
                7,
                0
            ],
            "48": [
                7,
                0
            ],
            "49": [
                7,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 9,
            "3": 8,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 9,
            "8": 8,
            "9": 8,
            "10": 8,
            "11": 8,
            "12": 20,
            "13": 4,
            "14": 1,
            "15": 0,
            "16": 8,
            "17": 8,
            "18": 40,
            "19": 32,
            "20": 12,
            "21": 15,
            "22": 12,
            "23": 12,
            "24": 17,
            "25": 6,
            "26": 15,
            "27": 3,
            "28": 1,
            "29": 17,
            "30": 6,
            "31": 62,
            "32": 15
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 25
                    },
                    "end": {
                        "line": 1,
                        "column": 44
                    }
                }
            },
            "2": {
                "name": "StdMod",
                "line": 62,
                "loc": {
                    "start": {
                        "line": 62,
                        "column": 4
                    },
                    "end": {
                        "line": 62,
                        "column": 28
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 187,
                "loc": {
                    "start": {
                        "line": 187,
                        "column": 23
                    },
                    "end": {
                        "line": 187,
                        "column": 37
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 201,
                "loc": {
                    "start": {
                        "line": 201,
                        "column": 23
                    },
                    "end": {
                        "line": 201,
                        "column": 44
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 205,
                "loc": {
                    "start": {
                        "line": 205,
                        "column": 21
                    },
                    "end": {
                        "line": 205,
                        "column": 42
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 209,
                "loc": {
                    "start": {
                        "line": 209,
                        "column": 24
                    },
                    "end": {
                        "line": 209,
                        "column": 45
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 252,
                "loc": {
                    "start": {
                        "line": 252,
                        "column": 22
                    },
                    "end": {
                        "line": 252,
                        "column": 33
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 269,
                "loc": {
                    "start": {
                        "line": 269,
                        "column": 24
                    },
                    "end": {
                        "line": 269,
                        "column": 35
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 296,
                "loc": {
                    "start": {
                        "line": 296,
                        "column": 26
                    },
                    "end": {
                        "line": 296,
                        "column": 37
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 307,
                "loc": {
                    "start": {
                        "line": 307,
                        "column": 32
                    },
                    "end": {
                        "line": 307,
                        "column": 43
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 323,
                "loc": {
                    "start": {
                        "line": 323,
                        "column": 24
                    },
                    "end": {
                        "line": 323,
                        "column": 35
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 341,
                "loc": {
                    "start": {
                        "line": 341,
                        "column": 29
                    },
                    "end": {
                        "line": 341,
                        "column": 41
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 355,
                "loc": {
                    "start": {
                        "line": 355,
                        "column": 27
                    },
                    "end": {
                        "line": 355,
                        "column": 39
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 369,
                "loc": {
                    "start": {
                        "line": 369,
                        "column": 29
                    },
                    "end": {
                        "line": 369,
                        "column": 41
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 383,
                "loc": {
                    "start": {
                        "line": 383,
                        "column": 32
                    },
                    "end": {
                        "line": 383,
                        "column": 45
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 397,
                "loc": {
                    "start": {
                        "line": 397,
                        "column": 30
                    },
                    "end": {
                        "line": 397,
                        "column": 44
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 410,
                "loc": {
                    "start": {
                        "line": 410,
                        "column": 27
                    },
                    "end": {
                        "line": 410,
                        "column": 49
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 433,
                "loc": {
                    "start": {
                        "line": 433,
                        "column": 22
                    },
                    "end": {
                        "line": 433,
                        "column": 33
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 455,
                "loc": {
                    "start": {
                        "line": 455,
                        "column": 23
                    },
                    "end": {
                        "line": 455,
                        "column": 57
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 477,
                "loc": {
                    "start": {
                        "line": 477,
                        "column": 24
                    },
                    "end": {
                        "line": 477,
                        "column": 42
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 499,
                "loc": {
                    "start": {
                        "line": 499,
                        "column": 23
                    },
                    "end": {
                        "line": 499,
                        "column": 41
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 516,
                "loc": {
                    "start": {
                        "line": 516,
                        "column": 31
                    },
                    "end": {
                        "line": 516,
                        "column": 74
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 544,
                "loc": {
                    "start": {
                        "line": 544,
                        "column": 29
                    },
                    "end": {
                        "line": 544,
                        "column": 47
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 561,
                "loc": {
                    "start": {
                        "line": 561,
                        "column": 28
                    },
                    "end": {
                        "line": 561,
                        "column": 60
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 587,
                "loc": {
                    "start": {
                        "line": 587,
                        "column": 28
                    },
                    "end": {
                        "line": 587,
                        "column": 43
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 610,
                "loc": {
                    "start": {
                        "line": 610,
                        "column": 28
                    },
                    "end": {
                        "line": 610,
                        "column": 46
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 623,
                "loc": {
                    "start": {
                        "line": 623,
                        "column": 27
                    },
                    "end": {
                        "line": 623,
                        "column": 45
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 650,
                "loc": {
                    "start": {
                        "line": 650,
                        "column": 35
                    },
                    "end": {
                        "line": 650,
                        "column": 66
                    }
                }
            },
            "29": {
                "name": "(anonymous_29)",
                "line": 667,
                "loc": {
                    "start": {
                        "line": 667,
                        "column": 28
                    },
                    "end": {
                        "line": 667,
                        "column": 46
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 683,
                "loc": {
                    "start": {
                        "line": 683,
                        "column": 27
                    },
                    "end": {
                        "line": 683,
                        "column": 61
                    }
                }
            },
            "31": {
                "name": "(anonymous_31)",
                "line": 705,
                "loc": {
                    "start": {
                        "line": 705,
                        "column": 24
                    },
                    "end": {
                        "line": 705,
                        "column": 55
                    }
                }
            },
            "32": {
                "name": "(anonymous_32)",
                "line": 732,
                "loc": {
                    "start": {
                        "line": 732,
                        "column": 21
                    },
                    "end": {
                        "line": 732,
                        "column": 36
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 780,
                    "column": 56
                }
            },
            "2": {
                "start": {
                    "line": 8,
                    "column": 4
                },
                "end": {
                    "line": 49,
                    "column": 29
                }
            },
            "3": {
                "start": {
                    "line": 62,
                    "column": 4
                },
                "end": {
                    "line": 62,
                    "column": 30
                }
            },
            "4": {
                "start": {
                    "line": 71,
                    "column": 4
                },
                "end": {
                    "line": 71,
                    "column": 27
                }
            },
            "5": {
                "start": {
                    "line": 80,
                    "column": 4
                },
                "end": {
                    "line": 80,
                    "column": 23
                }
            },
            "6": {
                "start": {
                    "line": 89,
                    "column": 4
                },
                "end": {
                    "line": 89,
                    "column": 27
                }
            },
            "7": {
                "start": {
                    "line": 101,
                    "column": 4
                },
                "end": {
                    "line": 101,
                    "column": 27
                }
            },
            "8": {
                "start": {
                    "line": 113,
                    "column": 4
                },
                "end": {
                    "line": 113,
                    "column": 29
                }
            },
            "9": {
                "start": {
                    "line": 124,
                    "column": 4
                },
                "end": {
                    "line": 124,
                    "column": 31
                }
            },
            "10": {
                "start": {
                    "line": 126,
                    "column": 4
                },
                "end": {
                    "line": 132,
                    "column": 49
                }
            },
            "11": {
                "start": {
                    "line": 142,
                    "column": 4
                },
                "end": {
                    "line": 191,
                    "column": 6
                }
            },
            "12": {
                "start": {
                    "line": 188,
                    "column": 17
                },
                "end": {
                    "line": 188,
                    "column": 54
                }
            },
            "13": {
                "start": {
                    "line": 200,
                    "column": 4
                },
                "end": {
                    "line": 212,
                    "column": 6
                }
            },
            "14": {
                "start": {
                    "line": 202,
                    "column": 12
                },
                "end": {
                    "line": 202,
                    "column": 53
                }
            },
            "15": {
                "start": {
                    "line": 206,
                    "column": 12
                },
                "end": {
                    "line": 206,
                    "column": 51
                }
            },
            "16": {
                "start": {
                    "line": 210,
                    "column": 12
                },
                "end": {
                    "line": 210,
                    "column": 53
                }
            },
            "17": {
                "start": {
                    "line": 223,
                    "column": 4
                },
                "end": {
                    "line": 227,
                    "column": 6
                }
            },
            "18": {
                "start": {
                    "line": 244,
                    "column": 4
                },
                "end": {
                    "line": 248,
                    "column": 6
                }
            },
            "19": {
                "start": {
                    "line": 250,
                    "column": 4
                },
                "end": {
                    "line": 775,
                    "column": 6
                }
            },
            "20": {
                "start": {
                    "line": 253,
                    "column": 12
                },
                "end": {
                    "line": 253,
                    "column": 53
                }
            },
            "21": {
                "start": {
                    "line": 255,
                    "column": 12
                },
                "end": {
                    "line": 255,
                    "column": 59
                }
            },
            "22": {
                "start": {
                    "line": 256,
                    "column": 12
                },
                "end": {
                    "line": 256,
                    "column": 55
                }
            },
            "23": {
                "start": {
                    "line": 257,
                    "column": 12
                },
                "end": {
                    "line": 257,
                    "column": 55
                }
            },
            "24": {
                "start": {
                    "line": 270,
                    "column": 12
                },
                "end": {
                    "line": 270,
                    "column": 50
                }
            },
            "25": {
                "start": {
                    "line": 272,
                    "column": 12
                },
                "end": {
                    "line": 274,
                    "column": 13
                }
            },
            "26": {
                "start": {
                    "line": 273,
                    "column": 16
                },
                "end": {
                    "line": 273,
                    "column": 72
                }
            },
            "27": {
                "start": {
                    "line": 276,
                    "column": 12
                },
                "end": {
                    "line": 278,
                    "column": 13
                }
            },
            "28": {
                "start": {
                    "line": 277,
                    "column": 16
                },
                "end": {
                    "line": 277,
                    "column": 68
                }
            },
            "29": {
                "start": {
                    "line": 280,
                    "column": 12
                },
                "end": {
                    "line": 282,
                    "column": 13
                }
            },
            "30": {
                "start": {
                    "line": 281,
                    "column": 16
                },
                "end": {
                    "line": 281,
                    "column": 72
                }
            },
            "31": {
                "start": {
                    "line": 284,
                    "column": 12
                },
                "end": {
                    "line": 284,
                    "column": 57
                }
            },
            "32": {
                "start": {
                    "line": 297,
                    "column": 12
                },
                "end": {
                    "line": 297,
                    "column": 67
                }
            },
            "33": {
                "start": {
                    "line": 298,
                    "column": 12
                },
                "end": {
                    "line": 298,
                    "column": 41
                }
            },
            "34": {
                "start": {
                    "line": 302,
                    "column": 12
                },
                "end": {
                    "line": 302,
                    "column": 62
                }
            },
            "35": {
                "start": {
                    "line": 303,
                    "column": 12
                },
                "end": {
                    "line": 303,
                    "column": 58
                }
            },
            "36": {
                "start": {
                    "line": 304,
                    "column": 12
                },
                "end": {
                    "line": 304,
                    "column": 62
                }
            },
            "37": {
                "start": {
                    "line": 308,
                    "column": 12
                },
                "end": {
                    "line": 308,
                    "column": 88
                }
            },
            "38": {
                "start": {
                    "line": 308,
                    "column": 55
                },
                "end": {
                    "line": 308,
                    "column": 86
                }
            },
            "39": {
                "start": {
                    "line": 309,
                    "column": 12
                },
                "end": {
                    "line": 309,
                    "column": 84
                }
            },
            "40": {
                "start": {
                    "line": 309,
                    "column": 53
                },
                "end": {
                    "line": 309,
                    "column": 82
                }
            },
            "41": {
                "start": {
                    "line": 310,
                    "column": 12
                },
                "end": {
                    "line": 310,
                    "column": 88
                }
            },
            "42": {
                "start": {
                    "line": 310,
                    "column": 55
                },
                "end": {
                    "line": 310,
                    "column": 86
                }
            },
            "43": {
                "start": {
                    "line": 328,
                    "column": 12
                },
                "end": {
                    "line": 328,
                    "column": 70
                }
            },
            "44": {
                "start": {
                    "line": 329,
                    "column": 12
                },
                "end": {
                    "line": 329,
                    "column": 55
                }
            },
            "45": {
                "start": {
                    "line": 330,
                    "column": 12
                },
                "end": {
                    "line": 330,
                    "column": 56
                }
            },
            "46": {
                "start": {
                    "line": 342,
                    "column": 12
                },
                "end": {
                    "line": 344,
                    "column": 13
                }
            },
            "47": {
                "start": {
                    "line": 343,
                    "column": 16
                },
                "end": {
                    "line": 343,
                    "column": 74
                }
            },
            "48": {
                "start": {
                    "line": 356,
                    "column": 12
                },
                "end": {
                    "line": 358,
                    "column": 13
                }
            },
            "49": {
                "start": {
                    "line": 357,
                    "column": 16
                },
                "end": {
                    "line": 357,
                    "column": 72
                }
            },
            "50": {
                "start": {
                    "line": 370,
                    "column": 12
                },
                "end": {
                    "line": 372,
                    "column": 13
                }
            },
            "51": {
                "start": {
                    "line": 371,
                    "column": 16
                },
                "end": {
                    "line": 371,
                    "column": 74
                }
            },
            "52": {
                "start": {
                    "line": 384,
                    "column": 12
                },
                "end": {
                    "line": 384,
                    "column": 44
                }
            },
            "53": {
                "start": {
                    "line": 398,
                    "column": 12
                },
                "end": {
                    "line": 398,
                    "column": 94
                }
            },
            "54": {
                "start": {
                    "line": 411,
                    "column": 12
                },
                "end": {
                    "line": 411,
                    "column": 59
                }
            },
            "55": {
                "start": {
                    "line": 412,
                    "column": 12
                },
                "end": {
                    "line": 412,
                    "column": 46
                }
            },
            "56": {
                "start": {
                    "line": 414,
                    "column": 12
                },
                "end": {
                    "line": 416,
                    "column": 13
                }
            },
            "57": {
                "start": {
                    "line": 415,
                    "column": 16
                },
                "end": {
                    "line": 415,
                    "column": 49
                }
            },
            "58": {
                "start": {
                    "line": 418,
                    "column": 12
                },
                "end": {
                    "line": 420,
                    "column": 13
                }
            },
            "59": {
                "start": {
                    "line": 419,
                    "column": 16
                },
                "end": {
                    "line": 419,
                    "column": 46
                }
            },
            "60": {
                "start": {
                    "line": 422,
                    "column": 12
                },
                "end": {
                    "line": 422,
                    "column": 31
                }
            },
            "61": {
                "start": {
                    "line": 434,
                    "column": 12
                },
                "end": {
                    "line": 439,
                    "column": 13
                }
            },
            "62": {
                "start": {
                    "line": 435,
                    "column": 16
                },
                "end": {
                    "line": 435,
                    "column": 46
                }
            },
            "63": {
                "start": {
                    "line": 436,
                    "column": 16
                },
                "end": {
                    "line": 438,
                    "column": 17
                }
            },
            "64": {
                "start": {
                    "line": 437,
                    "column": 20
                },
                "end": {
                    "line": 437,
                    "column": 79
                }
            },
            "65": {
                "start": {
                    "line": 457,
                    "column": 12
                },
                "end": {
                    "line": 465,
                    "column": 13
                }
            },
            "66": {
                "start": {
                    "line": 458,
                    "column": 16
                },
                "end": {
                    "line": 458,
                    "column": 61
                }
            },
            "67": {
                "start": {
                    "line": 460,
                    "column": 16
                },
                "end": {
                    "line": 460,
                    "column": 61
                }
            },
            "68": {
                "start": {
                    "line": 462,
                    "column": 16
                },
                "end": {
                    "line": 462,
                    "column": 94
                }
            },
            "69": {
                "start": {
                    "line": 464,
                    "column": 16
                },
                "end": {
                    "line": 464,
                    "column": 43
                }
            },
            "70": {
                "start": {
                    "line": 466,
                    "column": 12
                },
                "end": {
                    "line": 466,
                    "column": 37
                }
            },
            "71": {
                "start": {
                    "line": 479,
                    "column": 12
                },
                "end": {
                    "line": 480,
                    "column": 63
                }
            },
            "72": {
                "start": {
                    "line": 482,
                    "column": 12
                },
                "end": {
                    "line": 484,
                    "column": 13
                }
            },
            "73": {
                "start": {
                    "line": 483,
                    "column": 16
                },
                "end": {
                    "line": 483,
                    "column": 63
                }
            },
            "74": {
                "start": {
                    "line": 486,
                    "column": 12
                },
                "end": {
                    "line": 486,
                    "column": 72
                }
            },
            "75": {
                "start": {
                    "line": 488,
                    "column": 12
                },
                "end": {
                    "line": 488,
                    "column": 54
                }
            },
            "76": {
                "start": {
                    "line": 489,
                    "column": 12
                },
                "end": {
                    "line": 489,
                    "column": 47
                }
            },
            "77": {
                "start": {
                    "line": 500,
                    "column": 12
                },
                "end": {
                    "line": 500,
                    "column": 58
                }
            },
            "78": {
                "start": {
                    "line": 501,
                    "column": 12
                },
                "end": {
                    "line": 504,
                    "column": 13
                }
            },
            "79": {
                "start": {
                    "line": 502,
                    "column": 16
                },
                "end": {
                    "line": 502,
                    "column": 41
                }
            },
            "80": {
                "start": {
                    "line": 503,
                    "column": 16
                },
                "end": {
                    "line": 503,
                    "column": 51
                }
            },
            "81": {
                "start": {
                    "line": 517,
                    "column": 12
                },
                "end": {
                    "line": 517,
                    "column": 49
                }
            },
            "82": {
                "start": {
                    "line": 519,
                    "column": 12
                },
                "end": {
                    "line": 532,
                    "column": 13
                }
            },
            "83": {
                "start": {
                    "line": 520,
                    "column": 16
                },
                "end": {
                    "line": 520,
                    "column": 52
                }
            },
            "84": {
                "start": {
                    "line": 522,
                    "column": 16
                },
                "end": {
                    "line": 531,
                    "column": 17
                }
            },
            "85": {
                "start": {
                    "line": 523,
                    "column": 20
                },
                "end": {
                    "line": 523,
                    "column": 61
                }
            },
            "86": {
                "start": {
                    "line": 525,
                    "column": 20
                },
                "end": {
                    "line": 525,
                    "column": 64
                }
            },
            "87": {
                "start": {
                    "line": 526,
                    "column": 20
                },
                "end": {
                    "line": 530,
                    "column": 21
                }
            },
            "88": {
                "start": {
                    "line": 527,
                    "column": 24
                },
                "end": {
                    "line": 527,
                    "column": 69
                }
            },
            "89": {
                "start": {
                    "line": 529,
                    "column": 24
                },
                "end": {
                    "line": 529,
                    "column": 60
                }
            },
            "90": {
                "start": {
                    "line": 545,
                    "column": 12
                },
                "end": {
                    "line": 545,
                    "column": 96
                }
            },
            "91": {
                "start": {
                    "line": 564,
                    "column": 12
                },
                "end": {
                    "line": 573,
                    "column": 13
                }
            },
            "92": {
                "start": {
                    "line": 566,
                    "column": 20
                },
                "end": {
                    "line": 566,
                    "column": 30
                }
            },
            "93": {
                "start": {
                    "line": 567,
                    "column": 20
                },
                "end": {
                    "line": 567,
                    "column": 26
                }
            },
            "94": {
                "start": {
                    "line": 569,
                    "column": 20
                },
                "end": {
                    "line": 569,
                    "column": 38
                }
            },
            "95": {
                "start": {
                    "line": 570,
                    "column": 20
                },
                "end": {
                    "line": 570,
                    "column": 26
                }
            },
            "96": {
                "start": {
                    "line": 572,
                    "column": 20
                },
                "end": {
                    "line": 572,
                    "column": 43
                }
            },
            "97": {
                "start": {
                    "line": 575,
                    "column": 12
                },
                "end": {
                    "line": 575,
                    "column": 41
                }
            },
            "98": {
                "start": {
                    "line": 588,
                    "column": 12
                },
                "end": {
                    "line": 589,
                    "column": 49
                }
            },
            "99": {
                "start": {
                    "line": 591,
                    "column": 12
                },
                "end": {
                    "line": 596,
                    "column": 13
                }
            },
            "100": {
                "start": {
                    "line": 592,
                    "column": 16
                },
                "end": {
                    "line": 592,
                    "column": 56
                }
            },
            "101": {
                "start": {
                    "line": 593,
                    "column": 16
                },
                "end": {
                    "line": 595,
                    "column": 17
                }
            },
            "102": {
                "start": {
                    "line": 594,
                    "column": 20
                },
                "end": {
                    "line": 594,
                    "column": 70
                }
            },
            "103": {
                "start": {
                    "line": 598,
                    "column": 12
                },
                "end": {
                    "line": 598,
                    "column": 26
                }
            },
            "104": {
                "start": {
                    "line": 611,
                    "column": 12
                },
                "end": {
                    "line": 611,
                    "column": 90
                }
            },
            "105": {
                "start": {
                    "line": 625,
                    "column": 12
                },
                "end": {
                    "line": 625,
                    "column": 56
                }
            },
            "106": {
                "start": {
                    "line": 627,
                    "column": 12
                },
                "end": {
                    "line": 635,
                    "column": 13
                }
            },
            "107": {
                "start": {
                    "line": 628,
                    "column": 16
                },
                "end": {
                    "line": 631,
                    "column": 17
                }
            },
            "108": {
                "start": {
                    "line": 629,
                    "column": 20
                },
                "end": {
                    "line": 629,
                    "column": 44
                }
            },
            "109": {
                "start": {
                    "line": 630,
                    "column": 20
                },
                "end": {
                    "line": 630,
                    "column": 87
                }
            },
            "110": {
                "start": {
                    "line": 632,
                    "column": 16
                },
                "end": {
                    "line": 632,
                    "column": 65
                }
            },
            "111": {
                "start": {
                    "line": 634,
                    "column": 16
                },
                "end": {
                    "line": 634,
                    "column": 45
                }
            },
            "112": {
                "start": {
                    "line": 637,
                    "column": 12
                },
                "end": {
                    "line": 637,
                    "column": 24
                }
            },
            "113": {
                "start": {
                    "line": 651,
                    "column": 12
                },
                "end": {
                    "line": 651,
                    "column": 44
                }
            },
            "114": {
                "start": {
                    "line": 652,
                    "column": 12
                },
                "end": {
                    "line": 656,
                    "column": 13
                }
            },
            "115": {
                "start": {
                    "line": 653,
                    "column": 16
                },
                "end": {
                    "line": 653,
                    "column": 96
                }
            },
            "116": {
                "start": {
                    "line": 654,
                    "column": 16
                },
                "end": {
                    "line": 654,
                    "column": 90
                }
            },
            "117": {
                "start": {
                    "line": 655,
                    "column": 16
                },
                "end": {
                    "line": 655,
                    "column": 96
                }
            },
            "118": {
                "start": {
                    "line": 668,
                    "column": 12
                },
                "end": {
                    "line": 668,
                    "column": 103
                }
            },
            "119": {
                "start": {
                    "line": 685,
                    "column": 12
                },
                "end": {
                    "line": 685,
                    "column": 80
                }
            },
            "120": {
                "start": {
                    "line": 706,
                    "column": 12
                },
                "end": {
                    "line": 706,
                    "column": 59
                }
            },
            "121": {
                "start": {
                    "line": 708,
                    "column": 12
                },
                "end": {
                    "line": 710,
                    "column": 13
                }
            },
            "122": {
                "start": {
                    "line": 709,
                    "column": 16
                },
                "end": {
                    "line": 709,
                    "column": 51
                }
            },
            "123": {
                "start": {
                    "line": 712,
                    "column": 12
                },
                "end": {
                    "line": 712,
                    "column": 24
                }
            },
            "124": {
                "start": {
                    "line": 733,
                    "column": 12
                },
                "end": {
                    "line": 773,
                    "column": 13
                }
            },
            "125": {
                "start": {
                    "line": 734,
                    "column": 16
                },
                "end": {
                    "line": 741,
                    "column": 38
                }
            },
            "126": {
                "start": {
                    "line": 743,
                    "column": 16
                },
                "end": {
                    "line": 752,
                    "column": 17
                }
            },
            "127": {
                "start": {
                    "line": 744,
                    "column": 20
                },
                "end": {
                    "line": 744,
                    "column": 48
                }
            },
            "128": {
                "start": {
                    "line": 745,
                    "column": 20
                },
                "end": {
                    "line": 751,
                    "column": 21
                }
            },
            "129": {
                "start": {
                    "line": 746,
                    "column": 24
                },
                "end": {
                    "line": 750,
                    "column": 25
                }
            },
            "130": {
                "start": {
                    "line": 747,
                    "column": 28
                },
                "end": {
                    "line": 747,
                    "column": 73
                }
            },
            "131": {
                "start": {
                    "line": 749,
                    "column": 28
                },
                "end": {
                    "line": 749,
                    "column": 45
                }
            },
            "132": {
                "start": {
                    "line": 754,
                    "column": 16
                },
                "end": {
                    "line": 772,
                    "column": 17
                }
            },
            "133": {
                "start": {
                    "line": 755,
                    "column": 20
                },
                "end": {
                    "line": 758,
                    "column": 21
                }
            },
            "134": {
                "start": {
                    "line": 757,
                    "column": 24
                },
                "end": {
                    "line": 757,
                    "column": 51
                }
            },
            "135": {
                "start": {
                    "line": 760,
                    "column": 20
                },
                "end": {
                    "line": 764,
                    "column": 88
                }
            },
            "136": {
                "start": {
                    "line": 766,
                    "column": 20
                },
                "end": {
                    "line": 771,
                    "column": 21
                }
            },
            "137": {
                "start": {
                    "line": 767,
                    "column": 24
                },
                "end": {
                    "line": 767,
                    "column": 61
                }
            },
            "138": {
                "start": {
                    "line": 768,
                    "column": 24
                },
                "end": {
                    "line": 770,
                    "column": 25
                }
            },
            "139": {
                "start": {
                    "line": 769,
                    "column": 28
                },
                "end": {
                    "line": 769,
                    "column": 63
                }
            },
            "140": {
                "start": {
                    "line": 777,
                    "column": 4
                },
                "end": {
                    "line": 777,
                    "column": 28
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 272,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 272,
                            "column": 12
                        },
                        "end": {
                            "line": 272,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 272,
                            "column": 12
                        },
                        "end": {
                            "line": 272,
                            "column": 12
                        }
                    }
                ]
            },
            "2": {
                "line": 272,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 272,
                            "column": 16
                        },
                        "end": {
                            "line": 272,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 272,
                            "column": 33
                        },
                        "end": {
                            "line": 272,
                            "column": 62
                        }
                    }
                ]
            },
            "3": {
                "line": 276,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 276,
                            "column": 12
                        },
                        "end": {
                            "line": 276,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 276,
                            "column": 12
                        },
                        "end": {
                            "line": 276,
                            "column": 12
                        }
                    }
                ]
            },
            "4": {
                "line": 276,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 276,
                            "column": 16
                        },
                        "end": {
                            "line": 276,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 276,
                            "column": 33
                        },
                        "end": {
                            "line": 276,
                            "column": 60
                        }
                    }
                ]
            },
            "5": {
                "line": 280,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 280,
                            "column": 12
                        },
                        "end": {
                            "line": 280,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 280,
                            "column": 12
                        },
                        "end": {
                            "line": 280,
                            "column": 12
                        }
                    }
                ]
            },
            "6": {
                "line": 280,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 280,
                            "column": 16
                        },
                        "end": {
                            "line": 280,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 280,
                            "column": 33
                        },
                        "end": {
                            "line": 280,
                            "column": 62
                        }
                    }
                ]
            },
            "7": {
                "line": 308,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 308,
                            "column": 12
                        },
                        "end": {
                            "line": 308,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 308,
                            "column": 12
                        },
                        "end": {
                            "line": 308,
                            "column": 12
                        }
                    }
                ]
            },
            "8": {
                "line": 309,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 309,
                            "column": 12
                        },
                        "end": {
                            "line": 309,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 309,
                            "column": 12
                        },
                        "end": {
                            "line": 309,
                            "column": 12
                        }
                    }
                ]
            },
            "9": {
                "line": 310,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 310,
                            "column": 12
                        },
                        "end": {
                            "line": 310,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 310,
                            "column": 12
                        },
                        "end": {
                            "line": 310,
                            "column": 12
                        }
                    }
                ]
            },
            "10": {
                "line": 342,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 342,
                            "column": 12
                        },
                        "end": {
                            "line": 342,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 342,
                            "column": 12
                        },
                        "end": {
                            "line": 342,
                            "column": 12
                        }
                    }
                ]
            },
            "11": {
                "line": 356,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 356,
                            "column": 12
                        },
                        "end": {
                            "line": 356,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 356,
                            "column": 12
                        },
                        "end": {
                            "line": 356,
                            "column": 12
                        }
                    }
                ]
            },
            "12": {
                "line": 370,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 370,
                            "column": 12
                        },
                        "end": {
                            "line": 370,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 370,
                            "column": 12
                        },
                        "end": {
                            "line": 370,
                            "column": 12
                        }
                    }
                ]
            },
            "13": {
                "line": 398,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 398,
                            "column": 19
                        },
                        "end": {
                            "line": 398,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 398,
                            "column": 27
                        },
                        "end": {
                            "line": 398,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 398,
                            "column": 49
                        },
                        "end": {
                            "line": 398,
                            "column": 69
                        }
                    },
                    {
                        "start": {
                            "line": 398,
                            "column": 73
                        },
                        "end": {
                            "line": 398,
                            "column": 93
                        }
                    }
                ]
            },
            "14": {
                "line": 414,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 414,
                            "column": 12
                        },
                        "end": {
                            "line": 414,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 414,
                            "column": 12
                        },
                        "end": {
                            "line": 414,
                            "column": 12
                        }
                    }
                ]
            },
            "15": {
                "line": 414,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 414,
                            "column": 16
                        },
                        "end": {
                            "line": 414,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 414,
                            "column": 28
                        },
                        "end": {
                            "line": 414,
                            "column": 49
                        }
                    }
                ]
            },
            "16": {
                "line": 418,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 418,
                            "column": 12
                        },
                        "end": {
                            "line": 418,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 418,
                            "column": 12
                        },
                        "end": {
                            "line": 418,
                            "column": 12
                        }
                    }
                ]
            },
            "17": {
                "line": 434,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 434,
                            "column": 12
                        },
                        "end": {
                            "line": 434,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 434,
                            "column": 12
                        },
                        "end": {
                            "line": 434,
                            "column": 12
                        }
                    }
                ]
            },
            "18": {
                "line": 436,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 436,
                            "column": 16
                        },
                        "end": {
                            "line": 436,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 436,
                            "column": 16
                        },
                        "end": {
                            "line": 436,
                            "column": 16
                        }
                    }
                ]
            },
            "19": {
                "line": 436,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 436,
                            "column": 20
                        },
                        "end": {
                            "line": 436,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 436,
                            "column": 39
                        },
                        "end": {
                            "line": 436,
                            "column": 53
                        }
                    }
                ]
            },
            "20": {
                "line": 457,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 457,
                            "column": 12
                        },
                        "end": {
                            "line": 457,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 457,
                            "column": 12
                        },
                        "end": {
                            "line": 457,
                            "column": 12
                        }
                    }
                ]
            },
            "21": {
                "line": 482,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 482,
                            "column": 12
                        },
                        "end": {
                            "line": 482,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 482,
                            "column": 12
                        },
                        "end": {
                            "line": 482,
                            "column": 12
                        }
                    }
                ]
            },
            "22": {
                "line": 501,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 501,
                            "column": 12
                        },
                        "end": {
                            "line": 501,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 501,
                            "column": 12
                        },
                        "end": {
                            "line": 501,
                            "column": 12
                        }
                    }
                ]
            },
            "23": {
                "line": 519,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 519,
                            "column": 12
                        },
                        "end": {
                            "line": 519,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 519,
                            "column": 12
                        },
                        "end": {
                            "line": 519,
                            "column": 12
                        }
                    }
                ]
            },
            "24": {
                "line": 519,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 519,
                            "column": 16
                        },
                        "end": {
                            "line": 519,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 519,
                            "column": 42
                        },
                        "end": {
                            "line": 519,
                            "column": 45
                        }
                    }
                ]
            },
            "25": {
                "line": 522,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 522,
                            "column": 16
                        },
                        "end": {
                            "line": 522,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 522,
                            "column": 16
                        },
                        "end": {
                            "line": 522,
                            "column": 16
                        }
                    }
                ]
            },
            "26": {
                "line": 526,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 526,
                            "column": 20
                        },
                        "end": {
                            "line": 526,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 526,
                            "column": 20
                        },
                        "end": {
                            "line": 526,
                            "column": 20
                        }
                    }
                ]
            },
            "27": {
                "line": 564,
                "type": "switch",
                "locations": [
                    {
                        "start": {
                            "line": 565,
                            "column": 16
                        },
                        "end": {
                            "line": 567,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 568,
                            "column": 16
                        },
                        "end": {
                            "line": 570,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 571,
                            "column": 16
                        },
                        "end": {
                            "line": 572,
                            "column": 43
                        }
                    }
                ]
            },
            "28": {
                "line": 588,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 588,
                            "column": 34
                        },
                        "end": {
                            "line": 588,
                            "column": 57
                        }
                    },
                    {
                        "start": {
                            "line": 588,
                            "column": 60
                        },
                        "end": {
                            "line": 588,
                            "column": 61
                        }
                    }
                ]
            },
            "29": {
                "line": 591,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 591,
                            "column": 12
                        },
                        "end": {
                            "line": 591,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 591,
                            "column": 12
                        },
                        "end": {
                            "line": 591,
                            "column": 12
                        }
                    }
                ]
            },
            "30": {
                "line": 591,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 591,
                            "column": 16
                        },
                        "end": {
                            "line": 591,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 591,
                            "column": 24
                        },
                        "end": {
                            "line": 591,
                            "column": 46
                        }
                    }
                ]
            },
            "31": {
                "line": 593,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 593,
                            "column": 16
                        },
                        "end": {
                            "line": 593,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 593,
                            "column": 16
                        },
                        "end": {
                            "line": 593,
                            "column": 16
                        }
                    }
                ]
            },
            "32": {
                "line": 627,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 627,
                            "column": 12
                        },
                        "end": {
                            "line": 627,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 627,
                            "column": 12
                        },
                        "end": {
                            "line": 627,
                            "column": 12
                        }
                    }
                ]
            },
            "33": {
                "line": 628,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 628,
                            "column": 16
                        },
                        "end": {
                            "line": 628,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 628,
                            "column": 16
                        },
                        "end": {
                            "line": 628,
                            "column": 16
                        }
                    }
                ]
            },
            "34": {
                "line": 652,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 652,
                            "column": 12
                        },
                        "end": {
                            "line": 652,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 652,
                            "column": 12
                        },
                        "end": {
                            "line": 652,
                            "column": 12
                        }
                    }
                ]
            },
            "35": {
                "line": 653,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 653,
                            "column": 41
                        },
                        "end": {
                            "line": 653,
                            "column": 65
                        }
                    },
                    {
                        "start": {
                            "line": 653,
                            "column": 70
                        },
                        "end": {
                            "line": 653,
                            "column": 94
                        }
                    }
                ]
            },
            "36": {
                "line": 654,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 654,
                            "column": 39
                        },
                        "end": {
                            "line": 654,
                            "column": 61
                        }
                    },
                    {
                        "start": {
                            "line": 654,
                            "column": 66
                        },
                        "end": {
                            "line": 654,
                            "column": 88
                        }
                    }
                ]
            },
            "37": {
                "line": 655,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 655,
                            "column": 41
                        },
                        "end": {
                            "line": 655,
                            "column": 65
                        }
                    },
                    {
                        "start": {
                            "line": 655,
                            "column": 70
                        },
                        "end": {
                            "line": 655,
                            "column": 94
                        }
                    }
                ]
            },
            "38": {
                "line": 668,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 668,
                            "column": 51
                        },
                        "end": {
                            "line": 668,
                            "column": 95
                        }
                    },
                    {
                        "start": {
                            "line": 668,
                            "column": 98
                        },
                        "end": {
                            "line": 668,
                            "column": 102
                        }
                    }
                ]
            },
            "39": {
                "line": 706,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 706,
                            "column": 23
                        },
                        "end": {
                            "line": 706,
                            "column": 50
                        }
                    },
                    {
                        "start": {
                            "line": 706,
                            "column": 54
                        },
                        "end": {
                            "line": 706,
                            "column": 58
                        }
                    }
                ]
            },
            "40": {
                "line": 708,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 708,
                            "column": 12
                        },
                        "end": {
                            "line": 708,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 708,
                            "column": 12
                        },
                        "end": {
                            "line": 708,
                            "column": 12
                        }
                    }
                ]
            },
            "41": {
                "line": 708,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 708,
                            "column": 16
                        },
                        "end": {
                            "line": 708,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 708,
                            "column": 25
                        },
                        "end": {
                            "line": 708,
                            "column": 36
                        }
                    }
                ]
            },
            "42": {
                "line": 733,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 733,
                            "column": 12
                        },
                        "end": {
                            "line": 733,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 733,
                            "column": 12
                        },
                        "end": {
                            "line": 733,
                            "column": 12
                        }
                    }
                ]
            },
            "43": {
                "line": 745,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 745,
                            "column": 20
                        },
                        "end": {
                            "line": 745,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 745,
                            "column": 20
                        },
                        "end": {
                            "line": 745,
                            "column": 20
                        }
                    }
                ]
            },
            "44": {
                "line": 746,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 746,
                            "column": 24
                        },
                        "end": {
                            "line": 746,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 746,
                            "column": 24
                        },
                        "end": {
                            "line": 746,
                            "column": 24
                        }
                    }
                ]
            },
            "45": {
                "line": 754,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 754,
                            "column": 16
                        },
                        "end": {
                            "line": 754,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 754,
                            "column": 16
                        },
                        "end": {
                            "line": 754,
                            "column": 16
                        }
                    }
                ]
            },
            "46": {
                "line": 755,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 755,
                            "column": 20
                        },
                        "end": {
                            "line": 755,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 755,
                            "column": 20
                        },
                        "end": {
                            "line": 755,
                            "column": 20
                        }
                    }
                ]
            },
            "47": {
                "line": 755,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 755,
                            "column": 24
                        },
                        "end": {
                            "line": 755,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 755,
                            "column": 33
                        },
                        "end": {
                            "line": 755,
                            "column": 41
                        }
                    }
                ]
            },
            "48": {
                "line": 766,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 766,
                            "column": 20
                        },
                        "end": {
                            "line": 766,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 766,
                            "column": 20
                        },
                        "end": {
                            "line": 766,
                            "column": 20
                        }
                    }
                ]
            },
            "49": {
                "line": 768,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 768,
                            "column": 24
                        },
                        "end": {
                            "line": 768,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 768,
                            "column": 24
                        },
                        "end": {
                            "line": 768,
                            "column": 24
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('widget-stdmod', function (Y, NAME) {",
            "",
            "/**",
            " * Provides standard module support for Widgets through an extension.",
            " *",
            " * @module widget-stdmod",
            " */",
            "    var L = Y.Lang,",
            "        Node = Y.Node,",
            "        UA = Y.UA,",
            "        Widget = Y.Widget,",
            "",
            "        EMPTY = \"\",",
            "        HD = \"hd\",",
            "        BD = \"bd\",",
            "        FT = \"ft\",",
            "        HEADER = \"header\",",
            "        BODY = \"body\",",
            "        FOOTER = \"footer\",",
            "        FILL_HEIGHT = \"fillHeight\",",
            "        STDMOD = \"stdmod\",",
            "",
            "        NODE_SUFFIX = \"Node\",",
            "        CONTENT_SUFFIX = \"Content\",",
            "",
            "        FIRST_CHILD = \"firstChild\",",
            "        CHILD_NODES = \"childNodes\",",
            "        OWNER_DOCUMENT = \"ownerDocument\",",
            "",
            "        CONTENT_BOX = \"contentBox\",",
            "",
            "        HEIGHT = \"height\",",
            "        OFFSET_HEIGHT = \"offsetHeight\",",
            "        AUTO = \"auto\",",
            "",
            "        HeaderChange = \"headerContentChange\",",
            "        BodyChange = \"bodyContentChange\",",
            "        FooterChange = \"footerContentChange\",",
            "        FillHeightChange = \"fillHeightChange\",",
            "        HeightChange = \"heightChange\",",
            "        ContentUpdate = \"contentUpdate\",",
            "",
            "        RENDERUI = \"renderUI\",",
            "        BINDUI = \"bindUI\",",
            "        SYNCUI = \"syncUI\",",
            "",
            "        APPLY_PARSED_CONFIG = \"_applyParsedConfig\",",
            "",
            "        UI = Y.Widget.UI_SRC;",
            "",
            "    /**",
            "     * Widget extension, which can be used to add Standard Module support to the",
            "     * base Widget class, through the <a href=\"Base.html#method_build\">Base.build</a>",
            "     * method.",
            "     * <p>",
            "     * The extension adds header, body and footer sections to the Widget's content box and",
            "     * provides the corresponding methods and attributes to modify the contents of these sections.",
            "     * </p>",
            "     * @class WidgetStdMod",
            "     * @param {Object} The user configuration object",
            "     */",
            "    function StdMod(config) {}",
            "",
            "    /**",
            "     * Constant used to refer the the standard module header, in methods which expect a section specifier",
            "     *",
            "     * @property HEADER",
            "     * @static",
            "     * @type String",
            "     */",
            "    StdMod.HEADER = HEADER;",
            "",
            "    /**",
            "     * Constant used to refer the the standard module body, in methods which expect a section specifier",
            "     *",
            "     * @property BODY",
            "     * @static",
            "     * @type String",
            "     */",
            "    StdMod.BODY = BODY;",
            "",
            "    /**",
            "     * Constant used to refer the the standard module footer, in methods which expect a section specifier",
            "     *",
            "     * @property FOOTER",
            "     * @static",
            "     * @type String",
            "     */",
            "    StdMod.FOOTER = FOOTER;",
            "",
            "    /**",
            "     * Constant used to specify insertion position, when adding content to sections of the standard module in",
            "     * methods which expect a \"where\" argument.",
            "     * <p>",
            "     * Inserts new content <em>before</em> the sections existing content.",
            "     * </p>",
            "     * @property AFTER",
            "     * @static",
            "     * @type String",
            "     */",
            "    StdMod.AFTER = \"after\";",
            "",
            "    /**",
            "     * Constant used to specify insertion position, when adding content to sections of the standard module in",
            "     * methods which expect a \"where\" argument.",
            "     * <p>",
            "     * Inserts new content <em>before</em> the sections existing content.",
            "     * </p>",
            "     * @property BEFORE",
            "     * @static",
            "     * @type String",
            "     */",
            "    StdMod.BEFORE = \"before\";",
            "    /**",
            "     * Constant used to specify insertion position, when adding content to sections of the standard module in",
            "     * methods which expect a \"where\" argument.",
            "     * <p>",
            "     * <em>Replaces</em> the sections existing content, with new content.",
            "     * </p>",
            "     * @property REPLACE",
            "     * @static",
            "     * @type String",
            "     */",
            "    StdMod.REPLACE = \"replace\";",
            "",
            "    var STD_HEADER = StdMod.HEADER,",
            "        STD_BODY = StdMod.BODY,",
            "        STD_FOOTER = StdMod.FOOTER,",
            "",
            "        HEADER_CONTENT = STD_HEADER + CONTENT_SUFFIX,",
            "        FOOTER_CONTENT = STD_FOOTER + CONTENT_SUFFIX,",
            "        BODY_CONTENT = STD_BODY + CONTENT_SUFFIX;",
            "",
            "    /**",
            "     * Static property used to define the default attribute",
            "     * configuration introduced by WidgetStdMod.",
            "     *",
            "     * @property ATTRS",
            "     * @type Object",
            "     * @static",
            "     */",
            "    StdMod.ATTRS = {",
            "",
            "        /**",
            "         * @attribute headerContent",
            "         * @type HTML",
            "         * @default undefined",
            "         * @description The content to be added to the header section. This will replace any existing content",
            "         * in the header. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method.",
            "         */",
            "        headerContent: {",
            "            value:null",
            "        },",
            "",
            "        /**",
            "         * @attribute footerContent",
            "         * @type HTML",
            "         * @default undefined",
            "         * @description The content to be added to the footer section. This will replace any existing content",
            "         * in the footer. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method.",
            "         */",
            "        footerContent: {",
            "            value:null",
            "        },",
            "",
            "        /**",
            "         * @attribute bodyContent",
            "         * @type HTML",
            "         * @default undefined",
            "         * @description The content to be added to the body section. This will replace any existing content",
            "         * in the body. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method.",
            "         */",
            "        bodyContent: {",
            "            value:null",
            "        },",
            "",
            "        /**",
            "         * @attribute fillHeight",
            "         * @type {String}",
            "         * @default WidgetStdMod.BODY",
            "         * @description The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a",
            "         * height is set on the Widget. If a height is not set on the widget, then all sections are sized based on",
            "         * their content.",
            "         */",
            "        fillHeight: {",
            "            value: StdMod.BODY,",
            "            validator: function(val) {",
            "                 return this._validateFillHeight(val);",
            "            }",
            "        }",
            "    };",
            "",
            "    /**",
            "     * The HTML parsing rules for the WidgetStdMod class.",
            "     *",
            "     * @property HTML_PARSER",
            "     * @static",
            "     * @type Object",
            "     */",
            "    StdMod.HTML_PARSER = {",
            "        headerContent: function(contentBox) {",
            "            return this._parseStdModHTML(STD_HEADER);",
            "        },",
            "",
            "        bodyContent: function(contentBox) {",
            "            return this._parseStdModHTML(STD_BODY);",
            "        },",
            "",
            "        footerContent : function(contentBox) {",
            "            return this._parseStdModHTML(STD_FOOTER);",
            "        }",
            "    };",
            "",
            "    /**",
            "     * Static hash of default class names used for the header,",
            "     * body and footer sections of the standard module, keyed by",
            "     * the section identifier (WidgetStdMod.STD_HEADER, WidgetStdMod.STD_BODY, WidgetStdMod.STD_FOOTER)",
            "     *",
            "     * @property SECTION_CLASS_NAMES",
            "     * @static",
            "     * @type Object",
            "     */",
            "    StdMod.SECTION_CLASS_NAMES = {",
            "        header: Widget.getClassName(HD),",
            "        body: Widget.getClassName(BD),",
            "        footer: Widget.getClassName(FT)",
            "    };",
            "",
            "    /**",
            "     * The template HTML strings for each of the standard module sections. Section entries are keyed by the section constants,",
            "     * WidgetStdMod.HEADER, WidgetStdMod.BODY, WidgetStdMod.FOOTER, and contain the HTML to be added for each section.",
            "     * e.g.",
            "     * <pre>",
            "     *    {",
            "     *       header : '&lt;div class=\"yui-widget-hd\"&gt;&lt;/div&gt;',",
            "     *       body : '&lt;div class=\"yui-widget-bd\"&gt;&lt;/div&gt;',",
            "     *       footer : '&lt;div class=\"yui-widget-ft\"&gt;&lt;/div&gt;'",
            "     *    }",
            "     * </pre>",
            "     * @property TEMPLATES",
            "     * @type Object",
            "     * @static",
            "     */",
            "    StdMod.TEMPLATES = {",
            "        header : '<div class=\"' + StdMod.SECTION_CLASS_NAMES[STD_HEADER] + '\"></div>',",
            "        body : '<div class=\"' + StdMod.SECTION_CLASS_NAMES[STD_BODY] + '\"></div>',",
            "        footer : '<div class=\"' + StdMod.SECTION_CLASS_NAMES[STD_FOOTER] + '\"></div>'",
            "    };",
            "",
            "    StdMod.prototype = {",
            "",
            "        initializer : function() {",
            "            this._stdModNode = this.get(CONTENT_BOX);",
            "",
            "            Y.before(this._renderUIStdMod, this, RENDERUI);",
            "            Y.before(this._bindUIStdMod, this, BINDUI);",
            "            Y.before(this._syncUIStdMod, this, SYNCUI);",
            "        },",
            "",
            "        /**",
            "         * Synchronizes the UI to match the Widgets standard module state.",
            "         * <p>",
            "         * This method is invoked after syncUI is invoked for the Widget class",
            "         * using YUI's aop infrastructure.",
            "         * </p>",
            "         * @method _syncUIStdMod",
            "         * @protected",
            "         */",
            "        _syncUIStdMod : function() {",
            "            var stdModParsed = this._stdModParsed;",
            "",
            "            if (!stdModParsed || !stdModParsed[HEADER_CONTENT]) {",
            "                this._uiSetStdMod(STD_HEADER, this.get(HEADER_CONTENT));",
            "            }",
            "",
            "            if (!stdModParsed || !stdModParsed[BODY_CONTENT]) {",
            "                this._uiSetStdMod(STD_BODY, this.get(BODY_CONTENT));",
            "            }",
            "",
            "            if (!stdModParsed || !stdModParsed[FOOTER_CONTENT]) {",
            "                this._uiSetStdMod(STD_FOOTER, this.get(FOOTER_CONTENT));",
            "            }",
            "",
            "            this._uiSetFillHeight(this.get(FILL_HEIGHT));",
            "        },",
            "",
            "        /**",
            "         * Creates/Initializes the DOM for standard module support.",
            "         * <p>",
            "         * This method is invoked after renderUI is invoked for the Widget class",
            "         * using YUI's aop infrastructure.",
            "         * </p>",
            "         * @method _renderUIStdMod",
            "         * @protected",
            "         */",
            "        _renderUIStdMod : function() {",
            "            this._stdModNode.addClass(Widget.getClassName(STDMOD));",
            "            this._renderStdModSections();",
            "",
            "            //This normally goes in bindUI but in order to allow setStdModContent() to work before renderUI",
            "            //stage, these listeners should be set up at the earliest possible time.",
            "            this.after(HeaderChange, this._afterHeaderChange);",
            "            this.after(BodyChange, this._afterBodyChange);",
            "            this.after(FooterChange, this._afterFooterChange);",
            "        },",
            "",
            "        _renderStdModSections : function() {",
            "            if (L.isValue(this.get(HEADER_CONTENT))) { this._renderStdMod(STD_HEADER); }",
            "            if (L.isValue(this.get(BODY_CONTENT))) { this._renderStdMod(STD_BODY); }",
            "            if (L.isValue(this.get(FOOTER_CONTENT))) { this._renderStdMod(STD_FOOTER); }",
            "        },",
            "",
            "        /**",
            "         * Binds event listeners responsible for updating the UI state in response to",
            "         * Widget standard module related state changes.",
            "         * <p>",
            "         * This method is invoked after bindUI is invoked for the Widget class",
            "         * using YUI's aop infrastructure.",
            "         * </p>",
            "         * @method _bindUIStdMod",
            "         * @protected",
            "         */",
            "        _bindUIStdMod : function() {",
            "            // this.after(HeaderChange, this._afterHeaderChange);",
            "            // this.after(BodyChange, this._afterBodyChange);",
            "            // this.after(FooterChange, this._afterFooterChange);",
            "",
            "            this.after(FillHeightChange, this._afterFillHeightChange);",
            "            this.after(HeightChange, this._fillHeight);",
            "            this.after(ContentUpdate, this._fillHeight);",
            "        },",
            "",
            "        /**",
            "         * Default attribute change listener for the headerContent attribute, responsible",
            "         * for updating the UI, in response to attribute changes.",
            "         *",
            "         * @method _afterHeaderChange",
            "         * @protected",
            "         * @param {EventFacade} e The event facade for the attribute change",
            "         */",
            "        _afterHeaderChange : function(e) {",
            "            if (e.src !== UI) {",
            "                this._uiSetStdMod(STD_HEADER, e.newVal, e.stdModPosition);",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Default attribute change listener for the bodyContent attribute, responsible",
            "         * for updating the UI, in response to attribute changes.",
            "         *",
            "         * @method _afterBodyChange",
            "         * @protected",
            "         * @param {EventFacade} e The event facade for the attribute change",
            "         */",
            "        _afterBodyChange : function(e) {",
            "            if (e.src !== UI) {",
            "                this._uiSetStdMod(STD_BODY, e.newVal, e.stdModPosition);",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Default attribute change listener for the footerContent attribute, responsible",
            "         * for updating the UI, in response to attribute changes.",
            "         *",
            "         * @method _afterFooterChange",
            "         * @protected",
            "         * @param {EventFacade} e The event facade for the attribute change",
            "         */",
            "        _afterFooterChange : function(e) {",
            "            if (e.src !== UI) {",
            "                this._uiSetStdMod(STD_FOOTER, e.newVal, e.stdModPosition);",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Default attribute change listener for the fillHeight attribute, responsible",
            "         * for updating the UI, in response to attribute changes.",
            "         *",
            "         * @method _afterFillHeightChange",
            "         * @protected",
            "         * @param {EventFacade} e The event facade for the attribute change",
            "         */",
            "        _afterFillHeightChange: function (e) {",
            "            this._uiSetFillHeight(e.newVal);",
            "        },",
            "",
            "        /**",
            "         * Default validator for the fillHeight attribute. Verifies that the",
            "         * value set is a valid section specifier - one of WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER,",
            "         * or a falsey value if fillHeight is to be disabled.",
            "         *",
            "         * @method _validateFillHeight",
            "         * @protected",
            "         * @param {String} val The section which should be setup to fill height, or false/null to disable fillHeight",
            "         * @return true if valid, false if not",
            "         */",
            "        _validateFillHeight : function(val) {",
            "            return !val || val == StdMod.BODY || val == StdMod.HEADER || val == StdMod.FOOTER;",
            "        },",
            "",
            "        /**",
            "         * Updates the rendered UI, to resize the provided section so that the standard module fills out",
            "         * the specified widget height. Note: This method does not check whether or not a height is set",
            "         * on the Widget.",
            "         *",
            "         * @method _uiSetFillHeight",
            "         * @protected",
            "         * @param {String} fillSection A valid section specifier - one of WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER",
            "         */",
            "        _uiSetFillHeight : function(fillSection) {",
            "            var fillNode = this.getStdModNode(fillSection);",
            "            var currNode = this._currFillNode;",
            "",
            "            if (currNode && fillNode !== currNode){",
            "                currNode.setStyle(HEIGHT, EMPTY);",
            "            }",
            "",
            "            if (fillNode) {",
            "                this._currFillNode = fillNode;",
            "            }",
            "",
            "            this._fillHeight();",
            "        },",
            "",
            "        /**",
            "         * Updates the rendered UI, to resize the current section specified by the fillHeight attribute, so",
            "         * that the standard module fills out the Widget height. If a height has not been set on Widget,",
            "         * the section is not resized (height is set to \"auto\").",
            "         *",
            "         * @method _fillHeight",
            "         * @private",
            "         */",
            "        _fillHeight : function() {",
            "            if (this.get(FILL_HEIGHT)) {",
            "                var height = this.get(HEIGHT);",
            "                if (height != EMPTY && height != AUTO) {",
            "                    this.fillHeight(this.getStdModNode(this.get(FILL_HEIGHT)));",
            "                }",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Updates the rendered UI, adding the provided content (either an HTML string, or node reference),",
            "         * to the specified section. The content is either added before, after or replaces existing content",
            "         * in the section, based on the value of the <code>where</code> argument.",
            "         *",
            "         * @method _uiSetStdMod",
            "         * @protected",
            "         *",
            "         * @param {String} section The section to be updated. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         * @param {String | Node} content The new content (either as an HTML string, or Node reference) to add to the section",
            "         * @param {String} where Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.",
            "         * If not provided, the content will replace existing content in the section.",
            "         */",
            "        _uiSetStdMod : function(section, content, where) {",
            "            // Using isValue, so that \"\" is valid content",
            "            if (L.isValue(content)) {",
            "                var node = this.getStdModNode(section, true);",
            "",
            "                this._addStdModContent(node, content, where);",
            "",
            "                this.set(section + CONTENT_SUFFIX, this._getStdModContent(section), {src:UI});",
            "            } else {",
            "                this._eraseStdMod(section);",
            "            }",
            "            this.fire(ContentUpdate);",
            "        },",
            "",
            "        /**",
            "         * Creates the DOM node for the given section, and inserts it into the correct location in the contentBox.",
            "         *",
            "         * @method _renderStdMod",
            "         * @protected",
            "         * @param {String} section The section to create/render. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         * @return {Node} A reference to the added section node",
            "         */",
            "        _renderStdMod : function(section) {",
            "",
            "            var contentBox = this.get(CONTENT_BOX),",
            "                sectionNode = this._findStdModSection(section);",
            "",
            "            if (!sectionNode) {",
            "                sectionNode = this._getStdModTemplate(section);",
            "            }",
            "",
            "            this._insertStdModSection(contentBox, section, sectionNode);",
            "",
            "            this[section + NODE_SUFFIX] = sectionNode;",
            "            return this[section + NODE_SUFFIX];",
            "        },",
            "",
            "        /**",
            "         * Removes the DOM node for the given section.",
            "         *",
            "         * @method _eraseStdMod",
            "         * @protected",
            "         * @param {String} section The section to remove. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         */",
            "        _eraseStdMod : function(section) {",
            "            var sectionNode = this.getStdModNode(section);",
            "            if (sectionNode) {",
            "                sectionNode.remove(true);",
            "                delete this[section + NODE_SUFFIX];",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Helper method to insert the Node for the given section into the correct location in the contentBox.",
            "         *",
            "         * @method _insertStdModSection",
            "         * @private",
            "         * @param {Node} contentBox A reference to the Widgets content box.",
            "         * @param {String} section The section to create/render. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         * @param {Node} sectionNode The Node for the section.",
            "         */",
            "        _insertStdModSection : function(contentBox, section, sectionNode) {",
            "            var fc = contentBox.get(FIRST_CHILD);",
            "",
            "            if (section === STD_FOOTER || !fc) {",
            "                contentBox.appendChild(sectionNode);",
            "            } else {",
            "                if (section === STD_HEADER) {",
            "                    contentBox.insertBefore(sectionNode, fc);",
            "                } else {",
            "                    var footer = this[STD_FOOTER + NODE_SUFFIX];",
            "                    if (footer) {",
            "                        contentBox.insertBefore(sectionNode, footer);",
            "                    } else {",
            "                        contentBox.appendChild(sectionNode);",
            "                    }",
            "                }",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Gets a new Node reference for the given standard module section, by cloning",
            "         * the stored template node.",
            "         *",
            "         * @method _getStdModTemplate",
            "         * @protected",
            "         * @param {String} section The section to create a new node for. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         * @return {Node} The new Node instance for the section",
            "         */",
            "        _getStdModTemplate : function(section) {",
            "            return Node.create(StdMod.TEMPLATES[section], this._stdModNode.get(OWNER_DOCUMENT));",
            "        },",
            "",
            "        /**",
            "         * Helper method to add content to a StdMod section node.",
            "         * The content is added either before, after or replaces the existing node content",
            "         * based on the value of the <code>where</code> argument.",
            "         *",
            "         * @method _addStdModContent",
            "         * @private",
            "         *",
            "         * @param {Node} node The section Node to be updated.",
            "         * @param {Node|NodeList|String} children The new content Node, NodeList or String to be added to section Node provided.",
            "         * @param {String} where Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.",
            "         * If not provided, the content will replace existing content in the Node.",
            "         */",
            "        _addStdModContent : function(node, children, where) {",
            "",
            "            // StdMod where to Node where",
            "            switch (where) {",
            "                case StdMod.BEFORE:  // 0 is before fistChild",
            "                    where = 0;",
            "                    break;",
            "                case StdMod.AFTER:   // undefined is appendChild",
            "                    where = undefined;",
            "                    break;",
            "                default:            // replace is replace, not specified is replace",
            "                    where = StdMod.REPLACE;",
            "            }",
            "",
            "            node.insert(children, where);",
            "        },",
            "",
            "        /**",
            "         * Helper method to obtain the precise height of the node provided, including padding and border.",
            "         * The height could be a sub-pixel value for certain browsers, such as Firefox 3.",
            "         *",
            "         * @method _getPreciseHeight",
            "         * @private",
            "         * @param {Node} node The node for which the precise height is required.",
            "         * @return {Number} The height of the Node including borders and padding, possibly a float.",
            "         */",
            "        _getPreciseHeight : function(node) {",
            "            var height = (node) ? node.get(OFFSET_HEIGHT) : 0,",
            "                getBCR = \"getBoundingClientRect\";",
            "",
            "            if (node && node.hasMethod(getBCR)) {",
            "                var preciseRegion = node.invoke(getBCR);",
            "                if (preciseRegion) {",
            "                    height = preciseRegion.bottom - preciseRegion.top;",
            "                }",
            "            }",
            "",
            "            return height;",
            "        },",
            "",
            "        /**",
            "         * Helper method to to find the rendered node for the given section,",
            "         * if it exists.",
            "         *",
            "         * @method _findStdModSection",
            "         * @private",
            "         * @param {String} section The section for which the render Node is to be found. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         * @return {Node} The rendered node for the given section, or null if not found.",
            "         */",
            "        _findStdModSection: function(section) {",
            "            return this.get(CONTENT_BOX).one(\"> .\" + StdMod.SECTION_CLASS_NAMES[section]);",
            "        },",
            "",
            "        /**",
            "         * Utility method, used by WidgetStdMods HTML_PARSER implementation",
            "         * to extract data for each section from markup.",
            "         *",
            "         * @method _parseStdModHTML",
            "         * @private",
            "         * @param {String} section",
            "         * @return {String} Inner HTML string with the contents of the section",
            "         */",
            "        _parseStdModHTML : function(section) {",
            "",
            "            var node = this._findStdModSection(section);",
            "",
            "            if (node) {",
            "                if (!this._stdModParsed) {",
            "                    this._stdModParsed = {};",
            "                    Y.before(this._applyStdModParsedConfig, this, APPLY_PARSED_CONFIG);",
            "                }",
            "                this._stdModParsed[section + CONTENT_SUFFIX] = 1;",
            "",
            "                return node.get(\"innerHTML\");",
            "            }",
            "",
            "            return null;",
            "        },",
            "",
            "        /**",
            "         * This method is injected before the _applyParsedConfig step in",
            "         * the application of HTML_PARSER, and sets up the state to",
            "         * identify whether or not we should remove the current DOM content",
            "         * or not, based on whether or not the current content attribute value",
            "         * was extracted from the DOM, or provided by the user configuration",
            "         *",
            "         * @method _applyStdModParsedConfig",
            "         * @private",
            "         */",
            "        _applyStdModParsedConfig : function(node, cfg, parsedCfg) {",
            "            var parsed = this._stdModParsed;",
            "            if (parsed) {",
            "                parsed[HEADER_CONTENT] = !(HEADER_CONTENT in cfg) && (HEADER_CONTENT in parsed);",
            "                parsed[BODY_CONTENT] = !(BODY_CONTENT in cfg) && (BODY_CONTENT in parsed);",
            "                parsed[FOOTER_CONTENT] = !(FOOTER_CONTENT in cfg) && (FOOTER_CONTENT in parsed);",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Retrieves the child nodes (content) of a standard module section",
            "         *",
            "         * @method _getStdModContent",
            "         * @private",
            "         * @param {String} section The standard module section whose child nodes are to be retrieved. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         * @return {Node} The child node collection of the standard module section.",
            "         */",
            "        _getStdModContent : function(section) {",
            "            return (this[section + NODE_SUFFIX]) ? this[section + NODE_SUFFIX].get(CHILD_NODES) : null;",
            "        },",
            "",
            "        /**",
            "         * Updates the body section of the standard module with the content provided (either an HTML string, or node reference).",
            "         * <p>",
            "         * This method can be used instead of the corresponding section content attribute if you'd like to retain the current content of the section,",
            "         * and insert content before or after it, by specifying the <code>where</code> argument.",
            "         * </p>",
            "         * @method setStdModContent",
            "         * @param {String} section The standard module section whose content is to be updated. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.",
            "         * @param {String | Node} content The content to be added, either an HTML string or a Node reference.",
            "         * @param {String} where Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.",
            "         * If not provided, the content will replace existing content in the section.",
            "         */",
            "        setStdModContent : function(section, content, where) {",
            "            //var node = this.getStdModNode(section) || this._renderStdMod(section);",
            "            this.set(section + CONTENT_SUFFIX, content, {stdModPosition:where});",
            "            //this._addStdModContent(node, content, where);",
            "        },",
            "",
            "        /**",
            "        Returns the node reference for the specified `section`.",
            "",
            "        **Note:** The DOM is not queried for the node reference. The reference",
            "        stored by the widget instance is returned if it was set. Passing a",
            "        truthy for `forceCreate` will create the section node if it does not",
            "        already exist.",
            "",
            "        @method getStdModNode",
            "        @param {String} section The section whose node reference is required.",
            "            Either `WidgetStdMod.HEADER`, `WidgetStdMod.BODY`, or",
            "            `WidgetStdMod.FOOTER`.",
            "        @param {Boolean} forceCreate Whether the section node should be created",
            "            if it does not already exist.",
            "        @return {Node} The node reference for the `section`, or null if not set.",
            "        **/",
            "        getStdModNode : function(section, forceCreate) {",
            "            var node = this[section + NODE_SUFFIX] || null;",
            "",
            "            if (!node && forceCreate) {",
            "                node = this._renderStdMod(section);",
            "            }",
            "",
            "            return node;",
            "        },",
            "",
            "        /**",
            "         * Sets the height on the provided header, body or footer element to",
            "         * fill out the height of the Widget. It determines the height of the",
            "         * widgets bounding box, based on it's configured height value, and",
            "         * sets the height of the provided section to fill out any",
            "         * space remaining after the other standard module section heights",
            "         * have been accounted for.",
            "         *",
            "         * <p><strong>NOTE:</strong> This method is not designed to work if an explicit",
            "         * height has not been set on the Widget, since for an \"auto\" height Widget,",
            "         * the heights of the header/body/footer will drive the height of the Widget.</p>",
            "         *",
            "         * @method fillHeight",
            "         * @param {Node} node The node which should be resized to fill out the height",
            "         * of the Widget bounding box. Should be a standard module section node which belongs",
            "         * to the widget.",
            "         */",
            "        fillHeight : function(node) {",
            "            if (node) {",
            "                var contentBox = this.get(CONTENT_BOX),",
            "                    stdModNodes = [this.headerNode, this.bodyNode, this.footerNode],",
            "                    stdModNode,",
            "                    cbContentHeight,",
            "                    filled = 0,",
            "                    remaining = 0,",
            "",
            "                    validNode = false;",
            "",
            "                for (var i = 0, l = stdModNodes.length; i < l; i++) {",
            "                    stdModNode = stdModNodes[i];",
            "                    if (stdModNode) {",
            "                        if (stdModNode !== node) {",
            "                            filled += this._getPreciseHeight(stdModNode);",
            "                        } else {",
            "                            validNode = true;",
            "                        }",
            "                    }",
            "                }",
            "",
            "                if (validNode) {",
            "                    if (UA.ie || UA.opera) {",
            "                        // Need to set height to 0, to allow height to be reduced",
            "                        node.set(OFFSET_HEIGHT, 0);",
            "                    }",
            "",
            "                    cbContentHeight = contentBox.get(OFFSET_HEIGHT) -",
            "                            parseInt(contentBox.getComputedStyle(\"paddingTop\"), 10) -",
            "                            parseInt(contentBox.getComputedStyle(\"paddingBottom\"), 10) -",
            "                            parseInt(contentBox.getComputedStyle(\"borderBottomWidth\"), 10) -",
            "                            parseInt(contentBox.getComputedStyle(\"borderTopWidth\"), 10);",
            "",
            "                    if (L.isNumber(cbContentHeight)) {",
            "                        remaining = cbContentHeight - filled;",
            "                        if (remaining >= 0) {",
            "                            node.set(OFFSET_HEIGHT, remaining);",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "        }",
            "    };",
            "",
            "    Y.WidgetStdMod = StdMod;",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"base-build\", \"widget\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "8": 1,
            "62": 1,
            "71": 1,
            "80": 1,
            "89": 1,
            "101": 1,
            "113": 1,
            "124": 1,
            "126": 1,
            "142": 1,
            "188": 8,
            "200": 1,
            "202": 1,
            "206": 1,
            "210": 1,
            "223": 1,
            "244": 1,
            "250": 1,
            "253": 9,
            "255": 9,
            "256": 9,
            "257": 9,
            "270": 8,
            "272": 8,
            "273": 8,
            "276": 8,
            "277": 8,
            "280": 8,
            "281": 8,
            "284": 8,
            "297": 8,
            "298": 8,
            "302": 8,
            "303": 8,
            "304": 8,
            "308": 8,
            "309": 8,
            "310": 8,
            "328": 8,
            "329": 8,
            "330": 8,
            "342": 20,
            "343": 7,
            "356": 4,
            "357": 1,
            "370": 1,
            "371": 0,
            "384": 0,
            "398": 8,
            "411": 8,
            "412": 8,
            "414": 8,
            "415": 0,
            "418": 8,
            "419": 2,
            "422": 8,
            "434": 40,
            "435": 40,
            "436": 40,
            "437": 13,
            "457": 32,
            "458": 17,
            "460": 17,
            "462": 17,
            "464": 15,
            "466": 32,
            "479": 12,
            "482": 12,
            "483": 12,
            "486": 12,
            "488": 12,
            "489": 12,
            "500": 15,
            "501": 15,
            "502": 0,
            "503": 0,
            "517": 12,
            "519": 12,
            "520": 9,
            "522": 3,
            "523": 0,
            "525": 3,
            "526": 3,
            "527": 0,
            "529": 3,
            "545": 12,
            "564": 17,
            "566": 2,
            "567": 2,
            "569": 2,
            "570": 2,
            "572": 13,
            "575": 17,
            "588": 6,
            "591": 6,
            "592": 6,
            "593": 6,
            "594": 6,
            "598": 6,
            "611": 15,
            "625": 3,
            "627": 3,
            "628": 3,
            "629": 1,
            "630": 1,
            "632": 3,
            "634": 3,
            "637": 0,
            "651": 1,
            "652": 1,
            "653": 1,
            "654": 1,
            "655": 1,
            "668": 17,
            "685": 6,
            "706": 62,
            "708": 62,
            "709": 3,
            "712": 62,
            "733": 15,
            "734": 7,
            "743": 7,
            "744": 21,
            "745": 21,
            "746": 13,
            "747": 6,
            "749": 7,
            "754": 7,
            "755": 7,
            "757": 7,
            "760": 7,
            "766": 7,
            "767": 7,
            "768": 7,
            "769": 7,
            "777": 1
        }
    }
}