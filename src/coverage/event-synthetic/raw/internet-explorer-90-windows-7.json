{
    "build/event-synthetic/event-synthetic.js": {
        "path": "build/event-synthetic/event-synthetic.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 205,
            "5": 205,
            "6": 1,
            "7": 234,
            "8": 234,
            "9": 234,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 234,
            "16": 234,
            "17": 234,
            "18": 30,
            "19": 0,
            "20": 0,
            "21": 234,
            "22": 234,
            "23": 234,
            "24": 234,
            "25": 1,
            "26": 177,
            "27": 177,
            "28": 177,
            "29": 177,
            "30": 1,
            "31": 205,
            "32": 205,
            "33": 204,
            "34": 204,
            "35": 204,
            "36": 204,
            "37": 204,
            "38": 204,
            "39": 176,
            "40": 176,
            "41": 155,
            "42": 137,
            "43": 137,
            "44": 153,
            "45": 1,
            "46": 89,
            "47": 1,
            "48": 243,
            "49": 243,
            "50": 205,
            "51": 177,
            "52": 205,
            "53": 177,
            "54": 243,
            "55": 204,
            "56": 204,
            "57": 204,
            "58": 204,
            "59": 0,
            "60": 204,
            "61": 204,
            "62": 204,
            "63": 204,
            "64": 204,
            "65": 89,
            "66": 89,
            "67": 89,
            "68": 125,
            "69": 125,
            "70": 125,
            "71": 9,
            "72": 9,
            "73": 9,
            "74": 116,
            "75": 208,
            "76": 208,
            "77": 208,
            "78": 208,
            "79": 17,
            "80": 208,
            "81": 208,
            "82": 205,
            "83": 116,
            "84": 205,
            "85": 205,
            "86": 205,
            "87": 205,
            "88": 2,
            "89": 205,
            "90": 205,
            "91": 205,
            "92": 205,
            "93": 205,
            "94": 2,
            "95": 32,
            "96": 32,
            "97": 32,
            "98": 32,
            "99": 32,
            "100": 32,
            "101": 32,
            "102": 28,
            "103": 40,
            "104": 38,
            "105": 38,
            "106": 31,
            "107": 31,
            "108": 31,
            "109": 31,
            "110": 43,
            "111": 43,
            "112": 43,
            "113": 3,
            "114": 40,
            "115": 35,
            "116": 43,
            "117": 1,
            "118": 1,
            "119": 92,
            "120": 92,
            "121": 2,
            "122": 2,
            "123": 90,
            "124": 88,
            "125": 92,
            "126": 90,
            "127": 89,
            "128": 89,
            "129": 89,
            "130": 89,
            "131": 89,
            "132": 89,
            "133": 106,
            "134": 19,
            "135": 32,
            "136": 2,
            "137": 2,
            "138": 3,
            "139": 92
        },
        "b": {
            "1": [
                234,
                0
            ],
            "2": [
                234,
                0
            ],
            "3": [
                0,
                234
            ],
            "4": [
                234,
                234
            ],
            "5": [
                0,
                0
            ],
            "6": [
                0,
                0
            ],
            "7": [
                30,
                204
            ],
            "8": [
                0,
                0
            ],
            "9": [
                0,
                0,
                0
            ],
            "10": [
                234,
                100,
                0
            ],
            "11": [
                204,
                0
            ],
            "12": [
                176,
                28
            ],
            "13": [
                155,
                21
            ],
            "14": [
                205,
                38
            ],
            "15": [
                177,
                28
            ],
            "16": [
                177,
                28
            ],
            "17": [
                243,
                236,
                7
            ],
            "18": [
                204,
                0
            ],
            "19": [
                204,
                204
            ],
            "20": [
                17,
                187
            ],
            "21": [
                0,
                204
            ],
            "22": [
                89,
                89
            ],
            "23": [
                0,
                89
            ],
            "24": [
                19,
                106
            ],
            "25": [
                37,
                88
            ],
            "26": [
                88,
                1
            ],
            "27": [
                9,
                116
            ],
            "28": [
                125,
                9
            ],
            "29": [
                208,
                0
            ],
            "30": [
                17,
                191
            ],
            "31": [
                205,
                3
            ],
            "32": [
                208,
                6
            ],
            "33": [
                77,
                39
            ],
            "34": [
                2,
                203
            ],
            "35": [
                0,
                32
            ],
            "36": [
                32,
                0
            ],
            "37": [
                28,
                4
            ],
            "38": [
                31,
                7
            ],
            "39": [
                31,
                0
            ],
            "40": [
                43,
                0
            ],
            "41": [
                3,
                40
            ],
            "42": [
                35,
                28
            ],
            "43": [
                43,
                29
            ],
            "44": [
                2,
                90
            ],
            "45": [
                92,
                92
            ],
            "46": [
                88,
                2
            ],
            "47": [
                90,
                2
            ],
            "48": [
                89,
                1
            ],
            "49": [
                90,
                3
            ],
            "50": [
                2,
                0
            ],
            "51": [
                2,
                1
            ]
        },
        "f": {
            "1": 1,
            "2": 122,
            "3": 205,
            "4": 234,
            "5": 177,
            "6": 205,
            "7": 204,
            "8": 137,
            "9": 89,
            "10": 243,
            "11": 204,
            "12": 89,
            "13": 125,
            "14": 9,
            "15": 208,
            "16": 205,
            "17": 2,
            "18": 32,
            "19": 38,
            "20": 43,
            "21": 92,
            "22": 89,
            "23": 106,
            "24": 19,
            "25": 32,
            "26": 3
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 27
                    },
                    "end": {
                        "line": 1,
                        "column": 46
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 17,
                "loc": {
                    "start": {
                        "line": 17,
                        "column": 15
                    },
                    "end": {
                        "line": 17,
                        "column": 27
                    }
                }
            },
            "3": {
                "name": "Notifier",
                "line": 36,
                "loc": {
                    "start": {
                        "line": 36,
                        "column": 0
                    },
                    "end": {
                        "line": 36,
                        "column": 38
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 65,
                "loc": {
                    "start": {
                        "line": 65,
                        "column": 26
                    },
                    "end": {
                        "line": 65,
                        "column": 39
                    }
                }
            },
            "5": {
                "name": "SynthRegistry",
                "line": 120,
                "loc": {
                    "start": {
                        "line": 120,
                        "column": 0
                    },
                    "end": {
                        "line": 120,
                        "column": 38
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 143,
                "loc": {
                    "start": {
                        "line": 143,
                        "column": 14
                    },
                    "end": {
                        "line": 143,
                        "column": 32
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 155,
                "loc": {
                    "start": {
                        "line": 155,
                        "column": 16
                    },
                    "end": {
                        "line": 155,
                        "column": 31
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 188,
                "loc": {
                    "start": {
                        "line": 188,
                        "column": 16
                    },
                    "end": {
                        "line": 188,
                        "column": 28
                    }
                }
            },
            "9": {
                "name": "SyntheticEvent",
                "line": 212,
                "loc": {
                    "start": {
                        "line": 212,
                        "column": 0
                    },
                    "end": {
                        "line": 212,
                        "column": 26
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 235,
                "loc": {
                    "start": {
                        "line": 235,
                        "column": 17
                    },
                    "end": {
                        "line": 235,
                        "column": 47
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 262,
                "loc": {
                    "start": {
                        "line": 262,
                        "column": 16
                    },
                    "end": {
                        "line": 262,
                        "column": 31
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 291,
                "loc": {
                    "start": {
                        "line": 291,
                        "column": 15
                    },
                    "end": {
                        "line": 291,
                        "column": 27
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 446,
                "loc": {
                    "start": {
                        "line": 446,
                        "column": 13
                    },
                    "end": {
                        "line": 446,
                        "column": 39
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 460,
                "loc": {
                    "start": {
                        "line": 460,
                        "column": 43
                    },
                    "end": {
                        "line": 460,
                        "column": 55
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 467,
                "loc": {
                    "start": {
                        "line": 467,
                        "column": 32
                    },
                    "end": {
                        "line": 467,
                        "column": 48
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 515,
                "loc": {
                    "start": {
                        "line": 515,
                        "column": 20
                    },
                    "end": {
                        "line": 515,
                        "column": 65
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 567,
                "loc": {
                    "start": {
                        "line": 567,
                        "column": 24
                    },
                    "end": {
                        "line": 567,
                        "column": 46
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 581,
                "loc": {
                    "start": {
                        "line": 581,
                        "column": 17
                    },
                    "end": {
                        "line": 581,
                        "column": 33
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 623,
                "loc": {
                    "start": {
                        "line": 623,
                        "column": 17
                    },
                    "end": {
                        "line": 623,
                        "column": 54
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 669,
                "loc": {
                    "start": {
                        "line": 669,
                        "column": 18
                    },
                    "end": {
                        "line": 669,
                        "column": 39
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 787,
                "loc": {
                    "start": {
                        "line": 787,
                        "column": 17
                    },
                    "end": {
                        "line": 787,
                        "column": 48
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 799,
                "loc": {
                    "start": {
                        "line": 799,
                        "column": 19
                    },
                    "end": {
                        "line": 799,
                        "column": 31
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 810,
                "loc": {
                    "start": {
                        "line": 810,
                        "column": 20
                    },
                    "end": {
                        "line": 810,
                        "column": 32
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 814,
                "loc": {
                    "start": {
                        "line": 814,
                        "column": 26
                    },
                    "end": {
                        "line": 814,
                        "column": 38
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 818,
                "loc": {
                    "start": {
                        "line": 818,
                        "column": 24
                    },
                    "end": {
                        "line": 818,
                        "column": 36
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 825,
                "loc": {
                    "start": {
                        "line": 825,
                        "column": 36
                    },
                    "end": {
                        "line": 825,
                        "column": 49
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 834,
                    "column": 69
                }
            },
            "2": {
                "start": {
                    "line": 9,
                    "column": 0
                },
                "end": {
                    "line": 17,
                    "column": 30
                }
            },
            "3": {
                "start": {
                    "line": 36,
                    "column": 0
                },
                "end": {
                    "line": 39,
                    "column": 1
                }
            },
            "4": {
                "start": {
                    "line": 37,
                    "column": 4
                },
                "end": {
                    "line": 37,
                    "column": 29
                }
            },
            "5": {
                "start": {
                    "line": 38,
                    "column": 4
                },
                "end": {
                    "line": 38,
                    "column": 33
                }
            },
            "6": {
                "start": {
                    "line": 65,
                    "column": 0
                },
                "end": {
                    "line": 105,
                    "column": 2
                }
            },
            "7": {
                "start": {
                    "line": 67,
                    "column": 4
                },
                "end": {
                    "line": 74,
                    "column": 12
                }
            },
            "8": {
                "start": {
                    "line": 76,
                    "column": 4
                },
                "end": {
                    "line": 96,
                    "column": 5
                }
            },
            "9": {
                "start": {
                    "line": 77,
                    "column": 8
                },
                "end": {
                    "line": 86,
                    "column": 9
                }
            },
            "10": {
                "start": {
                    "line": 78,
                    "column": 12
                },
                "end": {
                    "line": 78,
                    "column": 36
                }
            },
            "11": {
                "start": {
                    "line": 80,
                    "column": 12
                },
                "end": {
                    "line": 85,
                    "column": 13
                }
            },
            "12": {
                "start": {
                    "line": 81,
                    "column": 16
                },
                "end": {
                    "line": 81,
                    "column": 38
                }
            },
            "13": {
                "start": {
                    "line": 82,
                    "column": 16
                },
                "end": {
                    "line": 82,
                    "column": 32
                }
            },
            "14": {
                "start": {
                    "line": 84,
                    "column": 16
                },
                "end": {
                    "line": 84,
                    "column": 36
                }
            },
            "15": {
                "start": {
                    "line": 88,
                    "column": 8
                },
                "end": {
                    "line": 88,
                    "column": 32
                }
            },
            "16": {
                "start": {
                    "line": 89,
                    "column": 8
                },
                "end": {
                    "line": 89,
                    "column": 37
                }
            },
            "17": {
                "start": {
                    "line": 91,
                    "column": 8
                },
                "end": {
                    "line": 93,
                    "column": 9
                }
            },
            "18": {
                "start": {
                    "line": 92,
                    "column": 12
                },
                "end": {
                    "line": 92,
                    "column": 38
                }
            },
            "19": {
                "start": {
                    "line": 94,
                    "column": 11
                },
                "end": {
                    "line": 96,
                    "column": 5
                }
            },
            "20": {
                "start": {
                    "line": 95,
                    "column": 8
                },
                "end": {
                    "line": 95,
                    "column": 21
                }
            },
            "21": {
                "start": {
                    "line": 98,
                    "column": 4
                },
                "end": {
                    "line": 98,
                    "column": 60
                }
            },
            "22": {
                "start": {
                    "line": 99,
                    "column": 4
                },
                "end": {
                    "line": 99,
                    "column": 34
                }
            },
            "23": {
                "start": {
                    "line": 100,
                    "column": 4
                },
                "end": {
                    "line": 100,
                    "column": 26
                }
            },
            "24": {
                "start": {
                    "line": 104,
                    "column": 4
                },
                "end": {
                    "line": 104,
                    "column": 15
                }
            },
            "25": {
                "start": {
                    "line": 120,
                    "column": 0
                },
                "end": {
                    "line": 125,
                    "column": 1
                }
            },
            "26": {
                "start": {
                    "line": 121,
                    "column": 4
                },
                "end": {
                    "line": 121,
                    "column": 22
                }
            },
            "27": {
                "start": {
                    "line": 122,
                    "column": 4
                },
                "end": {
                    "line": 122,
                    "column": 22
                }
            },
            "28": {
                "start": {
                    "line": 123,
                    "column": 4
                },
                "end": {
                    "line": 123,
                    "column": 23
                }
            },
            "29": {
                "start": {
                    "line": 124,
                    "column": 4
                },
                "end": {
                    "line": 124,
                    "column": 24
                }
            },
            "30": {
                "start": {
                    "line": 127,
                    "column": 0
                },
                "end": {
                    "line": 196,
                    "column": 2
                }
            },
            "31": {
                "start": {
                    "line": 144,
                    "column": 8
                },
                "end": {
                    "line": 144,
                    "column": 35
                }
            },
            "32": {
                "start": {
                    "line": 145,
                    "column": 8
                },
                "end": {
                    "line": 145,
                    "column": 34
                }
            },
            "33": {
                "start": {
                    "line": 156,
                    "column": 8
                },
                "end": {
                    "line": 158,
                    "column": 14
                }
            },
            "34": {
                "start": {
                    "line": 160,
                    "column": 8
                },
                "end": {
                    "line": 165,
                    "column": 9
                }
            },
            "35": {
                "start": {
                    "line": 161,
                    "column": 12
                },
                "end": {
                    "line": 164,
                    "column": 13
                }
            },
            "36": {
                "start": {
                    "line": 162,
                    "column": 16
                },
                "end": {
                    "line": 162,
                    "column": 37
                }
            },
            "37": {
                "start": {
                    "line": 163,
                    "column": 16
                },
                "end": {
                    "line": 163,
                    "column": 22
                }
            },
            "38": {
                "start": {
                    "line": 168,
                    "column": 8
                },
                "end": {
                    "line": 173,
                    "column": 9
                }
            },
            "39": {
                "start": {
                    "line": 169,
                    "column": 12
                },
                "end": {
                    "line": 169,
                    "column": 36
                }
            },
            "40": {
                "start": {
                    "line": 170,
                    "column": 12
                },
                "end": {
                    "line": 172,
                    "column": 13
                }
            },
            "41": {
                "start": {
                    "line": 171,
                    "column": 16
                },
                "end": {
                    "line": 171,
                    "column": 43
                }
            },
            "42": {
                "start": {
                    "line": 189,
                    "column": 8
                },
                "end": {
                    "line": 190,
                    "column": 31
                }
            },
            "43": {
                "start": {
                    "line": 192,
                    "column": 8
                },
                "end": {
                    "line": 194,
                    "column": 9
                }
            },
            "44": {
                "start": {
                    "line": 193,
                    "column": 12
                },
                "end": {
                    "line": 193,
                    "column": 32
                }
            },
            "45": {
                "start": {
                    "line": 212,
                    "column": 0
                },
                "end": {
                    "line": 214,
                    "column": 1
                }
            },
            "46": {
                "start": {
                    "line": 213,
                    "column": 4
                },
                "end": {
                    "line": 213,
                    "column": 38
                }
            },
            "47": {
                "start": {
                    "line": 216,
                    "column": 0
                },
                "end": {
                    "line": 674,
                    "column": 9
                }
            },
            "48": {
                "start": {
                    "line": 236,
                    "column": 8
                },
                "end": {
                    "line": 239,
                    "column": 34
                }
            },
            "49": {
                "start": {
                    "line": 241,
                    "column": 8
                },
                "end": {
                    "line": 248,
                    "column": 9
                }
            },
            "50": {
                "start": {
                    "line": 242,
                    "column": 12
                },
                "end": {
                    "line": 244,
                    "column": 13
                }
            },
            "51": {
                "start": {
                    "line": 243,
                    "column": 16
                },
                "end": {
                    "line": 243,
                    "column": 43
                }
            },
            "52": {
                "start": {
                    "line": 245,
                    "column": 12
                },
                "end": {
                    "line": 247,
                    "column": 13
                }
            },
            "53": {
                "start": {
                    "line": 246,
                    "column": 16
                },
                "end": {
                    "line": 246,
                    "column": 63
                }
            },
            "54": {
                "start": {
                    "line": 250,
                    "column": 8
                },
                "end": {
                    "line": 250,
                    "column": 47
                }
            },
            "55": {
                "start": {
                    "line": 263,
                    "column": 8
                },
                "end": {
                    "line": 279,
                    "column": 9
                }
            },
            "56": {
                "start": {
                    "line": 264,
                    "column": 12
                },
                "end": {
                    "line": 265,
                    "column": 68
                }
            },
            "57": {
                "start": {
                    "line": 267,
                    "column": 12
                },
                "end": {
                    "line": 267,
                    "column": 35
                }
            },
            "58": {
                "start": {
                    "line": 269,
                    "column": 12
                },
                "end": {
                    "line": 271,
                    "column": 13
                }
            },
            "59": {
                "start": {
                    "line": 270,
                    "column": 16
                },
                "end": {
                    "line": 270,
                    "column": 38
                }
            },
            "60": {
                "start": {
                    "line": 273,
                    "column": 12
                },
                "end": {
                    "line": 273,
                    "column": 68
                }
            },
            "61": {
                "start": {
                    "line": 274,
                    "column": 12
                },
                "end": {
                    "line": 274,
                    "column": 42
                }
            },
            "62": {
                "start": {
                    "line": 276,
                    "column": 12
                },
                "end": {
                    "line": 276,
                    "column": 26
                }
            },
            "63": {
                "start": {
                    "line": 277,
                    "column": 12
                },
                "end": {
                    "line": 277,
                    "column": 28
                }
            },
            "64": {
                "start": {
                    "line": 278,
                    "column": 12
                },
                "end": {
                    "line": 278,
                    "column": 31
                }
            },
            "65": {
                "start": {
                    "line": 292,
                    "column": 12
                },
                "end": {
                    "line": 292,
                    "column": 73
                }
            },
            "66": {
                "start": {
                    "line": 295,
                    "column": 12
                },
                "end": {
                    "line": 297,
                    "column": 37
                }
            },
            "67": {
                "start": {
                    "line": 298,
                    "column": 12
                },
                "end": {
                    "line": 298,
                    "column": 39
                }
            },
            "68": {
                "start": {
                    "line": 447,
                    "column": 12
                },
                "end": {
                    "line": 452,
                    "column": 30
                }
            },
            "69": {
                "start": {
                    "line": 455,
                    "column": 12
                },
                "end": {
                    "line": 457,
                    "column": 57
                }
            },
            "70": {
                "start": {
                    "line": 459,
                    "column": 12
                },
                "end": {
                    "line": 465,
                    "column": 13
                }
            },
            "71": {
                "start": {
                    "line": 460,
                    "column": 16
                },
                "end": {
                    "line": 462,
                    "column": 29
                }
            },
            "72": {
                "start": {
                    "line": 461,
                    "column": 20
                },
                "end": {
                    "line": 461,
                    "column": 74
                }
            },
            "73": {
                "start": {
                    "line": 464,
                    "column": 16
                },
                "end": {
                    "line": 464,
                    "column": 30
                }
            },
            "74": {
                "start": {
                    "line": 467,
                    "column": 12
                },
                "end": {
                    "line": 487,
                    "column": 21
                }
            },
            "75": {
                "start": {
                    "line": 468,
                    "column": 16
                },
                "end": {
                    "line": 469,
                    "column": 27
                }
            },
            "76": {
                "start": {
                    "line": 471,
                    "column": 16
                },
                "end": {
                    "line": 471,
                    "column": 35
                }
            },
            "77": {
                "start": {
                    "line": 473,
                    "column": 16
                },
                "end": {
                    "line": 486,
                    "column": 17
                }
            },
            "78": {
                "start": {
                    "line": 474,
                    "column": 20
                },
                "end": {
                    "line": 476,
                    "column": 21
                }
            },
            "79": {
                "start": {
                    "line": 475,
                    "column": 24
                },
                "end": {
                    "line": 475,
                    "column": 57
                }
            },
            "80": {
                "start": {
                    "line": 479,
                    "column": 20
                },
                "end": {
                    "line": 479,
                    "column": 65
                }
            },
            "81": {
                "start": {
                    "line": 481,
                    "column": 20
                },
                "end": {
                    "line": 485,
                    "column": 21
                }
            },
            "82": {
                "start": {
                    "line": 484,
                    "column": 24
                },
                "end": {
                    "line": 484,
                    "column": 92
                }
            },
            "83": {
                "start": {
                    "line": 489,
                    "column": 12
                },
                "end": {
                    "line": 491,
                    "column": 43
                }
            },
            "84": {
                "start": {
                    "line": 516,
                    "column": 12
                },
                "end": {
                    "line": 520,
                    "column": 40
                }
            },
            "85": {
                "start": {
                    "line": 522,
                    "column": 12
                },
                "end": {
                    "line": 522,
                    "column": 30
                }
            },
            "86": {
                "start": {
                    "line": 523,
                    "column": 12
                },
                "end": {
                    "line": 523,
                    "column": 32
                }
            },
            "87": {
                "start": {
                    "line": 524,
                    "column": 12
                },
                "end": {
                    "line": 526,
                    "column": 13
                }
            },
            "88": {
                "start": {
                    "line": 525,
                    "column": 16
                },
                "end": {
                    "line": 525,
                    "column": 48
                }
            },
            "89": {
                "start": {
                    "line": 528,
                    "column": 12
                },
                "end": {
                    "line": 537,
                    "column": 21
                }
            },
            "90": {
                "start": {
                    "line": 539,
                    "column": 12
                },
                "end": {
                    "line": 539,
                    "column": 39
                }
            },
            "91": {
                "start": {
                    "line": 541,
                    "column": 12
                },
                "end": {
                    "line": 541,
                    "column": 38
                }
            },
            "92": {
                "start": {
                    "line": 544,
                    "column": 12
                },
                "end": {
                    "line": 544,
                    "column": 54
                }
            },
            "93": {
                "start": {
                    "line": 546,
                    "column": 12
                },
                "end": {
                    "line": 546,
                    "column": 26
                }
            },
            "94": {
                "start": {
                    "line": 568,
                    "column": 12
                },
                "end": {
                    "line": 568,
                    "column": 31
                }
            },
            "95": {
                "start": {
                    "line": 584,
                    "column": 12
                },
                "end": {
                    "line": 587,
                    "column": 41
                }
            },
            "96": {
                "start": {
                    "line": 590,
                    "column": 12
                },
                "end": {
                    "line": 590,
                    "column": 30
                }
            },
            "97": {
                "start": {
                    "line": 592,
                    "column": 12
                },
                "end": {
                    "line": 604,
                    "column": 13
                }
            },
            "98": {
                "start": {
                    "line": 593,
                    "column": 16
                },
                "end": {
                    "line": 593,
                    "column": 37
                }
            },
            "99": {
                "start": {
                    "line": 595,
                    "column": 16
                },
                "end": {
                    "line": 603,
                    "column": 17
                }
            },
            "100": {
                "start": {
                    "line": 596,
                    "column": 20
                },
                "end": {
                    "line": 596,
                    "column": 55
                }
            },
            "101": {
                "start": {
                    "line": 598,
                    "column": 20
                },
                "end": {
                    "line": 602,
                    "column": 21
                }
            },
            "102": {
                "start": {
                    "line": 599,
                    "column": 24
                },
                "end": {
                    "line": 601,
                    "column": 25
                }
            },
            "103": {
                "start": {
                    "line": 600,
                    "column": 28
                },
                "end": {
                    "line": 600,
                    "column": 48
                }
            },
            "104": {
                "start": {
                    "line": 624,
                    "column": 12
                },
                "end": {
                    "line": 626,
                    "column": 43
                }
            },
            "105": {
                "start": {
                    "line": 628,
                    "column": 12
                },
                "end": {
                    "line": 645,
                    "column": 13
                }
            },
            "106": {
                "start": {
                    "line": 629,
                    "column": 16
                },
                "end": {
                    "line": 629,
                    "column": 46
                }
            },
            "107": {
                "start": {
                    "line": 631,
                    "column": 16
                },
                "end": {
                    "line": 633,
                    "column": 17
                }
            },
            "108": {
                "start": {
                    "line": 632,
                    "column": 20
                },
                "end": {
                    "line": 632,
                    "column": 43
                }
            },
            "109": {
                "start": {
                    "line": 635,
                    "column": 16
                },
                "end": {
                    "line": 644,
                    "column": 17
                }
            },
            "110": {
                "start": {
                    "line": 636,
                    "column": 20
                },
                "end": {
                    "line": 636,
                    "column": 43
                }
            },
            "111": {
                "start": {
                    "line": 637,
                    "column": 20
                },
                "end": {
                    "line": 643,
                    "column": 21
                }
            },
            "112": {
                "start": {
                    "line": 638,
                    "column": 24
                },
                "end": {
                    "line": 642,
                    "column": 25
                }
            },
            "113": {
                "start": {
                    "line": 639,
                    "column": 28
                },
                "end": {
                    "line": 639,
                    "column": 42
                }
            },
            "114": {
                "start": {
                    "line": 641,
                    "column": 28
                },
                "end": {
                    "line": 641,
                    "column": 56
                }
            },
            "115": {
                "start": {
                    "line": 647,
                    "column": 12
                },
                "end": {
                    "line": 647,
                    "column": 45
                }
            },
            "116": {
                "start": {
                    "line": 671,
                    "column": 12
                },
                "end": {
                    "line": 671,
                    "column": 50
                }
            },
            "117": {
                "start": {
                    "line": 676,
                    "column": 0
                },
                "end": {
                    "line": 676,
                    "column": 34
                }
            },
            "118": {
                "start": {
                    "line": 787,
                    "column": 0
                },
                "end": {
                    "line": 831,
                    "column": 2
                }
            },
            "119": {
                "start": {
                    "line": 788,
                    "column": 4
                },
                "end": {
                    "line": 788,
                    "column": 30
                }
            },
            "120": {
                "start": {
                    "line": 790,
                    "column": 4
                },
                "end": {
                    "line": 795,
                    "column": 5
                }
            },
            "121": {
                "start": {
                    "line": 791,
                    "column": 8
                },
                "end": {
                    "line": 791,
                    "column": 24
                }
            },
            "122": {
                "start": {
                    "line": 792,
                    "column": 8
                },
                "end": {
                    "line": 792,
                    "column": 23
                }
            },
            "123": {
                "start": {
                    "line": 793,
                    "column": 11
                },
                "end": {
                    "line": 795,
                    "column": 5
                }
            },
            "124": {
                "start": {
                    "line": 794,
                    "column": 8
                },
                "end": {
                    "line": 794,
                    "column": 51
                }
            },
            "125": {
                "start": {
                    "line": 797,
                    "column": 4
                },
                "end": {
                    "line": 828,
                    "column": 5
                }
            },
            "126": {
                "start": {
                    "line": 798,
                    "column": 8
                },
                "end": {
                    "line": 823,
                    "column": 9
                }
            },
            "127": {
                "start": {
                    "line": 799,
                    "column": 12
                },
                "end": {
                    "line": 801,
                    "column": 14
                }
            },
            "128": {
                "start": {
                    "line": 800,
                    "column": 16
                },
                "end": {
                    "line": 800,
                    "column": 54
                }
            },
            "129": {
                "start": {
                    "line": 802,
                    "column": 12
                },
                "end": {
                    "line": 802,
                    "column": 53
                }
            },
            "130": {
                "start": {
                    "line": 803,
                    "column": 12
                },
                "end": {
                    "line": 803,
                    "column": 31
                }
            },
            "131": {
                "start": {
                    "line": 805,
                    "column": 12
                },
                "end": {
                    "line": 805,
                    "column": 30
                }
            },
            "132": {
                "start": {
                    "line": 807,
                    "column": 12
                },
                "end": {
                    "line": 821,
                    "column": 14
                }
            },
            "133": {
                "start": {
                    "line": 811,
                    "column": 20
                },
                "end": {
                    "line": 811,
                    "column": 57
                }
            },
            "134": {
                "start": {
                    "line": 815,
                    "column": 20
                },
                "end": {
                    "line": 815,
                    "column": 63
                }
            },
            "135": {
                "start": {
                    "line": 819,
                    "column": 20
                },
                "end": {
                    "line": 819,
                    "column": 61
                }
            },
            "136": {
                "start": {
                    "line": 824,
                    "column": 11
                },
                "end": {
                    "line": 828,
                    "column": 5
                }
            },
            "137": {
                "start": {
                    "line": 825,
                    "column": 8
                },
                "end": {
                    "line": 827,
                    "column": 11
                }
            },
            "138": {
                "start": {
                    "line": 826,
                    "column": 12
                },
                "end": {
                    "line": 826,
                    "column": 37
                }
            },
            "139": {
                "start": {
                    "line": 830,
                    "column": 4
                },
                "end": {
                    "line": 830,
                    "column": 17
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 73,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 73,
                            "column": 19
                        },
                        "end": {
                            "line": 73,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 73,
                            "column": 24
                        },
                        "end": {
                            "line": 73,
                            "column": 26
                        }
                    }
                ]
            },
            "2": {
                "line": 76,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 76,
                            "column": 4
                        },
                        "end": {
                            "line": 76,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 76,
                            "column": 4
                        },
                        "end": {
                            "line": 76,
                            "column": 4
                        }
                    }
                ]
            },
            "3": {
                "line": 77,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 77,
                            "column": 8
                        },
                        "end": {
                            "line": 77,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 77,
                            "column": 8
                        },
                        "end": {
                            "line": 77,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 77,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 77,
                            "column": 12
                        },
                        "end": {
                            "line": 77,
                            "column": 14
                        }
                    },
                    {
                        "start": {
                            "line": 77,
                            "column": 18
                        },
                        "end": {
                            "line": 77,
                            "column": 35
                        }
                    }
                ]
            },
            "5": {
                "line": 80,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 80,
                            "column": 12
                        },
                        "end": {
                            "line": 80,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 12
                        },
                        "end": {
                            "line": 80,
                            "column": 12
                        }
                    }
                ]
            },
            "6": {
                "line": 80,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 80,
                            "column": 16
                        },
                        "end": {
                            "line": 80,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 31
                        },
                        "end": {
                            "line": 80,
                            "column": 48
                        }
                    }
                ]
            },
            "7": {
                "line": 91,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 91,
                            "column": 8
                        },
                        "end": {
                            "line": 91,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 91,
                            "column": 8
                        },
                        "end": {
                            "line": 91,
                            "column": 8
                        }
                    }
                ]
            },
            "8": {
                "line": 94,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 94,
                            "column": 11
                        },
                        "end": {
                            "line": 94,
                            "column": 11
                        }
                    },
                    {
                        "start": {
                            "line": 94,
                            "column": 11
                        },
                        "end": {
                            "line": 94,
                            "column": 11
                        }
                    }
                ]
            },
            "9": {
                "line": 94,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 94,
                            "column": 15
                        },
                        "end": {
                            "line": 94,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 94,
                            "column": 27
                        },
                        "end": {
                            "line": 94,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 94,
                            "column": 42
                        },
                        "end": {
                            "line": 94,
                            "column": 57
                        }
                    }
                ]
            },
            "10": {
                "line": 98,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 98,
                            "column": 18
                        },
                        "end": {
                            "line": 98,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 98,
                            "column": 29
                        },
                        "end": {
                            "line": 98,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 98,
                            "column": 52
                        },
                        "end": {
                            "line": 98,
                            "column": 59
                        }
                    }
                ]
            },
            "11": {
                "line": 161,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 161,
                            "column": 12
                        },
                        "end": {
                            "line": 161,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 161,
                            "column": 12
                        },
                        "end": {
                            "line": 161,
                            "column": 12
                        }
                    }
                ]
            },
            "12": {
                "line": 168,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 168,
                            "column": 8
                        },
                        "end": {
                            "line": 168,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 168,
                            "column": 8
                        },
                        "end": {
                            "line": 168,
                            "column": 8
                        }
                    }
                ]
            },
            "13": {
                "line": 170,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 170,
                            "column": 12
                        },
                        "end": {
                            "line": 170,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 170,
                            "column": 12
                        },
                        "end": {
                            "line": 170,
                            "column": 12
                        }
                    }
                ]
            },
            "14": {
                "line": 241,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 241,
                            "column": 8
                        },
                        "end": {
                            "line": 241,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 241,
                            "column": 8
                        },
                        "end": {
                            "line": 241,
                            "column": 8
                        }
                    }
                ]
            },
            "15": {
                "line": 242,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 242,
                            "column": 12
                        },
                        "end": {
                            "line": 242,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 242,
                            "column": 12
                        },
                        "end": {
                            "line": 242,
                            "column": 12
                        }
                    }
                ]
            },
            "16": {
                "line": 245,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 245,
                            "column": 12
                        },
                        "end": {
                            "line": 245,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 245,
                            "column": 12
                        },
                        "end": {
                            "line": 245,
                            "column": 12
                        }
                    }
                ]
            },
            "17": {
                "line": 250,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 250,
                            "column": 16
                        },
                        "end": {
                            "line": 250,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 250,
                            "column": 26
                        },
                        "end": {
                            "line": 250,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 250,
                            "column": 42
                        },
                        "end": {
                            "line": 250,
                            "column": 46
                        }
                    }
                ]
            },
            "18": {
                "line": 263,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 263,
                            "column": 8
                        },
                        "end": {
                            "line": 263,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 263,
                            "column": 8
                        },
                        "end": {
                            "line": 263,
                            "column": 8
                        }
                    }
                ]
            },
            "19": {
                "line": 263,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 263,
                            "column": 12
                        },
                        "end": {
                            "line": 263,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 263,
                            "column": 19
                        },
                        "end": {
                            "line": 263,
                            "column": 25
                        }
                    }
                ]
            },
            "20": {
                "line": 265,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 265,
                            "column": 40
                        },
                        "end": {
                            "line": 265,
                            "column": 56
                        }
                    },
                    {
                        "start": {
                            "line": 265,
                            "column": 59
                        },
                        "end": {
                            "line": 265,
                            "column": 67
                        }
                    }
                ]
            },
            "21": {
                "line": 269,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 269,
                            "column": 12
                        },
                        "end": {
                            "line": 269,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 269,
                            "column": 12
                        },
                        "end": {
                            "line": 269,
                            "column": 12
                        }
                    }
                ]
            },
            "22": {
                "line": 292,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 292,
                            "column": 25
                        },
                        "end": {
                            "line": 292,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 292,
                            "column": 48
                        },
                        "end": {
                            "line": 292,
                            "column": 71
                        }
                    }
                ]
            },
            "23": {
                "line": 295,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 296,
                            "column": 32
                        },
                        "end": {
                            "line": 296,
                            "column": 49
                        }
                    },
                    {
                        "start": {
                            "line": 297,
                            "column": 32
                        },
                        "end": {
                            "line": 297,
                            "column": 36
                        }
                    }
                ]
            },
            "24": {
                "line": 451,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 451,
                            "column": 38
                        },
                        "end": {
                            "line": 451,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 451,
                            "column": 51
                        },
                        "end": {
                            "line": 451,
                            "column": 55
                        }
                    }
                ]
            },
            "25": {
                "line": 455,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 456,
                            "column": 16
                        },
                        "end": {
                            "line": 456,
                            "column": 31
                        }
                    },
                    {
                        "start": {
                            "line": 457,
                            "column": 16
                        },
                        "end": {
                            "line": 457,
                            "column": 56
                        }
                    }
                ]
            },
            "26": {
                "line": 457,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 457,
                            "column": 24
                        },
                        "end": {
                            "line": 457,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 457,
                            "column": 36
                        },
                        "end": {
                            "line": 457,
                            "column": 55
                        }
                    }
                ]
            },
            "27": {
                "line": 459,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 459,
                            "column": 12
                        },
                        "end": {
                            "line": 459,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 459,
                            "column": 12
                        },
                        "end": {
                            "line": 459,
                            "column": 12
                        }
                    }
                ]
            },
            "28": {
                "line": 459,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 459,
                            "column": 16
                        },
                        "end": {
                            "line": 459,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 459,
                            "column": 33
                        },
                        "end": {
                            "line": 459,
                            "column": 51
                        }
                    }
                ]
            },
            "29": {
                "line": 473,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 473,
                            "column": 16
                        },
                        "end": {
                            "line": 473,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 473,
                            "column": 16
                        },
                        "end": {
                            "line": 473,
                            "column": 16
                        }
                    }
                ]
            },
            "30": {
                "line": 474,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 474,
                            "column": 20
                        },
                        "end": {
                            "line": 474,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 474,
                            "column": 20
                        },
                        "end": {
                            "line": 474,
                            "column": 20
                        }
                    }
                ]
            },
            "31": {
                "line": 481,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 481,
                            "column": 20
                        },
                        "end": {
                            "line": 481,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 481,
                            "column": 20
                        },
                        "end": {
                            "line": 481,
                            "column": 20
                        }
                    }
                ]
            },
            "32": {
                "line": 481,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 481,
                            "column": 24
                        },
                        "end": {
                            "line": 481,
                            "column": 41
                        }
                    },
                    {
                        "start": {
                            "line": 482,
                            "column": 24
                        },
                        "end": {
                            "line": 482,
                            "column": 61
                        }
                    }
                ]
            },
            "33": {
                "line": 489,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 490,
                            "column": 16
                        },
                        "end": {
                            "line": 490,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 491,
                            "column": 16
                        },
                        "end": {
                            "line": 491,
                            "column": 42
                        }
                    }
                ]
            },
            "34": {
                "line": 524,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 524,
                            "column": 12
                        },
                        "end": {
                            "line": 524,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 524,
                            "column": 12
                        },
                        "end": {
                            "line": 524,
                            "column": 12
                        }
                    }
                ]
            },
            "35": {
                "line": 585,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 586,
                            "column": 28
                        },
                        "end": {
                            "line": 586,
                            "column": 41
                        }
                    },
                    {
                        "start": {
                            "line": 586,
                            "column": 44
                        },
                        "end": {
                            "line": 586,
                            "column": 59
                        }
                    }
                ]
            },
            "36": {
                "line": 595,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 595,
                            "column": 16
                        },
                        "end": {
                            "line": 595,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 595,
                            "column": 16
                        },
                        "end": {
                            "line": 595,
                            "column": 16
                        }
                    }
                ]
            },
            "37": {
                "line": 598,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 598,
                            "column": 20
                        },
                        "end": {
                            "line": 598,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 598,
                            "column": 20
                        },
                        "end": {
                            "line": 598,
                            "column": 20
                        }
                    }
                ]
            },
            "38": {
                "line": 628,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 628,
                            "column": 12
                        },
                        "end": {
                            "line": 628,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 628,
                            "column": 12
                        },
                        "end": {
                            "line": 628,
                            "column": 12
                        }
                    }
                ]
            },
            "39": {
                "line": 631,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 631,
                            "column": 16
                        },
                        "end": {
                            "line": 631,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 631,
                            "column": 16
                        },
                        "end": {
                            "line": 631,
                            "column": 16
                        }
                    }
                ]
            },
            "40": {
                "line": 637,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 637,
                            "column": 20
                        },
                        "end": {
                            "line": 637,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 637,
                            "column": 20
                        },
                        "end": {
                            "line": 637,
                            "column": 20
                        }
                    }
                ]
            },
            "41": {
                "line": 638,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 638,
                            "column": 24
                        },
                        "end": {
                            "line": 638,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 638,
                            "column": 24
                        },
                        "end": {
                            "line": 638,
                            "column": 24
                        }
                    }
                ]
            },
            "42": {
                "line": 647,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 647,
                            "column": 19
                        },
                        "end": {
                            "line": 647,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 647,
                            "column": 37
                        },
                        "end": {
                            "line": 647,
                            "column": 44
                        }
                    }
                ]
            },
            "43": {
                "line": 671,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 671,
                            "column": 19
                        },
                        "end": {
                            "line": 671,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 671,
                            "column": 31
                        },
                        "end": {
                            "line": 671,
                            "column": 49
                        }
                    }
                ]
            },
            "44": {
                "line": 790,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 790,
                            "column": 4
                        },
                        "end": {
                            "line": 790,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 790,
                            "column": 4
                        },
                        "end": {
                            "line": 790,
                            "column": 4
                        }
                    }
                ]
            },
            "45": {
                "line": 790,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 790,
                            "column": 8
                        },
                        "end": {
                            "line": 790,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 790,
                            "column": 16
                        },
                        "end": {
                            "line": 790,
                            "column": 25
                        }
                    }
                ]
            },
            "46": {
                "line": 793,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 793,
                            "column": 11
                        },
                        "end": {
                            "line": 793,
                            "column": 11
                        }
                    },
                    {
                        "start": {
                            "line": 793,
                            "column": 11
                        },
                        "end": {
                            "line": 793,
                            "column": 11
                        }
                    }
                ]
            },
            "47": {
                "line": 797,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 797,
                            "column": 4
                        },
                        "end": {
                            "line": 797,
                            "column": 4
                        }
                    },
                    {
                        "start": {
                            "line": 797,
                            "column": 4
                        },
                        "end": {
                            "line": 797,
                            "column": 4
                        }
                    }
                ]
            },
            "48": {
                "line": 798,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 798,
                            "column": 8
                        },
                        "end": {
                            "line": 798,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 798,
                            "column": 8
                        },
                        "end": {
                            "line": 798,
                            "column": 8
                        }
                    }
                ]
            },
            "49": {
                "line": 798,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 798,
                            "column": 12
                        },
                        "end": {
                            "line": 798,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 798,
                            "column": 21
                        },
                        "end": {
                            "line": 798,
                            "column": 54
                        }
                    }
                ]
            },
            "50": {
                "line": 824,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 824,
                            "column": 11
                        },
                        "end": {
                            "line": 824,
                            "column": 11
                        }
                    },
                    {
                        "start": {
                            "line": 824,
                            "column": 11
                        },
                        "end": {
                            "line": 824,
                            "column": 11
                        }
                    }
                ]
            },
            "51": {
                "line": 824,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 824,
                            "column": 15
                        },
                        "end": {
                            "line": 824,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 824,
                            "column": 33
                        },
                        "end": {
                            "line": 824,
                            "column": 46
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('event-synthetic', function (Y, NAME) {",
            "",
            "/**",
            " * Define new DOM events that can be subscribed to from Nodes.",
            " *",
            " * @module event",
            " * @submodule event-synthetic",
            " */",
            "var CustomEvent = Y.CustomEvent,",
            "    DOMMap   = Y.Env.evt.dom_map,",
            "    toArray  = Y.Array,",
            "    YLang    = Y.Lang,",
            "    isObject = YLang.isObject,",
            "    isString = YLang.isString,",
            "    isArray  = YLang.isArray,",
            "    query    = Y.Selector.query,",
            "    noop     = function () {};",
            "",
            "/**",
            " * <p>The triggering mechanism used by SyntheticEvents.</p>",
            " *",
            " * <p>Implementers should not instantiate these directly.  Use the Notifier",
            " * provided to the event's implemented <code>on(node, sub, notifier)</code> or",
            " * <code>delegate(node, sub, notifier, filter)</code> methods.</p>",
            " *",
            " * @class SyntheticEvent.Notifier",
            " * @constructor",
            " * @param handle {EventHandle} the detach handle for the subscription to an",
            " *              internal custom event used to execute the callback passed to",
            " *              on(..) or delegate(..)",
            " * @param emitFacade {Boolean} take steps to ensure the first arg received by",
            " *              the subscription callback is an event facade",
            " * @private",
            " * @since 3.2.0",
            " */",
            "function Notifier(handle, emitFacade) {",
            "    this.handle     = handle;",
            "    this.emitFacade = emitFacade;",
            "}",
            "",
            "/**",
            " * <p>Executes the subscription callback, passing the firing arguments as the",
            " * first parameters to that callback. For events that are configured with",
            " * emitFacade=true, it is common practice to pass the triggering DOMEventFacade",
            " * as the first parameter.  Barring a proper DOMEventFacade or EventFacade",
            " * (from a CustomEvent), a new EventFacade will be generated.  In that case, if",
            " * fire() is called with a simple object, it will be mixed into the facade.",
            " * Otherwise, the facade will be prepended to the callback parameters.</p>",
            " *",
            " * <p>For notifiers provided to delegate logic, the first argument should be an",
            " * object with a &quot;currentTarget&quot; property to identify what object to",
            " * default as 'this' in the callback.  Typically this is gleaned from the",
            " * DOMEventFacade or EventFacade, but if configured with emitFacade=false, an",
            " * object must be provided.  In that case, the object will be removed from the",
            " * callback parameters.</p>",
            " *",
            " * <p>Additional arguments passed during event subscription will be",
            " * automatically added after those passed to fire().</p>",
            " *",
            " * @method fire",
            " * @param e {EventFacade|DOMEventFacade|Object|any} (see description)",
            " * @param arg* {any} additional arguments received by all subscriptions",
            " * @private",
            " */",
            "Notifier.prototype.fire = function (e) {",
            "    // first arg to delegate notifier should be an object with currentTarget",
            "    var args     = toArray(arguments, 0, true),",
            "        handle   = this.handle,",
            "        ce       = handle.evt,",
            "        sub      = handle.sub,",
            "        thisObj  = sub.context,",
            "        delegate = sub.filter,",
            "        event    = e || {},",
            "        ret;",
            "",
            "    if (this.emitFacade) {",
            "        if (!e || !e.preventDefault) {",
            "            event = ce._getFacade();",
            "",
            "            if (isObject(e) && !e.preventDefault) {",
            "                Y.mix(event, e, true);",
            "                args[0] = event;",
            "            } else {",
            "                args.unshift(event);",
            "            }",
            "        }",
            "",
            "        event.type    = ce.type;",
            "        event.details = args.slice();",
            "",
            "        if (delegate) {",
            "            event.container = ce.host;",
            "        }",
            "    } else if (delegate && isObject(e) && e.currentTarget) {",
            "        args.shift();",
            "    }",
            "",
            "    sub.context = thisObj || event.currentTarget || ce.host;",
            "    ret = ce.fire.apply(ce, args);",
            "    sub.context = thisObj; // reset for future firing",
            "",
            "    // to capture callbacks that return false to stopPropagation.",
            "    // Useful for delegate implementations",
            "    return ret;",
            "};",
            "",
            "/**",
            " * Manager object for synthetic event subscriptions to aggregate multiple synths on the",
            " * same node without colliding with actual DOM subscription entries in the global map of",
            " * DOM subscriptions.  Also facilitates proper cleanup on page unload.",
            " *",
            " * @class SynthRegistry",
            " * @constructor",
            " * @param el {HTMLElement} the DOM element",
            " * @param yuid {String} the yuid stamp for the element",
            " * @param key {String} the generated id token used to identify an event type +",
            " *                     element in the global DOM subscription map.",
            " * @private",
            " */",
            "function SynthRegistry(el, yuid, key) {",
            "    this.handles = [];",
            "    this.el      = el;",
            "    this.key     = key;",
            "    this.domkey  = yuid;",
            "}",
            "",
            "SynthRegistry.prototype = {",
            "    constructor: SynthRegistry,",
            "",
            "    // A few object properties to fake the CustomEvent interface for page",
            "    // unload cleanup.  DON'T TOUCH!",
            "    type      : '_synth',",
            "    fn        : noop,",
            "    capture   : false,",
            "",
            "    /**",
            "     * Adds a subscription from the Notifier registry.",
            "     *",
            "     * @method register",
            "     * @param handle {EventHandle} the subscription",
            "     * @since 3.4.0",
            "     */",
            "    register: function (handle) {",
            "        handle.evt.registry = this;",
            "        this.handles.push(handle);",
            "    },",
            "",
            "    /**",
            "     * Removes the subscription from the Notifier registry.",
            "     *",
            "     * @method _unregisterSub",
            "     * @param sub {Subscription} the subscription",
            "     * @since 3.4.0",
            "     */",
            "    unregister: function (sub) {",
            "        var handles = this.handles,",
            "            events = DOMMap[this.domkey],",
            "            i;",
            "",
            "        for (i = handles.length - 1; i >= 0; --i) {",
            "            if (handles[i].sub === sub) {",
            "                handles.splice(i, 1);",
            "                break;",
            "            }",
            "        }",
            "",
            "        // Clean up left over objects when there are no more subscribers.",
            "        if (!handles.length) {",
            "            delete events[this.key];",
            "            if (!Y.Object.size(events)) {",
            "                delete DOMMap[this.domkey];",
            "            }",
            "        }",
            "    },",
            "",
            "    /**",
            "     * Used by the event system's unload cleanup process.  When navigating",
            "     * away from the page, the event system iterates the global map of element",
            "     * subscriptions and detaches everything using detachAll().  Normally,",
            "     * the map is populated with custom events, so this object needs to",
            "     * at least support the detachAll method to duck type its way to",
            "     * cleanliness.",
            "     *",
            "     * @method detachAll",
            "     * @private",
            "     * @since 3.4.0",
            "     */",
            "    detachAll : function () {",
            "        var handles = this.handles,",
            "            i = handles.length;",
            "",
            "        while (--i >= 0) {",
            "            handles[i].detach();",
            "        }",
            "    }",
            "};",
            "",
            "/**",
            " * <p>Wrapper class for the integration of new events into the YUI event",
            " * infrastructure.  Don't instantiate this object directly, use",
            " * <code>Y.Event.define(type, config)</code>.  See that method for details.</p>",
            " *",
            " * <p>Properties that MAY or SHOULD be specified in the configuration are noted",
            " * below and in the description of <code>Y.Event.define</code>.</p>",
            " *",
            " * @class SyntheticEvent",
            " * @constructor",
            " * @param cfg {Object} Implementation pieces and configuration",
            " * @since 3.1.0",
            " * @in event-synthetic",
            " */",
            "function SyntheticEvent() {",
            "    this._init.apply(this, arguments);",
            "}",
            "",
            "Y.mix(SyntheticEvent, {",
            "    Notifier: Notifier,",
            "    SynthRegistry: SynthRegistry,",
            "",
            "    /**",
            "     * Returns the array of subscription handles for a node for the given event",
            "     * type.  Passing true as the third argument will create a registry entry",
            "     * in the event system's DOM map to host the array if one doesn't yet exist.",
            "     *",
            "     * @method getRegistry",
            "     * @param node {Node} the node",
            "     * @param type {String} the event",
            "     * @param create {Boolean} create a registration entry to host a new array",
            "     *                  if one doesn't exist.",
            "     * @return {Array}",
            "     * @static",
            "     * @protected",
            "     * @since 3.2.0",
            "     */",
            "    getRegistry: function (node, type, create) {",
            "        var el     = node._node,",
            "            yuid   = Y.stamp(el),",
            "            key    = 'event:' + yuid + type + '_synth',",
            "            events = DOMMap[yuid];",
            "",
            "        if (create) {",
            "            if (!events) {",
            "                events = DOMMap[yuid] = {};",
            "            }",
            "            if (!events[key]) {",
            "                events[key] = new SynthRegistry(el, yuid, key);",
            "            }",
            "        }",
            "",
            "        return (events && events[key]) || null;",
            "    },",
            "",
            "    /**",
            "     * Alternate <code>_delete()</code> method for the CustomEvent object",
            "     * created to manage SyntheticEvent subscriptions.",
            "     *",
            "     * @method _deleteSub",
            "     * @param sub {Subscription} the subscription to clean up",
            "     * @private",
            "     * @since 3.2.0",
            "     */",
            "    _deleteSub: function (sub) {",
            "        if (sub && sub.fn) {",
            "            var synth = this.eventDef,",
            "                method = (sub.filter) ? 'detachDelegate' : 'detach';",
            "",
            "            this._subscribers = [];",
            "",
            "            if (CustomEvent.keepDeprecatedSubs) {",
            "                this.subscribers = {};",
            "            }",
            "",
            "            synth[method](sub.node, sub, this.notifier, sub.filter);",
            "            this.registry.unregister(sub);",
            "",
            "            delete sub.fn;",
            "            delete sub.node;",
            "            delete sub.context;",
            "        }",
            "    },",
            "",
            "    prototype: {",
            "        constructor: SyntheticEvent,",
            "",
            "        /**",
            "         * Construction logic for the event.",
            "         *",
            "         * @method _init",
            "         * @protected",
            "         */",
            "        _init: function () {",
            "            var config = this.publishConfig || (this.publishConfig = {});",
            "",
            "            // The notification mechanism handles facade creation",
            "            this.emitFacade = ('emitFacade' in config) ?",
            "                                config.emitFacade :",
            "                                true;",
            "            config.emitFacade  = false;",
            "        },",
            "",
            "        /**",
            "         * <p>Implementers MAY provide this method definition.</p>",
            "         *",
            "         * <p>Implement this function if the event supports a different",
            "         * subscription signature.  This function is used by both",
            "         * <code>on()</code> and <code>delegate()</code>.  The second parameter",
            "         * indicates that the event is being subscribed via",
            "         * <code>delegate()</code>.</p>",
            "         *",
            "         * <p>Implementations must remove extra arguments from the args list",
            "         * before returning.  The required args for <code>on()</code>",
            "         * subscriptions are</p>",
            "         * <pre><code>[type, callback, target, context, argN...]</code></pre>",
            "         *",
            "         * <p>The required args for <code>delegate()</code>",
            "         * subscriptions are</p>",
            "         *",
            "         * <pre><code>[type, callback, target, filter, context, argN...]</code></pre>",
            "         *",
            "         * <p>The return value from this function will be stored on the",
            "         * subscription in the '_extra' property for reference elsewhere.</p>",
            "         *",
            "         * @method processArgs",
            "         * @param args {Array} parmeters passed to Y.on(..) or Y.delegate(..)",
            "         * @param delegate {Boolean} true if the subscription is from Y.delegate",
            "         * @return {any}",
            "         */",
            "        processArgs: noop,",
            "",
            "        /**",
            "         * <p>Implementers MAY override this property.</p>",
            "         *",
            "         * <p>Whether to prevent multiple subscriptions to this event that are",
            "         * classified as being the same.  By default, this means the subscribed",
            "         * callback is the same function.  See the <code>subMatch</code>",
            "         * method.  Setting this to true will impact performance for high volume",
            "         * events.</p>",
            "         *",
            "         * @property preventDups",
            "         * @type {Boolean}",
            "         * @default false",
            "         */",
            "        //preventDups  : false,",
            "",
            "        /**",
            "         * <p>Implementers SHOULD provide this method definition.</p>",
            "         *",
            "         * Implementation logic for subscriptions done via <code>node.on(type,",
            "         * fn)</code> or <code>Y.on(type, fn, target)</code>.  This",
            "         * function should set up the monitor(s) that will eventually fire the",
            "         * event.  Typically this involves subscribing to at least one DOM",
            "         * event.  It is recommended to store detach handles from any DOM",
            "         * subscriptions to make for easy cleanup in the <code>detach</code>",
            "         * method.  Typically these handles are added to the <code>sub</code>",
            "         * object.  Also for SyntheticEvents that leverage a single DOM",
            "         * subscription under the hood, it is recommended to pass the DOM event",
            "         * object to <code>notifier.fire(e)</code>.  (The event name on the",
            "         * object will be updated).",
            "         *",
            "         * @method on",
            "         * @param node {Node} the node the subscription is being applied to",
            "         * @param sub {Subscription} the object to track this subscription",
            "         * @param notifier {SyntheticEvent.Notifier} call notifier.fire(..) to",
            "         *              trigger the execution of the subscribers",
            "         */",
            "        on: noop,",
            "",
            "        /**",
            "         * <p>Implementers SHOULD provide this method definition.</p>",
            "         *",
            "         * <p>Implementation logic for detaching subscriptions done via",
            "         * <code>node.on(type, fn)</code>.  This function should clean up any",
            "         * subscriptions made in the <code>on()</code> phase.</p>",
            "         *",
            "         * @method detach",
            "         * @param node {Node} the node the subscription was applied to",
            "         * @param sub {Subscription} the object tracking this subscription",
            "         * @param notifier {SyntheticEvent.Notifier} the Notifier used to",
            "         *              trigger the execution of the subscribers",
            "         */",
            "        detach: noop,",
            "",
            "        /**",
            "         * <p>Implementers SHOULD provide this method definition.</p>",
            "         *",
            "         * <p>Implementation logic for subscriptions done via",
            "         * <code>node.delegate(type, fn, filter)</code> or",
            "         * <code>Y.delegate(type, fn, container, filter)</code>.  Like with",
            "         * <code>on()</code> above, this function should monitor the environment",
            "         * for the event being fired, and trigger subscription execution by",
            "         * calling <code>notifier.fire(e)</code>.</p>",
            "         *",
            "         * <p>This function receives a fourth argument, which is the filter",
            "         * used to identify which Node's are of interest to the subscription.",
            "         * The filter will be either a boolean function that accepts a target",
            "         * Node for each hierarchy level as the event bubbles, or a selector",
            "         * string.  To translate selector strings into filter functions, use",
            "         * <code>Y.delegate.compileFilter(filter)</code>.</p>",
            "         *",
            "         * @method delegate",
            "         * @param node {Node} the node the subscription is being applied to",
            "         * @param sub {Subscription} the object to track this subscription",
            "         * @param notifier {SyntheticEvent.Notifier} call notifier.fire(..) to",
            "         *              trigger the execution of the subscribers",
            "         * @param filter {String|Function} Selector string or function that",
            "         *              accepts an event object and returns null, a Node, or an",
            "         *              array of Nodes matching the criteria for processing.",
            "         * @since 3.2.0",
            "         */",
            "        delegate       : noop,",
            "",
            "        /**",
            "         * <p>Implementers SHOULD provide this method definition.</p>",
            "         *",
            "         * <p>Implementation logic for detaching subscriptions done via",
            "         * <code>node.delegate(type, fn, filter)</code> or",
            "         * <code>Y.delegate(type, fn, container, filter)</code>.  This function",
            "         * should clean up any subscriptions made in the",
            "         * <code>delegate()</code> phase.</p>",
            "         *",
            "         * @method detachDelegate",
            "         * @param node {Node} the node the subscription was applied to",
            "         * @param sub {Subscription} the object tracking this subscription",
            "         * @param notifier {SyntheticEvent.Notifier} the Notifier used to",
            "         *              trigger the execution of the subscribers",
            "         * @param filter {String|Function} Selector string or function that",
            "         *              accepts an event object and returns null, a Node, or an",
            "         *              array of Nodes matching the criteria for processing.",
            "         * @since 3.2.0",
            "         */",
            "        detachDelegate : noop,",
            "",
            "        /**",
            "         * Sets up the boilerplate for detaching the event and facilitating the",
            "         * execution of subscriber callbacks.",
            "         *",
            "         * @method _on",
            "         * @param args {Array} array of arguments passed to",
            "         *              <code>Y.on(...)</code> or <code>Y.delegate(...)</code>",
            "         * @param delegate {Boolean} true if called from",
            "         * <code>Y.delegate(...)</code>",
            "         * @return {EventHandle} the detach handle for this subscription",
            "         * @private",
            "         * since 3.2.0",
            "         */",
            "        _on: function (args, delegate) {",
            "            var handles  = [],",
            "                originalArgs = args.slice(),",
            "                extra    = this.processArgs(args, delegate),",
            "                selector = args[2],",
            "                method   = delegate ? 'delegate' : 'on',",
            "                nodes, handle;",
            "",
            "            // Can't just use Y.all because it doesn't support window (yet?)",
            "            nodes = (isString(selector)) ?",
            "                query(selector) :",
            "                toArray(selector || Y.one(Y.config.win));",
            "",
            "            if (!nodes.length && isString(selector)) {",
            "                handle = Y.on('available', function () {",
            "                    Y.mix(handle, Y[method].apply(Y, originalArgs), true);",
            "                }, selector);",
            "",
            "                return handle;",
            "            }",
            "",
            "            Y.Array.each(nodes, function (node) {",
            "                var subArgs = args.slice(),",
            "                    filter;",
            "",
            "                node = Y.one(node);",
            "",
            "                if (node) {",
            "                    if (delegate) {",
            "                        filter = subArgs.splice(3, 1)[0];",
            "                    }",
            "",
            "                    // (type, fn, el, thisObj, ...) => (fn, thisObj, ...)",
            "                    subArgs.splice(0, 4, subArgs[1], subArgs[3]);",
            "",
            "                    if (!this.preventDups ||",
            "                        !this.getSubs(node, args, null, true))",
            "                    {",
            "                        handles.push(this._subscribe(node, method, subArgs, extra, filter));",
            "                    }",
            "                }",
            "            }, this);",
            "",
            "            return (handles.length === 1) ?",
            "                handles[0] :",
            "                new Y.EventHandle(handles);",
            "        },",
            "",
            "        /**",
            "         * Creates a new Notifier object for use by this event's",
            "         * <code>on(...)</code> or <code>delegate(...)</code> implementation",
            "         * and register the custom event proxy in the DOM system for cleanup.",
            "         *",
            "         * @method _subscribe",
            "         * @param node {Node} the Node hosting the event",
            "         * @param method {String} \"on\" or \"delegate\"",
            "         * @param args {Array} the subscription arguments passed to either",
            "         *              <code>Y.on(...)</code> or <code>Y.delegate(...)</code>",
            "         *              after running through <code>processArgs(args)</code> to",
            "         *              normalize the argument signature",
            "         * @param extra {any} Extra data parsed from",
            "         *              <code>processArgs(args)</code>",
            "         * @param filter {String|Function} the selector string or function",
            "         *              filter passed to <code>Y.delegate(...)</code> (not",
            "         *              present when called from <code>Y.on(...)</code>)",
            "         * @return {EventHandle}",
            "         * @private",
            "         * @since 3.2.0",
            "         */",
            "        _subscribe: function (node, method, args, extra, filter) {",
            "            var dispatcher = new Y.CustomEvent(this.type, this.publishConfig),",
            "                handle     = dispatcher.on.apply(dispatcher, args),",
            "                notifier   = new Notifier(handle, this.emitFacade),",
            "                registry   = SyntheticEvent.getRegistry(node, this.type, true),",
            "                sub        = handle.sub;",
            "",
            "            sub.node   = node;",
            "            sub.filter = filter;",
            "            if (extra) {",
            "                this.applyArgExtras(extra, sub);",
            "            }",
            "",
            "            Y.mix(dispatcher, {",
            "                eventDef     : this,",
            "                notifier     : notifier,",
            "                host         : node,       // I forget what this is for",
            "                currentTarget: node,       // for generating facades",
            "                target       : node,       // for generating facades",
            "                el           : node._node, // For category detach",
            "",
            "                _delete      : SyntheticEvent._deleteSub",
            "            }, true);",
            "",
            "            handle.notifier = notifier;",
            "",
            "            registry.register(handle);",
            "",
            "            // Call the implementation's \"on\" or \"delegate\" method",
            "            this[method](node, sub, notifier, filter);",
            "",
            "            return handle;",
            "        },",
            "",
            "        /**",
            "         * <p>Implementers MAY provide this method definition.</p>",
            "         *",
            "         * <p>Implement this function if you want extra data extracted during",
            "         * processArgs to be propagated to subscriptions on a per-node basis.",
            "         * That is to say, if you call <code>Y.on('xyz', fn, xtra, 'div')</code>",
            "         * the data returned from processArgs will be shared",
            "         * across the subscription objects for all the divs.  If you want each",
            "         * subscription to receive unique information, do that processing",
            "         * here.</p>",
            "         *",
            "         * <p>The default implementation adds the data extracted by processArgs",
            "         * to the subscription object as <code>sub._extra</code>.</p>",
            "         *",
            "         * @method applyArgExtras",
            "         * @param extra {any} Any extra data extracted from processArgs",
            "         * @param sub {Subscription} the individual subscription",
            "         */",
            "        applyArgExtras: function (extra, sub) {",
            "            sub._extra = extra;",
            "        },",
            "",
            "        /**",
            "         * Removes the subscription(s) from the internal subscription dispatch",
            "         * mechanism.  See <code>SyntheticEvent._deleteSub</code>.",
            "         *",
            "         * @method _detach",
            "         * @param args {Array} The arguments passed to",
            "         *                  <code>node.detach(...)</code>",
            "         * @private",
            "         * @since 3.2.0",
            "         */",
            "        _detach: function (args) {",
            "            // Can't use Y.all because it doesn't support window (yet?)",
            "            // TODO: Does Y.all support window now?",
            "            var target = args[2],",
            "                els    = (isString(target)) ?",
            "                            query(target) : toArray(target),",
            "                node, i, len, handles, j;",
            "",
            "            // (type, fn, el, context, filter?) => (type, fn, context, filter?)",
            "            args.splice(2, 1);",
            "",
            "            for (i = 0, len = els.length; i < len; ++i) {",
            "                node = Y.one(els[i]);",
            "",
            "                if (node) {",
            "                    handles = this.getSubs(node, args);",
            "",
            "                    if (handles) {",
            "                        for (j = handles.length - 1; j >= 0; --j) {",
            "                            handles[j].detach();",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Returns the detach handles of subscriptions on a node that satisfy a",
            "         * search/filter function.  By default, the filter used is the",
            "         * <code>subMatch</code> method.",
            "         *",
            "         * @method getSubs",
            "         * @param node {Node} the node hosting the event",
            "         * @param args {Array} the array of original subscription args passed",
            "         *              to <code>Y.on(...)</code> (before",
            "         *              <code>processArgs</code>",
            "         * @param filter {Function} function used to identify a subscription",
            "         *              for inclusion in the returned array",
            "         * @param first {Boolean} stop after the first match (used to check for",
            "         *              duplicate subscriptions)",
            "         * @return {EventHandle[]} detach handles for the matching subscriptions",
            "         */",
            "        getSubs: function (node, args, filter, first) {",
            "            var registry = SyntheticEvent.getRegistry(node, this.type),",
            "                handles  = [],",
            "                allHandles, i, len, handle;",
            "",
            "            if (registry) {",
            "                allHandles = registry.handles;",
            "",
            "                if (!filter) {",
            "                    filter = this.subMatch;",
            "                }",
            "",
            "                for (i = 0, len = allHandles.length; i < len; ++i) {",
            "                    handle = allHandles[i];",
            "                    if (filter.call(this, handle.sub, args)) {",
            "                        if (first) {",
            "                            return handle;",
            "                        } else {",
            "                            handles.push(allHandles[i]);",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "",
            "            return handles.length && handles;",
            "        },",
            "",
            "        /**",
            "         * <p>Implementers MAY override this to define what constitutes a",
            "         * &quot;same&quot; subscription.  Override implementations should",
            "         * consider the lack of a comparator as a match, so calling",
            "         * <code>getSubs()</code> with no arguments will return all subs.</p>",
            "         *",
            "         * <p>Compares a set of subscription arguments against a Subscription",
            "         * object to determine if they match.  The default implementation",
            "         * compares the callback function against the second argument passed to",
            "         * <code>Y.on(...)</code> or <code>node.detach(...)</code> etc.</p>",
            "         *",
            "         * @method subMatch",
            "         * @param sub {Subscription} the existing subscription",
            "         * @param args {Array} the calling arguments passed to",
            "         *                  <code>Y.on(...)</code> etc.",
            "         * @return {Boolean} true if the sub can be described by the args",
            "         *                  present",
            "         * @since 3.2.0",
            "         */",
            "        subMatch: function (sub, args) {",
            "            // Default detach cares only about the callback matching",
            "            return !args[1] || sub.fn === args[1];",
            "        }",
            "    }",
            "}, true);",
            "",
            "Y.SyntheticEvent = SyntheticEvent;",
            "",
            "/**",
            " * <p>Defines a new event in the DOM event system.  Implementers are",
            " * responsible for monitoring for a scenario whereby the event is fired.  A",
            " * notifier object is provided to the functions identified below.  When the",
            " * criteria defining the event are met, call notifier.fire( [args] ); to",
            " * execute event subscribers.</p>",
            " *",
            " * <p>The first parameter is the name of the event.  The second parameter is a",
            " * configuration object which define the behavior of the event system when the",
            " * new event is subscribed to or detached from.  The methods that should be",
            " * defined in this configuration object are <code>on</code>,",
            " * <code>detach</code>, <code>delegate</code>, and <code>detachDelegate</code>.",
            " * You are free to define any other methods or properties needed to define your",
            " * event.  Be aware, however, that since the object is used to subclass",
            " * SyntheticEvent, you should avoid method names used by SyntheticEvent unless",
            " * your intention is to override the default behavior.</p>",
            " *",
            " * <p>This is a list of properties and methods that you can or should specify",
            " * in the configuration object:</p>",
            " *",
            " * <dl>",
            " *   <dt><code>on</code></dt>",
            " *       <dd><code>function (node, subscription, notifier)</code> The",
            " *       implementation logic for subscription.  Any special setup you need to",
            " *       do to create the environment for the event being fired--E.g. native",
            " *       DOM event subscriptions.  Store subscription related objects and",
            " *       state on the <code>subscription</code> object.  When the",
            " *       criteria have been met to fire the synthetic event, call",
            " *       <code>notifier.fire(e)</code>.  See Notifier's <code>fire()</code>",
            " *       method for details about what to pass as parameters.</dd>",
            " *",
            " *   <dt><code>detach</code></dt>",
            " *       <dd><code>function (node, subscription, notifier)</code> The",
            " *       implementation logic for cleaning up a detached subscription. E.g.",
            " *       detach any DOM subscriptions added in <code>on</code>.</dd>",
            " *",
            " *   <dt><code>delegate</code></dt>",
            " *       <dd><code>function (node, subscription, notifier, filter)</code> The",
            " *       implementation logic for subscription via <code>Y.delegate</code> or",
            " *       <code>node.delegate</code>.  The filter is typically either a selector",
            " *       string or a function.  You can use",
            " *       <code>Y.delegate.compileFilter(selectorString)</code> to create a",
            " *       filter function from a selector string if needed.  The filter function",
            " *       expects an event object as input and should output either null, a",
            " *       matching Node, or an array of matching Nodes.  Otherwise, this acts",
            " *       like <code>on</code> DOM event subscriptions.  Store subscription",
            " *       related objects and information on the <code>subscription</code>",
            " *       object.  When the criteria have been met to fire the synthetic event,",
            " *       call <code>notifier.fire(e)</code> as noted above.</dd>",
            " *",
            " *   <dt><code>detachDelegate</code></dt>",
            " *       <dd><code>function (node, subscription, notifier)</code> The",
            " *       implementation logic for cleaning up a detached delegate subscription.",
            " *       E.g. detach any DOM delegate subscriptions added in",
            " *       <code>delegate</code>.</dd>",
            " *",
            " *   <dt><code>publishConfig</code></dt>",
            " *       <dd>(Object) The configuration object that will be used to instantiate",
            " *       the underlying CustomEvent. See Notifier's <code>fire</code> method",
            " *       for details.</dd>",
            " *",
            " *   <dt><code>processArgs</code></dt",
            " *       <dd>",
            " *          <p><code>function (argArray, fromDelegate)</code> Optional method",
            " *          to extract any additional arguments from the subscription",
            " *          signature.  Using this allows <code>on</code> or",
            " *          <code>delegate</code> signatures like",
            " *          <code>node.on(&quot;hover&quot;, overCallback,",
            " *          outCallback)</code>.</p>",
            " *          <p>When processing an atypical argument signature, make sure the",
            " *          args array is returned to the normal signature before returning",
            " *          from the function.  For example, in the &quot;hover&quot; example",
            " *          above, the <code>outCallback</code> needs to be <code>splice</code>d",
            " *          out of the array.  The expected signature of the args array for",
            " *          <code>on()</code> subscriptions is:</p>",
            " *          <pre>",
            " *              <code>[type, callback, target, contextOverride, argN...]</code>",
            " *          </pre>",
            " *          <p>And for <code>delegate()</code>:</p>",
            " *          <pre>",
            " *              <code>[type, callback, target, filter, contextOverride, argN...]</code>",
            " *          </pre>",
            " *          <p>where <code>target</code> is the node the event is being",
            " *          subscribed for.  You can see these signatures documented for",
            " *          <code>Y.on()</code> and <code>Y.delegate()</code> respectively.</p>",
            " *          <p>Whatever gets returned from the function will be stored on the",
            " *          <code>subscription</code> object under",
            " *          <code>subscription._extra</code>.</p></dd>",
            " *   <dt><code>subMatch</code></dt>",
            " *       <dd>",
            " *           <p><code>function (sub, args)</code>  Compares a set of",
            " *           subscription arguments against a Subscription object to determine",
            " *           if they match.  The default implementation compares the callback",
            " *           function against the second argument passed to",
            " *           <code>Y.on(...)</code> or <code>node.detach(...)</code> etc.</p>",
            " *       </dd>",
            " * </dl>",
            " *",
            " * @method define",
            " * @param type {String} the name of the event",
            " * @param config {Object} the prototype definition for the new event (see above)",
            " * @param force {Boolean} override an existing event (use with caution)",
            " * @return {SyntheticEvent} the subclass implementation instance created to",
            " *              handle event subscriptions of this type",
            " * @static",
            " * @for Event",
            " * @since 3.1.0",
            " * @in event-synthetic",
            " */",
            "Y.Event.define = function (type, config, force) {",
            "    var eventDef, Impl, synth;",
            "",
            "    if (type && type.type) {",
            "        eventDef = type;",
            "        force = config;",
            "    } else if (config) {",
            "        eventDef = Y.merge({ type: type }, config);",
            "    }",
            "",
            "    if (eventDef) {",
            "        if (force || !Y.Node.DOM_EVENTS[eventDef.type]) {",
            "            Impl = function () {",
            "                SyntheticEvent.apply(this, arguments);",
            "            };",
            "            Y.extend(Impl, SyntheticEvent, eventDef);",
            "            synth = new Impl();",
            "",
            "            type = synth.type;",
            "",
            "            Y.Node.DOM_EVENTS[type] = Y.Env.evt.plugins[type] = {",
            "                eventDef: synth,",
            "",
            "                on: function () {",
            "                    return synth._on(toArray(arguments));",
            "                },",
            "",
            "                delegate: function () {",
            "                    return synth._on(toArray(arguments), true);",
            "                },",
            "",
            "                detach: function () {",
            "                    return synth._detach(toArray(arguments));",
            "                }",
            "            };",
            "",
            "        }",
            "    } else if (isString(type) || isArray(type)) {",
            "        Y.Array.each(toArray(type), function (t) {",
            "            Y.Node.DOM_EVENTS[t] = 1;",
            "        });",
            "    }",
            "",
            "    return synth;",
            "};",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"node-base\", \"event-custom-complex\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "9": 1,
            "36": 1,
            "37": 205,
            "38": 205,
            "65": 1,
            "67": 234,
            "76": 234,
            "77": 234,
            "78": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "84": 0,
            "88": 234,
            "89": 234,
            "91": 234,
            "92": 30,
            "94": 0,
            "95": 0,
            "98": 234,
            "99": 234,
            "100": 234,
            "104": 234,
            "120": 1,
            "121": 177,
            "122": 177,
            "123": 177,
            "124": 177,
            "127": 1,
            "144": 205,
            "145": 205,
            "156": 204,
            "160": 204,
            "161": 204,
            "162": 204,
            "163": 204,
            "168": 204,
            "169": 176,
            "170": 176,
            "171": 155,
            "189": 137,
            "192": 137,
            "193": 153,
            "212": 1,
            "213": 89,
            "216": 1,
            "236": 243,
            "241": 243,
            "242": 205,
            "243": 177,
            "245": 205,
            "246": 177,
            "250": 243,
            "263": 204,
            "264": 204,
            "267": 204,
            "269": 204,
            "270": 0,
            "273": 204,
            "274": 204,
            "276": 204,
            "277": 204,
            "278": 204,
            "292": 89,
            "295": 89,
            "298": 89,
            "447": 125,
            "455": 125,
            "459": 125,
            "460": 9,
            "461": 9,
            "464": 9,
            "467": 116,
            "468": 208,
            "471": 208,
            "473": 208,
            "474": 208,
            "475": 17,
            "479": 208,
            "481": 208,
            "484": 205,
            "489": 116,
            "516": 205,
            "522": 205,
            "523": 205,
            "524": 205,
            "525": 2,
            "528": 205,
            "539": 205,
            "541": 205,
            "544": 205,
            "546": 205,
            "568": 2,
            "584": 32,
            "590": 32,
            "592": 32,
            "593": 32,
            "595": 32,
            "596": 32,
            "598": 32,
            "599": 28,
            "600": 40,
            "624": 38,
            "628": 38,
            "629": 31,
            "631": 31,
            "632": 31,
            "635": 31,
            "636": 43,
            "637": 43,
            "638": 43,
            "639": 3,
            "641": 40,
            "647": 35,
            "671": 43,
            "676": 1,
            "787": 1,
            "788": 92,
            "790": 92,
            "791": 2,
            "792": 2,
            "793": 90,
            "794": 88,
            "797": 92,
            "798": 90,
            "799": 89,
            "800": 89,
            "802": 89,
            "803": 89,
            "805": 89,
            "807": 89,
            "811": 106,
            "815": 19,
            "819": 32,
            "824": 2,
            "825": 2,
            "826": 3,
            "830": 92
        }
    }
}