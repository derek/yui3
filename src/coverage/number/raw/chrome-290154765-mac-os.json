{
    "build/datatype-number-parse/datatype-number-parse.js": {
        "path": "build/datatype-number-parse/datatype-number-parse.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 9,
            "5": 9,
            "6": 6,
            "7": 3,
            "8": 1,
            "9": 1,
            "10": 1
        },
        "b": {
            "1": [
                2,
                7
            ],
            "2": [
                9,
                8
            ],
            "3": [
                6,
                3
            ]
        },
        "f": {
            "1": 1,
            "2": 9
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 33
                    },
                    "end": {
                        "line": 1,
                        "column": 52
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 22,
                "loc": {
                    "start": {
                        "line": 22,
                        "column": 11
                    },
                    "end": {
                        "line": 22,
                        "column": 26
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 39,
                    "column": 16
                }
            },
            "2": {
                "start": {
                    "line": 11,
                    "column": 0
                },
                "end": {
                    "line": 11,
                    "column": 18
                }
            },
            "3": {
                "start": {
                    "line": 13,
                    "column": 0
                },
                "end": {
                    "line": 31,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 23,
                    "column": 8
                },
                "end": {
                    "line": 23,
                    "column": 67
                }
            },
            "5": {
                "start": {
                    "line": 24,
                    "column": 8
                },
                "end": {
                    "line": 29,
                    "column": 9
                }
            },
            "6": {
                "start": {
                    "line": 25,
                    "column": 12
                },
                "end": {
                    "line": 25,
                    "column": 26
                }
            },
            "7": {
                "start": {
                    "line": 28,
                    "column": 12
                },
                "end": {
                    "line": 28,
                    "column": 24
                }
            },
            "8": {
                "start": {
                    "line": 34,
                    "column": 0
                },
                "end": {
                    "line": 34,
                    "column": 47
                }
            },
            "9": {
                "start": {
                    "line": 35,
                    "column": 0
                },
                "end": {
                    "line": 35,
                    "column": 24
                }
            },
            "10": {
                "start": {
                    "line": 36,
                    "column": 0
                },
                "end": {
                    "line": 36,
                    "column": 29
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 23,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 23,
                            "column": 54
                        },
                        "end": {
                            "line": 23,
                            "column": 58
                        }
                    },
                    {
                        "start": {
                            "line": 23,
                            "column": 61
                        },
                        "end": {
                            "line": 23,
                            "column": 66
                        }
                    }
                ]
            },
            "2": {
                "line": 23,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 23,
                            "column": 22
                        },
                        "end": {
                            "line": 23,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 23,
                            "column": 39
                        },
                        "end": {
                            "line": 23,
                            "column": 50
                        }
                    }
                ]
            },
            "3": {
                "line": 24,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 24,
                            "column": 8
                        },
                        "end": {
                            "line": 24,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 24,
                            "column": 8
                        },
                        "end": {
                            "line": 24,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('datatype-number-parse', function (Y, NAME) {",
            "",
            "/**",
            " * Parse number submodule.",
            " *",
            " * @module datatype-number",
            " * @submodule datatype-number-parse",
            " * @for Number",
            " */",
            "",
            "var LANG = Y.Lang;",
            "",
            "Y.mix(Y.namespace(\"Number\"), {",
            "    /**",
            "     * Converts data to type Number.",
            "     *",
            "     * @method parse",
            "     * @param data {String | Number | Boolean} Data to convert. The following",
            "     * values return as null: null, undefined, NaN, \"\".",
            "     * @return {Number} A number, or null.",
            "     */",
            "    parse: function(data) {",
            "        var number = (data === null || data === \"\") ? data : +data;",
            "        if(LANG.isNumber(number)) {",
            "            return number;",
            "        }",
            "        else {",
            "            return null;",
            "        }",
            "    }",
            "});",
            "",
            "// Add Parsers shortcut",
            "Y.namespace(\"Parsers\").number = Y.Number.parse;",
            "Y.namespace(\"DataType\");",
            "Y.DataType.Number = Y.Number;",
            "",
            "",
            "}, '@VERSION@');",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "11": 1,
            "13": 1,
            "23": 9,
            "24": 9,
            "25": 6,
            "28": 3,
            "34": 1,
            "35": 1,
            "36": 1
        }
    },
    "build/datatype-number-format/datatype-number-format.js": {
        "path": "build/datatype-number-format/datatype-number-format.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 32,
            "5": 27,
            "6": 27,
            "7": 27,
            "8": 16,
            "9": 27,
            "10": 2,
            "11": 27,
            "12": 4,
            "13": 4,
            "14": 4,
            "15": 4,
            "16": 38,
            "17": 8,
            "18": 38,
            "19": 38,
            "20": 4,
            "21": 27,
            "22": 27,
            "23": 27,
            "24": 5,
            "25": 1,
            "26": 1
        },
        "b": {
            "1": [
                27,
                5
            ],
            "2": [
                27,
                3
            ],
            "3": [
                27,
                25
            ],
            "4": [
                16,
                11
            ],
            "5": [
                27,
                18,
                17
            ],
            "6": [
                2,
                25
            ],
            "7": [
                4,
                23
            ],
            "8": [
                2,
                2
            ],
            "9": [
                8,
                30
            ],
            "10": [
                38,
                14,
                10,
                6
            ],
            "11": [
                4,
                23
            ],
            "12": [
                2,
                25
            ],
            "13": [
                3,
                2
            ],
            "14": [
                5,
                3
            ]
        },
        "f": {
            "1": 1,
            "2": 32
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 34
                    },
                    "end": {
                        "line": 1,
                        "column": 53
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 48,
                "loc": {
                    "start": {
                        "line": 48,
                        "column": 12
                    },
                    "end": {
                        "line": 48,
                        "column": 35
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 108,
                    "column": 16
                }
            },
            "2": {
                "start": {
                    "line": 24,
                    "column": 0
                },
                "end": {
                    "line": 24,
                    "column": 18
                }
            },
            "3": {
                "start": {
                    "line": 26,
                    "column": 0
                },
                "end": {
                    "line": 102,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 49,
                    "column": 8
                },
                "end": {
                    "line": 100,
                    "column": 9
                }
            },
            "5": {
                "start": {
                    "line": 50,
                    "column": 12
                },
                "end": {
                    "line": 50,
                    "column": 34
                }
            },
            "6": {
                "start": {
                    "line": 52,
                    "column": 12
                },
                "end": {
                    "line": 58,
                    "column": 36
                }
            },
            "7": {
                "start": {
                    "line": 61,
                    "column": 12
                },
                "end": {
                    "line": 64,
                    "column": 13
                }
            },
            "8": {
                "start": {
                    "line": 63,
                    "column": 16
                },
                "end": {
                    "line": 63,
                    "column": 49
                }
            },
            "9": {
                "start": {
                    "line": 67,
                    "column": 12
                },
                "end": {
                    "line": 69,
                    "column": 13
                }
            },
            "10": {
                "start": {
                    "line": 68,
                    "column": 16
                },
                "end": {
                    "line": 68,
                    "column": 53
                }
            },
            "11": {
                "start": {
                    "line": 72,
                    "column": 12
                },
                "end": {
                    "line": 87,
                    "column": 13
                }
            },
            "12": {
                "start": {
                    "line": 74,
                    "column": 16
                },
                "end": {
                    "line": 74,
                    "column": 54
                }
            },
            "13": {
                "start": {
                    "line": 75,
                    "column": 16
                },
                "end": {
                    "line": 75,
                    "column": 70
                }
            },
            "14": {
                "start": {
                    "line": 77,
                    "column": 16
                },
                "end": {
                    "line": 77,
                    "column": 55
                }
            },
            "15": {
                "start": {
                    "line": 79,
                    "column": 16
                },
                "end": {
                    "line": 85,
                    "column": 17
                }
            },
            "16": {
                "start": {
                    "line": 80,
                    "column": 20
                },
                "end": {
                    "line": 82,
                    "column": 21
                }
            },
            "17": {
                "start": {
                    "line": 81,
                    "column": 24
                },
                "end": {
                    "line": 81,
                    "column": 56
                }
            },
            "18": {
                "start": {
                    "line": 83,
                    "column": 20
                },
                "end": {
                    "line": 83,
                    "column": 63
                }
            },
            "19": {
                "start": {
                    "line": 84,
                    "column": 20
                },
                "end": {
                    "line": 84,
                    "column": 28
                }
            },
            "20": {
                "start": {
                    "line": 86,
                    "column": 16
                },
                "end": {
                    "line": 86,
                    "column": 35
                }
            },
            "21": {
                "start": {
                    "line": 90,
                    "column": 12
                },
                "end": {
                    "line": 90,
                    "column": 71
                }
            },
            "22": {
                "start": {
                    "line": 93,
                    "column": 12
                },
                "end": {
                    "line": 93,
                    "column": 71
                }
            },
            "23": {
                "start": {
                    "line": 95,
                    "column": 12
                },
                "end": {
                    "line": 95,
                    "column": 26
                }
            },
            "24": {
                "start": {
                    "line": 99,
                    "column": 12
                },
                "end": {
                    "line": 99,
                    "column": 80
                }
            },
            "25": {
                "start": {
                    "line": 104,
                    "column": 0
                },
                "end": {
                    "line": 104,
                    "column": 24
                }
            },
            "26": {
                "start": {
                    "line": 105,
                    "column": 0
                },
                "end": {
                    "line": 105,
                    "column": 29
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 49,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 49,
                            "column": 8
                        },
                        "end": {
                            "line": 49,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 49,
                            "column": 8
                        },
                        "end": {
                            "line": 49,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 50,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 50,
                            "column": 21
                        },
                        "end": {
                            "line": 50,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 50,
                            "column": 31
                        },
                        "end": {
                            "line": 50,
                            "column": 33
                        }
                    }
                ]
            },
            "3": {
                "line": 55,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 55,
                            "column": 25
                        },
                        "end": {
                            "line": 55,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 55,
                            "column": 52
                        },
                        "end": {
                            "line": 55,
                            "column": 55
                        }
                    }
                ]
            },
            "4": {
                "line": 61,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 61,
                            "column": 12
                        },
                        "end": {
                            "line": 61,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 61,
                            "column": 12
                        },
                        "end": {
                            "line": 61,
                            "column": 12
                        }
                    }
                ]
            },
            "5": {
                "line": 61,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 61,
                            "column": 15
                        },
                        "end": {
                            "line": 61,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 61,
                            "column": 44
                        },
                        "end": {
                            "line": 61,
                            "column": 58
                        }
                    },
                    {
                        "start": {
                            "line": 61,
                            "column": 64
                        },
                        "end": {
                            "line": 61,
                            "column": 79
                        }
                    }
                ]
            },
            "6": {
                "line": 67,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 67,
                            "column": 12
                        },
                        "end": {
                            "line": 67,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 67,
                            "column": 12
                        },
                        "end": {
                            "line": 67,
                            "column": 12
                        }
                    }
                ]
            },
            "7": {
                "line": 72,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 72,
                            "column": 12
                        },
                        "end": {
                            "line": 72,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 72,
                            "column": 12
                        },
                        "end": {
                            "line": 72,
                            "column": 12
                        }
                    }
                ]
            },
            "8": {
                "line": 75,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 75,
                            "column": 45
                        },
                        "end": {
                            "line": 75,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 75,
                            "column": 56
                        },
                        "end": {
                            "line": 75,
                            "column": 69
                        }
                    }
                ]
            },
            "9": {
                "line": 80,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 80,
                            "column": 20
                        },
                        "end": {
                            "line": 80,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 20
                        },
                        "end": {
                            "line": 80,
                            "column": 20
                        }
                    }
                ]
            },
            "10": {
                "line": 80,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 80,
                            "column": 25
                        },
                        "end": {
                            "line": 80,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 44
                        },
                        "end": {
                            "line": 80,
                            "column": 58
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 64
                        },
                        "end": {
                            "line": 80,
                            "column": 70
                        }
                    },
                    {
                        "start": {
                            "line": 80,
                            "column": 75
                        },
                        "end": {
                            "line": 80,
                            "column": 80
                        }
                    }
                ]
            },
            "11": {
                "line": 90,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 90,
                            "column": 39
                        },
                        "end": {
                            "line": 90,
                            "column": 61
                        }
                    },
                    {
                        "start": {
                            "line": 90,
                            "column": 64
                        },
                        "end": {
                            "line": 90,
                            "column": 70
                        }
                    }
                ]
            },
            "12": {
                "line": 93,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 93,
                            "column": 39
                        },
                        "end": {
                            "line": 93,
                            "column": 61
                        }
                    },
                    {
                        "start": {
                            "line": 93,
                            "column": 64
                        },
                        "end": {
                            "line": 93,
                            "column": 70
                        }
                    }
                ]
            },
            "13": {
                "line": 99,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 99,
                            "column": 59
                        },
                        "end": {
                            "line": 99,
                            "column": 74
                        }
                    },
                    {
                        "start": {
                            "line": 99,
                            "column": 77
                        },
                        "end": {
                            "line": 99,
                            "column": 79
                        }
                    }
                ]
            },
            "14": {
                "line": 99,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 99,
                            "column": 20
                        },
                        "end": {
                            "line": 99,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 99,
                            "column": 42
                        },
                        "end": {
                            "line": 99,
                            "column": 55
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('datatype-number-format', function (Y, NAME) {",
            "",
            "/**",
            " * The Number Utility provides type-conversion and string-formatting",
            " * convenience methods for Numbers.",
            " *",
            " * @module datatype-number",
            " * @main datatype-number",
            " */",
            "",
            "/**",
            " * Format number submodule.",
            " *",
            " * @module datatype-number",
            " * @submodule datatype-number-format",
            " */",
            " ",
            "/**",
            " * Number provides a set of utility functions to operate against Number objects.",
            " *",
            " * @class Number",
            " * @static",
            " */",
            "var LANG = Y.Lang;",
            "",
            "Y.mix(Y.namespace(\"Number\"), {",
            "     /**",
            "     * Takes a Number and formats to string for display to user.",
            "     *",
            "     * @method format",
            "     * @param data {Number} Number.",
            "     * @param config {Object} (Optional) Optional configuration values:",
            "     *  <dl>",
            "     *   <dt>prefix {HTML}</dd>",
            "     *   <dd>String prepended before each number, like a currency designator \"$\"</dd>",
            "     *   <dt>decimalPlaces {Number}</dd>",
            "     *   <dd>Number of decimal places to round. Must be a number 0 to 20.</dd>",
            "     *   <dt>decimalSeparator {HTML}</dd>",
            "     *   <dd>Decimal separator</dd>",
            "     *   <dt>thousandsSeparator {HTML}</dd>",
            "     *   <dd>Thousands separator</dd>",
            "     *   <dt>suffix {HTML}</dd>",
            "     *   <dd>String appended after each number, like \" items\" (note the space)</dd>",
            "     *  </dl>",
            "     * @return {HTML} Formatted number for display. Note, the following values",
            "     * return as \"\": null, undefined, NaN, \"\".",
            "     */",
            "    format: function(data, config) {",
            "        if(LANG.isNumber(data)) {",
            "            config = config || {};",
            "",
            "            var isNeg = (data < 0),",
            "                output = data + \"\",",
            "                decPlaces = config.decimalPlaces,",
            "                decSep = config.decimalSeparator || \".\",",
            "                thouSep = config.thousandsSeparator,",
            "                decIndex,",
            "                newOutput, count, i;",
            "",
            "            // Decimal precision",
            "            if(LANG.isNumber(decPlaces) && (decPlaces >= 0) && (decPlaces <= 20)) {",
            "                // Round to the correct decimal place",
            "                output = data.toFixed(decPlaces);",
            "            }",
            "",
            "            // Decimal separator",
            "            if(decSep !== \".\"){",
            "                output = output.replace(\".\", decSep);",
            "            }",
            "",
            "            // Add the thousands separator",
            "            if(thouSep) {",
            "                // Find the dot or where it would be",
            "                decIndex = output.lastIndexOf(decSep);",
            "                decIndex = (decIndex > -1) ? decIndex : output.length;",
            "                // Start with the dot and everything to the right",
            "                newOutput = output.substring(decIndex);",
            "                // Working left, every third time add a separator, every time add a digit",
            "                for (count = 0, i=decIndex; i>0; i--) {",
            "                    if ((count%3 === 0) && (i !== decIndex) && (!isNeg || (i > 1))) {",
            "                        newOutput = thouSep + newOutput;",
            "                    }",
            "                    newOutput = output.charAt(i-1) + newOutput;",
            "                    count++;",
            "                }",
            "                output = newOutput;",
            "            }",
            "",
            "            // Prepend prefix",
            "            output = (config.prefix) ? config.prefix + output : output;",
            "",
            "            // Append suffix",
            "            output = (config.suffix) ? output + config.suffix : output;",
            "",
            "            return output;",
            "        }",
            "        // Not a Number, just return as string",
            "        else {",
            "            return (LANG.isValue(data) && data.toString) ? data.toString() : \"\";",
            "        }",
            "    }",
            "});",
            "",
            "Y.namespace(\"DataType\");",
            "Y.DataType.Number = Y.Number;",
            "",
            "",
            "}, '@VERSION@');",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "24": 1,
            "26": 1,
            "49": 32,
            "50": 27,
            "52": 27,
            "61": 27,
            "63": 16,
            "67": 27,
            "68": 2,
            "72": 27,
            "74": 4,
            "75": 4,
            "77": 4,
            "79": 4,
            "80": 38,
            "81": 8,
            "83": 38,
            "84": 38,
            "86": 4,
            "90": 27,
            "93": 27,
            "95": 27,
            "99": 5,
            "104": 1,
            "105": 1
        }
    }
}