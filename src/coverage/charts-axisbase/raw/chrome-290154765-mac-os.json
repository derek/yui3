{
    "build/axis-base/axis-base.js": {
        "path": "build/axis-base/axis-base.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 10,
            "6": 10,
            "7": 4,
            "8": 1,
            "9": 1,
            "10": 4,
            "11": 4,
            "12": 7,
            "13": 1,
            "14": 7,
            "15": 7,
            "16": 14,
            "17": 3,
            "18": 11,
            "19": 7,
            "20": 1,
            "21": 1,
            "22": 1,
            "23": 1,
            "24": 2,
            "25": 2,
            "26": 2,
            "27": 2,
            "28": 3,
            "29": 3,
            "30": 3,
            "31": 4,
            "32": 4,
            "33": 3,
            "34": 2,
            "35": 2,
            "36": 14,
            "37": 14,
            "38": 308,
            "39": 308,
            "40": 14,
            "41": 1,
            "42": 1,
            "43": 1,
            "44": 2,
            "45": 2,
            "46": 1,
            "47": 4,
            "48": 4,
            "49": 4,
            "50": 4,
            "51": 133,
            "52": 133,
            "53": 132,
            "54": 133,
            "55": 16,
            "56": 16,
            "57": 2,
            "58": 2,
            "59": 2,
            "60": 4,
            "61": 4,
            "62": 2,
            "63": 14,
            "64": 10,
            "65": 4,
            "66": 16,
            "67": 2,
            "68": 2,
            "69": 2,
            "70": 1,
            "71": 1,
            "72": 0,
            "73": 1,
            "74": 1,
            "75": 12,
            "76": 12,
            "77": 12,
            "78": 2,
            "79": 2,
            "80": 3,
            "81": 3,
            "82": 2,
            "83": 3,
            "84": 1,
            "85": 3,
            "86": 1,
            "87": 1,
            "88": 6,
            "89": 6,
            "90": 1,
            "91": 6,
            "92": 1,
            "93": 1,
            "94": 2,
            "95": 2,
            "96": 2,
            "97": 10,
            "98": 10,
            "99": 5,
            "100": 5,
            "101": 10,
            "102": 5,
            "103": 2,
            "104": 2,
            "105": 3,
            "106": 2,
            "107": 2,
            "108": 10,
            "109": 10,
            "110": 1,
            "111": 4,
            "112": 4,
            "113": 2,
            "114": 4,
            "115": 7,
            "116": 3,
            "117": 7,
            "118": 2,
            "119": 1,
            "120": 2,
            "121": 3,
            "122": 3,
            "123": 4,
            "124": 4,
            "125": 3
        },
        "b": {
            "1": [
                10,
                2
            ],
            "2": [
                1,
                6
            ],
            "3": [
                3,
                11
            ],
            "4": [
                14,
                9,
                3,
                3
            ],
            "5": [
                3,
                0
            ],
            "6": [
                4,
                0
            ],
            "7": [
                2,
                1
            ],
            "8": [
                3,
                3
            ],
            "9": [
                2,
                0
            ],
            "10": [
                4,
                0
            ],
            "11": [
                132,
                1
            ],
            "12": [
                133,
                132
            ],
            "13": [
                2,
                14
            ],
            "14": [
                2,
                2
            ],
            "15": [
                10,
                4
            ],
            "16": [
                0,
                1
            ],
            "17": [
                2,
                1
            ],
            "18": [
                3,
                2
            ],
            "19": [
                1,
                2
            ],
            "20": [
                1,
                5
            ],
            "21": [
                5,
                5
            ],
            "22": [
                2,
                3
            ],
            "23": [
                2,
                0
            ],
            "24": [
                2,
                2
            ],
            "25": [
                3,
                4
            ],
            "26": [
                1,
                1
            ],
            "27": [
                2,
                1
            ],
            "28": [
                4,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 3,
            "3": 10,
            "4": 4,
            "5": 4,
            "6": 7,
            "7": 14,
            "8": 1,
            "9": 2,
            "10": 3,
            "11": 17,
            "12": 2,
            "13": 14,
            "14": 1,
            "15": 4,
            "16": 133,
            "17": 16,
            "18": 2,
            "19": 1,
            "20": 12,
            "21": 2,
            "22": 3,
            "23": 1,
            "24": 6,
            "25": 1,
            "26": 2,
            "27": 2,
            "28": 2,
            "29": 10,
            "30": 1,
            "31": 4,
            "32": 4,
            "33": 7,
            "34": 2,
            "35": 3
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 21
                    },
                    "end": {
                        "line": 1,
                        "column": 40
                    }
                }
            },
            "2": {
                "name": "Renderer",
                "line": 27,
                "loc": {
                    "start": {
                        "line": 27,
                        "column": 0
                    },
                    "end": {
                        "line": 27,
                        "column": 19
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 38,
                "loc": {
                    "start": {
                        "line": 38,
                        "column": 20
                    },
                    "end": {
                        "line": 39,
                        "column": 12
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 44,
                "loc": {
                    "start": {
                        "line": 44,
                        "column": 20
                    },
                    "end": {
                        "line": 45,
                        "column": 12
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 78,
                "loc": {
                    "start": {
                        "line": 78,
                        "column": 13
                    },
                    "end": {
                        "line": 79,
                        "column": 1
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 94,
                "loc": {
                    "start": {
                        "line": 94,
                        "column": 18
                    },
                    "end": {
                        "line": 95,
                        "column": 4
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 101,
                "loc": {
                    "start": {
                        "line": 101,
                        "column": 25
                    },
                    "end": {
                        "line": 102,
                        "column": 8
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 122,
                "loc": {
                    "start": {
                        "line": 122,
                        "column": 23
                    },
                    "end": {
                        "line": 123,
                        "column": 4
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 167,
                "loc": {
                    "start": {
                        "line": 167,
                        "column": 17
                    },
                    "end": {
                        "line": 168,
                        "column": 4
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 182,
                "loc": {
                    "start": {
                        "line": 182,
                        "column": 32
                    },
                    "end": {
                        "line": 183,
                        "column": 4
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 209,
                "loc": {
                    "start": {
                        "line": 209,
                        "column": 22
                    },
                    "end": {
                        "line": 209,
                        "column": 33
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 284,
                "loc": {
                    "start": {
                        "line": 284,
                        "column": 12
                    },
                    "end": {
                        "line": 285,
                        "column": 1
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 298,
                "loc": {
                    "start": {
                        "line": 298,
                        "column": 18
                    },
                    "end": {
                        "line": 299,
                        "column": 4
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 318,
                "loc": {
                    "start": {
                        "line": 318,
                        "column": 22
                    },
                    "end": {
                        "line": 319,
                        "column": 4
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 340,
                "loc": {
                    "start": {
                        "line": 340,
                        "column": 15
                    },
                    "end": {
                        "line": 341,
                        "column": 4
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 358,
                "loc": {
                    "start": {
                        "line": 358,
                        "column": 19
                    },
                    "end": {
                        "line": 359,
                        "column": 4
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 378,
                "loc": {
                    "start": {
                        "line": 378,
                        "column": 18
                    },
                    "end": {
                        "line": 379,
                        "column": 4
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 415,
                "loc": {
                    "start": {
                        "line": 415,
                        "column": 24
                    },
                    "end": {
                        "line": 416,
                        "column": 4
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 432,
                "loc": {
                    "start": {
                        "line": 432,
                        "column": 19
                    },
                    "end": {
                        "line": 433,
                        "column": 4
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 450,
                "loc": {
                    "start": {
                        "line": 450,
                        "column": 23
                    },
                    "end": {
                        "line": 451,
                        "column": 4
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 465,
                "loc": {
                    "start": {
                        "line": 465,
                        "column": 23
                    },
                    "end": {
                        "line": 466,
                        "column": 4
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 484,
                "loc": {
                    "start": {
                        "line": 484,
                        "column": 20
                    },
                    "end": {
                        "line": 485,
                        "column": 4
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 508,
                "loc": {
                    "start": {
                        "line": 508,
                        "column": 20
                    },
                    "end": {
                        "line": 509,
                        "column": 4
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 521,
                "loc": {
                    "start": {
                        "line": 521,
                        "column": 20
                    },
                    "end": {
                        "line": 522,
                        "column": 4
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 538,
                "loc": {
                    "start": {
                        "line": 538,
                        "column": 20
                    },
                    "end": {
                        "line": 539,
                        "column": 4
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 551,
                "loc": {
                    "start": {
                        "line": 551,
                        "column": 16
                    },
                    "end": {
                        "line": 552,
                        "column": 4
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 563,
                "loc": {
                    "start": {
                        "line": 563,
                        "column": 16
                    },
                    "end": {
                        "line": 564,
                        "column": 4
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 580,
                "loc": {
                    "start": {
                        "line": 580,
                        "column": 21
                    },
                    "end": {
                        "line": 580,
                        "column": 32
                    }
                }
            },
            "29": {
                "name": "(anonymous_29)",
                "line": 594,
                "loc": {
                    "start": {
                        "line": 594,
                        "column": 20
                    },
                    "end": {
                        "line": 595,
                        "column": 12
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 645,
                "loc": {
                    "start": {
                        "line": 645,
                        "column": 20
                    },
                    "end": {
                        "line": 646,
                        "column": 12
                    }
                }
            },
            "31": {
                "name": "(anonymous_31)",
                "line": 659,
                "loc": {
                    "start": {
                        "line": 659,
                        "column": 20
                    },
                    "end": {
                        "line": 660,
                        "column": 12
                    }
                }
            },
            "32": {
                "name": "(anonymous_32)",
                "line": 673,
                "loc": {
                    "start": {
                        "line": 673,
                        "column": 20
                    },
                    "end": {
                        "line": 674,
                        "column": 12
                    }
                }
            },
            "33": {
                "name": "(anonymous_33)",
                "line": 705,
                "loc": {
                    "start": {
                        "line": 705,
                        "column": 20
                    },
                    "end": {
                        "line": 706,
                        "column": 12
                    }
                }
            },
            "34": {
                "name": "(anonymous_34)",
                "line": 762,
                "loc": {
                    "start": {
                        "line": 762,
                        "column": 20
                    },
                    "end": {
                        "line": 763,
                        "column": 12
                    }
                }
            },
            "35": {
                "name": "(anonymous_35)",
                "line": 779,
                "loc": {
                    "start": {
                        "line": 779,
                        "column": 20
                    },
                    "end": {
                        "line": 780,
                        "column": 12
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 807,
                    "column": 112
                }
            },
            "2": {
                "start": {
                    "line": 17,
                    "column": 0
                },
                "end": {
                    "line": 17,
                    "column": 20
                }
            },
            "3": {
                "start": {
                    "line": 27,
                    "column": 0
                },
                "end": {
                    "line": 27,
                    "column": 21
                }
            },
            "4": {
                "start": {
                    "line": 29,
                    "column": 0
                },
                "end": {
                    "line": 57,
                    "column": 2
                }
            },
            "5": {
                "start": {
                    "line": 40,
                    "column": 16
                },
                "end": {
                    "line": 40,
                    "column": 72
                }
            },
            "6": {
                "start": {
                    "line": 41,
                    "column": 16
                },
                "end": {
                    "line": 41,
                    "column": 36
                }
            },
            "7": {
                "start": {
                    "line": 46,
                    "column": 16
                },
                "end": {
                    "line": 46,
                    "column": 52
                }
            },
            "8": {
                "start": {
                    "line": 58,
                    "column": 0
                },
                "end": {
                    "line": 58,
                    "column": 27
                }
            },
            "9": {
                "start": {
                    "line": 60,
                    "column": 0
                },
                "end": {
                    "line": 131,
                    "column": 2
                }
            },
            "10": {
                "start": {
                    "line": 80,
                    "column": 2
                },
                "end": {
                    "line": 80,
                    "column": 34
                }
            },
            "11": {
                "start": {
                    "line": 81,
                    "column": 8
                },
                "end": {
                    "line": 81,
                    "column": 52
                }
            },
            "12": {
                "start": {
                    "line": 96,
                    "column": 8
                },
                "end": {
                    "line": 99,
                    "column": 9
                }
            },
            "13": {
                "start": {
                    "line": 98,
                    "column": 12
                },
                "end": {
                    "line": 98,
                    "column": 19
                }
            },
            "14": {
                "start": {
                    "line": 100,
                    "column": 8
                },
                "end": {
                    "line": 100,
                    "column": 39
                }
            },
            "15": {
                "start": {
                    "line": 101,
                    "column": 8
                },
                "end": {
                    "line": 111,
                    "column": 17
                }
            },
            "16": {
                "start": {
                    "line": 103,
                    "column": 12
                },
                "end": {
                    "line": 110,
                    "column": 13
                }
            },
            "17": {
                "start": {
                    "line": 105,
                    "column": 16
                },
                "end": {
                    "line": 105,
                    "column": 66
                }
            },
            "18": {
                "start": {
                    "line": 109,
                    "column": 16
                },
                "end": {
                    "line": 109,
                    "column": 39
                }
            },
            "19": {
                "start": {
                    "line": 112,
                    "column": 8
                },
                "end": {
                    "line": 112,
                    "column": 25
                }
            },
            "20": {
                "start": {
                    "line": 124,
                    "column": 8
                },
                "end": {
                    "line": 129,
                    "column": 11
                }
            },
            "21": {
                "start": {
                    "line": 133,
                    "column": 0
                },
                "end": {
                    "line": 133,
                    "column": 33
                }
            },
            "22": {
                "start": {
                    "line": 134,
                    "column": 0
                },
                "end": {
                    "line": 134,
                    "column": 22
                }
            },
            "23": {
                "start": {
                    "line": 162,
                    "column": 0
                },
                "end": {
                    "line": 804,
                    "column": 3
                }
            },
            "24": {
                "start": {
                    "line": 169,
                    "column": 8
                },
                "end": {
                    "line": 169,
                    "column": 74
                }
            },
            "25": {
                "start": {
                    "line": 170,
                    "column": 8
                },
                "end": {
                    "line": 170,
                    "column": 74
                }
            },
            "26": {
                "start": {
                    "line": 171,
                    "column": 8
                },
                "end": {
                    "line": 171,
                    "column": 57
                }
            },
            "27": {
                "start": {
                    "line": 172,
                    "column": 8
                },
                "end": {
                    "line": 172,
                    "column": 74
                }
            },
            "28": {
                "start": {
                    "line": 184,
                    "column": 8
                },
                "end": {
                    "line": 186,
                    "column": 14
                }
            },
            "29": {
                "start": {
                    "line": 187,
                    "column": 8
                },
                "end": {
                    "line": 196,
                    "column": 9
                }
            },
            "30": {
                "start": {
                    "line": 189,
                    "column": 12
                },
                "end": {
                    "line": 195,
                    "column": 13
                }
            },
            "31": {
                "start": {
                    "line": 191,
                    "column": 16
                },
                "end": {
                    "line": 194,
                    "column": 17
                }
            },
            "32": {
                "start": {
                    "line": 193,
                    "column": 20
                },
                "end": {
                    "line": 193,
                    "column": 35
                }
            },
            "33": {
                "start": {
                    "line": 197,
                    "column": 8
                },
                "end": {
                    "line": 200,
                    "column": 9
                }
            },
            "34": {
                "start": {
                    "line": 199,
                    "column": 12
                },
                "end": {
                    "line": 199,
                    "column": 44
                }
            },
            "35": {
                "start": {
                    "line": 286,
                    "column": 8
                },
                "end": {
                    "line": 286,
                    "column": 32
                }
            },
            "36": {
                "start": {
                    "line": 300,
                    "column": 8
                },
                "end": {
                    "line": 303,
                    "column": 30
                }
            },
            "37": {
                "start": {
                    "line": 304,
                    "column": 8
                },
                "end": {
                    "line": 308,
                    "column": 9
                }
            },
            "38": {
                "start": {
                    "line": 306,
                    "column": 12
                },
                "end": {
                    "line": 306,
                    "column": 26
                }
            },
            "39": {
                "start": {
                    "line": 307,
                    "column": 12
                },
                "end": {
                    "line": 307,
                    "column": 35
                }
            },
            "40": {
                "start": {
                    "line": 309,
                    "column": 8
                },
                "end": {
                    "line": 309,
                    "column": 24
                }
            },
            "41": {
                "start": {
                    "line": 320,
                    "column": 2
                },
                "end": {
                    "line": 321,
                    "column": 14
                }
            },
            "42": {
                "start": {
                    "line": 322,
                    "column": 8
                },
                "end": {
                    "line": 322,
                    "column": 24
                }
            },
            "43": {
                "start": {
                    "line": 323,
                    "column": 8
                },
                "end": {
                    "line": 329,
                    "column": 9
                }
            },
            "44": {
                "start": {
                    "line": 325,
                    "column": 12
                },
                "end": {
                    "line": 328,
                    "column": 13
                }
            },
            "45": {
                "start": {
                    "line": 327,
                    "column": 16
                },
                "end": {
                    "line": 327,
                    "column": 56
                }
            },
            "46": {
                "start": {
                    "line": 330,
                    "column": 8
                },
                "end": {
                    "line": 330,
                    "column": 42
                }
            },
            "47": {
                "start": {
                    "line": 342,
                    "column": 8
                },
                "end": {
                    "line": 342,
                    "column": 36
                }
            },
            "48": {
                "start": {
                    "line": 343,
                    "column": 8
                },
                "end": {
                    "line": 347,
                    "column": 9
                }
            },
            "49": {
                "start": {
                    "line": 345,
                    "column": 12
                },
                "end": {
                    "line": 345,
                    "column": 31
                }
            },
            "50": {
                "start": {
                    "line": 346,
                    "column": 12
                },
                "end": {
                    "line": 346,
                    "column": 37
                }
            },
            "51": {
                "start": {
                    "line": 360,
                    "column": 8
                },
                "end": {
                    "line": 361,
                    "column": 36
                }
            },
            "52": {
                "start": {
                    "line": 362,
                    "column": 8
                },
                "end": {
                    "line": 365,
                    "column": 9
                }
            },
            "53": {
                "start": {
                    "line": 364,
                    "column": 12
                },
                "end": {
                    "line": 364,
                    "column": 37
                }
            },
            "54": {
                "start": {
                    "line": 366,
                    "column": 8
                },
                "end": {
                    "line": 366,
                    "column": 33
                }
            },
            "55": {
                "start": {
                    "line": 380,
                    "column": 8
                },
                "end": {
                    "line": 384,
                    "column": 36
                }
            },
            "56": {
                "start": {
                    "line": 385,
                    "column": 8
                },
                "end": {
                    "line": 405,
                    "column": 9
                }
            },
            "57": {
                "start": {
                    "line": 387,
                    "column": 12
                },
                "end": {
                    "line": 387,
                    "column": 21
                }
            },
            "58": {
                "start": {
                    "line": 388,
                    "column": 12
                },
                "end": {
                    "line": 388,
                    "column": 31
                }
            },
            "59": {
                "start": {
                    "line": 389,
                    "column": 12
                },
                "end": {
                    "line": 396,
                    "column": 13
                }
            },
            "60": {
                "start": {
                    "line": 391,
                    "column": 16
                },
                "end": {
                    "line": 391,
                    "column": 31
                }
            },
            "61": {
                "start": {
                    "line": 392,
                    "column": 16
                },
                "end": {
                    "line": 395,
                    "column": 17
                }
            },
            "62": {
                "start": {
                    "line": 394,
                    "column": 20
                },
                "end": {
                    "line": 394,
                    "column": 54
                }
            },
            "63": {
                "start": {
                    "line": 398,
                    "column": 13
                },
                "end": {
                    "line": 405,
                    "column": 9
                }
            },
            "64": {
                "start": {
                    "line": 400,
                    "column": 12
                },
                "end": {
                    "line": 400,
                    "column": 30
                }
            },
            "65": {
                "start": {
                    "line": 404,
                    "column": 12
                },
                "end": {
                    "line": 404,
                    "column": 23
                }
            },
            "66": {
                "start": {
                    "line": 406,
                    "column": 8
                },
                "end": {
                    "line": 406,
                    "column": 19
                }
            },
            "67": {
                "start": {
                    "line": 417,
                    "column": 8
                },
                "end": {
                    "line": 418,
                    "column": 53
                }
            },
            "68": {
                "start": {
                    "line": 419,
                    "column": 8
                },
                "end": {
                    "line": 419,
                    "column": 32
                }
            },
            "69": {
                "start": {
                    "line": 420,
                    "column": 8
                },
                "end": {
                    "line": 420,
                    "column": 21
                }
            },
            "70": {
                "start": {
                    "line": 434,
                    "column": 8
                },
                "end": {
                    "line": 434,
                    "column": 23
                }
            },
            "71": {
                "start": {
                    "line": 435,
                    "column": 8
                },
                "end": {
                    "line": 439,
                    "column": 9
                }
            },
            "72": {
                "start": {
                    "line": 436,
                    "column": 12
                },
                "end": {
                    "line": 436,
                    "column": 34
                }
            },
            "73": {
                "start": {
                    "line": 438,
                    "column": 12
                },
                "end": {
                    "line": 438,
                    "column": 27
                }
            },
            "74": {
                "start": {
                    "line": 440,
                    "column": 8
                },
                "end": {
                    "line": 440,
                    "column": 26
                }
            },
            "75": {
                "start": {
                    "line": 452,
                    "column": 8
                },
                "end": {
                    "line": 452,
                    "column": 32
                }
            },
            "76": {
                "start": {
                    "line": 453,
                    "column": 8
                },
                "end": {
                    "line": 453,
                    "column": 41
                }
            },
            "77": {
                "start": {
                    "line": 454,
                    "column": 8
                },
                "end": {
                    "line": 454,
                    "column": 32
                }
            },
            "78": {
                "start": {
                    "line": 467,
                    "column": 8
                },
                "end": {
                    "line": 473,
                    "column": 10
                }
            },
            "79": {
                "start": {
                    "line": 474,
                    "column": 8
                },
                "end": {
                    "line": 474,
                    "column": 26
                }
            },
            "80": {
                "start": {
                    "line": 486,
                    "column": 8
                },
                "end": {
                    "line": 487,
                    "column": 38
                }
            },
            "81": {
                "start": {
                    "line": 490,
                    "column": 8
                },
                "end": {
                    "line": 493,
                    "column": 9
                }
            },
            "82": {
                "start": {
                    "line": 492,
                    "column": 12
                },
                "end": {
                    "line": 492,
                    "column": 21
                }
            },
            "83": {
                "start": {
                    "line": 494,
                    "column": 8
                },
                "end": {
                    "line": 497,
                    "column": 9
                }
            },
            "84": {
                "start": {
                    "line": 496,
                    "column": 12
                },
                "end": {
                    "line": 496,
                    "column": 35
                }
            },
            "85": {
                "start": {
                    "line": 498,
                    "column": 8
                },
                "end": {
                    "line": 498,
                    "column": 31
                }
            },
            "86": {
                "start": {
                    "line": 510,
                    "column": 8
                },
                "end": {
                    "line": 510,
                    "column": 45
                }
            },
            "87": {
                "start": {
                    "line": 511,
                    "column": 8
                },
                "end": {
                    "line": 511,
                    "column": 21
                }
            },
            "88": {
                "start": {
                    "line": 523,
                    "column": 8
                },
                "end": {
                    "line": 523,
                    "column": 42
                }
            },
            "89": {
                "start": {
                    "line": 524,
                    "column": 8
                },
                "end": {
                    "line": 527,
                    "column": 9
                }
            },
            "90": {
                "start": {
                    "line": 526,
                    "column": 12
                },
                "end": {
                    "line": 526,
                    "column": 35
                }
            },
            "91": {
                "start": {
                    "line": 528,
                    "column": 8
                },
                "end": {
                    "line": 528,
                    "column": 31
                }
            },
            "92": {
                "start": {
                    "line": 540,
                    "column": 8
                },
                "end": {
                    "line": 540,
                    "column": 43
                }
            },
            "93": {
                "start": {
                    "line": 541,
                    "column": 8
                },
                "end": {
                    "line": 541,
                    "column": 19
                }
            },
            "94": {
                "start": {
                    "line": 553,
                    "column": 8
                },
                "end": {
                    "line": 553,
                    "column": 49
                }
            },
            "95": {
                "start": {
                    "line": 565,
                    "column": 8
                },
                "end": {
                    "line": 565,
                    "column": 49
                }
            },
            "96": {
                "start": {
                    "line": 581,
                    "column": 16
                },
                "end": {
                    "line": 581,
                    "column": 40
                }
            },
            "97": {
                "start": {
                    "line": 596,
                    "column": 16
                },
                "end": {
                    "line": 599,
                    "column": 52
                }
            },
            "98": {
                "start": {
                    "line": 600,
                    "column": 16
                },
                "end": {
                    "line": 623,
                    "column": 17
                }
            },
            "99": {
                "start": {
                    "line": 602,
                    "column": 20
                },
                "end": {
                    "line": 602,
                    "column": 37
                }
            },
            "100": {
                "start": {
                    "line": 603,
                    "column": 20
                },
                "end": {
                    "line": 606,
                    "column": 21
                }
            },
            "101": {
                "start": {
                    "line": 605,
                    "column": 24
                },
                "end": {
                    "line": 605,
                    "column": 71
                }
            },
            "102": {
                "start": {
                    "line": 609,
                    "column": 21
                },
                "end": {
                    "line": 623,
                    "column": 17
                }
            },
            "103": {
                "start": {
                    "line": 611,
                    "column": 20
                },
                "end": {
                    "line": 611,
                    "column": 44
                }
            },
            "104": {
                "start": {
                    "line": 612,
                    "column": 20
                },
                "end": {
                    "line": 612,
                    "column": 61
                }
            },
            "105": {
                "start": {
                    "line": 616,
                    "column": 20
                },
                "end": {
                    "line": 622,
                    "column": 21
                }
            },
            "106": {
                "start": {
                    "line": 618,
                    "column": 24
                },
                "end": {
                    "line": 621,
                    "column": 25
                }
            },
            "107": {
                "start": {
                    "line": 620,
                    "column": 28
                },
                "end": {
                    "line": 620,
                    "column": 65
                }
            },
            "108": {
                "start": {
                    "line": 624,
                    "column": 16
                },
                "end": {
                    "line": 624,
                    "column": 49
                }
            },
            "109": {
                "start": {
                    "line": 625,
                    "column": 16
                },
                "end": {
                    "line": 625,
                    "column": 28
                }
            },
            "110": {
                "start": {
                    "line": 647,
                    "column": 16
                },
                "end": {
                    "line": 647,
                    "column": 34
                }
            },
            "111": {
                "start": {
                    "line": 661,
                    "column": 16
                },
                "end": {
                    "line": 661,
                    "column": 29
                }
            },
            "112": {
                "start": {
                    "line": 675,
                    "column": 16
                },
                "end": {
                    "line": 678,
                    "column": 17
                }
            },
            "113": {
                "start": {
                    "line": 677,
                    "column": 20
                },
                "end": {
                    "line": 677,
                    "column": 44
                }
            },
            "114": {
                "start": {
                    "line": 679,
                    "column": 16
                },
                "end": {
                    "line": 679,
                    "column": 41
                }
            },
            "115": {
                "start": {
                    "line": 707,
                    "column": 16
                },
                "end": {
                    "line": 710,
                    "column": 17
                }
            },
            "116": {
                "start": {
                    "line": 709,
                    "column": 20
                },
                "end": {
                    "line": 709,
                    "column": 44
                }
            },
            "117": {
                "start": {
                    "line": 711,
                    "column": 16
                },
                "end": {
                    "line": 711,
                    "column": 41
                }
            },
            "118": {
                "start": {
                    "line": 764,
                    "column": 16
                },
                "end": {
                    "line": 767,
                    "column": 17
                }
            },
            "119": {
                "start": {
                    "line": 766,
                    "column": 20
                },
                "end": {
                    "line": 766,
                    "column": 44
                }
            },
            "120": {
                "start": {
                    "line": 768,
                    "column": 16
                },
                "end": {
                    "line": 768,
                    "column": 34
                }
            },
            "121": {
                "start": {
                    "line": 781,
                    "column": 16
                },
                "end": {
                    "line": 783,
                    "column": 29
                }
            },
            "122": {
                "start": {
                    "line": 784,
                    "column": 16
                },
                "end": {
                    "line": 790,
                    "column": 17
                }
            },
            "123": {
                "start": {
                    "line": 786,
                    "column": 20
                },
                "end": {
                    "line": 789,
                    "column": 21
                }
            },
            "124": {
                "start": {
                    "line": 788,
                    "column": 24
                },
                "end": {
                    "line": 788,
                    "column": 36
                }
            },
            "125": {
                "start": {
                    "line": 791,
                    "column": 16
                },
                "end": {
                    "line": 791,
                    "column": 27
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 40,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 40,
                            "column": 31
                        },
                        "end": {
                            "line": 40,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 40,
                            "column": 47
                        },
                        "end": {
                            "line": 40,
                            "column": 71
                        }
                    }
                ]
            },
            "2": {
                "line": 96,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 96,
                            "column": 8
                        },
                        "end": {
                            "line": 96,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 96,
                            "column": 8
                        },
                        "end": {
                            "line": 96,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 103,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 103,
                            "column": 12
                        },
                        "end": {
                            "line": 103,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 103,
                            "column": 12
                        },
                        "end": {
                            "line": 103,
                            "column": 12
                        }
                    }
                ]
            },
            "4": {
                "line": 103,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 103,
                            "column": 15
                        },
                        "end": {
                            "line": 103,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 103,
                            "column": 40
                        },
                        "end": {
                            "line": 103,
                            "column": 62
                        }
                    },
                    {
                        "start": {
                            "line": 103,
                            "column": 66
                        },
                        "end": {
                            "line": 103,
                            "column": 91
                        }
                    },
                    {
                        "start": {
                            "line": 103,
                            "column": 95
                        },
                        "end": {
                            "line": 103,
                            "column": 117
                        }
                    }
                ]
            },
            "5": {
                "line": 187,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 187,
                            "column": 8
                        },
                        "end": {
                            "line": 187,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 187,
                            "column": 8
                        },
                        "end": {
                            "line": 187,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 191,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 191,
                            "column": 16
                        },
                        "end": {
                            "line": 191,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 191,
                            "column": 16
                        },
                        "end": {
                            "line": 191,
                            "column": 16
                        }
                    }
                ]
            },
            "7": {
                "line": 197,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 197,
                            "column": 8
                        },
                        "end": {
                            "line": 197,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 197,
                            "column": 8
                        },
                        "end": {
                            "line": 197,
                            "column": 8
                        }
                    }
                ]
            },
            "8": {
                "line": 197,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 197,
                            "column": 11
                        },
                        "end": {
                            "line": 197,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 197,
                            "column": 28
                        },
                        "end": {
                            "line": 197,
                            "column": 48
                        }
                    }
                ]
            },
            "9": {
                "line": 325,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 325,
                            "column": 12
                        },
                        "end": {
                            "line": 325,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 325,
                            "column": 12
                        },
                        "end": {
                            "line": 325,
                            "column": 12
                        }
                    }
                ]
            },
            "10": {
                "line": 343,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 343,
                            "column": 8
                        },
                        "end": {
                            "line": 343,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 343,
                            "column": 8
                        },
                        "end": {
                            "line": 343,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 362,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 362,
                            "column": 8
                        },
                        "end": {
                            "line": 362,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 362,
                            "column": 8
                        },
                        "end": {
                            "line": 362,
                            "column": 8
                        }
                    }
                ]
            },
            "12": {
                "line": 362,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 362,
                            "column": 11
                        },
                        "end": {
                            "line": 362,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 362,
                            "column": 24
                        },
                        "end": {
                            "line": 362,
                            "column": 69
                        }
                    }
                ]
            },
            "13": {
                "line": 385,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 385,
                            "column": 8
                        },
                        "end": {
                            "line": 385,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 385,
                            "column": 8
                        },
                        "end": {
                            "line": 385,
                            "column": 8
                        }
                    }
                ]
            },
            "14": {
                "line": 392,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 392,
                            "column": 16
                        },
                        "end": {
                            "line": 392,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 392,
                            "column": 16
                        },
                        "end": {
                            "line": 392,
                            "column": 16
                        }
                    }
                ]
            },
            "15": {
                "line": 398,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 398,
                            "column": 13
                        },
                        "end": {
                            "line": 398,
                            "column": 13
                        }
                    },
                    {
                        "start": {
                            "line": 398,
                            "column": 13
                        },
                        "end": {
                            "line": 398,
                            "column": 13
                        }
                    }
                ]
            },
            "16": {
                "line": 435,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 435,
                            "column": 8
                        },
                        "end": {
                            "line": 435,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 435,
                            "column": 8
                        },
                        "end": {
                            "line": 435,
                            "column": 8
                        }
                    }
                ]
            },
            "17": {
                "line": 490,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 490,
                            "column": 8
                        },
                        "end": {
                            "line": 490,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 490,
                            "column": 8
                        },
                        "end": {
                            "line": 490,
                            "column": 8
                        }
                    }
                ]
            },
            "18": {
                "line": 490,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 490,
                            "column": 11
                        },
                        "end": {
                            "line": 490,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 490,
                            "column": 24
                        },
                        "end": {
                            "line": 490,
                            "column": 33
                        }
                    }
                ]
            },
            "19": {
                "line": 494,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 494,
                            "column": 8
                        },
                        "end": {
                            "line": 494,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 494,
                            "column": 8
                        },
                        "end": {
                            "line": 494,
                            "column": 8
                        }
                    }
                ]
            },
            "20": {
                "line": 524,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 524,
                            "column": 8
                        },
                        "end": {
                            "line": 524,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 524,
                            "column": 8
                        },
                        "end": {
                            "line": 524,
                            "column": 8
                        }
                    }
                ]
            },
            "21": {
                "line": 600,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 600,
                            "column": 16
                        },
                        "end": {
                            "line": 600,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 600,
                            "column": 16
                        },
                        "end": {
                            "line": 600,
                            "column": 16
                        }
                    }
                ]
            },
            "22": {
                "line": 609,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 609,
                            "column": 21
                        },
                        "end": {
                            "line": 609,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 609,
                            "column": 21
                        },
                        "end": {
                            "line": 609,
                            "column": 21
                        }
                    }
                ]
            },
            "23": {
                "line": 618,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 618,
                            "column": 24
                        },
                        "end": {
                            "line": 618,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 618,
                            "column": 24
                        },
                        "end": {
                            "line": 618,
                            "column": 24
                        }
                    }
                ]
            },
            "24": {
                "line": 675,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 675,
                            "column": 16
                        },
                        "end": {
                            "line": 675,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 675,
                            "column": 16
                        },
                        "end": {
                            "line": 675,
                            "column": 16
                        }
                    }
                ]
            },
            "25": {
                "line": 707,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 707,
                            "column": 16
                        },
                        "end": {
                            "line": 707,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 707,
                            "column": 16
                        },
                        "end": {
                            "line": 707,
                            "column": 16
                        }
                    }
                ]
            },
            "26": {
                "line": 764,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 764,
                            "column": 16
                        },
                        "end": {
                            "line": 764,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 764,
                            "column": 16
                        },
                        "end": {
                            "line": 764,
                            "column": 16
                        }
                    }
                ]
            },
            "27": {
                "line": 764,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 764,
                            "column": 19
                        },
                        "end": {
                            "line": 764,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 764,
                            "column": 34
                        },
                        "end": {
                            "line": 764,
                            "column": 59
                        }
                    }
                ]
            },
            "28": {
                "line": 786,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 786,
                            "column": 20
                        },
                        "end": {
                            "line": 786,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 786,
                            "column": 20
                        },
                        "end": {
                            "line": 786,
                            "column": 20
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('axis-base', function (Y, NAME) {",
            "",
            "/**",
            " * The Charts widget provides an api for displaying data",
            " * graphically.",
            " *",
            " * @module charts",
            " * @main charts",
            " */",
            "",
            "/**",
            " * Provides functionality for the handling of axis data in a chart.",
            " *",
            " * @module charts",
            " * @submodule axis-base",
            " */",
            "var Y_Lang = Y.Lang;",
            "",
            "/**",
            " * The Renderer class is a base class for chart components that use the `styles`",
            " * attribute.",
            " *",
            " * @module charts",
            " * @class Renderer",
            " * @constructor",
            " */",
            "function Renderer(){}",
            "",
            "Renderer.ATTRS = {",
            "        /**",
            "         * Style properties for class",
            "         *",
            "         * @attribute styles",
            "         * @type Object",
            "         */",
            "        styles:",
            "        {",
            "            getter: function()",
            "            {",
            "                this._styles = this._styles || this._getDefaultStyles();",
            "                return this._styles;",
            "            },",
            "",
            "            setter: function(val)",
            "            {",
            "                this._styles = this._setStyles(val);",
            "            }",
            "        },",
            "",
            "        /**",
            "         * The graphic in which drawings will be rendered.",
            "         *",
            "         * @attribute graphic",
            "         * @type Graphic",
            "         */",
            "        graphic: {}",
            "};",
            "Renderer.NAME = \"renderer\";",
            "",
            "Renderer.prototype = {",
            "    /**",
            "     * Storage for `styles` attribute.",
            "     *",
            "     * @property _styles",
            "     * @type Object",
            "     * @private",
            "     */",
            "\t_styles: null,",
            "",
            "    /**",
            "     * Method used by `styles` setter.",
            "     *",
            "     * @method _setStyles",
            "     * @param {Object} newStyles Hash of properties to update.",
            "     * @return Object",
            "     * @protected",
            "     */",
            "\t_setStyles: function(newstyles)",
            "\t{",
            "\t\tvar styles = this.get(\"styles\");",
            "        return this._mergeStyles(newstyles, styles);",
            "\t},",
            "",
            "    /**",
            "     * Merges to object literals so that only specified properties are",
            "     * overwritten.",
            "     *",
            "     * @method _mergeStyles",
            "     * @param {Object} a Hash of new styles",
            "     * @param {Object} b Hash of original styles",
            "     * @return Object",
            "     * @protected",
            "     */",
            "    _mergeStyles: function(a, b)",
            "    {",
            "        if(!b)",
            "        {",
            "            b = {};",
            "        }",
            "        var newstyles = Y.merge(b, {});",
            "        Y.Object.each(a, function(value, key)",
            "        {",
            "            if(b.hasOwnProperty(key) && Y_Lang.isObject(value) && !Y_Lang.isFunction(value) && !Y_Lang.isArray(value))",
            "            {",
            "                newstyles[key] = this._mergeStyles(value, b[key]);",
            "            }",
            "            else",
            "            {",
            "                newstyles[key] = value;",
            "            }",
            "        }, this);",
            "        return newstyles;",
            "    },",
            "",
            "    /**",
            "     * Gets the default value for the `styles` attribute.",
            "     *",
            "     * @method _getDefaultStyles",
            "     * @return Object",
            "     * @protected",
            "     */",
            "    _getDefaultStyles: function()",
            "    {",
            "        return {padding:{",
            "            top:0,",
            "            right: 0,",
            "            bottom: 0,",
            "            left: 0",
            "        }};",
            "    }",
            "};",
            "",
            "Y.augment(Renderer, Y.Attribute);",
            "Y.Renderer = Renderer;",
            "",
            "/**",
            " * The axis-base submodule contains functionality for the handling of axis data in a chart.",
            " *",
            " * @module charts",
            " * @submodule axis-base",
            " */",
            "/**",
            " * An abstract class that provides the core functionality used by the following classes:",
            " * <ul>",
            " *      <li>{{#crossLink \"CategoryAxisBase\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"NumericAxisBase\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"StackedAxisBase\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"TimeAxisBase\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"CategoryAxis\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"NumericAxis\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"StackedAxis\"}}{{/crossLink}}</li>",
            " *      <li>{{#crossLink \"TimeAxis\"}}{{/crossLink}}</li>",
            " *  </ul>",
            " *",
            " * @class AxisBase",
            " * @constructor",
            " * @extends Base",
            " * @uses Renderer",
            " * @param {Object} config (optional) Configuration parameters.",
            " * @submodule axis-base",
            " */",
            "Y.AxisBase = Y.Base.create(\"axisBase\", Y.Base, [Y.Renderer], {",
            "    /**",
            "     * @method initializer",
            "     * @private",
            "     */",
            "    initializer: function()",
            "    {",
            "        this.after(\"minimumChange\", Y.bind(this._keyChangeHandler, this));",
            "        this.after(\"maximumChange\", Y.bind(this._keyChangeHandler, this));",
            "        this.after(\"keysChange\", this._keyChangeHandler);",
            "        this.after(\"dataProviderChange\", this._dataProviderChangeHandler);",
            "    },",
            "",
            "    /**",
            "     * Handles changes to `dataProvider`.",
            "     *",
            "     * @method _dataProviderChangeHandler",
            "     * @param {Object} e Event object.",
            "     * @private",
            "     */",
            "    _dataProviderChangeHandler: function()",
            "    {",
            "        var keyCollection = this.get(\"keyCollection\").concat(),",
            "            keys = this.get(\"keys\"),",
            "            i;",
            "        if(keys)",
            "        {",
            "            for(i in keys)",
            "            {",
            "                if(keys.hasOwnProperty(i))",
            "                {",
            "                    delete keys[i];",
            "                }",
            "            }",
            "        }",
            "        if(keyCollection && keyCollection.length)",
            "        {",
            "            this.set(\"keys\", keyCollection);",
            "        }",
            "    },",
            "",
            "    /**",
            "     * Calculates the maximum and minimum values for the `Data`.",
            "     *",
            "     * @method _updateMinAndMax",
            "     * @private",
            "     */",
            "    _updateMinAndMax: function() {",
            "    },",
            "",
            "    /**",
            "     * Constant used to generate unique id.",
            "     *",
            "     * @property GUID",
            "     * @type String",
            "     * @private",
            "     */",
            "    GUID: \"yuibaseaxis\",",
            "",
            "    /**",
            "     * Type of data used in `Axis`.",
            "     *",
            "     * @property _type",
            "     * @type String",
            "     * @readOnly",
            "     * @private",
            "     */",
            "    _type: null,",
            "",
            "    /**",
            "     * Storage for `setMaximum` attribute.",
            "     *",
            "     * @property _setMaximum",
            "     * @type Object",
            "     * @private",
            "     */",
            "    _setMaximum: null,",
            "",
            "    /**",
            "     * Storage for `setMinimum` attribute.",
            "     *",
            "     * @property _setMinimum",
            "     * @type Object",
            "     * @private",
            "     */",
            "    _setMinimum: null,",
            "",
            "    /**",
            "     * Reference to data array.",
            "     *",
            "     * @property _data",
            "     * @type Array",
            "     * @private",
            "     */",
            "    _data: null,",
            "",
            "    /**",
            "     * Indicates whether the all data is up to date.",
            "     *",
            "     * @property _updateTotalDataFlag",
            "     * @type Boolean",
            "     * @private",
            "     */",
            "    _updateTotalDataFlag: true,",
            "",
            "    /**",
            "     * Storage for `dataReady` attribute.",
            "     *",
            "     * @property _dataReady",
            "     * @type Boolean",
            "     * @readOnly",
            "     * @private",
            "     */",
            "    _dataReady: false,",
            "",
            "    /**",
            "     * Adds an array to the key hash.",
            "     *",
            "     * @method addKey",
            "     * @param value Indicates what key to use in retrieving",
            "     * the array.",
            "     */",
            "    addKey: function (value)",
            "\t{",
            "        this.set(\"keys\", value);",
            "\t},",
            "",
            "    /**",
            "     * Gets an array of values based on a key.",
            "     *",
            "     * @method _getKeyArray",
            "     * @param {String} key Value key associated with the data array.",
            "     * @param {Array} data Array in which the data resides.",
            "     * @return Array",
            "     * @private",
            "     */",
            "    _getKeyArray: function(key, data)",
            "    {",
            "        var i = 0,",
            "            obj,",
            "            keyArray = [],",
            "            len = data.length;",
            "        for(; i < len; ++i)",
            "        {",
            "            obj = data[i];",
            "            keyArray[i] = obj[key];",
            "        }",
            "        return keyArray;",
            "    },",
            "",
            "    /**",
            "     * Updates the total data array.",
            "     *",
            "     * @method _updateTotalData",
            "     * @private",
            "     */",
            "    _updateTotalData: function()",
            "    {",
            "\t\tvar keys = this.get(\"keys\"),",
            "            i;",
            "        this._data = [];",
            "        for(i in keys)",
            "        {",
            "            if(keys.hasOwnProperty(i))",
            "            {",
            "                this._data = this._data.concat(keys[i]);",
            "            }",
            "        }",
            "        this._updateTotalDataFlag = false;",
            "    },",
            "",
            "    /**",
            "     * Removes an array from the key hash.",
            "     *",
            "     * @method removeKey",
            "     * @param {String} value Indicates what key to use in removing from",
            "     * the hash.",
            "     */",
            "    removeKey: function(value)",
            "    {",
            "        var keys = this.get(\"keys\");",
            "        if(keys.hasOwnProperty(value))",
            "        {",
            "            delete keys[value];",
            "            this._keyChangeHandler();",
            "        }",
            "    },",
            "",
            "    /**",
            "     * Returns a value based of a key value and an index.",
            "     *",
            "     * @method getKeyValueAt",
            "     * @param {String} key value used to look up the correct array",
            "     * @param {Number} index within the array",
            "     * @return Number",
            "     */",
            "    getKeyValueAt: function(key, index)",
            "    {",
            "        var value = NaN,",
            "            keys = this.get(\"keys\");",
            "        if(keys[key] && Y_Lang.isNumber(parseFloat(keys[key][index])))",
            "        {",
            "            value = keys[key][index];",
            "        }",
            "        return parseFloat(value);",
            "    },",
            "",
            "    /**",
            "     * Returns values based on key identifiers. When a string is passed as an argument, an array of values is returned.",
            "     * When an array of keys is passed as an argument, an object literal with an array of values mapped to each key is",
            "     * returned.",
            "     *",
            "     * @method getDataByKey",
            "     * @param {String|Array} value value used to identify the array",
            "     * @return Array|Object",
            "     */",
            "    getDataByKey: function (value)",
            "    {",
            "        var obj,",
            "            i,",
            "            len,",
            "            key,",
            "            keys = this.get(\"keys\");",
            "        if(Y_Lang.isArray(value))",
            "        {",
            "            obj = {};",
            "            len = value.length;",
            "            for(i = 0; i < len; i = i + 1)",
            "            {",
            "                key = value[i];",
            "                if(keys[key])",
            "                {",
            "                    obj[key] = this.getDataByKey(key);",
            "                }",
            "            }",
            "        }",
            "        else if(keys[value])",
            "        {",
            "            obj = keys[value];",
            "        }",
            "        else",
            "        {",
            "            obj = null;",
            "        }",
            "        return obj;",
            "    },",
            "",
            "    /**",
            "     * Returns the total number of majorUnits that will appear on an axis.",
            "     *",
            "     * @method getTotalMajorUnits",
            "     * @return Number",
            "     */",
            "    getTotalMajorUnits: function()",
            "    {",
            "        var units,",
            "            majorUnit = this.get(\"styles\").majorUnit;",
            "        units = majorUnit.count;",
            "        return units;",
            "    },",
            "",
            "    /**",
            "     * Gets the distance that the first and last ticks are offset from there respective",
            "     * edges.",
            "     *",
            "     * @method getEdgeOffset",
            "     * @param {Number} ct Number of ticks on the axis.",
            "     * @param {Number} l Length (in pixels) of the axis.",
            "     * @return Number",
            "     */",
            "    getEdgeOffset: function(ct, l)",
            "    {",
            "        var edgeOffset;",
            "        if(this.get(\"calculateEdgeOffset\")) {",
            "            edgeOffset = (l/ct)/2;",
            "        } else {",
            "            edgeOffset = 0;",
            "        }",
            "        return edgeOffset;",
            "    },",
            "",
            "    /**",
            "     * Updates the `Axis` after a change in keys.",
            "     *",
            "     * @method _keyChangeHandler",
            "     * @param {Object} e Event object.",
            "     * @private",
            "     */",
            "    _keyChangeHandler: function()",
            "    {",
            "        this._updateMinAndMax();",
            "        this._updateTotalDataFlag = true;",
            "        this.fire(\"dataUpdate\");",
            "    },",
            "",
            "    /**",
            "     * Gets the default value for the `styles` attribute. Overrides",
            "     * base implementation.",
            "     *",
            "     * @method _getDefaultStyles",
            "     * @return Object",
            "     * @protected",
            "     */",
            "    _getDefaultStyles: function()",
            "    {",
            "        var axisstyles = {",
            "            majorUnit: {",
            "                determinant:\"count\",",
            "                count:11,",
            "                distance:75",
            "            }",
            "        };",
            "        return axisstyles;",
            "    },",
            "",
            "    /**",
            "     * Getter method for maximum attribute.",
            "     *",
            "     * @method _maximumGetter",
            "     * @return Number",
            "     * @private",
            "     */",
            "    _maximumGetter: function ()",
            "    {",
            "        var max = this.get(\"dataMaximum\"),",
            "            min = this.get(\"minimum\");",
            "        //If all values are zero, force a range so that the Axis and related series",
            "        //will still render.",
            "        if(min === 0 && max === 0)",
            "        {",
            "            max = 10;",
            "        }",
            "        if(Y_Lang.isNumber(this._setMaximum))",
            "        {",
            "            max = this._setMaximum;",
            "        }",
            "        return parseFloat(max);",
            "    },",
            "",
            "    /**",
            "     * Setter method for maximum attribute.",
            "     *",
            "     * @method _maximumSetter",
            "     * @param {Object} value",
            "     * @private",
            "     */",
            "    _maximumSetter: function (value)",
            "    {",
            "        this._setMaximum = parseFloat(value);",
            "        return value;",
            "    },",
            "",
            "    /**",
            "     * Getter method for minimum attribute.",
            "     *",
            "     * @method _minimumGetter",
            "     * @return Number",
            "     * @private",
            "     */",
            "    _minimumGetter: function ()",
            "    {",
            "        var min = this.get(\"dataMinimum\");",
            "        if(Y_Lang.isNumber(this._setMinimum))",
            "        {",
            "            min = this._setMinimum;",
            "        }",
            "        return parseFloat(min);",
            "    },",
            "",
            "    /**",
            "     * Setter method for minimum attribute.",
            "     *",
            "     * @method _minimumSetter",
            "     * @param {Object} value",
            "     * @private",
            "     */",
            "    _minimumSetter: function(val)",
            "    {",
            "        this._setMinimum = parseFloat(val);",
            "        return val;",
            "    },",
            "",
            "    /**",
            "     * Indicates whether or not the maximum attribute has been explicitly set.",
            "     *",
            "     * @method _getSetMax",
            "     * @return Boolean",
            "     * @private",
            "     */",
            "    _getSetMax: function()",
            "    {",
            "        return Y_Lang.isNumber(this._setMaximum);",
            "    },",
            "",
            "    /**",
            "     * Indicates whether or not the minimum attribute has been explicitly set.",
            "     *",
            "     * @method _getSetMin",
            "     * @return Boolean",
            "     * @private",
            "     */",
            "    _getSetMin: function()",
            "    {",
            "        return Y_Lang.isNumber(this._setMinimum);",
            "    }",
            "}, {",
            "    ATTRS: {",
            "        /**",
            "         * Determines whether and offset is automatically calculated for the edges of the axis.",
            "         *",
            "         * @attribute calculateEdgeOffset",
            "         * @type Boolean",
            "         */",
            "        calculateEdgeOffset: {",
            "            value: false",
            "        },",
            "",
            "        labelFunction: {",
            "            valueFn: function() {",
            "                return this.formatLabel;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Hash of array identifed by a string value.",
            "         *",
            "         * @attribute keys",
            "         * @type Object",
            "         */",
            "        keys: {",
            "            value: {},",
            "",
            "            setter: function(val)",
            "            {",
            "                var keys = {},",
            "                    i,",
            "                    len,",
            "                    data = this.get(\"dataProvider\");",
            "                if(Y_Lang.isArray(val))",
            "                {",
            "                    len = val.length;",
            "                    for(i = 0; i < len; ++i)",
            "                    {",
            "                        keys[val[i]] = this._getKeyArray(val[i], data);",
            "                    }",
            "",
            "                }",
            "                else if(Y_Lang.isString(val))",
            "                {",
            "                    keys = this.get(\"keys\");",
            "                    keys[val] = this._getKeyArray(val, data);",
            "                }",
            "                else",
            "                {",
            "                    for(i in val)",
            "                    {",
            "                        if(val.hasOwnProperty(i))",
            "                        {",
            "                            keys[i] = this._getKeyArray(i, data);",
            "                        }",
            "                    }",
            "                }",
            "                this._updateTotalDataFlag = true;",
            "                return keys;",
            "            }",
            "        },",
            "",
            "        /**",
            "         *Returns the type of axis data",
            "         *  <dl>",
            "         *      <dt>time</dt><dd>Manages time data</dd>",
            "         *      <dt>stacked</dt><dd>Manages stacked numeric data</dd>",
            "         *      <dt>numeric</dt><dd>Manages numeric data</dd>",
            "         *      <dt>category</dt><dd>Manages categorical data</dd>",
            "         *  </dl>",
            "         *",
            "         * @attribute type",
            "         * @type String",
            "         */",
            "        type:",
            "        {",
            "            readOnly: true,",
            "",
            "            getter: function ()",
            "            {",
            "                return this._type;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Instance of `ChartDataProvider` that the class uses",
            "         * to build its own data.",
            "         *",
            "         * @attribute dataProvider",
            "         * @type Array",
            "         */",
            "        dataProvider:{",
            "            setter: function (value)",
            "            {",
            "                return value;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * The maximum value contained in the `data` array. Used for",
            "         * `maximum` when `autoMax` is true.",
            "         *",
            "         * @attribute dataMaximum",
            "         * @type Number",
            "         */",
            "        dataMaximum: {",
            "            getter: function ()",
            "            {",
            "                if(!Y_Lang.isNumber(this._dataMaximum))",
            "                {",
            "                    this._updateMinAndMax();",
            "                }",
            "                return this._dataMaximum;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * The maximum value that will appear on an axis.",
            "         *",
            "         * @attribute maximum",
            "         * @type Number",
            "         */",
            "        maximum: {",
            "            lazyAdd: false,",
            "",
            "            getter: \"_maximumGetter\",",
            "",
            "            setter: \"_maximumSetter\"",
            "        },",
            "",
            "        /**",
            "         * The minimum value contained in the `data` array. Used for",
            "         * `minimum` when `autoMin` is true.",
            "         *",
            "         * @attribute dataMinimum",
            "         * @type Number",
            "         */",
            "        dataMinimum: {",
            "            getter: function ()",
            "            {",
            "                if(!Y_Lang.isNumber(this._dataMinimum))",
            "                {",
            "                    this._updateMinAndMax();",
            "                }",
            "                return this._dataMinimum;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * The minimum value that will appear on an axis.",
            "         *",
            "         * @attribute minimum",
            "         * @type Number",
            "         */",
            "        minimum: {",
            "            lazyAdd: false,",
            "",
            "            getter: \"_minimumGetter\",",
            "",
            "            setter: \"_minimumSetter\"",
            "        },",
            "",
            "        /**",
            "         * Determines whether the maximum is calculated or explicitly",
            "         * set by the user.",
            "         *",
            "         * @attribute setMax",
            "         * @type Boolean",
            "         */",
            "        setMax: {",
            "            readOnly: true,",
            "",
            "            getter: \"_getSetMax\"",
            "        },",
            "",
            "        /**",
            "         * Determines whether the minimum is calculated or explicitly",
            "         * set by the user.",
            "         *",
            "         * @attribute setMin",
            "         * @type Boolean",
            "         */",
            "        setMin: {",
            "            readOnly: true,",
            "",
            "            getter: \"_getSetMin\"",
            "        },",
            "",
            "        /**",
            "         * Array of axis data",
            "         *",
            "         * @attribute data",
            "         * @type Array",
            "         */",
            "        data: {",
            "            getter: function ()",
            "            {",
            "                if(!this._data || this._updateTotalDataFlag)",
            "                {",
            "                    this._updateTotalData();",
            "                }",
            "                return this._data;",
            "            }",
            "        },",
            "",
            "        /**",
            "         * Array containing all the keys in the axis.",
            "",
            "         * @attribute keyCollection",
            "         * @type Array",
            "         */",
            "        keyCollection: {",
            "            getter: function()",
            "            {",
            "                var keys = this.get(\"keys\"),",
            "                    i,",
            "                    col = [];",
            "                for(i in keys)",
            "                {",
            "                    if(keys.hasOwnProperty(i))",
            "                    {",
            "                        col.push(i);",
            "                    }",
            "                }",
            "                return col;",
            "            },",
            "            readOnly: true",
            "        },",
            "",
            "        /**",
            "         * Object which should have by the labelFunction",
            "         *",
            "         * @attribute labelFunctionScope",
            "         * @type Object",
            "         */",
            "        labelFunctionScope: {}",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"classnamemanager\", \"datatype-number\", \"datatype-date\", \"base\", \"event-custom\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "17": 1,
            "27": 1,
            "29": 1,
            "40": 10,
            "41": 10,
            "46": 4,
            "58": 1,
            "60": 1,
            "80": 4,
            "81": 4,
            "96": 7,
            "98": 1,
            "100": 7,
            "101": 7,
            "103": 14,
            "105": 3,
            "109": 11,
            "112": 7,
            "124": 1,
            "133": 1,
            "134": 1,
            "162": 1,
            "169": 2,
            "170": 2,
            "171": 2,
            "172": 2,
            "184": 3,
            "187": 3,
            "189": 3,
            "191": 4,
            "193": 4,
            "197": 3,
            "199": 2,
            "286": 2,
            "300": 14,
            "304": 14,
            "306": 308,
            "307": 308,
            "309": 14,
            "320": 1,
            "322": 1,
            "323": 1,
            "325": 2,
            "327": 2,
            "330": 1,
            "342": 4,
            "343": 4,
            "345": 4,
            "346": 4,
            "360": 133,
            "362": 133,
            "364": 132,
            "366": 133,
            "380": 16,
            "385": 16,
            "387": 2,
            "388": 2,
            "389": 2,
            "391": 4,
            "392": 4,
            "394": 2,
            "398": 14,
            "400": 10,
            "404": 4,
            "406": 16,
            "417": 2,
            "419": 2,
            "420": 2,
            "434": 1,
            "435": 1,
            "436": 0,
            "438": 1,
            "440": 1,
            "452": 12,
            "453": 12,
            "454": 12,
            "467": 2,
            "474": 2,
            "486": 3,
            "490": 3,
            "492": 2,
            "494": 3,
            "496": 1,
            "498": 3,
            "510": 1,
            "511": 1,
            "523": 6,
            "524": 6,
            "526": 1,
            "528": 6,
            "540": 1,
            "541": 1,
            "553": 2,
            "565": 2,
            "581": 2,
            "596": 10,
            "600": 10,
            "602": 5,
            "603": 5,
            "605": 10,
            "609": 5,
            "611": 2,
            "612": 2,
            "616": 3,
            "618": 2,
            "620": 2,
            "624": 10,
            "625": 10,
            "647": 1,
            "661": 4,
            "675": 4,
            "677": 2,
            "679": 4,
            "707": 7,
            "709": 3,
            "711": 7,
            "764": 2,
            "766": 1,
            "768": 2,
            "781": 3,
            "784": 3,
            "786": 4,
            "788": 4,
            "791": 3
        }
    }
}