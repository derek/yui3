{
    "build/router/router.js": {
        "path": "build/router/router.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 160,
            "5": 1,
            "6": 160,
            "7": 160,
            "8": 160,
            "9": 160,
            "10": 160,
            "11": 160,
            "12": 144,
            "13": 144,
            "14": 16,
            "15": 160,
            "16": 160,
            "17": 160,
            "18": 160,
            "19": 160,
            "20": 160,
            "21": 160,
            "22": 160,
            "23": 160,
            "24": 160,
            "25": 160,
            "26": 2,
            "27": 2,
            "28": 2,
            "29": 0,
            "30": 2,
            "31": 3,
            "32": 32,
            "33": 32,
            "34": 3,
            "35": 29,
            "36": 5,
            "37": 29,
            "38": 29,
            "39": 85,
            "40": 153,
            "41": 149,
            "42": 149,
            "43": 149,
            "44": 22,
            "45": 149,
            "46": 61,
            "47": 6,
            "48": 93,
            "49": 93,
            "50": 93,
            "51": 93,
            "52": 23,
            "53": 2,
            "54": 0,
            "55": 2,
            "56": 2,
            "57": 2,
            "58": 2,
            "59": 2,
            "60": 0,
            "61": 79,
            "62": 81,
            "63": 81,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 81,
            "68": 81,
            "69": 55,
            "70": 55,
            "71": 55,
            "72": 3,
            "73": 3,
            "74": 52,
            "75": 52,
            "76": 52,
            "77": 137,
            "78": 137,
            "79": 1,
            "80": 1,
            "81": 1,
            "82": 0,
            "83": 136,
            "84": 74,
            "85": 14,
            "86": 14,
            "87": 14,
            "88": 0,
            "89": 74,
            "90": 74,
            "91": 62,
            "92": 59,
            "93": 59,
            "94": 75,
            "95": 59,
            "96": 56,
            "97": 3,
            "98": 59,
            "99": 59,
            "100": 52,
            "101": 52,
            "102": 52,
            "103": 36,
            "104": 36,
            "105": 35,
            "106": 1,
            "107": 128,
            "108": 128,
            "109": 32,
            "110": 32,
            "111": 16,
            "112": 16,
            "113": 2,
            "114": 14,
            "115": 14,
            "116": 14,
            "117": 65,
            "118": 65,
            "119": 44,
            "120": 21,
            "121": 21,
            "122": 21,
            "123": 135,
            "124": 10,
            "125": 125,
            "126": 7,
            "127": 118,
            "128": 43,
            "129": 12,
            "130": 31,
            "131": 31,
            "132": 118,
            "133": 52,
            "134": 52,
            "135": 1,
            "136": 52,
            "137": 52,
            "138": 170,
            "139": 206,
            "140": 206,
            "141": 31,
            "142": 206,
            "143": 117,
            "144": 117,
            "145": 1,
            "146": 117,
            "147": 68,
            "148": 68,
            "149": 68,
            "150": 68,
            "151": 68,
            "152": 30,
            "153": 30,
            "154": 2,
            "155": 28,
            "156": 28,
            "157": 28,
            "158": 129,
            "159": 129,
            "160": 0,
            "161": 129,
            "162": 78,
            "163": 28,
            "164": 28,
            "165": 23,
            "166": 28,
            "167": 52,
            "168": 52,
            "169": 53,
            "170": 53,
            "171": 3,
            "172": 52,
            "173": 29,
            "174": 29,
            "175": 29,
            "176": 20,
            "177": 0,
            "178": 20,
            "179": 20,
            "180": 9,
            "181": 9,
            "182": 29,
            "183": 29,
            "184": 44,
            "185": 14,
            "186": 30,
            "187": 5,
            "188": 30,
            "189": 44,
            "190": 44,
            "191": 0,
            "192": 44,
            "193": 44,
            "194": 44,
            "195": 44,
            "196": 44,
            "197": 0,
            "198": 0,
            "199": 0,
            "200": 44,
            "201": 44,
            "202": 30,
            "203": 14,
            "204": 14,
            "205": 29,
            "206": 29,
            "207": 2,
            "208": 2,
            "209": 27,
            "210": 25,
            "211": 27,
            "212": 27,
            "213": 18,
            "214": 9,
            "215": 9,
            "216": 9,
            "217": 9,
            "218": 1,
            "219": 9,
            "220": 1,
            "221": 9,
            "222": 3,
            "223": 6,
            "224": 27,
            "225": 317,
            "226": 317,
            "227": 19,
            "228": 19,
            "229": 317,
            "230": 57,
            "231": 1,
            "232": 56,
            "233": 56,
            "234": 2,
            "235": 56,
            "236": 24,
            "237": 24,
            "238": 23,
            "239": 33,
            "240": 25,
            "241": 25,
            "242": 25,
            "243": 0,
            "244": 25,
            "245": 160,
            "246": 50,
            "247": 3,
            "248": 3,
            "249": 4,
            "250": 4,
            "251": 4,
            "252": 1
        },
        "b": {
            "1": [
                7,
                153
            ],
            "2": [
                160,
                66
            ],
            "3": [
                144,
                16
            ],
            "4": [
                160,
                0
            ],
            "5": [
                160,
                0
            ],
            "6": [
                0,
                2
            ],
            "7": [
                3,
                29
            ],
            "8": [
                5,
                24
            ],
            "9": [
                22,
                127
            ],
            "10": [
                149,
                32
            ],
            "11": [
                134,
                15
            ],
            "12": [
                0,
                2
            ],
            "13": [
                2,
                0
            ],
            "14": [
                0,
                81
            ],
            "15": [
                29,
                52
            ],
            "16": [
                3,
                52
            ],
            "17": [
                55,
                55
            ],
            "18": [
                1,
                136
            ],
            "19": [
                1,
                0
            ],
            "20": [
                74,
                62
            ],
            "21": [
                14,
                60
            ],
            "22": [
                0,
                14
            ],
            "23": [
                59,
                3
            ],
            "24": [
                59,
                0
            ],
            "25": [
                75,
                73,
                2
            ],
            "26": [
                56,
                3
            ],
            "27": [
                36,
                12
            ],
            "28": [
                35,
                1
            ],
            "29": [
                36,
                36
            ],
            "30": [
                128,
                0
            ],
            "31": [
                32,
                10,
                22
            ],
            "32": [
                2,
                14
            ],
            "33": [
                44,
                21
            ],
            "34": [
                0,
                21
            ],
            "35": [
                21,
                20
            ],
            "36": [
                10,
                125
            ],
            "37": [
                7,
                118
            ],
            "38": [
                12,
                31
            ],
            "39": [
                12,
                0
            ],
            "40": [
                6,
                25
            ],
            "41": [
                31,
                175
            ],
            "42": [
                117,
                117,
                33
            ],
            "43": [
                1,
                116
            ],
            "44": [
                117,
                84
            ],
            "45": [
                117,
                84
            ],
            "46": [
                68,
                0
            ],
            "47": [
                9,
                59
            ],
            "48": [
                68,
                16
            ],
            "49": [
                2,
                28
            ],
            "50": [
                30,
                30
            ],
            "51": [
                0,
                129
            ],
            "52": [
                78,
                51
            ],
            "53": [
                23,
                5
            ],
            "54": [
                28,
                28
            ],
            "55": [
                0,
                1
            ],
            "56": [
                1,
                0
            ],
            "57": [
                3,
                50
            ],
            "58": [
                3,
                1
            ],
            "59": [
                20,
                9
            ],
            "60": [
                0,
                20
            ],
            "61": [
                20,
                0
            ],
            "62": [
                29,
                0
            ],
            "63": [
                14,
                30
            ],
            "64": [
                5,
                25
            ],
            "65": [
                44,
                44
            ],
            "66": [
                0,
                44
            ],
            "67": [
                0,
                44
            ],
            "68": [
                0,
                0
            ],
            "69": [
                0,
                0
            ],
            "70": [
                0,
                0
            ],
            "71": [
                0,
                0
            ],
            "72": [
                30,
                14
            ],
            "73": [
                44,
                14
            ],
            "74": [
                30,
                30
            ],
            "75": [
                30,
                28
            ],
            "76": [
                3,
                11
            ],
            "77": [
                14,
                12
            ],
            "78": [
                2,
                27
            ],
            "79": [
                29,
                27
            ],
            "80": [
                25,
                2
            ],
            "81": [
                18,
                9
            ],
            "82": [
                4,
                14
            ],
            "83": [
                1,
                8
            ],
            "84": [
                1,
                8
            ],
            "85": [
                9,
                9
            ],
            "86": [
                3,
                6
            ],
            "87": [
                0,
                6
            ],
            "88": [
                19,
                15
            ],
            "89": [
                1,
                56
            ],
            "90": [
                56,
                32
            ],
            "91": [
                56,
                32
            ],
            "92": [
                2,
                54
            ],
            "93": [
                56,
                2
            ],
            "94": [
                24,
                32
            ],
            "95": [
                23,
                1
            ],
            "96": [
                0,
                25
            ],
            "97": [
                25,
                0,
                0
            ],
            "98": [
                1,
                1,
                0
            ],
            "99": [
                4,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 160,
            "3": 160,
            "4": 160,
            "5": 160,
            "6": 160,
            "7": 160,
            "8": 2,
            "9": 2,
            "10": 3,
            "11": 32,
            "12": 85,
            "13": 153,
            "14": 149,
            "15": 61,
            "16": 6,
            "17": 93,
            "18": 23,
            "19": 2,
            "20": 2,
            "21": 79,
            "22": 81,
            "23": 0,
            "24": 55,
            "25": 137,
            "26": 75,
            "27": 36,
            "28": 128,
            "29": 32,
            "30": 16,
            "31": 65,
            "32": 135,
            "33": 43,
            "34": 52,
            "35": 52,
            "36": 1,
            "37": 170,
            "38": 206,
            "39": 117,
            "40": 68,
            "41": 30,
            "42": 52,
            "43": 29,
            "44": 29,
            "45": 20,
            "46": 44,
            "47": 44,
            "48": 29,
            "49": 317,
            "50": 19,
            "51": 57,
            "52": 25,
            "53": 160,
            "54": 50,
            "55": 3
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 18
                    },
                    "end": {
                        "line": 1,
                        "column": 37
                    }
                }
            },
            "2": {
                "name": "Router",
                "line": 59,
                "loc": {
                    "start": {
                        "line": 59,
                        "column": 0
                    },
                    "end": {
                        "line": 59,
                        "column": 18
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 150,
                "loc": {
                    "start": {
                        "line": 150,
                        "column": 17
                    },
                    "end": {
                        "line": 150,
                        "column": 35
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 181,
                "loc": {
                    "start": {
                        "line": 181,
                        "column": 39
                    },
                    "end": {
                        "line": 181,
                        "column": 51
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 182,
                "loc": {
                    "start": {
                        "line": 182,
                        "column": 27
                    },
                    "end": {
                        "line": 182,
                        "column": 39
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 183,
                "loc": {
                    "start": {
                        "line": 183,
                        "column": 27
                    },
                    "end": {
                        "line": 183,
                        "column": 39
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 193,
                "loc": {
                    "start": {
                        "line": 193,
                        "column": 16
                    },
                    "end": {
                        "line": 193,
                        "column": 28
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 218,
                "loc": {
                    "start": {
                        "line": 218,
                        "column": 14
                    },
                    "end": {
                        "line": 218,
                        "column": 26
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 219,
                "loc": {
                    "start": {
                        "line": 219,
                        "column": 29
                    },
                    "end": {
                        "line": 219,
                        "column": 41
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 236,
                "loc": {
                    "start": {
                        "line": 236,
                        "column": 13
                    },
                    "end": {
                        "line": 236,
                        "column": 25
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 253,
                "loc": {
                    "start": {
                        "line": 253,
                        "column": 14
                    },
                    "end": {
                        "line": 253,
                        "column": 29
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 299,
                "loc": {
                    "start": {
                        "line": 299,
                        "column": 11
                    },
                    "end": {
                        "line": 299,
                        "column": 27
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 300,
                "loc": {
                    "start": {
                        "line": 300,
                        "column": 43
                    },
                    "end": {
                        "line": 300,
                        "column": 60
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 313,
                "loc": {
                    "start": {
                        "line": 313,
                        "column": 16
                    },
                    "end": {
                        "line": 313,
                        "column": 31
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 335,
                "loc": {
                    "start": {
                        "line": 335,
                        "column": 17
                    },
                    "end": {
                        "line": 335,
                        "column": 32
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 369,
                "loc": {
                    "start": {
                        "line": 369,
                        "column": 13
                    },
                    "end": {
                        "line": 369,
                        "column": 28
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 479,
                "loc": {
                    "start": {
                        "line": 479,
                        "column": 11
                    },
                    "end": {
                        "line": 479,
                        "column": 38
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 527,
                "loc": {
                    "start": {
                        "line": 527,
                        "column": 10
                    },
                    "end": {
                        "line": 527,
                        "column": 25
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 538,
                "loc": {
                    "start": {
                        "line": 538,
                        "column": 13
                    },
                    "end": {
                        "line": 538,
                        "column": 25
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 551,
                "loc": {
                    "start": {
                        "line": 551,
                        "column": 33
                    },
                    "end": {
                        "line": 551,
                        "column": 45
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 572,
                "loc": {
                    "start": {
                        "line": 572,
                        "column": 13
                    },
                    "end": {
                        "line": 572,
                        "column": 31
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 585,
                "loc": {
                    "start": {
                        "line": 585,
                        "column": 14
                    },
                    "end": {
                        "line": 585,
                        "column": 26
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 593,
                "loc": {
                    "start": {
                        "line": 593,
                        "column": 27
                    },
                    "end": {
                        "line": 593,
                        "column": 39
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 618,
                "loc": {
                    "start": {
                        "line": 618,
                        "column": 15
                    },
                    "end": {
                        "line": 618,
                        "column": 41
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 635,
                "loc": {
                    "start": {
                        "line": 635,
                        "column": 19
                    },
                    "end": {
                        "line": 635,
                        "column": 34
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 671,
                "loc": {
                    "start": {
                        "line": 671,
                        "column": 67
                    },
                    "end": {
                        "line": 671,
                        "column": 84
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 713,
                "loc": {
                    "start": {
                        "line": 713,
                        "column": 18
                    },
                    "end": {
                        "line": 713,
                        "column": 34
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 734,
                "loc": {
                    "start": {
                        "line": 734,
                        "column": 16
                    },
                    "end": {
                        "line": 734,
                        "column": 28
                    }
                }
            },
            "29": {
                "name": "(anonymous_29)",
                "line": 746,
                "loc": {
                    "start": {
                        "line": 746,
                        "column": 14
                    },
                    "end": {
                        "line": 746,
                        "column": 26
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 764,
                "loc": {
                    "start": {
                        "line": 764,
                        "column": 18
                    },
                    "end": {
                        "line": 764,
                        "column": 30
                    }
                }
            },
            "31": {
                "name": "(anonymous_31)",
                "line": 786,
                "loc": {
                    "start": {
                        "line": 786,
                        "column": 15
                    },
                    "end": {
                        "line": 786,
                        "column": 27
                    }
                }
            },
            "32": {
                "name": "(anonymous_32)",
                "line": 811,
                "loc": {
                    "start": {
                        "line": 811,
                        "column": 15
                    },
                    "end": {
                        "line": 811,
                        "column": 37
                    }
                }
            },
            "33": {
                "name": "(anonymous_33)",
                "line": 821,
                "loc": {
                    "start": {
                        "line": 821,
                        "column": 50
                    },
                    "end": {
                        "line": 821,
                        "column": 82
                    }
                }
            },
            "34": {
                "name": "(anonymous_34)",
                "line": 845,
                "loc": {
                    "start": {
                        "line": 845,
                        "column": 17
                    },
                    "end": {
                        "line": 845,
                        "column": 43
                    }
                }
            },
            "35": {
                "name": "(anonymous_35)",
                "line": 862,
                "loc": {
                    "start": {
                        "line": 862,
                        "column": 18
                    },
                    "end": {
                        "line": 862,
                        "column": 33
                    }
                }
            },
            "36": {
                "name": "(anonymous_36)",
                "line": 865,
                "loc": {
                    "start": {
                        "line": 865,
                        "column": 18
                    },
                    "end": {
                        "line": 865,
                        "column": 30
                    }
                }
            },
            "37": {
                "name": "(anonymous_37)",
                "line": 880,
                "loc": {
                    "start": {
                        "line": 880,
                        "column": 16
                    },
                    "end": {
                        "line": 880,
                        "column": 28
                    }
                }
            },
            "38": {
                "name": "(anonymous_38)",
                "line": 891,
                "loc": {
                    "start": {
                        "line": 891,
                        "column": 13
                    },
                    "end": {
                        "line": 891,
                        "column": 25
                    }
                }
            },
            "39": {
                "name": "(anonymous_39)",
                "line": 913,
                "loc": {
                    "start": {
                        "line": 913,
                        "column": 20
                    },
                    "end": {
                        "line": 913,
                        "column": 35
                    }
                }
            },
            "40": {
                "name": "(anonymous_40)",
                "line": 942,
                "loc": {
                    "start": {
                        "line": 942,
                        "column": 14
                    },
                    "end": {
                        "line": 942,
                        "column": 29
                    }
                }
            },
            "41": {
                "name": "(anonymous_41)",
                "line": 967,
                "loc": {
                    "start": {
                        "line": 967,
                        "column": 20
                    },
                    "end": {
                        "line": 967,
                        "column": 36
                    }
                }
            },
            "42": {
                "name": "(anonymous_42)",
                "line": 1008,
                "loc": {
                    "start": {
                        "line": 1008,
                        "column": 45
                    },
                    "end": {
                        "line": 1008,
                        "column": 62
                    }
                }
            },
            "43": {
                "name": "(anonymous_43)",
                "line": 1043,
                "loc": {
                    "start": {
                        "line": 1043,
                        "column": 12
                    },
                    "end": {
                        "line": 1043,
                        "column": 24
                    }
                }
            },
            "44": {
                "name": "(anonymous_44)",
                "line": 1047,
                "loc": {
                    "start": {
                        "line": 1047,
                        "column": 23
                    },
                    "end": {
                        "line": 1047,
                        "column": 35
                    }
                }
            },
            "45": {
                "name": "(anonymous_45)",
                "line": 1057,
                "loc": {
                    "start": {
                        "line": 1057,
                        "column": 31
                    },
                    "end": {
                        "line": 1057,
                        "column": 43
                    }
                }
            },
            "46": {
                "name": "(anonymous_46)",
                "line": 1082,
                "loc": {
                    "start": {
                        "line": 1082,
                        "column": 18
                    },
                    "end": {
                        "line": 1082,
                        "column": 34
                    }
                }
            },
            "47": {
                "name": "(anonymous_47)",
                "line": 1109,
                "loc": {
                    "start": {
                        "line": 1109,
                        "column": 17
                    },
                    "end": {
                        "line": 1109,
                        "column": 32
                    }
                }
            },
            "48": {
                "name": "(anonymous_48)",
                "line": 1159,
                "loc": {
                    "start": {
                        "line": 1159,
                        "column": 11
                    },
                    "end": {
                        "line": 1159,
                        "column": 35
                    }
                }
            },
            "49": {
                "name": "(anonymous_49)",
                "line": 1217,
                "loc": {
                    "start": {
                        "line": 1217,
                        "column": 16
                    },
                    "end": {
                        "line": 1217,
                        "column": 34
                    }
                }
            },
            "50": {
                "name": "(anonymous_50)",
                "line": 1220,
                "loc": {
                    "start": {
                        "line": 1220,
                        "column": 28
                    },
                    "end": {
                        "line": 1220,
                        "column": 45
                    }
                }
            },
            "51": {
                "name": "(anonymous_51)",
                "line": 1246,
                "loc": {
                    "start": {
                        "line": 1246,
                        "column": 17
                    },
                    "end": {
                        "line": 1246,
                        "column": 32
                    }
                }
            },
            "52": {
                "name": "(anonymous_52)",
                "line": 1282,
                "loc": {
                    "start": {
                        "line": 1282,
                        "column": 25
                    },
                    "end": {
                        "line": 1282,
                        "column": 38
                    }
                }
            },
            "53": {
                "name": "(anonymous_53)",
                "line": 1313,
                "loc": {
                    "start": {
                        "line": 1313,
                        "column": 17
                    },
                    "end": {
                        "line": 1313,
                        "column": 30
                    }
                }
            },
            "54": {
                "name": "(anonymous_54)",
                "line": 1338,
                "loc": {
                    "start": {
                        "line": 1338,
                        "column": 21
                    },
                    "end": {
                        "line": 1338,
                        "column": 33
                    }
                }
            },
            "55": {
                "name": "(anonymous_55)",
                "line": 1407,
                "loc": {
                    "start": {
                        "line": 1407,
                        "column": 14
                    },
                    "end": {
                        "line": 1407,
                        "column": 26
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 1434,
                    "column": 108
                }
            },
            "2": {
                "start": {
                    "line": 11,
                    "column": 0
                },
                "end": {
                    "line": 38,
                    "column": 24
                }
            },
            "3": {
                "start": {
                    "line": 59,
                    "column": 0
                },
                "end": {
                    "line": 61,
                    "column": 1
                }
            },
            "4": {
                "start": {
                    "line": 60,
                    "column": 4
                },
                "end": {
                    "line": 60,
                    "column": 57
                }
            },
            "5": {
                "start": {
                    "line": 63,
                    "column": 0
                },
                "end": {
                    "line": 1418,
                    "column": 3
                }
            },
            "6": {
                "start": {
                    "line": 151,
                    "column": 8
                },
                "end": {
                    "line": 151,
                    "column": 24
                }
            },
            "7": {
                "start": {
                    "line": 153,
                    "column": 8
                },
                "end": {
                    "line": 153,
                    "column": 41
                }
            },
            "8": {
                "start": {
                    "line": 154,
                    "column": 8
                },
                "end": {
                    "line": 154,
                    "column": 26
                }
            },
            "9": {
                "start": {
                    "line": 155,
                    "column": 8
                },
                "end": {
                    "line": 155,
                    "column": 38
                }
            },
            "10": {
                "start": {
                    "line": 158,
                    "column": 8
                },
                "end": {
                    "line": 159,
                    "column": 36
                }
            },
            "11": {
                "start": {
                    "line": 162,
                    "column": 8
                },
                "end": {
                    "line": 169,
                    "column": 9
                }
            },
            "12": {
                "start": {
                    "line": 163,
                    "column": 12
                },
                "end": {
                    "line": 163,
                    "column": 68
                }
            },
            "13": {
                "start": {
                    "line": 164,
                    "column": 12
                },
                "end": {
                    "line": 165,
                    "column": 78
                }
            },
            "14": {
                "start": {
                    "line": 167,
                    "column": 12
                },
                "end": {
                    "line": 168,
                    "column": 76
                }
            },
            "15": {
                "start": {
                    "line": 175,
                    "column": 8
                },
                "end": {
                    "line": 179,
                    "column": 11
                }
            },
            "16": {
                "start": {
                    "line": 181,
                    "column": 8
                },
                "end": {
                    "line": 187,
                    "column": 11
                }
            },
            "17": {
                "start": {
                    "line": 182,
                    "column": 12
                },
                "end": {
                    "line": 186,
                    "column": 15
                }
            },
            "18": {
                "start": {
                    "line": 183,
                    "column": 16
                },
                "end": {
                    "line": 185,
                    "column": 23
                }
            },
            "19": {
                "start": {
                    "line": 184,
                    "column": 20
                },
                "end": {
                    "line": 184,
                    "column": 75
                }
            },
            "20": {
                "start": {
                    "line": 190,
                    "column": 8
                },
                "end": {
                    "line": 190,
                    "column": 29
                }
            },
            "21": {
                "start": {
                    "line": 194,
                    "column": 8
                },
                "end": {
                    "line": 194,
                    "column": 60
                }
            },
            "22": {
                "start": {
                    "line": 197,
                    "column": 8
                },
                "end": {
                    "line": 199,
                    "column": 9
                }
            },
            "23": {
                "start": {
                    "line": 198,
                    "column": 12
                },
                "end": {
                    "line": 198,
                    "column": 47
                }
            },
            "24": {
                "start": {
                    "line": 201,
                    "column": 8
                },
                "end": {
                    "line": 203,
                    "column": 9
                }
            },
            "25": {
                "start": {
                    "line": 202,
                    "column": 12
                },
                "end": {
                    "line": 202,
                    "column": 41
                }
            },
            "26": {
                "start": {
                    "line": 219,
                    "column": 8
                },
                "end": {
                    "line": 225,
                    "column": 11
                }
            },
            "27": {
                "start": {
                    "line": 220,
                    "column": 12
                },
                "end": {
                    "line": 220,
                    "column": 31
                }
            },
            "28": {
                "start": {
                    "line": 222,
                    "column": 12
                },
                "end": {
                    "line": 224,
                    "column": 13
                }
            },
            "29": {
                "start": {
                    "line": 223,
                    "column": 16
                },
                "end": {
                    "line": 223,
                    "column": 64
                }
            },
            "30": {
                "start": {
                    "line": 227,
                    "column": 8
                },
                "end": {
                    "line": 227,
                    "column": 20
                }
            },
            "31": {
                "start": {
                    "line": 237,
                    "column": 8
                },
                "end": {
                    "line": 237,
                    "column": 31
                }
            },
            "32": {
                "start": {
                    "line": 254,
                    "column": 8
                },
                "end": {
                    "line": 254,
                    "column": 17
                }
            },
            "33": {
                "start": {
                    "line": 256,
                    "column": 8
                },
                "end": {
                    "line": 258,
                    "column": 9
                }
            },
            "34": {
                "start": {
                    "line": 257,
                    "column": 12
                },
                "end": {
                    "line": 257,
                    "column": 25
                }
            },
            "35": {
                "start": {
                    "line": 260,
                    "column": 8
                },
                "end": {
                    "line": 262,
                    "column": 9
                }
            },
            "36": {
                "start": {
                    "line": 261,
                    "column": 12
                },
                "end": {
                    "line": 261,
                    "column": 40
                }
            },
            "37": {
                "start": {
                    "line": 264,
                    "column": 8
                },
                "end": {
                    "line": 264,
                    "column": 54
                }
            },
            "38": {
                "start": {
                    "line": 266,
                    "column": 8
                },
                "end": {
                    "line": 266,
                    "column": 41
                }
            },
            "39": {
                "start": {
                    "line": 300,
                    "column": 8
                },
                "end": {
                    "line": 302,
                    "column": 11
                }
            },
            "40": {
                "start": {
                    "line": 301,
                    "column": 12
                },
                "end": {
                    "line": 301,
                    "column": 49
                }
            },
            "41": {
                "start": {
                    "line": 314,
                    "column": 8
                },
                "end": {
                    "line": 314,
                    "column": 36
                }
            },
            "42": {
                "start": {
                    "line": 318,
                    "column": 8
                },
                "end": {
                    "line": 318,
                    "column": 52
                }
            },
            "43": {
                "start": {
                    "line": 320,
                    "column": 8
                },
                "end": {
                    "line": 322,
                    "column": 9
                }
            },
            "44": {
                "start": {
                    "line": 321,
                    "column": 12
                },
                "end": {
                    "line": 321,
                    "column": 45
                }
            },
            "45": {
                "start": {
                    "line": 324,
                    "column": 8
                },
                "end": {
                    "line": 324,
                    "column": 55
                }
            },
            "46": {
                "start": {
                    "line": 336,
                    "column": 8
                },
                "end": {
                    "line": 336,
                    "column": 40
                }
            },
            "47": {
                "start": {
                    "line": 370,
                    "column": 8
                },
                "end": {
                    "line": 370,
                    "column": 38
                }
            },
            "48": {
                "start": {
                    "line": 480,
                    "column": 8
                },
                "end": {
                    "line": 480,
                    "column": 63
                }
            },
            "49": {
                "start": {
                    "line": 482,
                    "column": 8
                },
                "end": {
                    "line": 482,
                    "column": 22
                }
            },
            "50": {
                "start": {
                    "line": 484,
                    "column": 8
                },
                "end": {
                    "line": 492,
                    "column": 11
                }
            },
            "51": {
                "start": {
                    "line": 494,
                    "column": 8
                },
                "end": {
                    "line": 494,
                    "column": 20
                }
            },
            "52": {
                "start": {
                    "line": 528,
                    "column": 8
                },
                "end": {
                    "line": 528,
                    "column": 32
                }
            },
            "53": {
                "start": {
                    "line": 539,
                    "column": 8
                },
                "end": {
                    "line": 541,
                    "column": 9
                }
            },
            "54": {
                "start": {
                    "line": 540,
                    "column": 12
                },
                "end": {
                    "line": 540,
                    "column": 25
                }
            },
            "55": {
                "start": {
                    "line": 544,
                    "column": 8
                },
                "end": {
                    "line": 544,
                    "column": 43
                }
            },
            "56": {
                "start": {
                    "line": 546,
                    "column": 8
                },
                "end": {
                    "line": 556,
                    "column": 9
                }
            },
            "57": {
                "start": {
                    "line": 551,
                    "column": 12
                },
                "end": {
                    "line": 553,
                    "column": 15
                }
            },
            "58": {
                "start": {
                    "line": 552,
                    "column": 16
                },
                "end": {
                    "line": 552,
                    "column": 39
                }
            },
            "59": {
                "start": {
                    "line": 555,
                    "column": 12
                },
                "end": {
                    "line": 555,
                    "column": 24
                }
            },
            "60": {
                "start": {
                    "line": 558,
                    "column": 8
                },
                "end": {
                    "line": 558,
                    "column": 21
                }
            },
            "61": {
                "start": {
                    "line": 573,
                    "column": 8
                },
                "end": {
                    "line": 573,
                    "column": 62
                }
            },
            "62": {
                "start": {
                    "line": 586,
                    "column": 8
                },
                "end": {
                    "line": 587,
                    "column": 15
                }
            },
            "63": {
                "start": {
                    "line": 592,
                    "column": 8
                },
                "end": {
                    "line": 598,
                    "column": 9
                }
            },
            "64": {
                "start": {
                    "line": 593,
                    "column": 12
                },
                "end": {
                    "line": 595,
                    "column": 15
                }
            },
            "65": {
                "start": {
                    "line": 594,
                    "column": 16
                },
                "end": {
                    "line": 594,
                    "column": 32
                }
            },
            "66": {
                "start": {
                    "line": 597,
                    "column": 12
                },
                "end": {
                    "line": 597,
                    "column": 24
                }
            },
            "67": {
                "start": {
                    "line": 600,
                    "column": 8
                },
                "end": {
                    "line": 600,
                    "column": 31
                }
            },
            "68": {
                "start": {
                    "line": 601,
                    "column": 8
                },
                "end": {
                    "line": 601,
                    "column": 32
                }
            },
            "69": {
                "start": {
                    "line": 619,
                    "column": 8
                },
                "end": {
                    "line": 623,
                    "column": 30
                }
            },
            "70": {
                "start": {
                    "line": 625,
                    "column": 8
                },
                "end": {
                    "line": 625,
                    "column": 52
                }
            },
            "71": {
                "start": {
                    "line": 627,
                    "column": 8
                },
                "end": {
                    "line": 630,
                    "column": 9
                }
            },
            "72": {
                "start": {
                    "line": 628,
                    "column": 12
                },
                "end": {
                    "line": 628,
                    "column": 38
                }
            },
            "73": {
                "start": {
                    "line": 629,
                    "column": 12
                },
                "end": {
                    "line": 629,
                    "column": 24
                }
            },
            "74": {
                "start": {
                    "line": 632,
                    "column": 8
                },
                "end": {
                    "line": 632,
                    "column": 47
                }
            },
            "75": {
                "start": {
                    "line": 633,
                    "column": 8
                },
                "end": {
                    "line": 633,
                    "column": 37
                }
            },
            "76": {
                "start": {
                    "line": 635,
                    "column": 8
                },
                "end": {
                    "line": 695,
                    "column": 10
                }
            },
            "77": {
                "start": {
                    "line": 636,
                    "column": 12
                },
                "end": {
                    "line": 636,
                    "column": 38
                }
            },
            "78": {
                "start": {
                    "line": 638,
                    "column": 12
                },
                "end": {
                    "line": 694,
                    "column": 13
                }
            },
            "79": {
                "start": {
                    "line": 641,
                    "column": 16
                },
                "end": {
                    "line": 646,
                    "column": 17
                }
            },
            "80": {
                "start": {
                    "line": 642,
                    "column": 20
                },
                "end": {
                    "line": 642,
                    "column": 35
                }
            },
            "81": {
                "start": {
                    "line": 643,
                    "column": 20
                },
                "end": {
                    "line": 643,
                    "column": 31
                }
            },
            "82": {
                "start": {
                    "line": 645,
                    "column": 20
                },
                "end": {
                    "line": 645,
                    "column": 33
                }
            },
            "83": {
                "start": {
                    "line": 648,
                    "column": 19
                },
                "end": {
                    "line": 694,
                    "column": 13
                }
            },
            "84": {
                "start": {
                    "line": 649,
                    "column": 16
                },
                "end": {
                    "line": 656,
                    "column": 17
                }
            },
            "85": {
                "start": {
                    "line": 650,
                    "column": 20
                },
                "end": {
                    "line": 650,
                    "column": 40
                }
            },
            "86": {
                "start": {
                    "line": 651,
                    "column": 20
                },
                "end": {
                    "line": 651,
                    "column": 42
                }
            },
            "87": {
                "start": {
                    "line": 653,
                    "column": 20
                },
                "end": {
                    "line": 655,
                    "column": 21
                }
            },
            "88": {
                "start": {
                    "line": 654,
                    "column": 24
                },
                "end": {
                    "line": 654,
                    "column": 87
                }
            },
            "89": {
                "start": {
                    "line": 660,
                    "column": 16
                },
                "end": {
                    "line": 660,
                    "column": 56
                }
            },
            "90": {
                "start": {
                    "line": 662,
                    "column": 16
                },
                "end": {
                    "line": 662,
                    "column": 56
                }
            },
            "91": {
                "start": {
                    "line": 664,
                    "column": 19
                },
                "end": {
                    "line": 694,
                    "column": 13
                }
            },
            "92": {
                "start": {
                    "line": 667,
                    "column": 16
                },
                "end": {
                    "line": 667,
                    "column": 53
                }
            },
            "93": {
                "start": {
                    "line": 671,
                    "column": 16
                },
                "end": {
                    "line": 678,
                    "column": 19
                }
            },
            "94": {
                "start": {
                    "line": 677,
                    "column": 20
                },
                "end": {
                    "line": 677,
                    "column": 58
                }
            },
            "95": {
                "start": {
                    "line": 682,
                    "column": 16
                },
                "end": {
                    "line": 686,
                    "column": 17
                }
            },
            "96": {
                "start": {
                    "line": 683,
                    "column": 20
                },
                "end": {
                    "line": 683,
                    "column": 75
                }
            },
            "97": {
                "start": {
                    "line": 685,
                    "column": 20
                },
                "end": {
                    "line": 685,
                    "column": 50
                }
            },
            "98": {
                "start": {
                    "line": 690,
                    "column": 16
                },
                "end": {
                    "line": 690,
                    "column": 50
                }
            },
            "99": {
                "start": {
                    "line": 693,
                    "column": 16
                },
                "end": {
                    "line": 693,
                    "column": 27
                }
            },
            "100": {
                "start": {
                    "line": 697,
                    "column": 8
                },
                "end": {
                    "line": 697,
                    "column": 19
                }
            },
            "101": {
                "start": {
                    "line": 699,
                    "column": 8
                },
                "end": {
                    "line": 699,
                    "column": 34
                }
            },
            "102": {
                "start": {
                    "line": 700,
                    "column": 8
                },
                "end": {
                    "line": 700,
                    "column": 31
                }
            },
            "103": {
                "start": {
                    "line": 714,
                    "column": 8
                },
                "end": {
                    "line": 714,
                    "column": 47
                }
            },
            "104": {
                "start": {
                    "line": 717,
                    "column": 8
                },
                "end": {
                    "line": 719,
                    "column": 9
                }
            },
            "105": {
                "start": {
                    "line": 718,
                    "column": 12
                },
                "end": {
                    "line": 718,
                    "column": 39
                }
            },
            "106": {
                "start": {
                    "line": 721,
                    "column": 8
                },
                "end": {
                    "line": 721,
                    "column": 18
                }
            },
            "107": {
                "start": {
                    "line": 735,
                    "column": 8
                },
                "end": {
                    "line": 735,
                    "column": 39
                }
            },
            "108": {
                "start": {
                    "line": 736,
                    "column": 8
                },
                "end": {
                    "line": 736,
                    "column": 77
                }
            },
            "109": {
                "start": {
                    "line": 747,
                    "column": 8
                },
                "end": {
                    "line": 748,
                    "column": 41
                }
            },
            "110": {
                "start": {
                    "line": 750,
                    "column": 8
                },
                "end": {
                    "line": 750,
                    "column": 55
                }
            },
            "111": {
                "start": {
                    "line": 765,
                    "column": 8
                },
                "end": {
                    "line": 767,
                    "column": 21
                }
            },
            "112": {
                "start": {
                    "line": 769,
                    "column": 8
                },
                "end": {
                    "line": 771,
                    "column": 9
                }
            },
            "113": {
                "start": {
                    "line": 770,
                    "column": 12
                },
                "end": {
                    "line": 770,
                    "column": 24
                }
            },
            "114": {
                "start": {
                    "line": 773,
                    "column": 8
                },
                "end": {
                    "line": 773,
                    "column": 37
                }
            },
            "115": {
                "start": {
                    "line": 774,
                    "column": 8
                },
                "end": {
                    "line": 774,
                    "column": 23
                }
            },
            "116": {
                "start": {
                    "line": 776,
                    "column": 8
                },
                "end": {
                    "line": 776,
                    "column": 44
                }
            },
            "117": {
                "start": {
                    "line": 787,
                    "column": 8
                },
                "end": {
                    "line": 788,
                    "column": 26
                }
            },
            "118": {
                "start": {
                    "line": 790,
                    "column": 8
                },
                "end": {
                    "line": 792,
                    "column": 9
                }
            },
            "119": {
                "start": {
                    "line": 791,
                    "column": 12
                },
                "end": {
                    "line": 791,
                    "column": 48
                }
            },
            "120": {
                "start": {
                    "line": 794,
                    "column": 8
                },
                "end": {
                    "line": 794,
                    "column": 40
                }
            },
            "121": {
                "start": {
                    "line": 795,
                    "column": 8
                },
                "end": {
                    "line": 795,
                    "column": 50
                }
            },
            "122": {
                "start": {
                    "line": 797,
                    "column": 8
                },
                "end": {
                    "line": 797,
                    "column": 75
                }
            },
            "123": {
                "start": {
                    "line": 812,
                    "column": 8
                },
                "end": {
                    "line": 814,
                    "column": 9
                }
            },
            "124": {
                "start": {
                    "line": 813,
                    "column": 12
                },
                "end": {
                    "line": 813,
                    "column": 24
                }
            },
            "125": {
                "start": {
                    "line": 817,
                    "column": 8
                },
                "end": {
                    "line": 819,
                    "column": 9
                }
            },
            "126": {
                "start": {
                    "line": 818,
                    "column": 12
                },
                "end": {
                    "line": 818,
                    "column": 26
                }
            },
            "127": {
                "start": {
                    "line": 821,
                    "column": 8
                },
                "end": {
                    "line": 830,
                    "column": 11
                }
            },
            "128": {
                "start": {
                    "line": 824,
                    "column": 12
                },
                "end": {
                    "line": 826,
                    "column": 13
                }
            },
            "129": {
                "start": {
                    "line": 825,
                    "column": 16
                },
                "end": {
                    "line": 825,
                    "column": 55
                }
            },
            "130": {
                "start": {
                    "line": 828,
                    "column": 12
                },
                "end": {
                    "line": 828,
                    "column": 27
                }
            },
            "131": {
                "start": {
                    "line": 829,
                    "column": 12
                },
                "end": {
                    "line": 829,
                    "column": 60
                }
            },
            "132": {
                "start": {
                    "line": 832,
                    "column": 8
                },
                "end": {
                    "line": 832,
                    "column": 44
                }
            },
            "133": {
                "start": {
                    "line": 846,
                    "column": 8
                },
                "end": {
                    "line": 851,
                    "column": 10
                }
            },
            "134": {
                "start": {
                    "line": 865,
                    "column": 8
                },
                "end": {
                    "line": 867,
                    "column": 10
                }
            },
            "135": {
                "start": {
                    "line": 866,
                    "column": 12
                },
                "end": {
                    "line": 866,
                    "column": 51
                }
            },
            "136": {
                "start": {
                    "line": 869,
                    "column": 8
                },
                "end": {
                    "line": 869,
                    "column": 22
                }
            },
            "137": {
                "start": {
                    "line": 870,
                    "column": 8
                },
                "end": {
                    "line": 870,
                    "column": 19
                }
            },
            "138": {
                "start": {
                    "line": 881,
                    "column": 8
                },
                "end": {
                    "line": 881,
                    "column": 37
                }
            },
            "139": {
                "start": {
                    "line": 892,
                    "column": 8
                },
                "end": {
                    "line": 892,
                    "column": 45
                }
            },
            "140": {
                "start": {
                    "line": 894,
                    "column": 8
                },
                "end": {
                    "line": 896,
                    "column": 9
                }
            },
            "141": {
                "start": {
                    "line": 895,
                    "column": 12
                },
                "end": {
                    "line": 895,
                    "column": 40
                }
            },
            "142": {
                "start": {
                    "line": 898,
                    "column": 8
                },
                "end": {
                    "line": 898,
                    "column": 19
                }
            },
            "143": {
                "start": {
                    "line": 914,
                    "column": 8
                },
                "end": {
                    "line": 914,
                    "column": 73
                }
            },
            "144": {
                "start": {
                    "line": 917,
                    "column": 8
                },
                "end": {
                    "line": 919,
                    "column": 9
                }
            },
            "145": {
                "start": {
                    "line": 918,
                    "column": 12
                },
                "end": {
                    "line": 918,
                    "column": 55
                }
            },
            "146": {
                "start": {
                    "line": 921,
                    "column": 8
                },
                "end": {
                    "line": 921,
                    "column": 55
                }
            },
            "147": {
                "start": {
                    "line": 943,
                    "column": 8
                },
                "end": {
                    "line": 943,
                    "column": 36
                }
            },
            "148": {
                "start": {
                    "line": 946,
                    "column": 8
                },
                "end": {
                    "line": 946,
                    "column": 35
                }
            },
            "149": {
                "start": {
                    "line": 948,
                    "column": 8
                },
                "end": {
                    "line": 950,
                    "column": 9
                }
            },
            "150": {
                "start": {
                    "line": 949,
                    "column": 12
                },
                "end": {
                    "line": 949,
                    "column": 35
                }
            },
            "151": {
                "start": {
                    "line": 952,
                    "column": 8
                },
                "end": {
                    "line": 954,
                    "column": 33
                }
            },
            "152": {
                "start": {
                    "line": 968,
                    "column": 8
                },
                "end": {
                    "line": 970,
                    "column": 57
                }
            },
            "153": {
                "start": {
                    "line": 972,
                    "column": 8
                },
                "end": {
                    "line": 974,
                    "column": 9
                }
            },
            "154": {
                "start": {
                    "line": 973,
                    "column": 12
                },
                "end": {
                    "line": 973,
                    "column": 25
                }
            },
            "155": {
                "start": {
                    "line": 976,
                    "column": 8
                },
                "end": {
                    "line": 976,
                    "column": 37
                }
            },
            "156": {
                "start": {
                    "line": 977,
                    "column": 8
                },
                "end": {
                    "line": 977,
                    "column": 22
                }
            },
            "157": {
                "start": {
                    "line": 979,
                    "column": 8
                },
                "end": {
                    "line": 987,
                    "column": 9
                }
            },
            "158": {
                "start": {
                    "line": 980,
                    "column": 12
                },
                "end": {
                    "line": 980,
                    "column": 34
                }
            },
            "159": {
                "start": {
                    "line": 982,
                    "column": 12
                },
                "end": {
                    "line": 986,
                    "column": 13
                }
            },
            "160": {
                "start": {
                    "line": 983,
                    "column": 16
                },
                "end": {
                    "line": 983,
                    "column": 28
                }
            },
            "161": {
                "start": {
                    "line": 984,
                    "column": 19
                },
                "end": {
                    "line": 986,
                    "column": 13
                }
            },
            "162": {
                "start": {
                    "line": 985,
                    "column": 16
                },
                "end": {
                    "line": 985,
                    "column": 36
                }
            },
            "163": {
                "start": {
                    "line": 989,
                    "column": 8
                },
                "end": {
                    "line": 989,
                    "column": 47
                }
            },
            "164": {
                "start": {
                    "line": 992,
                    "column": 8
                },
                "end": {
                    "line": 994,
                    "column": 9
                }
            },
            "165": {
                "start": {
                    "line": 993,
                    "column": 12
                },
                "end": {
                    "line": 993,
                    "column": 32
                }
            },
            "166": {
                "start": {
                    "line": 996,
                    "column": 8
                },
                "end": {
                    "line": 996,
                    "column": 26
                }
            },
            "167": {
                "start": {
                    "line": 1009,
                    "column": 8
                },
                "end": {
                    "line": 1014,
                    "column": 18
                }
            },
            "168": {
                "start": {
                    "line": 1016,
                    "column": 8
                },
                "end": {
                    "line": 1022,
                    "column": 9
                }
            },
            "169": {
                "start": {
                    "line": 1017,
                    "column": 12
                },
                "end": {
                    "line": 1017,
                    "column": 41
                }
            },
            "170": {
                "start": {
                    "line": 1019,
                    "column": 12
                },
                "end": {
                    "line": 1021,
                    "column": 13
                }
            },
            "171": {
                "start": {
                    "line": 1020,
                    "column": 16
                },
                "end": {
                    "line": 1020,
                    "column": 66
                }
            },
            "172": {
                "start": {
                    "line": 1024,
                    "column": 8
                },
                "end": {
                    "line": 1024,
                    "column": 22
                }
            },
            "173": {
                "start": {
                    "line": 1044,
                    "column": 8
                },
                "end": {
                    "line": 1045,
                    "column": 24
                }
            },
            "174": {
                "start": {
                    "line": 1047,
                    "column": 8
                },
                "end": {
                    "line": 1067,
                    "column": 11
                }
            },
            "175": {
                "start": {
                    "line": 1048,
                    "column": 12
                },
                "end": {
                    "line": 1064,
                    "column": 13
                }
            },
            "176": {
                "start": {
                    "line": 1049,
                    "column": 16
                },
                "end": {
                    "line": 1060,
                    "column": 17
                }
            },
            "177": {
                "start": {
                    "line": 1052,
                    "column": 20
                },
                "end": {
                    "line": 1052,
                    "column": 49
                }
            },
            "178": {
                "start": {
                    "line": 1057,
                    "column": 20
                },
                "end": {
                    "line": 1059,
                    "column": 26
                }
            },
            "179": {
                "start": {
                    "line": 1058,
                    "column": 24
                },
                "end": {
                    "line": 1058,
                    "column": 53
                }
            },
            "180": {
                "start": {
                    "line": 1062,
                    "column": 16
                },
                "end": {
                    "line": 1062,
                    "column": 41
                }
            },
            "181": {
                "start": {
                    "line": 1063,
                    "column": 16
                },
                "end": {
                    "line": 1063,
                    "column": 45
                }
            },
            "182": {
                "start": {
                    "line": 1066,
                    "column": 12
                },
                "end": {
                    "line": 1066,
                    "column": 24
                }
            },
            "183": {
                "start": {
                    "line": 1069,
                    "column": 8
                },
                "end": {
                    "line": 1069,
                    "column": 59
                }
            },
            "184": {
                "start": {
                    "line": 1083,
                    "column": 8
                },
                "end": {
                    "line": 1085,
                    "column": 9
                }
            },
            "185": {
                "start": {
                    "line": 1084,
                    "column": 12
                },
                "end": {
                    "line": 1084,
                    "column": 44
                }
            },
            "186": {
                "start": {
                    "line": 1087,
                    "column": 8
                },
                "end": {
                    "line": 1089,
                    "column": 9
                }
            },
            "187": {
                "start": {
                    "line": 1088,
                    "column": 12
                },
                "end": {
                    "line": 1088,
                    "column": 46
                }
            },
            "188": {
                "start": {
                    "line": 1091,
                    "column": 8
                },
                "end": {
                    "line": 1091,
                    "column": 41
                }
            },
            "189": {
                "start": {
                    "line": 1110,
                    "column": 8
                },
                "end": {
                    "line": 1111,
                    "column": 48
                }
            },
            "190": {
                "start": {
                    "line": 1113,
                    "column": 8
                },
                "end": {
                    "line": 1115,
                    "column": 9
                }
            },
            "191": {
                "start": {
                    "line": 1114,
                    "column": 12
                },
                "end": {
                    "line": 1114,
                    "column": 46
                }
            },
            "192": {
                "start": {
                    "line": 1117,
                    "column": 8
                },
                "end": {
                    "line": 1117,
                    "column": 26
                }
            },
            "193": {
                "start": {
                    "line": 1118,
                    "column": 8
                },
                "end": {
                    "line": 1118,
                    "column": 26
                }
            },
            "194": {
                "start": {
                    "line": 1119,
                    "column": 8
                },
                "end": {
                    "line": 1119,
                    "column": 26
                }
            },
            "195": {
                "start": {
                    "line": 1120,
                    "column": 8
                },
                "end": {
                    "line": 1120,
                    "column": 26
                }
            },
            "196": {
                "start": {
                    "line": 1123,
                    "column": 8
                },
                "end": {
                    "line": 1130,
                    "column": 9
                }
            },
            "197": {
                "start": {
                    "line": 1125,
                    "column": 12
                },
                "end": {
                    "line": 1127,
                    "column": 13
                }
            },
            "198": {
                "start": {
                    "line": 1126,
                    "column": 16
                },
                "end": {
                    "line": 1126,
                    "column": 59
                }
            },
            "199": {
                "start": {
                    "line": 1129,
                    "column": 12
                },
                "end": {
                    "line": 1129,
                    "column": 73
                }
            },
            "200": {
                "start": {
                    "line": 1133,
                    "column": 8
                },
                "end": {
                    "line": 1133,
                    "column": 63
                }
            },
            "201": {
                "start": {
                    "line": 1136,
                    "column": 8
                },
                "end": {
                    "line": 1138,
                    "column": 9
                }
            },
            "202": {
                "start": {
                    "line": 1137,
                    "column": 12
                },
                "end": {
                    "line": 1137,
                    "column": 59
                }
            },
            "203": {
                "start": {
                    "line": 1140,
                    "column": 8
                },
                "end": {
                    "line": 1140,
                    "column": 33
                }
            },
            "204": {
                "start": {
                    "line": 1142,
                    "column": 8
                },
                "end": {
                    "line": 1142,
                    "column": 70
                }
            },
            "205": {
                "start": {
                    "line": 1160,
                    "column": 8
                },
                "end": {
                    "line": 1161,
                    "column": 36
                }
            },
            "206": {
                "start": {
                    "line": 1164,
                    "column": 8
                },
                "end": {
                    "line": 1167,
                    "column": 9
                }
            },
            "207": {
                "start": {
                    "line": 1165,
                    "column": 12
                },
                "end": {
                    "line": 1165,
                    "column": 98
                }
            },
            "208": {
                "start": {
                    "line": 1166,
                    "column": 12
                },
                "end": {
                    "line": 1166,
                    "column": 24
                }
            },
            "209": {
                "start": {
                    "line": 1170,
                    "column": 8
                },
                "end": {
                    "line": 1172,
                    "column": 9
                }
            },
            "210": {
                "start": {
                    "line": 1171,
                    "column": 12
                },
                "end": {
                    "line": 1171,
                    "column": 37
                }
            },
            "211": {
                "start": {
                    "line": 1176,
                    "column": 8
                },
                "end": {
                    "line": 1176,
                    "column": 27
                }
            },
            "212": {
                "start": {
                    "line": 1178,
                    "column": 8
                },
                "end": {
                    "line": 1204,
                    "column": 9
                }
            },
            "213": {
                "start": {
                    "line": 1179,
                    "column": 12
                },
                "end": {
                    "line": 1179,
                    "column": 73
                }
            },
            "214": {
                "start": {
                    "line": 1181,
                    "column": 12
                },
                "end": {
                    "line": 1181,
                    "column": 51
                }
            },
            "215": {
                "start": {
                    "line": 1182,
                    "column": 12
                },
                "end": {
                    "line": 1182,
                    "column": 43
                }
            },
            "216": {
                "start": {
                    "line": 1183,
                    "column": 12
                },
                "end": {
                    "line": 1183,
                    "column": 48
                }
            },
            "217": {
                "start": {
                    "line": 1185,
                    "column": 12
                },
                "end": {
                    "line": 1187,
                    "column": 13
                }
            },
            "218": {
                "start": {
                    "line": 1186,
                    "column": 16
                },
                "end": {
                    "line": 1186,
                    "column": 27
                }
            },
            "219": {
                "start": {
                    "line": 1192,
                    "column": 12
                },
                "end": {
                    "line": 1194,
                    "column": 13
                }
            },
            "220": {
                "start": {
                    "line": 1193,
                    "column": 16
                },
                "end": {
                    "line": 1193,
                    "column": 43
                }
            },
            "221": {
                "start": {
                    "line": 1199,
                    "column": 12
                },
                "end": {
                    "line": 1203,
                    "column": 13
                }
            },
            "222": {
                "start": {
                    "line": 1200,
                    "column": 16
                },
                "end": {
                    "line": 1200,
                    "column": 36
                }
            },
            "223": {
                "start": {
                    "line": 1202,
                    "column": 16
                },
                "end": {
                    "line": 1202,
                    "column": 70
                }
            },
            "224": {
                "start": {
                    "line": 1206,
                    "column": 8
                },
                "end": {
                    "line": 1206,
                    "column": 20
                }
            },
            "225": {
                "start": {
                    "line": 1218,
                    "column": 8
                },
                "end": {
                    "line": 1218,
                    "column": 26
                }
            },
            "226": {
                "start": {
                    "line": 1220,
                    "column": 8
                },
                "end": {
                    "line": 1225,
                    "column": 17
                }
            },
            "227": {
                "start": {
                    "line": 1222,
                    "column": 12
                },
                "end": {
                    "line": 1222,
                    "column": 62
                }
            },
            "228": {
                "start": {
                    "line": 1224,
                    "column": 12
                },
                "end": {
                    "line": 1224,
                    "column": 46
                }
            },
            "229": {
                "start": {
                    "line": 1227,
                    "column": 8
                },
                "end": {
                    "line": 1227,
                    "column": 37
                }
            },
            "230": {
                "start": {
                    "line": 1248,
                    "column": 8
                },
                "end": {
                    "line": 1250,
                    "column": 9
                }
            },
            "231": {
                "start": {
                    "line": 1249,
                    "column": 12
                },
                "end": {
                    "line": 1249,
                    "column": 23
                }
            },
            "232": {
                "start": {
                    "line": 1252,
                    "column": 8
                },
                "end": {
                    "line": 1254,
                    "column": 21
                }
            },
            "233": {
                "start": {
                    "line": 1257,
                    "column": 8
                },
                "end": {
                    "line": 1259,
                    "column": 9
                }
            },
            "234": {
                "start": {
                    "line": 1258,
                    "column": 12
                },
                "end": {
                    "line": 1258,
                    "column": 48
                }
            },
            "235": {
                "start": {
                    "line": 1262,
                    "column": 8
                },
                "end": {
                    "line": 1268,
                    "column": 9
                }
            },
            "236": {
                "start": {
                    "line": 1263,
                    "column": 12
                },
                "end": {
                    "line": 1263,
                    "column": 47
                }
            },
            "237": {
                "start": {
                    "line": 1265,
                    "column": 12
                },
                "end": {
                    "line": 1267,
                    "column": 13
                }
            },
            "238": {
                "start": {
                    "line": 1266,
                    "column": 16
                },
                "end": {
                    "line": 1266,
                    "column": 50
                }
            },
            "239": {
                "start": {
                    "line": 1270,
                    "column": 8
                },
                "end": {
                    "line": 1270,
                    "column": 19
                }
            },
            "240": {
                "start": {
                    "line": 1283,
                    "column": 8
                },
                "end": {
                    "line": 1286,
                    "column": 40
                }
            },
            "241": {
                "start": {
                    "line": 1288,
                    "column": 8
                },
                "end": {
                    "line": 1288,
                    "column": 31
                }
            },
            "242": {
                "start": {
                    "line": 1295,
                    "column": 8
                },
                "end": {
                    "line": 1299,
                    "column": 9
                }
            },
            "243": {
                "start": {
                    "line": 1298,
                    "column": 12
                },
                "end": {
                    "line": 1298,
                    "column": 19
                }
            },
            "244": {
                "start": {
                    "line": 1301,
                    "column": 8
                },
                "end": {
                    "line": 1301,
                    "column": 57
                }
            },
            "245": {
                "start": {
                    "line": 1314,
                    "column": 8
                },
                "end": {
                    "line": 1314,
                    "column": 27
                }
            },
            "246": {
                "start": {
                    "line": 1338,
                    "column": 35
                },
                "end": {
                    "line": 1338,
                    "column": 57
                }
            },
            "247": {
                "start": {
                    "line": 1408,
                    "column": 8
                },
                "end": {
                    "line": 1408,
                    "column": 27
                }
            },
            "248": {
                "start": {
                    "line": 1410,
                    "column": 8
                },
                "end": {
                    "line": 1416,
                    "column": 9
                }
            },
            "249": {
                "start": {
                    "line": 1411,
                    "column": 12
                },
                "end": {
                    "line": 1411,
                    "column": 34
                }
            },
            "250": {
                "start": {
                    "line": 1413,
                    "column": 12
                },
                "end": {
                    "line": 1415,
                    "column": 13
                }
            },
            "251": {
                "start": {
                    "line": 1414,
                    "column": 16
                },
                "end": {
                    "line": 1414,
                    "column": 70
                }
            },
            "252": {
                "start": {
                    "line": 1431,
                    "column": 0
                },
                "end": {
                    "line": 1431,
                    "column": 24
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 158,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 158,
                            "column": 50
                        },
                        "end": {
                            "line": 158,
                            "column": 63
                        }
                    },
                    {
                        "start": {
                            "line": 159,
                            "column": 16
                        },
                        "end": {
                            "line": 159,
                            "column": 34
                        }
                    }
                ]
            },
            "2": {
                "line": 158,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 158,
                            "column": 24
                        },
                        "end": {
                            "line": 158,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 158,
                            "column": 34
                        },
                        "end": {
                            "line": 158,
                            "column": 47
                        }
                    }
                ]
            },
            "3": {
                "line": 162,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 162,
                            "column": 8
                        },
                        "end": {
                            "line": 162,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 162,
                            "column": 8
                        },
                        "end": {
                            "line": 162,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 197,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 197,
                            "column": 8
                        },
                        "end": {
                            "line": 197,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 197,
                            "column": 8
                        },
                        "end": {
                            "line": 197,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 201,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 201,
                            "column": 8
                        },
                        "end": {
                            "line": 201,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 201,
                            "column": 8
                        },
                        "end": {
                            "line": 201,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 222,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 222,
                            "column": 12
                        },
                        "end": {
                            "line": 222,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 222,
                            "column": 12
                        },
                        "end": {
                            "line": 222,
                            "column": 12
                        }
                    }
                ]
            },
            "7": {
                "line": 256,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 256,
                            "column": 8
                        },
                        "end": {
                            "line": 256,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 256,
                            "column": 8
                        },
                        "end": {
                            "line": 256,
                            "column": 8
                        }
                    }
                ]
            },
            "8": {
                "line": 260,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 260,
                            "column": 8
                        },
                        "end": {
                            "line": 260,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 260,
                            "column": 8
                        },
                        "end": {
                            "line": 260,
                            "column": 8
                        }
                    }
                ]
            },
            "9": {
                "line": 320,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 320,
                            "column": 8
                        },
                        "end": {
                            "line": 320,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 320,
                            "column": 8
                        },
                        "end": {
                            "line": 320,
                            "column": 8
                        }
                    }
                ]
            },
            "10": {
                "line": 320,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 320,
                            "column": 12
                        },
                        "end": {
                            "line": 320,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 320,
                            "column": 20
                        },
                        "end": {
                            "line": 320,
                            "column": 43
                        }
                    }
                ]
            },
            "11": {
                "line": 324,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 324,
                            "column": 39
                        },
                        "end": {
                            "line": 324,
                            "column": 42
                        }
                    },
                    {
                        "start": {
                            "line": 324,
                            "column": 45
                        },
                        "end": {
                            "line": 324,
                            "column": 54
                        }
                    }
                ]
            },
            "12": {
                "line": 539,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 539,
                            "column": 8
                        },
                        "end": {
                            "line": 539,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 539,
                            "column": 8
                        },
                        "end": {
                            "line": 539,
                            "column": 8
                        }
                    }
                ]
            },
            "13": {
                "line": 546,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 546,
                            "column": 8
                        },
                        "end": {
                            "line": 546,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 546,
                            "column": 8
                        },
                        "end": {
                            "line": 546,
                            "column": 8
                        }
                    }
                ]
            },
            "14": {
                "line": 592,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 592,
                            "column": 8
                        },
                        "end": {
                            "line": 592,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 592,
                            "column": 8
                        },
                        "end": {
                            "line": 592,
                            "column": 8
                        }
                    }
                ]
            },
            "15": {
                "line": 601,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 601,
                            "column": 20
                        },
                        "end": {
                            "line": 601,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 601,
                            "column": 27
                        },
                        "end": {
                            "line": 601,
                            "column": 31
                        }
                    }
                ]
            },
            "16": {
                "line": 627,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 627,
                            "column": 8
                        },
                        "end": {
                            "line": 627,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 627,
                            "column": 8
                        },
                        "end": {
                            "line": 627,
                            "column": 8
                        }
                    }
                ]
            },
            "17": {
                "line": 627,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 627,
                            "column": 12
                        },
                        "end": {
                            "line": 627,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 627,
                            "column": 23
                        },
                        "end": {
                            "line": 627,
                            "column": 37
                        }
                    }
                ]
            },
            "18": {
                "line": 638,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 638,
                            "column": 12
                        },
                        "end": {
                            "line": 638,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 638,
                            "column": 12
                        },
                        "end": {
                            "line": 638,
                            "column": 12
                        }
                    }
                ]
            },
            "19": {
                "line": 641,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 641,
                            "column": 16
                        },
                        "end": {
                            "line": 641,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 641,
                            "column": 16
                        },
                        "end": {
                            "line": 641,
                            "column": 16
                        }
                    }
                ]
            },
            "20": {
                "line": 648,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 648,
                            "column": 19
                        },
                        "end": {
                            "line": 648,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 648,
                            "column": 19
                        },
                        "end": {
                            "line": 648,
                            "column": 19
                        }
                    }
                ]
            },
            "21": {
                "line": 649,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 649,
                            "column": 16
                        },
                        "end": {
                            "line": 649,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 649,
                            "column": 16
                        },
                        "end": {
                            "line": 649,
                            "column": 16
                        }
                    }
                ]
            },
            "22": {
                "line": 653,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 653,
                            "column": 20
                        },
                        "end": {
                            "line": 653,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 653,
                            "column": 20
                        },
                        "end": {
                            "line": 653,
                            "column": 20
                        }
                    }
                ]
            },
            "23": {
                "line": 664,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 664,
                            "column": 19
                        },
                        "end": {
                            "line": 664,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 664,
                            "column": 19
                        },
                        "end": {
                            "line": 664,
                            "column": 19
                        }
                    }
                ]
            },
            "24": {
                "line": 671,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 671,
                            "column": 37
                        },
                        "end": {
                            "line": 671,
                            "column": 59
                        }
                    },
                    {
                        "start": {
                            "line": 671,
                            "column": 63
                        },
                        "end": {
                            "line": 671,
                            "column": 65
                        }
                    }
                ]
            },
            "25": {
                "line": 677,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 677,
                            "column": 28
                        },
                        "end": {
                            "line": 677,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 677,
                            "column": 37
                        },
                        "end": {
                            "line": 677,
                            "column": 50
                        }
                    },
                    {
                        "start": {
                            "line": 677,
                            "column": 55
                        },
                        "end": {
                            "line": 677,
                            "column": 57
                        }
                    }
                ]
            },
            "26": {
                "line": 682,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 682,
                            "column": 16
                        },
                        "end": {
                            "line": 682,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 682,
                            "column": 16
                        },
                        "end": {
                            "line": 682,
                            "column": 16
                        }
                    }
                ]
            },
            "27": {
                "line": 714,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 714,
                            "column": 8
                        },
                        "end": {
                            "line": 714,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 714,
                            "column": 17
                        },
                        "end": {
                            "line": 714,
                            "column": 45
                        }
                    }
                ]
            },
            "28": {
                "line": 717,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 717,
                            "column": 8
                        },
                        "end": {
                            "line": 717,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 717,
                            "column": 8
                        },
                        "end": {
                            "line": 717,
                            "column": 8
                        }
                    }
                ]
            },
            "29": {
                "line": 717,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 717,
                            "column": 12
                        },
                        "end": {
                            "line": 717,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 717,
                            "column": 20
                        },
                        "end": {
                            "line": 717,
                            "column": 42
                        }
                    }
                ]
            },
            "30": {
                "line": 736,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 736,
                            "column": 15
                        },
                        "end": {
                            "line": 736,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 736,
                            "column": 35
                        },
                        "end": {
                            "line": 736,
                            "column": 75
                        }
                    }
                ]
            },
            "31": {
                "line": 747,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 747,
                            "column": 20
                        },
                        "end": {
                            "line": 747,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 747,
                            "column": 36
                        },
                        "end": {
                            "line": 747,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 748,
                            "column": 16
                        },
                        "end": {
                            "line": 748,
                            "column": 40
                        }
                    }
                ]
            },
            "32": {
                "line": 769,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 769,
                            "column": 8
                        },
                        "end": {
                            "line": 769,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 769,
                            "column": 8
                        },
                        "end": {
                            "line": 769,
                            "column": 8
                        }
                    }
                ]
            },
            "33": {
                "line": 790,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 790,
                            "column": 8
                        },
                        "end": {
                            "line": 790,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 790,
                            "column": 8
                        },
                        "end": {
                            "line": 790,
                            "column": 8
                        }
                    }
                ]
            },
            "34": {
                "line": 797,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 797,
                            "column": 33
                        },
                        "end": {
                            "line": 797,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 797,
                            "column": 46
                        },
                        "end": {
                            "line": 797,
                            "column": 74
                        }
                    }
                ]
            },
            "35": {
                "line": 797,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 797,
                            "column": 15
                        },
                        "end": {
                            "line": 797,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 797,
                            "column": 23
                        },
                        "end": {
                            "line": 797,
                            "column": 30
                        }
                    }
                ]
            },
            "36": {
                "line": 812,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 812,
                            "column": 8
                        },
                        "end": {
                            "line": 812,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 812,
                            "column": 8
                        },
                        "end": {
                            "line": 812,
                            "column": 8
                        }
                    }
                ]
            },
            "37": {
                "line": 817,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 817,
                            "column": 8
                        },
                        "end": {
                            "line": 817,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 817,
                            "column": 8
                        },
                        "end": {
                            "line": 817,
                            "column": 8
                        }
                    }
                ]
            },
            "38": {
                "line": 824,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 824,
                            "column": 12
                        },
                        "end": {
                            "line": 824,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 824,
                            "column": 12
                        },
                        "end": {
                            "line": 824,
                            "column": 12
                        }
                    }
                ]
            },
            "39": {
                "line": 825,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 825,
                            "column": 42
                        },
                        "end": {
                            "line": 825,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 825,
                            "column": 49
                        },
                        "end": {
                            "line": 825,
                            "column": 54
                        }
                    }
                ]
            },
            "40": {
                "line": 829,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 829,
                            "column": 38
                        },
                        "end": {
                            "line": 829,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 829,
                            "column": 48
                        },
                        "end": {
                            "line": 829,
                            "column": 59
                        }
                    }
                ]
            },
            "41": {
                "line": 894,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 894,
                            "column": 8
                        },
                        "end": {
                            "line": 894,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 894,
                            "column": 8
                        },
                        "end": {
                            "line": 894,
                            "column": 8
                        }
                    }
                ]
            },
            "42": {
                "line": 914,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 914,
                            "column": 23
                        },
                        "end": {
                            "line": 914,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 914,
                            "column": 30
                        },
                        "end": {
                            "line": 914,
                            "column": 61
                        }
                    },
                    {
                        "start": {
                            "line": 914,
                            "column": 66
                        },
                        "end": {
                            "line": 914,
                            "column": 68
                        }
                    }
                ]
            },
            "43": {
                "line": 917,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 917,
                            "column": 8
                        },
                        "end": {
                            "line": 917,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 917,
                            "column": 8
                        },
                        "end": {
                            "line": 917,
                            "column": 8
                        }
                    }
                ]
            },
            "44": {
                "line": 917,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 917,
                            "column": 12
                        },
                        "end": {
                            "line": 917,
                            "column": 18
                        }
                    },
                    {
                        "start": {
                            "line": 917,
                            "column": 22
                        },
                        "end": {
                            "line": 917,
                            "column": 48
                        }
                    }
                ]
            },
            "45": {
                "line": 921,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 921,
                            "column": 15
                        },
                        "end": {
                            "line": 921,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 921,
                            "column": 26
                        },
                        "end": {
                            "line": 921,
                            "column": 54
                        }
                    }
                ]
            },
            "46": {
                "line": 948,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 948,
                            "column": 8
                        },
                        "end": {
                            "line": 948,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 948,
                            "column": 8
                        },
                        "end": {
                            "line": 948,
                            "column": 8
                        }
                    }
                ]
            },
            "47": {
                "line": 952,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 953,
                            "column": 16
                        },
                        "end": {
                            "line": 953,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 954,
                            "column": 16
                        },
                        "end": {
                            "line": 954,
                            "column": 32
                        }
                    }
                ]
            },
            "48": {
                "line": 952,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 952,
                            "column": 15
                        },
                        "end": {
                            "line": 952,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 952,
                            "column": 23
                        },
                        "end": {
                            "line": 952,
                            "column": 59
                        }
                    }
                ]
            },
            "49": {
                "line": 972,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 972,
                            "column": 8
                        },
                        "end": {
                            "line": 972,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 972,
                            "column": 8
                        },
                        "end": {
                            "line": 972,
                            "column": 8
                        }
                    }
                ]
            },
            "50": {
                "line": 972,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 972,
                            "column": 12
                        },
                        "end": {
                            "line": 972,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 972,
                            "column": 21
                        },
                        "end": {
                            "line": 972,
                            "column": 35
                        }
                    }
                ]
            },
            "51": {
                "line": 982,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 982,
                            "column": 12
                        },
                        "end": {
                            "line": 982,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 982,
                            "column": 12
                        },
                        "end": {
                            "line": 982,
                            "column": 12
                        }
                    }
                ]
            },
            "52": {
                "line": 984,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 984,
                            "column": 19
                        },
                        "end": {
                            "line": 984,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 984,
                            "column": 19
                        },
                        "end": {
                            "line": 984,
                            "column": 19
                        }
                    }
                ]
            },
            "53": {
                "line": 992,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 992,
                            "column": 8
                        },
                        "end": {
                            "line": 992,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 992,
                            "column": 8
                        },
                        "end": {
                            "line": 992,
                            "column": 8
                        }
                    }
                ]
            },
            "54": {
                "line": 992,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 992,
                            "column": 12
                        },
                        "end": {
                            "line": 992,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 992,
                            "column": 36
                        },
                        "end": {
                            "line": 992,
                            "column": 74
                        }
                    }
                ]
            },
            "55": {
                "line": 1008,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1008,
                            "column": 34
                        },
                        "end": {
                            "line": 1008,
                            "column": 42
                        }
                    },
                    {
                        "start": {
                            "line": 1008,
                            "column": 45
                        },
                        "end": {
                            "line": 1025,
                            "column": 5
                        }
                    }
                ]
            },
            "56": {
                "line": 1008,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1008,
                            "column": 17
                        },
                        "end": {
                            "line": 1008,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 1008,
                            "column": 23
                        },
                        "end": {
                            "line": 1008,
                            "column": 31
                        }
                    }
                ]
            },
            "57": {
                "line": 1019,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1019,
                            "column": 12
                        },
                        "end": {
                            "line": 1019,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1019,
                            "column": 12
                        },
                        "end": {
                            "line": 1019,
                            "column": 12
                        }
                    }
                ]
            },
            "58": {
                "line": 1020,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1020,
                            "column": 50
                        },
                        "end": {
                            "line": 1020,
                            "column": 58
                        }
                    },
                    {
                        "start": {
                            "line": 1020,
                            "column": 62
                        },
                        "end": {
                            "line": 1020,
                            "column": 64
                        }
                    }
                ]
            },
            "59": {
                "line": 1048,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1048,
                            "column": 12
                        },
                        "end": {
                            "line": 1048,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1048,
                            "column": 12
                        },
                        "end": {
                            "line": 1048,
                            "column": 12
                        }
                    }
                ]
            },
            "60": {
                "line": 1049,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1049,
                            "column": 16
                        },
                        "end": {
                            "line": 1049,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 1049,
                            "column": 16
                        },
                        "end": {
                            "line": 1049,
                            "column": 16
                        }
                    }
                ]
            },
            "61": {
                "line": 1049,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1049,
                            "column": 20
                        },
                        "end": {
                            "line": 1049,
                            "column": 28
                        }
                    },
                    {
                        "start": {
                            "line": 1049,
                            "column": 32
                        },
                        "end": {
                            "line": 1049,
                            "column": 44
                        }
                    }
                ]
            },
            "62": {
                "line": 1069,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1069,
                            "column": 36
                        },
                        "end": {
                            "line": 1069,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 1069,
                            "column": 54
                        },
                        "end": {
                            "line": 1069,
                            "column": 58
                        }
                    }
                ]
            },
            "63": {
                "line": 1083,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1083,
                            "column": 8
                        },
                        "end": {
                            "line": 1083,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1083,
                            "column": 8
                        },
                        "end": {
                            "line": 1083,
                            "column": 8
                        }
                    }
                ]
            },
            "64": {
                "line": 1087,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1087,
                            "column": 8
                        },
                        "end": {
                            "line": 1087,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1087,
                            "column": 8
                        },
                        "end": {
                            "line": 1087,
                            "column": 8
                        }
                    }
                ]
            },
            "65": {
                "line": 1110,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1110,
                            "column": 23
                        },
                        "end": {
                            "line": 1110,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 1110,
                            "column": 30
                        },
                        "end": {
                            "line": 1110,
                            "column": 55
                        }
                    }
                ]
            },
            "66": {
                "line": 1113,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1113,
                            "column": 8
                        },
                        "end": {
                            "line": 1113,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1113,
                            "column": 8
                        },
                        "end": {
                            "line": 1113,
                            "column": 8
                        }
                    }
                ]
            },
            "67": {
                "line": 1123,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1123,
                            "column": 8
                        },
                        "end": {
                            "line": 1123,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1123,
                            "column": 8
                        },
                        "end": {
                            "line": 1123,
                            "column": 8
                        }
                    }
                ]
            },
            "68": {
                "line": 1125,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1125,
                            "column": 12
                        },
                        "end": {
                            "line": 1125,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1125,
                            "column": 12
                        },
                        "end": {
                            "line": 1125,
                            "column": 12
                        }
                    }
                ]
            },
            "69": {
                "line": 1129,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1129,
                            "column": 29
                        },
                        "end": {
                            "line": 1129,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 1129,
                            "column": 37
                        },
                        "end": {
                            "line": 1129,
                            "column": 40
                        }
                    }
                ]
            },
            "70": {
                "line": 1129,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1129,
                            "column": 45
                        },
                        "end": {
                            "line": 1129,
                            "column": 50
                        }
                    },
                    {
                        "start": {
                            "line": 1129,
                            "column": 54
                        },
                        "end": {
                            "line": 1129,
                            "column": 56
                        }
                    }
                ]
            },
            "71": {
                "line": 1129,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1129,
                            "column": 61
                        },
                        "end": {
                            "line": 1129,
                            "column": 65
                        }
                    },
                    {
                        "start": {
                            "line": 1129,
                            "column": 69
                        },
                        "end": {
                            "line": 1129,
                            "column": 71
                        }
                    }
                ]
            },
            "72": {
                "line": 1136,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1136,
                            "column": 8
                        },
                        "end": {
                            "line": 1136,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1136,
                            "column": 8
                        },
                        "end": {
                            "line": 1136,
                            "column": 8
                        }
                    }
                ]
            },
            "73": {
                "line": 1136,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1136,
                            "column": 12
                        },
                        "end": {
                            "line": 1136,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 1136,
                            "column": 20
                        },
                        "end": {
                            "line": 1136,
                            "column": 25
                        }
                    }
                ]
            },
            "74": {
                "line": 1137,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1137,
                            "column": 31
                        },
                        "end": {
                            "line": 1137,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 1137,
                            "column": 40
                        },
                        "end": {
                            "line": 1137,
                            "column": 42
                        }
                    }
                ]
            },
            "75": {
                "line": 1137,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1137,
                            "column": 47
                        },
                        "end": {
                            "line": 1137,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 1137,
                            "column": 55
                        },
                        "end": {
                            "line": 1137,
                            "column": 57
                        }
                    }
                ]
            },
            "76": {
                "line": 1142,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1142,
                            "column": 36
                        },
                        "end": {
                            "line": 1142,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 1142,
                            "column": 51
                        },
                        "end": {
                            "line": 1142,
                            "column": 53
                        }
                    }
                ]
            },
            "77": {
                "line": 1142,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1142,
                            "column": 58
                        },
                        "end": {
                            "line": 1142,
                            "column": 62
                        }
                    },
                    {
                        "start": {
                            "line": 1142,
                            "column": 66
                        },
                        "end": {
                            "line": 1142,
                            "column": 68
                        }
                    }
                ]
            },
            "78": {
                "line": 1164,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1164,
                            "column": 8
                        },
                        "end": {
                            "line": 1164,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1164,
                            "column": 8
                        },
                        "end": {
                            "line": 1164,
                            "column": 8
                        }
                    }
                ]
            },
            "79": {
                "line": 1164,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1164,
                            "column": 12
                        },
                        "end": {
                            "line": 1164,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 1164,
                            "column": 27
                        },
                        "end": {
                            "line": 1164,
                            "column": 52
                        }
                    }
                ]
            },
            "80": {
                "line": 1170,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1170,
                            "column": 8
                        },
                        "end": {
                            "line": 1170,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1170,
                            "column": 8
                        },
                        "end": {
                            "line": 1170,
                            "column": 8
                        }
                    }
                ]
            },
            "81": {
                "line": 1178,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1178,
                            "column": 8
                        },
                        "end": {
                            "line": 1178,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1178,
                            "column": 8
                        },
                        "end": {
                            "line": 1178,
                            "column": 8
                        }
                    }
                ]
            },
            "82": {
                "line": 1179,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1179,
                            "column": 36
                        },
                        "end": {
                            "line": 1179,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 1179,
                            "column": 48
                        },
                        "end": {
                            "line": 1179,
                            "column": 53
                        }
                    }
                ]
            },
            "83": {
                "line": 1185,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1185,
                            "column": 12
                        },
                        "end": {
                            "line": 1185,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1185,
                            "column": 12
                        },
                        "end": {
                            "line": 1185,
                            "column": 12
                        }
                    }
                ]
            },
            "84": {
                "line": 1192,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1192,
                            "column": 12
                        },
                        "end": {
                            "line": 1192,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1192,
                            "column": 12
                        },
                        "end": {
                            "line": 1192,
                            "column": 12
                        }
                    }
                ]
            },
            "85": {
                "line": 1192,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1192,
                            "column": 16
                        },
                        "end": {
                            "line": 1192,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 1192,
                            "column": 40
                        },
                        "end": {
                            "line": 1192,
                            "column": 68
                        }
                    }
                ]
            },
            "86": {
                "line": 1199,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1199,
                            "column": 12
                        },
                        "end": {
                            "line": 1199,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1199,
                            "column": 12
                        },
                        "end": {
                            "line": 1199,
                            "column": 12
                        }
                    }
                ]
            },
            "87": {
                "line": 1202,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1202,
                            "column": 38
                        },
                        "end": {
                            "line": 1202,
                            "column": 51
                        }
                    },
                    {
                        "start": {
                            "line": 1202,
                            "column": 54
                        },
                        "end": {
                            "line": 1202,
                            "column": 63
                        }
                    }
                ]
            },
            "88": {
                "line": 1222,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1222,
                            "column": 28
                        },
                        "end": {
                            "line": 1222,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 1222,
                            "column": 47
                        },
                        "end": {
                            "line": 1222,
                            "column": 61
                        }
                    }
                ]
            },
            "89": {
                "line": 1248,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1248,
                            "column": 8
                        },
                        "end": {
                            "line": 1248,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1248,
                            "column": 8
                        },
                        "end": {
                            "line": 1248,
                            "column": 8
                        }
                    }
                ]
            },
            "90": {
                "line": 1252,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1252,
                            "column": 25
                        },
                        "end": {
                            "line": 1252,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 1252,
                            "column": 59
                        },
                        "end": {
                            "line": 1252,
                            "column": 61
                        }
                    }
                ]
            },
            "91": {
                "line": 1252,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1252,
                            "column": 26
                        },
                        "end": {
                            "line": 1252,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 1252,
                            "column": 49
                        },
                        "end": {
                            "line": 1252,
                            "column": 51
                        }
                    }
                ]
            },
            "92": {
                "line": 1257,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1257,
                            "column": 8
                        },
                        "end": {
                            "line": 1257,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1257,
                            "column": 8
                        },
                        "end": {
                            "line": 1257,
                            "column": 8
                        }
                    }
                ]
            },
            "93": {
                "line": 1257,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1257,
                            "column": 12
                        },
                        "end": {
                            "line": 1257,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 1257,
                            "column": 26
                        },
                        "end": {
                            "line": 1257,
                            "column": 56
                        }
                    }
                ]
            },
            "94": {
                "line": 1262,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1262,
                            "column": 8
                        },
                        "end": {
                            "line": 1262,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1262,
                            "column": 8
                        },
                        "end": {
                            "line": 1262,
                            "column": 8
                        }
                    }
                ]
            },
            "95": {
                "line": 1265,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1265,
                            "column": 12
                        },
                        "end": {
                            "line": 1265,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1265,
                            "column": 12
                        },
                        "end": {
                            "line": 1265,
                            "column": 12
                        }
                    }
                ]
            },
            "96": {
                "line": 1295,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1295,
                            "column": 8
                        },
                        "end": {
                            "line": 1295,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1295,
                            "column": 8
                        },
                        "end": {
                            "line": 1295,
                            "column": 8
                        }
                    }
                ]
            },
            "97": {
                "line": 1295,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1295,
                            "column": 12
                        },
                        "end": {
                            "line": 1295,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 1296,
                            "column": 17
                        },
                        "end": {
                            "line": 1296,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 1296,
                            "column": 33
                        },
                        "end": {
                            "line": 1296,
                            "column": 95
                        }
                    }
                ]
            },
            "98": {
                "line": 1390,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1390,
                            "column": 11
                        },
                        "end": {
                            "line": 1390,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 1390,
                            "column": 35
                        },
                        "end": {
                            "line": 1390,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 1390,
                            "column": 52
                        },
                        "end": {
                            "line": 1390,
                            "column": 69
                        }
                    }
                ]
            },
            "99": {
                "line": 1413,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1413,
                            "column": 12
                        },
                        "end": {
                            "line": 1413,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1413,
                            "column": 12
                        },
                        "end": {
                            "line": 1413,
                            "column": 12
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('router', function (Y, NAME) {",
            "",
            "/**",
            "Provides URL-based routing using HTML5 `pushState()` or the location hash.",
            "",
            "@module app",
            "@submodule router",
            "@since 3.4.0",
            "**/",
            "",
            "var HistoryHash = Y.HistoryHash,",
            "    QS          = Y.QueryString,",
            "    YArray      = Y.Array,",
            "",
            "    win = Y.config.win,",
            "",
            "    // Holds all the active router instances. This supports the static",
            "    // `dispatch()` method which causes all routers to dispatch.",
            "    instances = [],",
            "",
            "    // We have to queue up pushState calls to avoid race conditions, since the",
            "    // popstate event doesn't actually provide any info on what URL it's",
            "    // associated with.",
            "    saveQueue = [],",
            "",
            "    /**",
            "    Fired when the router is ready to begin dispatching to route handlers.",
            "",
            "    You shouldn't need to wait for this event unless you plan to implement some",
            "    kind of custom dispatching logic. It's used internally in order to avoid",
            "    dispatching to an initial route if a browser history change occurs first.",
            "",
            "    @event ready",
            "    @param {Boolean} dispatched `true` if routes have already been dispatched",
            "      (most likely due to a history change).",
            "    @fireOnce",
            "    **/",
            "    EVT_READY = 'ready';",
            "",
            "/**",
            "Provides URL-based routing using HTML5 `pushState()` or the location hash.",
            "",
            "This makes it easy to wire up route handlers for different application states",
            "while providing full back/forward navigation support and bookmarkable, shareable",
            "URLs.",
            "",
            "@class Router",
            "@param {Object} [config] Config properties.",
            "    @param {Boolean} [config.html5] Overrides the default capability detection",
            "        and forces this router to use (`true`) or not use (`false`) HTML5",
            "        history.",
            "    @param {String} [config.root=''] Root path from which all routes should be",
            "        evaluated.",
            "    @param {Array} [config.routes=[]] Array of route definition objects.",
            "@constructor",
            "@extends Base",
            "@since 3.4.0",
            "**/",
            "function Router() {",
            "    Router.superclass.constructor.apply(this, arguments);",
            "}",
            "",
            "Y.Router = Y.extend(Router, Y.Base, {",
            "    // -- Protected Properties -------------------------------------------------",
            "",
            "    /**",
            "    Whether or not `_dispatch()` has been called since this router was",
            "    instantiated.",
            "",
            "    @property _dispatched",
            "    @type Boolean",
            "    @default undefined",
            "    @protected",
            "    **/",
            "",
            "    /**",
            "    Whether or not we're currently in the process of dispatching to routes.",
            "",
            "    @property _dispatching",
            "    @type Boolean",
            "    @default undefined",
            "    @protected",
            "    **/",
            "",
            "    /**",
            "    History event handle for the `history:change` or `hashchange` event",
            "    subscription.",
            "",
            "    @property _historyEvents",
            "    @type EventHandle",
            "    @protected",
            "    **/",
            "",
            "    /**",
            "    Cached copy of the `html5` attribute for internal use.",
            "",
            "    @property _html5",
            "    @type Boolean",
            "    @protected",
            "    **/",
            "",
            "    /**",
            "    Whether or not the `ready` event has fired yet.",
            "",
            "    @property _ready",
            "    @type Boolean",
            "    @default undefined",
            "    @protected",
            "    **/",
            "",
            "    /**",
            "    Regex used to match parameter placeholders in route paths.",
            "",
            "    Subpattern captures:",
            "",
            "      1. Parameter prefix character. Either a `:` for subpath parameters that",
            "         should only match a single level of a path, or `*` for splat parameters",
            "         that should match any number of path levels.",
            "",
            "      2. Parameter name, if specified, otherwise it is a wildcard match.",
            "",
            "    @property _regexPathParam",
            "    @type RegExp",
            "    @protected",
            "    **/",
            "    _regexPathParam: /([:*])([\\w\\-]+)?/g,",
            "",
            "    /**",
            "    Regex that matches and captures the query portion of a URL, minus the",
            "    preceding `?` character, and discarding the hash portion of the URL if any.",
            "",
            "    @property _regexUrlQuery",
            "    @type RegExp",
            "    @protected",
            "    **/",
            "    _regexUrlQuery: /\\?([^#]*).*$/,",
            "",
            "    /**",
            "    Regex that matches everything before the path portion of a URL (the origin).",
            "    This will be used to strip this part of the URL from a string when we",
            "    only want the path.",
            "",
            "    @property _regexUrlOrigin",
            "    @type RegExp",
            "    @protected",
            "    **/",
            "    _regexUrlOrigin: /^(?:[^\\/#?:]+:\\/\\/|\\/\\/)[^\\/]*/,",
            "",
            "    // -- Lifecycle Methods ----------------------------------------------------",
            "    initializer: function (config) {",
            "        var self = this;",
            "",
            "        self._html5  = self.get('html5');",
            "        self._routes = [];",
            "        self._url    = self._getURL();",
            "",
            "        // Necessary because setters don't run on init.",
            "        self._setRoutes(config && config.routes ? config.routes :",
            "                self.get('routes'));",
            "",
            "        // Set up a history instance or hashchange listener.",
            "        if (self._html5) {",
            "            self._history       = new Y.HistoryHTML5({force: true});",
            "            self._historyEvents =",
            "                    Y.after('history:change', self._afterHistoryChange, self);",
            "        } else {",
            "            self._historyEvents =",
            "                    Y.on('hashchange', self._afterHistoryChange, win, self);",
            "        }",
            "",
            "        // Fire a `ready` event once we're ready to route. We wait first for all",
            "        // subclass initializers to finish, then for window.onload, and then an",
            "        // additional 20ms to allow the browser to fire a useless initial",
            "        // `popstate` event if it wants to (and Chrome always wants to).",
            "        self.publish(EVT_READY, {",
            "            defaultFn  : self._defReadyFn,",
            "            fireOnce   : true,",
            "            preventable: false",
            "        });",
            "",
            "        self.once('initializedChange', function () {",
            "            Y.once('load', function () {",
            "                setTimeout(function () {",
            "                    self.fire(EVT_READY, {dispatched: !!self._dispatched});",
            "                }, 20);",
            "            });",
            "        });",
            "",
            "        // Store this router in the collection of all active router instances.",
            "        instances.push(this);",
            "    },",
            "",
            "    destructor: function () {",
            "        var instanceIndex = YArray.indexOf(instances, this);",
            "",
            "        // Remove this router from the collection of active router instances.",
            "        if (instanceIndex > -1) {",
            "            instances.splice(instanceIndex, 1);",
            "        }",
            "",
            "        if (this._historyEvents) {",
            "            this._historyEvents.detach();",
            "        }",
            "    },",
            "",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Dispatches to the first route handler that matches the current URL, if any.",
            "",
            "    If `dispatch()` is called before the `ready` event has fired, it will",
            "    automatically wait for the `ready` event before dispatching. Otherwise it",
            "    will dispatch immediately.",
            "",
            "    @method dispatch",
            "    @chainable",
            "    **/",
            "    dispatch: function () {",
            "        this.once(EVT_READY, function () {",
            "            this._ready = true;",
            "",
            "            if (!this.upgrade()) {",
            "                this._dispatch(this._getPath(), this._getURL());",
            "            }",
            "        });",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Gets the current route path, relative to the `root` (if any).",
            "",
            "    @method getPath",
            "    @return {String} Current route path.",
            "    **/",
            "    getPath: function () {",
            "        return this._getPath();",
            "    },",
            "",
            "    /**",
            "    Returns `true` if this router has at least one route that matches the",
            "    specified URL, `false` otherwise.",
            "",
            "    This method enforces the same-origin security constraint on the specified",
            "    `url`; any URL which is not from the same origin as the current URL will",
            "    always return `false`.",
            "",
            "    @method hasRoute",
            "    @param {String} url URL to match.",
            "    @return {Boolean} `true` if there's at least one matching route, `false`",
            "      otherwise.",
            "    **/",
            "    hasRoute: function (url) {",
            "        var path;",
            "",
            "        if (!this._hasSameOrigin(url)) {",
            "            return false;",
            "        }",
            "",
            "        if (!this._html5) {",
            "            url = this._upgradeURL(url);",
            "        }",
            "",
            "        path = this.removeQuery(this.removeRoot(url));",
            "",
            "        return !!this.match(path).length;",
            "    },",
            "",
            "    /**",
            "    Returns an array of route objects that match the specified URL path.",
            "",
            "    This method is called internally to determine which routes match the current",
            "    path whenever the URL changes. You may override it if you want to customize",
            "    the route matching logic, although this usually shouldn't be necessary.",
            "",
            "    Each returned route object has the following properties:",
            "",
            "      * `callback`: A function or a string representing the name of a function",
            "        this router that should be executed when the route is triggered.",
            "",
            "      * `keys`: An array of strings representing the named parameters defined in",
            "        the route's path specification, if any.",
            "",
            "      * `path`: The route's path specification, which may be either a string or",
            "        a regex.",
            "",
            "      * `regex`: A regular expression version of the route's path specification.",
            "        This regex is used to determine whether the route matches a given path.",
            "",
            "    @example",
            "        router.route('/foo', function () {});",
            "        router.match('/foo');",
            "        // => [{callback: ..., keys: [], path: '/foo', regex: ...}]",
            "",
            "    @method match",
            "    @param {String} path URL path to match.",
            "    @return {Object[]} Array of route objects that match the specified path.",
            "    **/",
            "    match: function (path) {",
            "        return YArray.filter(this._routes, function (route) {",
            "            return path.search(route.regex) > -1;",
            "        });",
            "    },",
            "",
            "    /**",
            "    Removes the `root` URL from the front of _url_ (if it's there) and returns",
            "    the result. The returned path will always have a leading `/`.",
            "",
            "    @method removeRoot",
            "    @param {String} url URL.",
            "    @return {String} Rootless path.",
            "    **/",
            "    removeRoot: function (url) {",
            "        var root = this.get('root');",
            "",
            "        // Strip out the non-path part of the URL, if any (e.g.",
            "        // \"http://foo.com\"), so that we're left with just the path.",
            "        url = url.replace(this._regexUrlOrigin, '');",
            "",
            "        if (root && url.indexOf(root) === 0) {",
            "            url = url.substring(root.length);",
            "        }",
            "",
            "        return url.charAt(0) === '/' ? url : '/' + url;",
            "    },",
            "",
            "    /**",
            "    Removes a query string from the end of the _url_ (if one exists) and returns",
            "    the result.",
            "",
            "    @method removeQuery",
            "    @param {String} url URL.",
            "    @return {String} Queryless path.",
            "    **/",
            "    removeQuery: function (url) {",
            "        return url.replace(/\\?.*$/, '');",
            "    },",
            "",
            "    /**",
            "    Replaces the current browser history entry with a new one, and dispatches to",
            "    the first matching route handler, if any.",
            "",
            "    Behind the scenes, this method uses HTML5 `pushState()` in browsers that",
            "    support it (or the location hash in older browsers and IE) to change the",
            "    URL.",
            "",
            "    The specified URL must share the same origin (i.e., protocol, host, and",
            "    port) as the current page, or an error will occur.",
            "",
            "    @example",
            "        // Starting URL: http://example.com/",
            "",
            "        router.replace('/path/');",
            "        // New URL: http://example.com/path/",
            "",
            "        router.replace('/path?foo=bar');",
            "        // New URL: http://example.com/path?foo=bar",
            "",
            "        router.replace('/');",
            "        // New URL: http://example.com/",
            "",
            "    @method replace",
            "    @param {String} [url] URL to set. This URL needs to be of the same origin as",
            "      the current URL. This can be a URL relative to the router's `root`",
            "      attribute. If no URL is specified, the page's current URL will be used.",
            "    @chainable",
            "    @see save()",
            "    **/",
            "    replace: function (url) {",
            "        return this._queue(url, true);",
            "    },",
            "",
            "    /**",
            "    Adds a route handler for the specified URL _path_.",
            "",
            "    The _path_ parameter may be either a string or a regular expression. If it's",
            "    a string, it may contain named parameters: `:param` will match any single",
            "    part of a URL path (not including `/` characters), and `*param` will match",
            "    any number of parts of a URL path (including `/` characters). These named",
            "    parameters will be made available as keys on the `req.params` object that's",
            "    passed to route handlers.",
            "",
            "    If the _path_ parameter is a regex, all pattern matches will be made",
            "    available as numbered keys on `req.params`, starting with `0` for the full",
            "    match, then `1` for the first subpattern match, and so on.",
            "",
            "    Here's a set of sample routes along with URL paths that they match:",
            "",
            "      * Route: `/photos/:tag/:page`",
            "        * URL: `/photos/kittens/1`, params: `{tag: 'kittens', page: '1'}`",
            "        * URL: `/photos/puppies/2`, params: `{tag: 'puppies', page: '2'}`",
            "",
            "      * Route: `/file/*path`",
            "        * URL: `/file/foo/bar/baz.txt`, params: `{path: 'foo/bar/baz.txt'}`",
            "        * URL: `/file/foo`, params: `{path: 'foo'}`",
            "",
            "    **Middleware**: Routes also support an arbitrary number of callback",
            "    functions. This allows you to easily reuse parts of your route-handling code",
            "    with different route. This method is liberal in how it processes the",
            "    specified `callbacks`, you can specify them as separate arguments, or as",
            "    arrays, or both.",
            "",
            "    If multiple route match a given URL, they will be executed in the order they",
            "    were added. The first route that was added will be the first to be executed.",
            "",
            "    **Passing Control**: Invoking the `next()` function within a route callback",
            "    will pass control to the next callback function (if any) or route handler",
            "    (if any). If a value is passed to `next()`, it's assumed to be an error,",
            "    therefore stopping the dispatch chain, unless that value is: `\"route\"`,",
            "    which is special case and dispatching will skip to the next route handler.",
            "    This allows middleware to skip any remaining middleware for a particular",
            "    route.",
            "",
            "    @example",
            "        router.route('/photos/:tag/:page', function (req, res, next) {",
            "        });",
            "",
            "        // Using middleware.",
            "",
            "        router.findUser = function (req, res, next) {",
            "            req.user = this.get('users').findById(req.params.user);",
            "            next();",
            "        };",
            "",
            "        router.route('/users/:user', 'findUser', function (req, res, next) {",
            "            // The `findUser` middleware puts the `user` object on the `req`.",
            "        });",
            "",
            "    @method route",
            "    @param {String|RegExp} path Path to match. May be a string or a regular",
            "      expression.",
            "    @param {Array|Function|String} callbacks* Callback functions to call",
            "        whenever this route is triggered. These can be specified as separate",
            "        arguments, or in arrays, or both. If a callback is specified as a",
            "        string, the named function will be called on this router instance.",
            "",
            "      @param {Object} callbacks.req Request object containing information about",
            "          the request. It contains the following properties.",
            "",
            "        @param {Array|Object} callbacks.req.params Captured parameters matched by",
            "          the route path specification. If a string path was used and contained",
            "          named parameters, then this will be a key/value hash mapping parameter",
            "          names to their matched values. If a regex path was used, this will be",
            "          an array of subpattern matches starting at index 0 for the full match,",
            "          then 1 for the first subpattern match, and so on.",
            "        @param {String} callbacks.req.path The current URL path.",
            "        @param {Number} callbacks.req.pendingCallbacks Number of remaining",
            "          callbacks the route handler has after this one in the dispatch chain.",
            "        @param {Number} callbacks.req.pendingRoutes Number of matching routes",
            "          after this one in the dispatch chain.",
            "        @param {Object} callbacks.req.query Query hash representing the URL",
            "          query string, if any. Parameter names are keys, and are mapped to",
            "          parameter values.",
            "        @param {String} callbacks.req.url The full URL.",
            "        @param {String} callbacks.req.src What initiated the dispatch. In an",
            "          HTML5 browser, when the back/forward buttons are used, this property",
            "          will have a value of \"popstate\".",
            "",
            "      @param {Object} callbacks.res Response object containing methods and",
            "          information that relate to responding to a request. It contains the",
            "          following properties.",
            "        @param {Object} callbacks.res.req Reference to the request object.",
            "",
            "      @param {Function} callbacks.next Function to pass control to the next",
            "          callback or the next matching route if no more callbacks (middleware)",
            "          exist for the current route handler. If you don't call this function,",
            "          then no further callbacks or route handlers will be executed, even if",
            "          there are more that match. If you do call this function, then the next",
            "          callback (if any) or matching route handler (if any) will be called.",
            "          All of these functions will receive the same `req` and `res` objects",
            "          that were passed to this route (so you can use these objects to pass",
            "          data along to subsequent callbacks and routes).",
            "        @param {String} [callbacks.next.err] Optional error which will stop the",
            "          dispatch chaining for this `req`, unless the value is `\"route\"`, which",
            "          is special cased to jump skip past any callbacks for the current route",
            "          and pass control the next route handler.",
            "    @chainable",
            "    **/",
            "    route: function (path, callbacks) {",
            "        callbacks = YArray.flatten(YArray(arguments, 1, true));",
            "",
            "        var keys = [];",
            "",
            "        this._routes.push({",
            "            callbacks: callbacks,",
            "            keys     : keys,",
            "            path     : path,",
            "            regex    : this._getRegex(path, keys),",
            "",
            "            // For back-compat.",
            "            callback: callbacks[0]",
            "        });",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Saves a new browser history entry and dispatches to the first matching route",
            "    handler, if any.",
            "",
            "    Behind the scenes, this method uses HTML5 `pushState()` in browsers that",
            "    support it (or the location hash in older browsers and IE) to change the",
            "    URL and create a history entry.",
            "",
            "    The specified URL must share the same origin (i.e., protocol, host, and",
            "    port) as the current page, or an error will occur.",
            "",
            "    @example",
            "        // Starting URL: http://example.com/",
            "",
            "        router.save('/path/');",
            "        // New URL: http://example.com/path/",
            "",
            "        router.save('/path?foo=bar');",
            "        // New URL: http://example.com/path?foo=bar",
            "",
            "        router.save('/');",
            "        // New URL: http://example.com/",
            "",
            "    @method save",
            "    @param {String} [url] URL to set. This URL needs to be of the same origin as",
            "      the current URL. This can be a URL relative to the router's `root`",
            "      attribute. If no URL is specified, the page's current URL will be used.",
            "    @chainable",
            "    @see replace()",
            "    **/",
            "    save: function (url) {",
            "        return this._queue(url);",
            "    },",
            "",
            "    /**",
            "    Upgrades a hash-based URL to an HTML5 URL if necessary. In non-HTML5",
            "    browsers, this method is a noop.",
            "",
            "    @method upgrade",
            "    @return {Boolean} `true` if the URL was upgraded, `false` otherwise.",
            "    **/",
            "    upgrade: function () {",
            "        if (!this._html5) {",
            "            return false;",
            "        }",
            "",
            "        // Get the resolve hash path.",
            "        var hashPath = this._getHashPath();",
            "",
            "        if (hashPath) {",
            "            // This is an HTML5 browser and we have a hash-based path in the",
            "            // URL, so we need to upgrade the URL to a non-hash URL. This",
            "            // will trigger a `history:change` event, which will in turn",
            "            // trigger a dispatch.",
            "            this.once(EVT_READY, function () {",
            "                this.replace(hashPath);",
            "            });",
            "",
            "            return true;",
            "        }",
            "",
            "        return false;",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Wrapper around `decodeURIComponent` that also converts `+` chars into",
            "    spaces.",
            "",
            "    @method _decode",
            "    @param {String} string String to decode.",
            "    @return {String} Decoded string.",
            "    @protected",
            "    **/",
            "    _decode: function (string) {",
            "        return decodeURIComponent(string.replace(/\\+/g, ' '));",
            "    },",
            "",
            "    /**",
            "    Shifts the topmost `_save()` call off the queue and executes it. Does",
            "    nothing if the queue is empty.",
            "",
            "    @method _dequeue",
            "    @chainable",
            "    @see _queue",
            "    @protected",
            "    **/",
            "    _dequeue: function () {",
            "        var self = this,",
            "            fn;",
            "",
            "        // If window.onload hasn't yet fired, wait until it has before",
            "        // dequeueing. This will ensure that we don't call pushState() before an",
            "        // initial popstate event has fired.",
            "        if (!YUI.Env.windowLoaded) {",
            "            Y.once('load', function () {",
            "                self._dequeue();",
            "            });",
            "",
            "            return this;",
            "        }",
            "",
            "        fn = saveQueue.shift();",
            "        return fn ? fn() : this;",
            "    },",
            "",
            "    /**",
            "    Dispatches to the first route handler that matches the specified _path_.",
            "",
            "    If called before the `ready` event has fired, the dispatch will be aborted.",
            "    This ensures normalized behavior between Chrome (which fires a `popstate`",
            "    event on every pageview) and other browsers (which do not).",
            "",
            "    @method _dispatch",
            "    @param {String} path URL path.",
            "    @param {String} url Full URL.",
            "    @param {String} src What initiated the dispatch.",
            "    @chainable",
            "    @protected",
            "    **/",
            "    _dispatch: function (path, url, src) {",
            "        var self      = this,",
            "            decode    = self._decode,",
            "            routes    = self.match(path),",
            "            callbacks = [],",
            "            matches, req, res;",
            "",
            "        self._dispatching = self._dispatched = true;",
            "",
            "        if (!routes || !routes.length) {",
            "            self._dispatching = false;",
            "            return self;",
            "        }",
            "",
            "        req = self._getRequest(path, url, src);",
            "        res = self._getResponse(req);",
            "",
            "        req.next = function (err) {",
            "            var callback, name, route;",
            "",
            "            if (err) {",
            "                // Special case \"route\" to skip to the next route handler",
            "                // avoiding any additional callbacks for the current route.",
            "                if (err === 'route') {",
            "                    callbacks = [];",
            "                    req.next();",
            "                } else {",
            "                    Y.error(err);",
            "                }",
            "",
            "            } else if ((callback = callbacks.shift())) {",
            "                if (typeof callback === 'string') {",
            "                    name     = callback;",
            "                    callback = self[name];",
            "",
            "                    if (!callback) {",
            "                        Y.error('Router: Callback not found: ' + name, null, 'router');",
            "                    }",
            "                }",
            "",
            "                // Allow access to the number of remaining callbacks for the",
            "                // route.",
            "                req.pendingCallbacks = callbacks.length;",
            "",
            "                callback.call(self, req, res, req.next);",
            "",
            "            } else if ((route = routes.shift())) {",
            "                // Make a copy of this route's `callbacks` so the original array",
            "                // is preserved.",
            "                callbacks = route.callbacks.concat();",
            "",
            "                // Decode each of the path matches so that the any URL-encoded",
            "                // path segments are decoded in the `req.params` object.",
            "                matches = YArray.map(route.regex.exec(path) || [], function (match) {",
            "                    // Decode matches, or coerce `undefined` matches to an empty",
            "                    // string to match expectations of working with `req.params`",
            "                    // in the content of route dispatching, and normalize",
            "                    // browser differences in their handling of regexp NPCGs:",
            "                    // https://github.com/yui/yui3/issues/1076",
            "                    return (match && decode(match)) || '';",
            "                });",
            "",
            "                // Use named keys for parameter names if the route path contains",
            "                // named keys. Otherwise, use numerical match indices.",
            "                if (matches.length === route.keys.length + 1) {",
            "                    req.params = YArray.hash(route.keys, matches.slice(1));",
            "                } else {",
            "                    req.params = matches.concat();",
            "                }",
            "",
            "                // Allow access to the number of remaining routes for this",
            "                // request.",
            "                req.pendingRoutes = routes.length;",
            "",
            "                // Execute this route's `callbacks`.",
            "                req.next();",
            "            }",
            "        };",
            "",
            "        req.next();",
            "",
            "        self._dispatching = false;",
            "        return self._dequeue();",
            "    },",
            "",
            "    /**",
            "    Returns the resolved path from the hash fragment, or an empty string if the",
            "    hash is not path-like.",
            "",
            "    @method _getHashPath",
            "    @param {String} [hash] Hash fragment to resolve into a path. By default this",
            "        will be the hash from the current URL.",
            "    @return {String} Current hash path, or an empty string if the hash is empty.",
            "    @protected",
            "    **/",
            "    _getHashPath: function (hash) {",
            "        hash || (hash = HistoryHash.getHash());",
            "",
            "        // Make sure the `hash` is path-like.",
            "        if (hash && hash.charAt(0) === '/') {",
            "            return this._joinURL(hash);",
            "        }",
            "",
            "        return '';",
            "    },",
            "",
            "    /**",
            "    Gets the location origin (i.e., protocol, host, and port) as a URL.",
            "",
            "    @example",
            "        http://example.com",
            "",
            "    @method _getOrigin",
            "    @return {String} Location origin (i.e., protocol, host, and port).",
            "    @protected",
            "    **/",
            "    _getOrigin: function () {",
            "        var location = Y.getLocation();",
            "        return location.origin || (location.protocol + '//' + location.host);",
            "    },",
            "",
            "    /**",
            "    Gets the current route path, relative to the `root` (if any).",
            "",
            "    @method _getPath",
            "    @return {String} Current route path.",
            "    @protected",
            "    **/",
            "    _getPath: function () {",
            "        var path = (!this._html5 && this._getHashPath()) ||",
            "                Y.getLocation().pathname;",
            "",
            "        return this.removeQuery(this.removeRoot(path));",
            "    },",
            "",
            "    /**",
            "    Returns the current path root after popping off the last path segment,",
            "    making it useful for resolving other URL paths against.",
            "",
            "    The path root will always begin and end with a '/'.",
            "",
            "    @method _getPathRoot",
            "    @return {String} The URL's path root.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _getPathRoot: function () {",
            "        var slash = '/',",
            "            path  = Y.getLocation().pathname,",
            "            segments;",
            "",
            "        if (path.charAt(path.length - 1) === slash) {",
            "            return path;",
            "        }",
            "",
            "        segments = path.split(slash);",
            "        segments.pop();",
            "",
            "        return segments.join(slash) + slash;",
            "    },",
            "",
            "    /**",
            "    Gets the current route query string.",
            "",
            "    @method _getQuery",
            "    @return {String} Current route query string.",
            "    @protected",
            "    **/",
            "    _getQuery: function () {",
            "        var location = Y.getLocation(),",
            "            hash, matches;",
            "",
            "        if (this._html5) {",
            "            return location.search.substring(1);",
            "        }",
            "",
            "        hash    = HistoryHash.getHash();",
            "        matches = hash.match(this._regexUrlQuery);",
            "",
            "        return hash && matches ? matches[1] : location.search.substring(1);",
            "    },",
            "",
            "    /**",
            "    Creates a regular expression from the given route specification. If _path_",
            "    is already a regex, it will be returned unmodified.",
            "",
            "    @method _getRegex",
            "    @param {String|RegExp} path Route path specification.",
            "    @param {Array} keys Array reference to which route parameter names will be",
            "      added.",
            "    @return {RegExp} Route regex.",
            "    @protected",
            "    **/",
            "    _getRegex: function (path, keys) {",
            "        if (path instanceof RegExp) {",
            "            return path;",
            "        }",
            "",
            "        // Special case for catchall paths.",
            "        if (path === '*') {",
            "            return (/.*/);",
            "        }",
            "",
            "        path = path.replace(this._regexPathParam, function (match, operator, key) {",
            "            // Only `*` operators are supported for key-less matches to allowing",
            "            // in-path wildcards like: '/foo/*'.",
            "            if (!key) {",
            "                return operator === '*' ? '.*' : match;",
            "            }",
            "",
            "            keys.push(key);",
            "            return operator === '*' ? '(.*?)' : '([^/#?]*)';",
            "        });",
            "",
            "        return new RegExp('^' + path + '$');",
            "    },",
            "",
            "    /**",
            "    Gets a request object that can be passed to a route handler.",
            "",
            "    @method _getRequest",
            "    @param {String} path Current path being dispatched.",
            "    @param {String} url Current full URL being dispatched.",
            "    @param {String} src What initiated the dispatch.",
            "    @return {Object} Request object.",
            "    @protected",
            "    **/",
            "    _getRequest: function (path, url, src) {",
            "        return {",
            "            path : path,",
            "            query: this._parseQuery(this._getQuery()),",
            "            url  : url,",
            "            src  : src",
            "        };",
            "    },",
            "",
            "    /**",
            "    Gets a response object that can be passed to a route handler.",
            "",
            "    @method _getResponse",
            "    @param {Object} req Request object.",
            "    @return {Object} Response Object.",
            "    @protected",
            "    **/",
            "    _getResponse: function (req) {",
            "        // For backwards compatibility, the response object is a function that",
            "        // calls `next()` on the request object and returns the result.",
            "        var res = function () {",
            "            return req.next.apply(this, arguments);",
            "        };",
            "",
            "        res.req = req;",
            "        return res;",
            "    },",
            "",
            "    /**",
            "    Getter for the `routes` attribute.",
            "",
            "    @method _getRoutes",
            "    @return {Object[]} Array of route objects.",
            "    @protected",
            "    **/",
            "    _getRoutes: function () {",
            "        return this._routes.concat();",
            "    },",
            "",
            "    /**",
            "    Gets the current full URL.",
            "",
            "    @method _getURL",
            "    @return {String} URL.",
            "    @protected",
            "    **/",
            "    _getURL: function () {",
            "        var url = Y.getLocation().toString();",
            "",
            "        if (!this._html5) {",
            "            url = this._upgradeURL(url);",
            "        }",
            "",
            "        return url;",
            "    },",
            "",
            "    /**",
            "    Returns `true` when the specified `url` is from the same origin as the",
            "    current URL; i.e., the protocol, host, and port of the URLs are the same.",
            "",
            "    All host or path relative URLs are of the same origin. A scheme-relative URL",
            "    is first prefixed with the current scheme before being evaluated.",
            "",
            "    @method _hasSameOrigin",
            "    @param {String} url URL to compare origin with the current URL.",
            "    @return {Boolean} Whether the URL has the same origin of the current URL.",
            "    @protected",
            "    **/",
            "    _hasSameOrigin: function (url) {",
            "        var origin = ((url && url.match(this._regexUrlOrigin)) || [])[0];",
            "",
            "        // Prepend current scheme to scheme-relative URLs.",
            "        if (origin && origin.indexOf('//') === 0) {",
            "            origin = Y.getLocation().protocol + origin;",
            "        }",
            "",
            "        return !origin || origin === this._getOrigin();",
            "    },",
            "",
            "    /**",
            "    Joins the `root` URL to the specified _url_, normalizing leading/trailing",
            "    `/` characters.",
            "",
            "    @example",
            "        router.set('root', '/foo');",
            "        router._joinURL('bar');  // => '/foo/bar'",
            "        router._joinURL('/bar'); // => '/foo/bar'",
            "",
            "        router.set('root', '/foo/');",
            "        router._joinURL('bar');  // => '/foo/bar'",
            "        router._joinURL('/bar'); // => '/foo/bar'",
            "",
            "    @method _joinURL",
            "    @param {String} url URL to append to the `root` URL.",
            "    @return {String} Joined URL.",
            "    @protected",
            "    **/",
            "    _joinURL: function (url) {",
            "        var root = this.get('root');",
            "",
            "        // Causes `url` to _always_ begin with a \"/\".",
            "        url = this.removeRoot(url);",
            "",
            "        if (url.charAt(0) === '/') {",
            "            url = url.substring(1);",
            "        }",
            "",
            "        return root && root.charAt(root.length - 1) === '/' ?",
            "                root + url :",
            "                root + '/' + url;",
            "    },",
            "",
            "    /**",
            "    Returns a normalized path, ridding it of any '..' segments and properly",
            "    handling leading and trailing slashes.",
            "",
            "    @method _normalizePath",
            "    @param {String} path URL path to normalize.",
            "    @return {String} Normalized path.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _normalizePath: function (path) {",
            "        var dots  = '..',",
            "            slash = '/',",
            "            i, len, normalized, segments, segment, stack;",
            "",
            "        if (!path || path === slash) {",
            "            return slash;",
            "        }",
            "",
            "        segments = path.split(slash);",
            "        stack    = [];",
            "",
            "        for (i = 0, len = segments.length; i < len; ++i) {",
            "            segment = segments[i];",
            "",
            "            if (segment === dots) {",
            "                stack.pop();",
            "            } else if (segment) {",
            "                stack.push(segment);",
            "            }",
            "        }",
            "",
            "        normalized = slash + stack.join(slash);",
            "",
            "        // Append trailing slash if necessary.",
            "        if (normalized !== slash && path.charAt(path.length - 1) === slash) {",
            "            normalized += slash;",
            "        }",
            "",
            "        return normalized;",
            "    },",
            "",
            "    /**",
            "    Parses a URL query string into a key/value hash. If `Y.QueryString.parse` is",
            "    available, this method will be an alias to that.",
            "",
            "    @method _parseQuery",
            "    @param {String} query Query string to parse.",
            "    @return {Object} Hash of key/value pairs for query parameters.",
            "    @protected",
            "    **/",
            "    _parseQuery: QS && QS.parse ? QS.parse : function (query) {",
            "        var decode = this._decode,",
            "            params = query.split('&'),",
            "            i      = 0,",
            "            len    = params.length,",
            "            result = {},",
            "            param;",
            "",
            "        for (; i < len; ++i) {",
            "            param = params[i].split('=');",
            "",
            "            if (param[0]) {",
            "                result[decode(param[0])] = decode(param[1] || '');",
            "            }",
            "        }",
            "",
            "        return result;",
            "    },",
            "",
            "    /**",
            "    Queues up a `_save()` call to run after all previously-queued calls have",
            "    finished.",
            "",
            "    This is necessary because if we make multiple `_save()` calls before the",
            "    first call gets dispatched, then both calls will dispatch to the last call's",
            "    URL.",
            "",
            "    All arguments passed to `_queue()` will be passed on to `_save()` when the",
            "    queued function is executed.",
            "",
            "    @method _queue",
            "    @chainable",
            "    @see _dequeue",
            "    @protected",
            "    **/",
            "    _queue: function () {",
            "        var args = arguments,",
            "            self = this;",
            "",
            "        saveQueue.push(function () {",
            "            if (self._html5) {",
            "                if (Y.UA.ios && Y.UA.ios < 5) {",
            "                    // iOS <5 has buggy HTML5 history support, and needs to be",
            "                    // synchronous.",
            "                    self._save.apply(self, args);",
            "                } else {",
            "                    // Wrapped in a timeout to ensure that _save() calls are",
            "                    // always processed asynchronously. This ensures consistency",
            "                    // between HTML5- and hash-based history.",
            "                    setTimeout(function () {",
            "                        self._save.apply(self, args);",
            "                    }, 1);",
            "                }",
            "            } else {",
            "                self._dispatching = true; // otherwise we'll dequeue too quickly",
            "                self._save.apply(self, args);",
            "            }",
            "",
            "            return self;",
            "        });",
            "",
            "        return !this._dispatching ? this._dequeue() : this;",
            "    },",
            "",
            "    /**",
            "    Returns the normalized result of resolving the `path` against the current",
            "    path. Falsy values for `path` will return just the current path.",
            "",
            "    @method _resolvePath",
            "    @param {String} path URL path to resolve.",
            "    @return {String} Resolved path.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _resolvePath: function (path) {",
            "        if (!path) {",
            "            return Y.getLocation().pathname;",
            "        }",
            "",
            "        if (path.charAt(0) !== '/') {",
            "            path = this._getPathRoot() + path;",
            "        }",
            "",
            "        return this._normalizePath(path);",
            "    },",
            "",
            "    /**",
            "    Resolves the specified URL against the current URL.",
            "",
            "    This method resolves URLs like a browser does and will always return an",
            "    absolute URL. When the specified URL is already absolute, it is assumed to",
            "    be fully resolved and is simply returned as is. Scheme-relative URLs are",
            "    prefixed with the current protocol. Relative URLs are giving the current",
            "    URL's origin and are resolved and normalized against the current path root.",
            "",
            "    @method _resolveURL",
            "    @param {String} url URL to resolve.",
            "    @return {String} Resolved URL.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _resolveURL: function (url) {",
            "        var parts    = url && url.match(this._regexURL),",
            "            origin, path, query, hash, resolved;",
            "",
            "        if (!parts) {",
            "            return Y.getLocation().toString();",
            "        }",
            "",
            "        origin = parts[1];",
            "        path   = parts[2];",
            "        query  = parts[3];",
            "        hash   = parts[4];",
            "",
            "        // Absolute and scheme-relative URLs are assumed to be fully-resolved.",
            "        if (origin) {",
            "            // Prepend the current scheme for scheme-relative URLs.",
            "            if (origin.indexOf('//') === 0) {",
            "                origin = Y.getLocation().protocol + origin;",
            "            }",
            "",
            "            return origin + (path || '/') + (query || '') + (hash || '');",
            "        }",
            "",
            "        // Will default to the current origin and current path.",
            "        resolved = this._getOrigin() + this._resolvePath(path);",
            "",
            "        // A path or query for the specified URL trumps the current URL's.",
            "        if (path || query) {",
            "            return resolved + (query || '') + (hash || '');",
            "        }",
            "",
            "        query = this._getQuery();",
            "",
            "        return resolved + (query ? ('?' + query) : '') + (hash || '');",
            "    },",
            "",
            "    /**",
            "    Saves a history entry using either `pushState()` or the location hash.",
            "",
            "    This method enforces the same-origin security constraint; attempting to save",
            "    a `url` that is not from the same origin as the current URL will result in",
            "    an error.",
            "",
            "    @method _save",
            "    @param {String} [url] URL for the history entry.",
            "    @param {Boolean} [replace=false] If `true`, the current history entry will",
            "      be replaced instead of a new one being added.",
            "    @chainable",
            "    @protected",
            "    **/",
            "    _save: function (url, replace) {",
            "        var urlIsString = typeof url === 'string',",
            "            currentPath, root, hash;",
            "",
            "        // Perform same-origin check on the specified URL.",
            "        if (urlIsString && !this._hasSameOrigin(url)) {",
            "            Y.error('Security error: The new URL must be of the same origin as the current URL.');",
            "            return this;",
            "        }",
            "",
            "        // Joins the `url` with the `root`.",
            "        if (urlIsString) {",
            "            url = this._joinURL(url);",
            "        }",
            "",
            "        // Force _ready to true to ensure that the history change is handled",
            "        // even if _save is called before the `ready` event fires.",
            "        this._ready = true;",
            "",
            "        if (this._html5) {",
            "            this._history[replace ? 'replace' : 'add'](null, {url: url});",
            "        } else {",
            "            currentPath = Y.getLocation().pathname;",
            "            root        = this.get('root');",
            "            hash        = HistoryHash.getHash();",
            "",
            "            if (!urlIsString) {",
            "                url = hash;",
            "            }",
            "",
            "            // Determine if the `root` already exists in the current location's",
            "            // `pathname`, and if it does then we can exclude it from the",
            "            // hash-based path. No need to duplicate the info in the URL.",
            "            if (root === currentPath || root === this._getPathRoot()) {",
            "                url = this.removeRoot(url);",
            "            }",
            "",
            "            // The `hashchange` event only fires when the new hash is actually",
            "            // different. This makes sure we'll always dequeue and dispatch",
            "            // _all_ router instances, mimicking the HTML5 behavior.",
            "            if (url === hash) {",
            "                Y.Router.dispatch();",
            "            } else {",
            "                HistoryHash[replace ? 'replaceHash' : 'setHash'](url);",
            "            }",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Setter for the `routes` attribute.",
            "",
            "    @method _setRoutes",
            "    @param {Object[]} routes Array of route objects.",
            "    @return {Object[]} Array of route objects.",
            "    @protected",
            "    **/",
            "    _setRoutes: function (routes) {",
            "        this._routes = [];",
            "",
            "        YArray.each(routes, function (route) {",
            "            // Makes sure to check `callback` for back-compat.",
            "            var callbacks = route.callbacks || route.callback;",
            "",
            "            this.route(route.path, callbacks);",
            "        }, this);",
            "",
            "        return this._routes.concat();",
            "    },",
            "",
            "    /**",
            "    Upgrades a hash-based URL to a full-path URL, if necessary.",
            "",
            "    The specified `url` will be upgraded if its of the same origin as the",
            "    current URL and has a path-like hash. URLs that don't need upgrading will be",
            "    returned as-is.",
            "",
            "    @example",
            "        app._upgradeURL('http://example.com/#/foo/'); // => 'http://example.com/foo/';",
            "",
            "    @method _upgradeURL",
            "    @param {String} url The URL to upgrade from hash-based to full-path.",
            "    @return {String} The upgraded URL, or the specified URL untouched.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _upgradeURL: function (url) {",
            "        // We should not try to upgrade paths for external URLs.",
            "        if (!this._hasSameOrigin(url)) {",
            "            return url;",
            "        }",
            "",
            "        var hash       = (url.match(/#(.*)$/) || [])[1] || '',",
            "            hashPrefix = Y.HistoryHash.hashPrefix,",
            "            hashPath;",
            "",
            "        // Strip any hash prefix, like hash-bangs.",
            "        if (hashPrefix && hash.indexOf(hashPrefix) === 0) {",
            "            hash = hash.replace(hashPrefix, '');",
            "        }",
            "",
            "        // If the hash looks like a URL path, assume it is, and upgrade it!",
            "        if (hash) {",
            "            hashPath = this._getHashPath(hash);",
            "",
            "            if (hashPath) {",
            "                return this._resolveURL(hashPath);",
            "            }",
            "        }",
            "",
            "        return url;",
            "    },",
            "",
            "    // -- Protected Event Handlers ---------------------------------------------",
            "",
            "    /**",
            "    Handles `history:change` and `hashchange` events.",
            "",
            "    @method _afterHistoryChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterHistoryChange: function (e) {",
            "        var self       = this,",
            "            src        = e.src,",
            "            prevURL    = self._url,",
            "            currentURL = self._getURL();",
            "",
            "        self._url = currentURL;",
            "",
            "        // Handles the awkwardness that is the `popstate` event. HTML5 browsers",
            "        // fire `popstate` right before they fire `hashchange`, and Chrome fires",
            "        // `popstate` on page load. If this router is not ready or the previous",
            "        // and current URLs only differ by their hash, then we want to ignore",
            "        // this `popstate` event.",
            "        if (src === 'popstate' &&",
            "                (!self._ready || prevURL.replace(/#.*$/, '') === currentURL.replace(/#.*$/, ''))) {",
            "",
            "            return;",
            "        }",
            "",
            "        self._dispatch(self._getPath(), currentURL, src);",
            "    },",
            "",
            "    // -- Default Event Handlers -----------------------------------------------",
            "",
            "    /**",
            "    Default handler for the `ready` event.",
            "",
            "    @method _defReadyFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defReadyFn: function (e) {",
            "        this._ready = true;",
            "    }",
            "}, {",
            "    // -- Static Properties ----------------------------------------------------",
            "    NAME: 'router',",
            "",
            "    ATTRS: {",
            "        /**",
            "        Whether or not this browser is capable of using HTML5 history.",
            "",
            "        Setting this to `false` will force the use of hash-based history even on",
            "        HTML5 browsers, but please don't do this unless you understand the",
            "        consequences.",
            "",
            "        @attribute html5",
            "        @type Boolean",
            "        @initOnly",
            "        **/",
            "        html5: {",
            "            // Android versions lower than 3.0 are buggy and don't update",
            "            // window.location after a pushState() call, so we fall back to",
            "            // hash-based history for them.",
            "            //",
            "            // See http://code.google.com/p/android/issues/detail?id=17471",
            "            valueFn: function () { return Y.Router.html5; },",
            "            writeOnce: 'initOnly'",
            "        },",
            "",
            "        /**",
            "        Absolute root path from which all routes should be evaluated.",
            "",
            "        For example, if your router is running on a page at",
            "        `http://example.com/myapp/` and you add a route with the path `/`, your",
            "        route will never execute, because the path will always be preceded by",
            "        `/myapp`. Setting `root` to `/myapp` would cause all routes to be",
            "        evaluated relative to that root URL, so the `/` route would then execute",
            "        when the user browses to `http://example.com/myapp/`.",
            "",
            "        @attribute root",
            "        @type String",
            "        @default `''`",
            "        **/",
            "        root: {",
            "            value: ''",
            "        },",
            "",
            "        /**",
            "        Array of route objects.",
            "",
            "        Each item in the array must be an object with the following properties:",
            "",
            "          * `path`: String or regex representing the path to match. See the docs",
            "            for the `route()` method for more details.",
            "",
            "          * `callbacks`: Function or a string representing the name of a",
            "            function on this router instance that should be called when the",
            "            route is triggered. An array of functions and/or strings may also be",
            "            provided. See the docs for the `route()` method for more details.",
            "",
            "        This attribute is intended to be used to set routes at init time, or to",
            "        completely reset all routes after init. To add routes after init without",
            "        resetting all existing routes, use the `route()` method.",
            "",
            "        @attribute routes",
            "        @type Object[]",
            "        @default `[]`",
            "        @see route",
            "        **/",
            "        routes: {",
            "            value : [],",
            "            getter: '_getRoutes',",
            "            setter: '_setRoutes'",
            "        }",
            "    },",
            "",
            "    // Used as the default value for the `html5` attribute, and for testing.",
            "    html5: Y.HistoryBase.html5 && (!Y.UA.android || Y.UA.android >= 3),",
            "",
            "    // To make this testable.",
            "    _instances: instances,",
            "",
            "    /**",
            "    Dispatches to the first route handler that matches the specified `path` for",
            "    all active router instances.",
            "",
            "    This provides a mechanism to cause all active router instances to dispatch",
            "    to their route handlers without needing to change the URL or fire the",
            "    `history:change` or `hashchange` event.",
            "",
            "    @method dispatch",
            "    @static",
            "    @since 3.6.0",
            "    **/",
            "    dispatch: function () {",
            "        var i, len, router;",
            "",
            "        for (i = 0, len = instances.length; i < len; i += 1) {",
            "            router = instances[i];",
            "",
            "            if (router) {",
            "                router._dispatch(router._getPath(), router._getURL());",
            "            }",
            "        }",
            "    }",
            "});",
            "",
            "/**",
            "The `Controller` class was deprecated in YUI 3.5.0 and is now an alias for the",
            "`Router` class. Use that class instead. This alias will be removed in a future",
            "version of YUI.",
            "",
            "@class Controller",
            "@constructor",
            "@extends Base",
            "@deprecated Use `Router` instead.",
            "@see Router",
            "**/",
            "Y.Controller = Y.Router;",
            "",
            "",
            "}, '@VERSION@', {\"optional\": [\"querystring-parse\"], \"requires\": [\"array-extras\", \"base-build\", \"history\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "11": 1,
            "59": 1,
            "60": 160,
            "63": 1,
            "151": 160,
            "153": 160,
            "154": 160,
            "155": 160,
            "158": 160,
            "162": 160,
            "163": 144,
            "164": 144,
            "167": 16,
            "175": 160,
            "181": 160,
            "182": 160,
            "183": 160,
            "184": 160,
            "190": 160,
            "194": 160,
            "197": 160,
            "198": 160,
            "201": 160,
            "202": 160,
            "219": 2,
            "220": 2,
            "222": 2,
            "223": 0,
            "227": 2,
            "237": 3,
            "254": 32,
            "256": 32,
            "257": 3,
            "260": 29,
            "261": 5,
            "264": 29,
            "266": 29,
            "300": 85,
            "301": 153,
            "314": 149,
            "318": 149,
            "320": 149,
            "321": 22,
            "324": 149,
            "336": 61,
            "370": 6,
            "480": 93,
            "482": 93,
            "484": 93,
            "494": 93,
            "528": 23,
            "539": 2,
            "540": 0,
            "544": 2,
            "546": 2,
            "551": 2,
            "552": 2,
            "555": 2,
            "558": 0,
            "573": 79,
            "586": 81,
            "592": 81,
            "593": 0,
            "594": 0,
            "597": 0,
            "600": 81,
            "601": 81,
            "619": 55,
            "625": 55,
            "627": 55,
            "628": 3,
            "629": 3,
            "632": 52,
            "633": 52,
            "635": 52,
            "636": 137,
            "638": 137,
            "641": 1,
            "642": 1,
            "643": 1,
            "645": 0,
            "648": 136,
            "649": 74,
            "650": 14,
            "651": 14,
            "653": 14,
            "654": 0,
            "660": 74,
            "662": 74,
            "664": 62,
            "667": 59,
            "671": 59,
            "677": 75,
            "682": 59,
            "683": 56,
            "685": 3,
            "690": 59,
            "693": 59,
            "697": 52,
            "699": 52,
            "700": 52,
            "714": 36,
            "717": 36,
            "718": 35,
            "721": 1,
            "735": 128,
            "736": 128,
            "747": 32,
            "750": 32,
            "765": 16,
            "769": 16,
            "770": 2,
            "773": 14,
            "774": 14,
            "776": 14,
            "787": 65,
            "790": 65,
            "791": 44,
            "794": 21,
            "795": 21,
            "797": 21,
            "812": 135,
            "813": 10,
            "817": 125,
            "818": 7,
            "821": 118,
            "824": 43,
            "825": 12,
            "828": 31,
            "829": 31,
            "832": 118,
            "846": 52,
            "865": 52,
            "866": 1,
            "869": 52,
            "870": 52,
            "881": 170,
            "892": 206,
            "894": 206,
            "895": 31,
            "898": 206,
            "914": 117,
            "917": 117,
            "918": 1,
            "921": 117,
            "943": 68,
            "946": 68,
            "948": 68,
            "949": 68,
            "952": 68,
            "968": 30,
            "972": 30,
            "973": 2,
            "976": 28,
            "977": 28,
            "979": 28,
            "980": 129,
            "982": 129,
            "983": 0,
            "984": 129,
            "985": 78,
            "989": 28,
            "992": 28,
            "993": 23,
            "996": 28,
            "1009": 52,
            "1016": 52,
            "1017": 53,
            "1019": 53,
            "1020": 3,
            "1024": 52,
            "1044": 29,
            "1047": 29,
            "1048": 29,
            "1049": 20,
            "1052": 0,
            "1057": 20,
            "1058": 20,
            "1062": 9,
            "1063": 9,
            "1066": 29,
            "1069": 29,
            "1083": 44,
            "1084": 14,
            "1087": 30,
            "1088": 5,
            "1091": 30,
            "1110": 44,
            "1113": 44,
            "1114": 0,
            "1117": 44,
            "1118": 44,
            "1119": 44,
            "1120": 44,
            "1123": 44,
            "1125": 0,
            "1126": 0,
            "1129": 0,
            "1133": 44,
            "1136": 44,
            "1137": 30,
            "1140": 14,
            "1142": 14,
            "1160": 29,
            "1164": 29,
            "1165": 2,
            "1166": 2,
            "1170": 27,
            "1171": 25,
            "1176": 27,
            "1178": 27,
            "1179": 18,
            "1181": 9,
            "1182": 9,
            "1183": 9,
            "1185": 9,
            "1186": 1,
            "1192": 9,
            "1193": 1,
            "1199": 9,
            "1200": 3,
            "1202": 6,
            "1206": 27,
            "1218": 317,
            "1220": 317,
            "1222": 19,
            "1224": 19,
            "1227": 317,
            "1248": 57,
            "1249": 1,
            "1252": 56,
            "1257": 56,
            "1258": 2,
            "1262": 56,
            "1263": 24,
            "1265": 24,
            "1266": 23,
            "1270": 33,
            "1283": 25,
            "1288": 25,
            "1295": 25,
            "1298": 0,
            "1301": 25,
            "1314": 160,
            "1338": 50,
            "1408": 3,
            "1410": 3,
            "1411": 4,
            "1413": 4,
            "1414": 4,
            "1431": 1
        }
    },
    "build/view/view.js": {
        "path": "build/view/view.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 209,
            "4": 1,
            "5": 209,
            "6": 209,
            "7": 209,
            "8": 209,
            "9": 209,
            "10": 133,
            "11": 43,
            "12": 43,
            "13": 133,
            "14": 131,
            "15": 131,
            "16": 131,
            "17": 131,
            "18": 131,
            "19": 131,
            "20": 1,
            "21": 0,
            "22": 1,
            "23": 1,
            "24": 1,
            "25": 0,
            "26": 1,
            "27": 1,
            "28": 1,
            "29": 1,
            "30": 1,
            "31": 0,
            "32": 131,
            "33": 110,
            "34": 279,
            "35": 0,
            "36": 0,
            "37": 279,
            "38": 279,
            "39": 4,
            "40": 4,
            "41": 4,
            "42": 9,
            "43": 25,
            "44": 25,
            "45": 372,
            "46": 132,
            "47": 83,
            "48": 83,
            "49": 49,
            "50": 49,
            "51": 372,
            "52": 49
        },
        "b": {
            "1": [
                209,
                119
            ],
            "2": [
                209,
                1
            ],
            "3": [
                209,
                1
            ],
            "4": [
                3,
                206
            ],
            "5": [
                43,
                90
            ],
            "6": [
                133,
                43,
                0
            ],
            "7": [
                131,
                83
            ],
            "8": [
                0,
                1
            ],
            "9": [
                0,
                1
            ],
            "10": [
                1,
                0
            ],
            "11": [
                1,
                0
            ],
            "12": [
                3,
                107
            ],
            "13": [
                0,
                0
            ],
            "14": [
                4,
                4
            ],
            "15": [
                25,
                25
            ],
            "16": [
                132,
                240
            ],
            "17": [
                83,
                49
            ]
        },
        "f": {
            "1": 1,
            "2": 209,
            "3": 209,
            "4": 133,
            "5": 43,
            "6": 131,
            "7": 131,
            "8": 110,
            "9": 279,
            "10": 0,
            "11": 4,
            "12": 9,
            "13": 25,
            "14": 372,
            "15": 49
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 16
                    },
                    "end": {
                        "line": 1,
                        "column": 35
                    }
                }
            },
            "2": {
                "name": "View",
                "line": 35,
                "loc": {
                    "start": {
                        "line": 35,
                        "column": 0
                    },
                    "end": {
                        "line": 35,
                        "column": 16
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 128,
                "loc": {
                    "start": {
                        "line": 128,
                        "column": 17
                    },
                    "end": {
                        "line": 128,
                        "column": 35
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 161,
                "loc": {
                    "start": {
                        "line": 161,
                        "column": 13
                    },
                    "end": {
                        "line": 161,
                        "column": 32
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 168,
                "loc": {
                    "start": {
                        "line": 168,
                        "column": 38
                    },
                    "end": {
                        "line": 168,
                        "column": 50
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 176,
                "loc": {
                    "start": {
                        "line": 176,
                        "column": 16
                    },
                    "end": {
                        "line": 176,
                        "column": 28
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 197,
                "loc": {
                    "start": {
                        "line": 197,
                        "column": 18
                    },
                    "end": {
                        "line": 197,
                        "column": 36
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 249,
                "loc": {
                    "start": {
                        "line": 249,
                        "column": 12
                    },
                    "end": {
                        "line": 249,
                        "column": 33
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 262,
                "loc": {
                    "start": {
                        "line": 262,
                        "column": 18
                    },
                    "end": {
                        "line": 262,
                        "column": 30
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 263,
                "loc": {
                    "start": {
                        "line": 263,
                        "column": 47
                    },
                    "end": {
                        "line": 263,
                        "column": 65
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 280,
                "loc": {
                    "start": {
                        "line": 280,
                        "column": 12
                    },
                    "end": {
                        "line": 280,
                        "column": 24
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 307,
                "loc": {
                    "start": {
                        "line": 307,
                        "column": 12
                    },
                    "end": {
                        "line": 307,
                        "column": 24
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 319,
                "loc": {
                    "start": {
                        "line": 319,
                        "column": 23
                    },
                    "end": {
                        "line": 319,
                        "column": 35
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 333,
                "loc": {
                    "start": {
                        "line": 333,
                        "column": 19
                    },
                    "end": {
                        "line": 333,
                        "column": 36
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 370,
                "loc": {
                    "start": {
                        "line": 370,
                        "column": 27
                    },
                    "end": {
                        "line": 370,
                        "column": 39
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 433,
                    "column": 69
                }
            },
            "2": {
                "start": {
                    "line": 35,
                    "column": 0
                },
                "end": {
                    "line": 37,
                    "column": 1
                }
            },
            "3": {
                "start": {
                    "line": 36,
                    "column": 4
                },
                "end": {
                    "line": 36,
                    "column": 55
                }
            },
            "4": {
                "start": {
                    "line": 39,
                    "column": 0
                },
                "end": {
                    "line": 429,
                    "column": 3
                }
            },
            "5": {
                "start": {
                    "line": 129,
                    "column": 8
                },
                "end": {
                    "line": 129,
                    "column": 32
                }
            },
            "6": {
                "start": {
                    "line": 132,
                    "column": 8
                },
                "end": {
                    "line": 133,
                    "column": 64
                }
            },
            "7": {
                "start": {
                    "line": 135,
                    "column": 8
                },
                "end": {
                    "line": 135,
                    "column": 61
                }
            },
            "8": {
                "start": {
                    "line": 138,
                    "column": 8
                },
                "end": {
                    "line": 139,
                    "column": 24
                }
            },
            "9": {
                "start": {
                    "line": 145,
                    "column": 8
                },
                "end": {
                    "line": 145,
                    "column": 66
                }
            },
            "10": {
                "start": {
                    "line": 163,
                    "column": 8
                },
                "end": {
                    "line": 171,
                    "column": 9
                }
            },
            "11": {
                "start": {
                    "line": 168,
                    "column": 12
                },
                "end": {
                    "line": 170,
                    "column": 15
                }
            },
            "12": {
                "start": {
                    "line": 169,
                    "column": 16
                },
                "end": {
                    "line": 169,
                    "column": 41
                }
            },
            "13": {
                "start": {
                    "line": 173,
                    "column": 8
                },
                "end": {
                    "line": 173,
                    "column": 50
                }
            },
            "14": {
                "start": {
                    "line": 177,
                    "column": 8
                },
                "end": {
                    "line": 177,
                    "column": 28
                }
            },
            "15": {
                "start": {
                    "line": 178,
                    "column": 8
                },
                "end": {
                    "line": 178,
                    "column": 31
                }
            },
            "16": {
                "start": {
                    "line": 198,
                    "column": 8
                },
                "end": {
                    "line": 200,
                    "column": 46
                }
            },
            "17": {
                "start": {
                    "line": 202,
                    "column": 8
                },
                "end": {
                    "line": 202,
                    "column": 28
                }
            },
            "18": {
                "start": {
                    "line": 204,
                    "column": 8
                },
                "end": {
                    "line": 204,
                    "column": 41
                }
            },
            "19": {
                "start": {
                    "line": 206,
                    "column": 8
                },
                "end": {
                    "line": 229,
                    "column": 9
                }
            },
            "20": {
                "start": {
                    "line": 207,
                    "column": 12
                },
                "end": {
                    "line": 207,
                    "column": 54
                }
            },
            "21": {
                "start": {
                    "line": 207,
                    "column": 43
                },
                "end": {
                    "line": 207,
                    "column": 52
                }
            },
            "22": {
                "start": {
                    "line": 209,
                    "column": 12
                },
                "end": {
                    "line": 209,
                    "column": 40
                }
            },
            "23": {
                "start": {
                    "line": 211,
                    "column": 12
                },
                "end": {
                    "line": 228,
                    "column": 13
                }
            },
            "24": {
                "start": {
                    "line": 212,
                    "column": 16
                },
                "end": {
                    "line": 212,
                    "column": 56
                }
            },
            "25": {
                "start": {
                    "line": 212,
                    "column": 45
                },
                "end": {
                    "line": 212,
                    "column": 54
                }
            },
            "26": {
                "start": {
                    "line": 214,
                    "column": 16
                },
                "end": {
                    "line": 214,
                    "column": 41
                }
            },
            "27": {
                "start": {
                    "line": 218,
                    "column": 16
                },
                "end": {
                    "line": 220,
                    "column": 17
                }
            },
            "28": {
                "start": {
                    "line": 219,
                    "column": 20
                },
                "end": {
                    "line": 219,
                    "column": 44
                }
            },
            "29": {
                "start": {
                    "line": 222,
                    "column": 16
                },
                "end": {
                    "line": 224,
                    "column": 17
                }
            },
            "30": {
                "start": {
                    "line": 223,
                    "column": 20
                },
                "end": {
                    "line": 223,
                    "column": 29
                }
            },
            "31": {
                "start": {
                    "line": 226,
                    "column": 16
                },
                "end": {
                    "line": 227,
                    "column": 71
                }
            },
            "32": {
                "start": {
                    "line": 231,
                    "column": 8
                },
                "end": {
                    "line": 231,
                    "column": 20
                }
            },
            "33": {
                "start": {
                    "line": 250,
                    "column": 8
                },
                "end": {
                    "line": 251,
                    "column": 54
                }
            },
            "34": {
                "start": {
                    "line": 263,
                    "column": 8
                },
                "end": {
                    "line": 267,
                    "column": 11
                }
            },
            "35": {
                "start": {
                    "line": 264,
                    "column": 12
                },
                "end": {
                    "line": 266,
                    "column": 13
                }
            },
            "36": {
                "start": {
                    "line": 265,
                    "column": 16
                },
                "end": {
                    "line": 265,
                    "column": 32
                }
            },
            "37": {
                "start": {
                    "line": 269,
                    "column": 8
                },
                "end": {
                    "line": 269,
                    "column": 38
                }
            },
            "38": {
                "start": {
                    "line": 270,
                    "column": 8
                },
                "end": {
                    "line": 270,
                    "column": 20
                }
            },
            "39": {
                "start": {
                    "line": 281,
                    "column": 8
                },
                "end": {
                    "line": 281,
                    "column": 46
                }
            },
            "40": {
                "start": {
                    "line": 282,
                    "column": 8
                },
                "end": {
                    "line": 282,
                    "column": 40
                }
            },
            "41": {
                "start": {
                    "line": 283,
                    "column": 8
                },
                "end": {
                    "line": 283,
                    "column": 20
                }
            },
            "42": {
                "start": {
                    "line": 308,
                    "column": 8
                },
                "end": {
                    "line": 308,
                    "column": 20
                }
            },
            "43": {
                "start": {
                    "line": 320,
                    "column": 8
                },
                "end": {
                    "line": 320,
                    "column": 46
                }
            },
            "44": {
                "start": {
                    "line": 321,
                    "column": 8
                },
                "end": {
                    "line": 321,
                    "column": 44
                }
            },
            "45": {
                "start": {
                    "line": 338,
                    "column": 8
                },
                "end": {
                    "line": 351,
                    "column": 9
                }
            },
            "46": {
                "start": {
                    "line": 339,
                    "column": 12
                },
                "end": {
                    "line": 350,
                    "column": 13
                }
            },
            "47": {
                "start": {
                    "line": 342,
                    "column": 16
                },
                "end": {
                    "line": 342,
                    "column": 40
                }
            },
            "48": {
                "start": {
                    "line": 343,
                    "column": 16
                },
                "end": {
                    "line": 343,
                    "column": 36
                }
            },
            "49": {
                "start": {
                    "line": 348,
                    "column": 16
                },
                "end": {
                    "line": 348,
                    "column": 56
                }
            },
            "50": {
                "start": {
                    "line": 349,
                    "column": 16
                },
                "end": {
                    "line": 349,
                    "column": 46
                }
            },
            "51": {
                "start": {
                    "line": 353,
                    "column": 8
                },
                "end": {
                    "line": 353,
                    "column": 21
                }
            },
            "52": {
                "start": {
                    "line": 371,
                    "column": 8
                },
                "end": {
                    "line": 371,
                    "column": 39
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 129,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 129,
                            "column": 8
                        },
                        "end": {
                            "line": 129,
                            "column": 14
                        }
                    },
                    {
                        "start": {
                            "line": 129,
                            "column": 19
                        },
                        "end": {
                            "line": 129,
                            "column": 30
                        }
                    }
                ]
            },
            "2": {
                "line": 132,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 132,
                            "column": 8
                        },
                        "end": {
                            "line": 132,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 133,
                            "column": 13
                        },
                        "end": {
                            "line": 133,
                            "column": 62
                        }
                    }
                ]
            },
            "3": {
                "line": 135,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 135,
                            "column": 8
                        },
                        "end": {
                            "line": 135,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 135,
                            "column": 28
                        },
                        "end": {
                            "line": 135,
                            "column": 59
                        }
                    }
                ]
            },
            "4": {
                "line": 138,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 138,
                            "column": 38
                        },
                        "end": {
                            "line": 138,
                            "column": 73
                        }
                    },
                    {
                        "start": {
                            "line": 139,
                            "column": 12
                        },
                        "end": {
                            "line": 139,
                            "column": 23
                        }
                    }
                ]
            },
            "5": {
                "line": 163,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 163,
                            "column": 8
                        },
                        "end": {
                            "line": 163,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 163,
                            "column": 8
                        },
                        "end": {
                            "line": 163,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 163,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 163,
                            "column": 12
                        },
                        "end": {
                            "line": 163,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 163,
                            "column": 24
                        },
                        "end": {
                            "line": 163,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 163,
                            "column": 42
                        },
                        "end": {
                            "line": 163,
                            "column": 59
                        }
                    }
                ]
            },
            "7": {
                "line": 204,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 204,
                            "column": 8
                        },
                        "end": {
                            "line": 204,
                            "column": 14
                        }
                    },
                    {
                        "start": {
                            "line": 204,
                            "column": 19
                        },
                        "end": {
                            "line": 204,
                            "column": 39
                        }
                    }
                ]
            },
            "8": {
                "line": 207,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 207,
                            "column": 12
                        },
                        "end": {
                            "line": 207,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 207,
                            "column": 12
                        },
                        "end": {
                            "line": 207,
                            "column": 12
                        }
                    }
                ]
            },
            "9": {
                "line": 212,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 212,
                            "column": 16
                        },
                        "end": {
                            "line": 212,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 212,
                            "column": 16
                        },
                        "end": {
                            "line": 212,
                            "column": 16
                        }
                    }
                ]
            },
            "10": {
                "line": 218,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 218,
                            "column": 16
                        },
                        "end": {
                            "line": 218,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 218,
                            "column": 16
                        },
                        "end": {
                            "line": 218,
                            "column": 16
                        }
                    }
                ]
            },
            "11": {
                "line": 222,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 222,
                            "column": 16
                        },
                        "end": {
                            "line": 222,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 222,
                            "column": 16
                        },
                        "end": {
                            "line": 222,
                            "column": 16
                        }
                    }
                ]
            },
            "12": {
                "line": 250,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 250,
                            "column": 27
                        },
                        "end": {
                            "line": 250,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 251,
                            "column": 16
                        },
                        "end": {
                            "line": 251,
                            "column": 53
                        }
                    }
                ]
            },
            "13": {
                "line": 264,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 264,
                            "column": 12
                        },
                        "end": {
                            "line": 264,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 264,
                            "column": 12
                        },
                        "end": {
                            "line": 264,
                            "column": 12
                        }
                    }
                ]
            },
            "14": {
                "line": 282,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 282,
                            "column": 8
                        },
                        "end": {
                            "line": 282,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 282,
                            "column": 21
                        },
                        "end": {
                            "line": 282,
                            "column": 39
                        }
                    }
                ]
            },
            "15": {
                "line": 321,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 321,
                            "column": 8
                        },
                        "end": {
                            "line": 321,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 321,
                            "column": 21
                        },
                        "end": {
                            "line": 321,
                            "column": 43
                        }
                    }
                ]
            },
            "16": {
                "line": 338,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 338,
                            "column": 8
                        },
                        "end": {
                            "line": 338,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 338,
                            "column": 8
                        },
                        "end": {
                            "line": 338,
                            "column": 8
                        }
                    }
                ]
            },
            "17": {
                "line": 339,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 339,
                            "column": 12
                        },
                        "end": {
                            "line": 339,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 339,
                            "column": 12
                        },
                        "end": {
                            "line": 339,
                            "column": 12
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('view', function (Y, NAME) {",
            "",
            "/**",
            "Represents a logical piece of an application's user interface, and provides a",
            "lightweight, overridable API for rendering content and handling delegated DOM",
            "events on a container element.",
            "",
            "@module app",
            "@submodule view",
            "@since 3.4.0",
            "**/",
            "",
            "/**",
            "Represents a logical piece of an application's user interface, and provides a",
            "lightweight, overridable API for rendering content and handling delegated DOM",
            "events on a container element.",
            "",
            "The View class imposes little structure and provides only minimal functionality",
            "of its own: it's basically just an overridable API interface that helps you",
            "implement custom views.",
            "",
            "As of YUI 3.5.0, View allows ad-hoc attributes to be specified at instantiation",
            "time, so you don't need to subclass `Y.View` to add custom attributes. Just pass",
            "them to the constructor:",
            "",
            "    var view = new Y.View({foo: 'bar'});",
            "    view.get('foo'); // => \"bar\"",
            "",
            "@class View",
            "@constructor",
            "@extends Base",
            "@since 3.4.0",
            "**/",
            "",
            "function View() {",
            "    View.superclass.constructor.apply(this, arguments);",
            "}",
            "",
            "Y.View = Y.extend(View, Y.Base, {",
            "    // -- Public Properties ----------------------------------------------------",
            "",
            "    /**",
            "    Template for this view's container.",
            "",
            "    @property containerTemplate",
            "    @type String",
            "    @default \"<div/>\"",
            "    @since 3.5.0",
            "    **/",
            "    containerTemplate: '<div/>',",
            "",
            "    /**",
            "    Hash of CSS selectors mapped to events to delegate to elements matching",
            "    those selectors.",
            "",
            "    CSS selectors are relative to the `container` element. Events are attached",
            "    to the container, and delegation is used so that subscribers are only",
            "    notified of events that occur on elements inside the container that match",
            "    the specified selectors. This allows the container's contents to be re-",
            "    rendered as needed without losing event subscriptions.",
            "",
            "    Event handlers can be specified either as functions or as strings that map",
            "    to function names on this view instance or its prototype.",
            "",
            "    The `this` object in event handlers will refer to this view instance. If",
            "    you'd prefer `this` to be something else, use `Y.bind()` to bind a custom",
            "    `this` object.",
            "",
            "    @example",
            "",
            "        var view = new Y.View({",
            "            events: {",
            "                // Call `this.toggle()` whenever the element with the id",
            "                // \"toggle-button\" is clicked.",
            "                '#toggle-button': {click: 'toggle'},",
            "",
            "                // Call `this.hoverOn()` when the mouse moves over any element",
            "                // with the \"hoverable\" class, and `this.hoverOff()` when the",
            "                // mouse moves out of any element with the \"hoverable\" class.",
            "                '.hoverable': {",
            "                    mouseover: 'hoverOn',",
            "                    mouseout : 'hoverOff'",
            "                }",
            "            }",
            "        });",
            "",
            "    @property events",
            "    @type Object",
            "    @default {}",
            "    **/",
            "    events: {},",
            "",
            "    /**",
            "    Template for this view's contents.",
            "",
            "    This is a convenience property that has no default behavior of its own.",
            "    It's only provided as a convention to allow you to store whatever you",
            "    consider to be a template, whether that's an HTML string, a `Y.Node`",
            "    instance, a Mustache template, or anything else your little heart",
            "    desires.",
            "",
            "    How this template gets used is entirely up to you and your custom",
            "    `render()` method.",
            "",
            "    @property template",
            "    @type mixed",
            "    @default ''",
            "    **/",
            "    template: '',",
            "",
            "    // -- Protected Properties -------------------------------------------------",
            "",
            "    /**",
            "    This tells `Y.Base` that it should create ad-hoc attributes for config",
            "    properties passed to View's constructor. This makes it possible to",
            "    instantiate a view and set a bunch of attributes without having to subclass",
            "    `Y.View` and declare all those attributes first.",
            "",
            "    @property _allowAdHocAttrs",
            "    @type Boolean",
            "    @default true",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _allowAdHocAttrs: true,",
            "",
            "    // -- Lifecycle Methods ----------------------------------------------------",
            "    initializer: function (config) {",
            "        config || (config = {});",
            "",
            "        // Set instance properties specified in the config.",
            "        config.containerTemplate &&",
            "            (this.containerTemplate = config.containerTemplate);",
            "",
            "        config.template && (this.template = config.template);",
            "",
            "        // Merge events from the config into events in `this.events`.",
            "        this.events = config.events ? Y.merge(this.events, config.events) :",
            "            this.events;",
            "",
            "        // When the container node changes (or when it's set for the first",
            "        // time), we'll attach events to it, but not until then. This allows the",
            "        // container to be created lazily the first time it's accessed rather",
            "        // than always on init.",
            "        this.after('containerChange', this._afterContainerChange);",
            "    },",
            "",
            "    /**",
            "    Destroys this View, detaching any DOM events and optionally also destroying",
            "    its container node.",
            "",
            "    By default, the container node will not be destroyed. Pass an _options_",
            "    object with a truthy `remove` property to destroy the container as well.",
            "",
            "    @method destroy",
            "    @param {Object} [options] Options.",
            "        @param {Boolean} [options.remove=false] If `true`, this View's container",
            "            will be removed from the DOM and destroyed as well.",
            "    @chainable",
            "    */",
            "    destroy: function (options) {",
            "        // We also accept `delete` as a synonym for `remove`.",
            "        if (options && (options.remove || options['delete'])) {",
            "            // Attaching an event handler here because the `destroy` event is",
            "            // preventable. If we destroyed the container before calling the",
            "            // superclass's `destroy()` method and the event was prevented, the",
            "            // class would end up in a broken state.",
            "            this.onceAfter('destroy', function () {",
            "                this._destroyContainer();",
            "            });",
            "        }",
            "",
            "        return View.superclass.destroy.call(this);",
            "    },",
            "",
            "    destructor: function () {",
            "        this.detachEvents();",
            "        delete this._container;",
            "    },",
            "",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Attaches delegated event handlers to this view's container element. This",
            "    method is called internally to subscribe to events configured in the",
            "    `events` attribute when the view is initialized.",
            "",
            "    You may override this method to customize the event attaching logic.",
            "",
            "    @method attachEvents",
            "    @param {Object} [events] Hash of events to attach. See the docs for the",
            "        `events` attribute for details on the format. If not specified, this",
            "        view's `events` property will be used.",
            "    @chainable",
            "    @see detachEvents",
            "    **/",
            "    attachEvents: function (events) {",
            "        var container = this.get('container'),",
            "            owns      = Y.Object.owns,",
            "            handler, handlers, name, selector;",
            "",
            "        this.detachEvents();",
            "",
            "        events || (events = this.events);",
            "",
            "        for (selector in events) {",
            "            if (!owns(events, selector)) { continue; }",
            "",
            "            handlers = events[selector];",
            "",
            "            for (name in handlers) {",
            "                if (!owns(handlers, name)) { continue; }",
            "",
            "                handler = handlers[name];",
            "",
            "                // TODO: Make this more robust by using lazy-binding:",
            "                // `handler = Y.bind(handler, this);`",
            "                if (typeof handler === 'string') {",
            "                    handler = this[handler];",
            "                }",
            "",
            "                if (!handler) {",
            "                    continue;",
            "                }",
            "",
            "                this._attachedViewEvents.push(",
            "                    container.delegate(name, handler, selector, this));",
            "            }",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Creates and returns a container node for this view.",
            "",
            "    By default, the container is created from the HTML template specified in the",
            "    `containerTemplate` property, and is _not_ added to the DOM automatically.",
            "",
            "    You may override this method to customize how the container node is created",
            "    (such as by rendering it from a custom template format). Your method must",
            "    return a `Y.Node` instance.",
            "",
            "    @method create",
            "    @param {HTMLElement|Node|String} [container] Selector string, `Y.Node`",
            "        instance, or DOM element to use at the container node.",
            "    @return {Node} Node instance of the created container node.",
            "    **/",
            "    create: function (container) {",
            "        return container ? Y.one(container) :",
            "                Y.Node.create(this.containerTemplate);",
            "    },",
            "",
            "    /**",
            "    Detaches DOM events that have previously been attached to the container by",
            "    `attachEvents()`.",
            "",
            "    @method detachEvents",
            "    @chainable",
            "    @see attachEvents",
            "    **/",
            "    detachEvents: function () {",
            "        Y.Array.each(this._attachedViewEvents, function (handle) {",
            "            if (handle) {",
            "                handle.detach();",
            "            }",
            "        });",
            "",
            "        this._attachedViewEvents = [];",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Removes this view's container element from the DOM (if it's in the DOM),",
            "    but doesn't destroy it or any event listeners attached to it.",
            "",
            "    @method remove",
            "    @chainable",
            "    **/",
            "    remove: function () {",
            "        var container = this.get('container');",
            "        container && container.remove();",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Renders this view.",
            "",
            "    This method is a noop by default. Override it to provide a custom",
            "    implementation that renders this view's content and appends it to the",
            "    container element. Ideally your `render` method should also return `this` as",
            "    the end to allow chaining, but that's up to you.",
            "",
            "    Since there's no default renderer, you're free to render your view however",
            "    you see fit, whether that means manipulating the DOM directly, dumping",
            "    strings into `innerHTML`, or using a template language of some kind.",
            "",
            "    For basic templating needs, `Y.Node.create()` and `Y.Lang.sub()` may",
            "    suffice, but there are no restrictions on what tools or techniques you can",
            "    use to render your view. All you need to do is append something to the",
            "    container element at some point, and optionally append the container",
            "    to the DOM if it's not there already.",
            "",
            "    @method render",
            "    @chainable",
            "    **/",
            "    render: function () {",
            "        return this;",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Removes the `container` from the DOM and purges all its event listeners.",
            "",
            "    @method _destroyContainer",
            "    @protected",
            "    **/",
            "    _destroyContainer: function () {",
            "        var container = this.get('container');",
            "        container && container.remove(true);",
            "    },",
            "",
            "    /**",
            "    Getter for the `container` attribute.",
            "",
            "    @method _getContainer",
            "    @param {Node|null} value Current attribute value.",
            "    @return {Node} Container node.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _getContainer: function (value) {",
            "        // This wackiness is necessary to enable fully lazy creation of the",
            "        // container node both when no container is specified and when one is",
            "        // specified via a valueFn.",
            "",
            "        if (!this._container) {",
            "            if (value) {",
            "                // Attach events to the container when it's specified via a",
            "                // valueFn, which won't fire the containerChange event.",
            "                this._container = value;",
            "                this.attachEvents();",
            "            } else {",
            "                // Create a default container and set that as the new attribute",
            "                // value. The `this._container` property prevents infinite",
            "                // recursion.",
            "                value = this._container = this.create();",
            "                this._set('container', value);",
            "            }",
            "        }",
            "",
            "        return value;",
            "    },",
            "",
            "    // -- Protected Event Handlers ---------------------------------------------",
            "",
            "    /**",
            "    Handles `containerChange` events. Detaches event handlers from the old",
            "    container (if any) and attaches them to the new container.",
            "",
            "    Right now the `container` attr is initOnly so this event should only ever",
            "    fire the first time the container is created, but in the future (once Y.App",
            "    can handle it) we may allow runtime container changes.",
            "",
            "    @method _afterContainerChange",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _afterContainerChange: function () {",
            "        this.attachEvents(this.events);",
            "    }",
            "}, {",
            "    NAME: 'view',",
            "",
            "    ATTRS: {",
            "        /**",
            "        Container node into which this view's content will be rendered.",
            "",
            "        The container node serves as the host for all DOM events attached by the",
            "        view. Delegation is used to handle events on children of the container,",
            "        allowing the container's contents to be re-rendered at any time without",
            "        losing event subscriptions.",
            "",
            "        The default container is a `<div>` Node, but you can override this in",
            "        a subclass, or by passing in a custom `container` config value at",
            "        instantiation time. If you override the default container in a subclass",
            "        using `ATTRS`, you must use the `valueFn` property. The view's constructor",
            "        will ignore any assignments using `value`.",
            "",
            "        When `container` is overridden by a subclass or passed as a config",
            "        option at instantiation time, you can provide it as a selector string, a",
            "        DOM element, a `Y.Node` instance, or (if you are subclassing and modifying",
            "        the attribute), a `valueFn` function that returns a `Y.Node` instance.",
            "        The value will be converted into a `Y.Node` instance if it isn't one",
            "        already.",
            "",
            "        The container is not added to the page automatically. This allows you to",
            "        have full control over how and when your view is actually rendered to",
            "        the page.",
            "",
            "        @attribute container",
            "        @type HTMLElement|Node|String",
            "        @default Y.Node.create(this.containerTemplate)",
            "        @writeOnce",
            "        **/",
            "        container: {",
            "            getter   : '_getContainer',",
            "            setter   : Y.one,",
            "            writeOnce: true",
            "        }",
            "    },",
            "",
            "    /**",
            "    Properties that shouldn't be turned into ad-hoc attributes when passed to",
            "    View's constructor.",
            "",
            "    @property _NON_ATTRS_CFG",
            "    @type Array",
            "    @static",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _NON_ATTRS_CFG: [",
            "        'containerTemplate',",
            "        'events',",
            "        'template'",
            "    ]",
            "});",
            "",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"base-build\", \"node-event-delegate\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "35": 1,
            "36": 209,
            "39": 1,
            "129": 209,
            "132": 209,
            "135": 209,
            "138": 209,
            "145": 209,
            "163": 133,
            "168": 43,
            "169": 43,
            "173": 133,
            "177": 131,
            "178": 131,
            "198": 131,
            "202": 131,
            "204": 131,
            "206": 131,
            "207": 1,
            "209": 1,
            "211": 1,
            "212": 1,
            "214": 1,
            "218": 1,
            "219": 1,
            "222": 1,
            "223": 1,
            "226": 0,
            "231": 131,
            "250": 110,
            "263": 279,
            "264": 0,
            "265": 0,
            "269": 279,
            "270": 279,
            "281": 4,
            "282": 4,
            "283": 4,
            "308": 9,
            "320": 25,
            "321": 25,
            "338": 372,
            "339": 132,
            "342": 83,
            "343": 83,
            "348": 49,
            "349": 49,
            "353": 372,
            "371": 49
        }
    },
    "build/app-base/app-base.js": {
        "path": "build/app-base/app-base.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 102,
            "5": 102,
            "6": 102,
            "7": 42,
            "8": 102,
            "9": 102,
            "10": 102,
            "11": 102,
            "12": 102,
            "13": 102,
            "14": 95,
            "15": 49,
            "16": 49,
            "17": 49,
            "18": 49,
            "19": 49,
            "20": 519,
            "21": 132,
            "22": 387,
            "23": 9,
            "24": 9,
            "25": 9,
            "26": 9,
            "27": 1,
            "28": 9,
            "29": 5,
            "30": 9,
            "31": 71,
            "32": 71,
            "33": 71,
            "34": 3,
            "35": 68,
            "36": 5,
            "37": 71,
            "38": 36,
            "39": 36,
            "40": 7,
            "41": 7,
            "42": 29,
            "43": 29,
            "44": 71,
            "45": 1,
            "46": 71,
            "47": 24,
            "48": 4,
            "49": 47,
            "50": 9,
            "51": 71,
            "52": 66,
            "53": 3,
            "54": 63,
            "55": 63,
            "56": 63,
            "57": 24,
            "58": 63,
            "59": 18,
            "60": 18,
            "61": 17,
            "62": 17,
            "63": 17,
            "64": 2,
            "65": 15,
            "66": 17,
            "67": 1,
            "68": 1,
            "69": 1,
            "70": 66,
            "71": 42,
            "72": 24,
            "73": 24,
            "74": 3,
            "75": 21,
            "76": 21,
            "77": 21,
            "78": 3,
            "79": 24,
            "80": 122,
            "81": 58,
            "82": 58,
            "83": 122,
            "84": 100,
            "85": 4,
            "86": 96,
            "87": 76,
            "88": 76,
            "89": 7,
            "90": 69,
            "91": 76,
            "92": 76,
            "93": 7,
            "94": 69,
            "95": 15,
            "96": 13,
            "97": 15,
            "98": 8,
            "99": 8,
            "100": 1,
            "101": 1,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 7,
            "110": 70,
            "111": 70,
            "112": 70,
            "113": 4,
            "114": 66,
            "115": 66,
            "116": 66,
            "117": 8,
            "118": 70,
            "119": 96,
            "120": 88,
            "121": 1,
            "122": 1,
            "123": 1
        },
        "b": {
            "1": [
                102,
                47
            ],
            "2": [
                95,
                7
            ],
            "3": [
                49,
                35,
                28
            ],
            "4": [
                6,
                43
            ],
            "5": [
                132,
                387
            ],
            "6": [
                387,
                291
            ],
            "7": [
                9,
                1
            ],
            "8": [
                1,
                8
            ],
            "9": [
                9,
                1
            ],
            "10": [
                5,
                4
            ],
            "11": [
                9,
                5
            ],
            "12": [
                71,
                37
            ],
            "13": [
                3,
                68
            ],
            "14": [
                5,
                63
            ],
            "15": [
                36,
                35
            ],
            "16": [
                7,
                29
            ],
            "17": [
                36,
                24,
                8
            ],
            "18": [
                1,
                70
            ],
            "19": [
                71,
                1
            ],
            "20": [
                24,
                47
            ],
            "21": [
                4,
                20
            ],
            "22": [
                9,
                38
            ],
            "23": [
                3,
                63
            ],
            "24": [
                24,
                39
            ],
            "25": [
                1,
                62
            ],
            "26": [
                17,
                1
            ],
            "27": [
                2,
                15
            ],
            "28": [
                1,
                0
            ],
            "29": [
                42,
                24
            ],
            "30": [
                24,
                17
            ],
            "31": [
                3,
                21
            ],
            "32": [
                3,
                18
            ],
            "33": [
                58,
                64
            ],
            "34": [
                122,
                59
            ],
            "35": [
                4,
                96
            ],
            "36": [
                7,
                69
            ],
            "37": [
                76,
                30
            ],
            "38": [
                7,
                69
            ],
            "39": [
                76,
                30
            ],
            "40": [
                13,
                2
            ],
            "41": [
                1,
                7
            ],
            "42": [
                8,
                1
            ],
            "43": [
                1,
                0
            ],
            "44": [
                0,
                0
            ],
            "45": [
                0,
                0
            ],
            "46": [
                0,
                0
            ],
            "47": [
                70,
                0
            ],
            "48": [
                70,
                70
            ],
            "49": [
                70,
                69
            ],
            "50": [
                4,
                66
            ],
            "51": [
                4,
                1
            ],
            "52": [
                8,
                58
            ]
        },
        "f": {
            "1": 1,
            "2": 102,
            "3": 42,
            "4": 49,
            "5": 519,
            "6": 9,
            "7": 71,
            "8": 66,
            "9": 18,
            "10": 66,
            "11": 122,
            "12": 100,
            "13": 76,
            "14": 76,
            "15": 15,
            "16": 8,
            "17": 70,
            "18": 70,
            "19": 96,
            "20": 88
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 20
                    },
                    "end": {
                        "line": 1,
                        "column": 39
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 150,
                "loc": {
                    "start": {
                        "line": 150,
                        "column": 17
                    },
                    "end": {
                        "line": 150,
                        "column": 35
                    }
                }
            },
            "3": {
                "name": "mergeViewConfig",
                "line": 156,
                "loc": {
                    "start": {
                        "line": 156,
                        "column": 8
                    },
                    "end": {
                        "line": 156,
                        "column": 45
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 201,
                "loc": {
                    "start": {
                        "line": 201,
                        "column": 16
                    },
                    "end": {
                        "line": 201,
                        "column": 40
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 228,
                "loc": {
                    "start": {
                        "line": 228,
                        "column": 17
                    },
                    "end": {
                        "line": 228,
                        "column": 33
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 285,
                "loc": {
                    "start": {
                        "line": 285,
                        "column": 12
                    },
                    "end": {
                        "line": 285,
                        "column": 24
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 375,
                "loc": {
                    "start": {
                        "line": 375,
                        "column": 14
                    },
                    "end": {
                        "line": 375,
                        "column": 57
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 448,
                "loc": {
                    "start": {
                        "line": 448,
                        "column": 17
                    },
                    "end": {
                        "line": 448,
                        "column": 42
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 482,
                "loc": {
                    "start": {
                        "line": 482,
                        "column": 23
                    },
                    "end": {
                        "line": 482,
                        "column": 35
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 527,
                "loc": {
                    "start": {
                        "line": 527,
                        "column": 17
                    },
                    "end": {
                        "line": 527,
                        "column": 33
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 566,
                "loc": {
                    "start": {
                        "line": 566,
                        "column": 23
                    },
                    "end": {
                        "line": 566,
                        "column": 40
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 597,
                "loc": {
                    "start": {
                        "line": 597,
                        "column": 16
                    },
                    "end": {
                        "line": 597,
                        "column": 28
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 623,
                "loc": {
                    "start": {
                        "line": 623,
                        "column": 18
                    },
                    "end": {
                        "line": 623,
                        "column": 42
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 649,
                "loc": {
                    "start": {
                        "line": 649,
                        "column": 19
                    },
                    "end": {
                        "line": 649,
                        "column": 42
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 679,
                "loc": {
                    "start": {
                        "line": 679,
                        "column": 15
                    },
                    "end": {
                        "line": 679,
                        "column": 39
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 712,
                "loc": {
                    "start": {
                        "line": 712,
                        "column": 11
                    },
                    "end": {
                        "line": 712,
                        "column": 35
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 779,
                "loc": {
                    "start": {
                        "line": 779,
                        "column": 22
                    },
                    "end": {
                        "line": 779,
                        "column": 59
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 816,
                "loc": {
                    "start": {
                        "line": 816,
                        "column": 28
                    },
                    "end": {
                        "line": 816,
                        "column": 41
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 869,
                "loc": {
                    "start": {
                        "line": 869,
                        "column": 21
                    },
                    "end": {
                        "line": 869,
                        "column": 33
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 985,
                "loc": {
                    "start": {
                        "line": 985,
                        "column": 23
                    },
                    "end": {
                        "line": 985,
                        "column": 35
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 1098,
                    "column": 83
                }
            },
            "2": {
                "start": {
                    "line": 40,
                    "column": 0
                },
                "end": {
                    "line": 51,
                    "column": 12
                }
            },
            "3": {
                "start": {
                    "line": 75,
                    "column": 0
                },
                "end": {
                    "line": 1033,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 151,
                    "column": 8
                },
                "end": {
                    "line": 151,
                    "column": 32
                }
            },
            "5": {
                "start": {
                    "line": 153,
                    "column": 8
                },
                "end": {
                    "line": 153,
                    "column": 23
                }
            },
            "6": {
                "start": {
                    "line": 156,
                    "column": 8
                },
                "end": {
                    "line": 158,
                    "column": 9
                }
            },
            "7": {
                "start": {
                    "line": 157,
                    "column": 12
                },
                "end": {
                    "line": 157,
                    "column": 53
                }
            },
            "8": {
                "start": {
                    "line": 162,
                    "column": 8
                },
                "end": {
                    "line": 162,
                    "column": 50
                }
            },
            "9": {
                "start": {
                    "line": 166,
                    "column": 8
                },
                "end": {
                    "line": 166,
                    "column": 52
                }
            },
            "10": {
                "start": {
                    "line": 170,
                    "column": 8
                },
                "end": {
                    "line": 170,
                    "column": 34
                }
            },
            "11": {
                "start": {
                    "line": 171,
                    "column": 8
                },
                "end": {
                    "line": 171,
                    "column": 31
                }
            },
            "12": {
                "start": {
                    "line": 174,
                    "column": 8
                },
                "end": {
                    "line": 174,
                    "column": 79
                }
            },
            "13": {
                "start": {
                    "line": 178,
                    "column": 8
                },
                "end": {
                    "line": 180,
                    "column": 9
                }
            },
            "14": {
                "start": {
                    "line": 179,
                    "column": 12
                },
                "end": {
                    "line": 179,
                    "column": 31
                }
            },
            "15": {
                "start": {
                    "line": 202,
                    "column": 8
                },
                "end": {
                    "line": 204,
                    "column": 34
                }
            },
            "16": {
                "start": {
                    "line": 207,
                    "column": 8
                },
                "end": {
                    "line": 208,
                    "column": 60
                }
            },
            "17": {
                "start": {
                    "line": 211,
                    "column": 8
                },
                "end": {
                    "line": 211,
                    "column": 43
                }
            },
            "18": {
                "start": {
                    "line": 212,
                    "column": 8
                },
                "end": {
                    "line": 212,
                    "column": 58
                }
            },
            "19": {
                "start": {
                    "line": 214,
                    "column": 8
                },
                "end": {
                    "line": 214,
                    "column": 20
                }
            },
            "20": {
                "start": {
                    "line": 229,
                    "column": 8
                },
                "end": {
                    "line": 231,
                    "column": 9
                }
            },
            "21": {
                "start": {
                    "line": 230,
                    "column": 12
                },
                "end": {
                    "line": 230,
                    "column": 36
                }
            },
            "22": {
                "start": {
                    "line": 233,
                    "column": 8
                },
                "end": {
                    "line": 233,
                    "column": 62
                }
            },
            "23": {
                "start": {
                    "line": 286,
                    "column": 8
                },
                "end": {
                    "line": 291,
                    "column": 69
                }
            },
            "24": {
                "start": {
                    "line": 293,
                    "column": 8
                },
                "end": {
                    "line": 293,
                    "column": 44
                }
            },
            "25": {
                "start": {
                    "line": 294,
                    "column": 8
                },
                "end": {
                    "line": 294,
                    "column": 50
                }
            },
            "26": {
                "start": {
                    "line": 297,
                    "column": 8
                },
                "end": {
                    "line": 299,
                    "column": 9
                }
            },
            "27": {
                "start": {
                    "line": 298,
                    "column": 12
                },
                "end": {
                    "line": 298,
                    "column": 59
                }
            },
            "28": {
                "start": {
                    "line": 302,
                    "column": 8
                },
                "end": {
                    "line": 304,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 303,
                    "column": 12
                },
                "end": {
                    "line": 303,
                    "column": 49
                }
            },
            "30": {
                "start": {
                    "line": 306,
                    "column": 8
                },
                "end": {
                    "line": 306,
                    "column": 20
                }
            },
            "31": {
                "start": {
                    "line": 376,
                    "column": 8
                },
                "end": {
                    "line": 376,
                    "column": 30
                }
            },
            "32": {
                "start": {
                    "line": 378,
                    "column": 8
                },
                "end": {
                    "line": 378,
                    "column": 34
                }
            },
            "33": {
                "start": {
                    "line": 381,
                    "column": 8
                },
                "end": {
                    "line": 385,
                    "column": 9
                }
            },
            "34": {
                "start": {
                    "line": 382,
                    "column": 12
                },
                "end": {
                    "line": 382,
                    "column": 61
                }
            },
            "35": {
                "start": {
                    "line": 383,
                    "column": 15
                },
                "end": {
                    "line": 385,
                    "column": 9
                }
            },
            "36": {
                "start": {
                    "line": 384,
                    "column": 12
                },
                "end": {
                    "line": 384,
                    "column": 42
                }
            },
            "37": {
                "start": {
                    "line": 387,
                    "column": 8
                },
                "end": {
                    "line": 409,
                    "column": 9
                }
            },
            "38": {
                "start": {
                    "line": 388,
                    "column": 12
                },
                "end": {
                    "line": 388,
                    "column": 46
                }
            },
            "39": {
                "start": {
                    "line": 394,
                    "column": 12
                },
                "end": {
                    "line": 408,
                    "column": 13
                }
            },
            "40": {
                "start": {
                    "line": 395,
                    "column": 16
                },
                "end": {
                    "line": 395,
                    "column": 41
                }
            },
            "41": {
                "start": {
                    "line": 398,
                    "column": 16
                },
                "end": {
                    "line": 398,
                    "column": 66
                }
            },
            "42": {
                "start": {
                    "line": 406,
                    "column": 16
                },
                "end": {
                    "line": 406,
                    "column": 56
                }
            },
            "43": {
                "start": {
                    "line": 407,
                    "column": 16
                },
                "end": {
                    "line": 407,
                    "column": 31
                }
            },
            "44": {
                "start": {
                    "line": 413,
                    "column": 8
                },
                "end": {
                    "line": 415,
                    "column": 9
                }
            },
            "45": {
                "start": {
                    "line": 414,
                    "column": 12
                },
                "end": {
                    "line": 414,
                    "column": 34
                }
            },
            "46": {
                "start": {
                    "line": 423,
                    "column": 8
                },
                "end": {
                    "line": 429,
                    "column": 9
                }
            },
            "47": {
                "start": {
                    "line": 424,
                    "column": 12
                },
                "end": {
                    "line": 426,
                    "column": 13
                }
            },
            "48": {
                "start": {
                    "line": 425,
                    "column": 16
                },
                "end": {
                    "line": 425,
                    "column": 30
                }
            },
            "49": {
                "start": {
                    "line": 427,
                    "column": 15
                },
                "end": {
                    "line": 429,
                    "column": 9
                }
            },
            "50": {
                "start": {
                    "line": 428,
                    "column": 12
                },
                "end": {
                    "line": 428,
                    "column": 26
                }
            },
            "51": {
                "start": {
                    "line": 431,
                    "column": 8
                },
                "end": {
                    "line": 431,
                    "column": 65
                }
            },
            "52": {
                "start": {
                    "line": 449,
                    "column": 8
                },
                "end": {
                    "line": 451,
                    "column": 9
                }
            },
            "53": {
                "start": {
                    "line": 450,
                    "column": 12
                },
                "end": {
                    "line": 450,
                    "column": 19
                }
            },
            "54": {
                "start": {
                    "line": 453,
                    "column": 8
                },
                "end": {
                    "line": 454,
                    "column": 54
                }
            },
            "55": {
                "start": {
                    "line": 457,
                    "column": 8
                },
                "end": {
                    "line": 457,
                    "column": 29
                }
            },
            "56": {
                "start": {
                    "line": 460,
                    "column": 8
                },
                "end": {
                    "line": 462,
                    "column": 9
                }
            },
            "57": {
                "start": {
                    "line": 461,
                    "column": 12
                },
                "end": {
                    "line": 461,
                    "column": 37
                }
            },
            "58": {
                "start": {
                    "line": 471,
                    "column": 8
                },
                "end": {
                    "line": 471,
                    "column": 77
                }
            },
            "59": {
                "start": {
                    "line": 483,
                    "column": 8
                },
                "end": {
                    "line": 486,
                    "column": 63
                }
            },
            "60": {
                "start": {
                    "line": 489,
                    "column": 8
                },
                "end": {
                    "line": 505,
                    "column": 9
                }
            },
            "61": {
                "start": {
                    "line": 491,
                    "column": 12
                },
                "end": {
                    "line": 491,
                    "column": 32
                }
            },
            "62": {
                "start": {
                    "line": 494,
                    "column": 12
                },
                "end": {
                    "line": 494,
                    "column": 51
                }
            },
            "63": {
                "start": {
                    "line": 496,
                    "column": 12
                },
                "end": {
                    "line": 502,
                    "column": 13
                }
            },
            "64": {
                "start": {
                    "line": 498,
                    "column": 16
                },
                "end": {
                    "line": 498,
                    "column": 57
                }
            },
            "65": {
                "start": {
                    "line": 501,
                    "column": 16
                },
                "end": {
                    "line": 501,
                    "column": 43
                }
            },
            "66": {
                "start": {
                    "line": 504,
                    "column": 12
                },
                "end": {
                    "line": 504,
                    "column": 19
                }
            },
            "67": {
                "start": {
                    "line": 509,
                    "column": 8
                },
                "end": {
                    "line": 509,
                    "column": 35
                }
            },
            "68": {
                "start": {
                    "line": 511,
                    "column": 8
                },
                "end": {
                    "line": 513,
                    "column": 9
                }
            },
            "69": {
                "start": {
                    "line": 512,
                    "column": 12
                },
                "end": {
                    "line": 512,
                    "column": 35
                }
            },
            "70": {
                "start": {
                    "line": 528,
                    "column": 8
                },
                "end": {
                    "line": 530,
                    "column": 9
                }
            },
            "71": {
                "start": {
                    "line": 529,
                    "column": 12
                },
                "end": {
                    "line": 529,
                    "column": 19
                }
            },
            "72": {
                "start": {
                    "line": 532,
                    "column": 8
                },
                "end": {
                    "line": 532,
                    "column": 52
                }
            },
            "73": {
                "start": {
                    "line": 534,
                    "column": 8
                },
                "end": {
                    "line": 552,
                    "column": 9
                }
            },
            "74": {
                "start": {
                    "line": 535,
                    "column": 12
                },
                "end": {
                    "line": 535,
                    "column": 26
                }
            },
            "75": {
                "start": {
                    "line": 540,
                    "column": 12
                },
                "end": {
                    "line": 540,
                    "column": 41
                }
            },
            "76": {
                "start": {
                    "line": 546,
                    "column": 12
                },
                "end": {
                    "line": 546,
                    "column": 58
                }
            },
            "77": {
                "start": {
                    "line": 549,
                    "column": 12
                },
                "end": {
                    "line": 551,
                    "column": 13
                }
            },
            "78": {
                "start": {
                    "line": 550,
                    "column": 16
                },
                "end": {
                    "line": 550,
                    "column": 41
                }
            },
            "79": {
                "start": {
                    "line": 554,
                    "column": 8
                },
                "end": {
                    "line": 554,
                    "column": 32
                }
            },
            "80": {
                "start": {
                    "line": 571,
                    "column": 8
                },
                "end": {
                    "line": 577,
                    "column": 9
                }
            },
            "81": {
                "start": {
                    "line": 575,
                    "column": 12
                },
                "end": {
                    "line": 575,
                    "column": 56
                }
            },
            "82": {
                "start": {
                    "line": 576,
                    "column": 12
                },
                "end": {
                    "line": 576,
                    "column": 46
                }
            },
            "83": {
                "start": {
                    "line": 579,
                    "column": 8
                },
                "end": {
                    "line": 579,
                    "column": 21
                }
            },
            "84": {
                "start": {
                    "line": 600,
                    "column": 8
                },
                "end": {
                    "line": 602,
                    "column": 9
                }
            },
            "85": {
                "start": {
                    "line": 601,
                    "column": 12
                },
                "end": {
                    "line": 601,
                    "column": 25
                }
            },
            "86": {
                "start": {
                    "line": 605,
                    "column": 8
                },
                "end": {
                    "line": 605,
                    "column": 28
                }
            },
            "87": {
                "start": {
                    "line": 624,
                    "column": 8
                },
                "end": {
                    "line": 625,
                    "column": 50
                }
            },
            "88": {
                "start": {
                    "line": 627,
                    "column": 8
                },
                "end": {
                    "line": 629,
                    "column": 9
                }
            },
            "89": {
                "start": {
                    "line": 628,
                    "column": 12
                },
                "end": {
                    "line": 628,
                    "column": 68
                }
            },
            "90": {
                "start": {
                    "line": 631,
                    "column": 8
                },
                "end": {
                    "line": 631,
                    "column": 21
                }
            },
            "91": {
                "start": {
                    "line": 650,
                    "column": 8
                },
                "end": {
                    "line": 651,
                    "column": 48
                }
            },
            "92": {
                "start": {
                    "line": 653,
                    "column": 8
                },
                "end": {
                    "line": 655,
                    "column": 9
                }
            },
            "93": {
                "start": {
                    "line": 654,
                    "column": 12
                },
                "end": {
                    "line": 654,
                    "column": 67
                }
            },
            "94": {
                "start": {
                    "line": 657,
                    "column": 8
                },
                "end": {
                    "line": 657,
                    "column": 21
                }
            },
            "95": {
                "start": {
                    "line": 680,
                    "column": 8
                },
                "end": {
                    "line": 685,
                    "column": 9
                }
            },
            "96": {
                "start": {
                    "line": 684,
                    "column": 12
                },
                "end": {
                    "line": 684,
                    "column": 54
                }
            },
            "97": {
                "start": {
                    "line": 687,
                    "column": 8
                },
                "end": {
                    "line": 687,
                    "column": 69
                }
            },
            "98": {
                "start": {
                    "line": 713,
                    "column": 8
                },
                "end": {
                    "line": 713,
                    "column": 17
                }
            },
            "99": {
                "start": {
                    "line": 717,
                    "column": 8
                },
                "end": {
                    "line": 738,
                    "column": 9
                }
            },
            "100": {
                "start": {
                    "line": 719,
                    "column": 12
                },
                "end": {
                    "line": 722,
                    "column": 13
                }
            },
            "101": {
                "start": {
                    "line": 720,
                    "column": 16
                },
                "end": {
                    "line": 720,
                    "column": 102
                }
            },
            "102": {
                "start": {
                    "line": 721,
                    "column": 16
                },
                "end": {
                    "line": 721,
                    "column": 28
                }
            },
            "103": {
                "start": {
                    "line": 726,
                    "column": 12
                },
                "end": {
                    "line": 735,
                    "column": 13
                }
            },
            "104": {
                "start": {
                    "line": 728,
                    "column": 16
                },
                "end": {
                    "line": 728,
                    "column": 48
                }
            },
            "105": {
                "start": {
                    "line": 730,
                    "column": 16
                },
                "end": {
                    "line": 734,
                    "column": 17
                }
            },
            "106": {
                "start": {
                    "line": 731,
                    "column": 20
                },
                "end": {
                    "line": 731,
                    "column": 47
                }
            },
            "107": {
                "start": {
                    "line": 733,
                    "column": 20
                },
                "end": {
                    "line": 733,
                    "column": 40
                }
            },
            "108": {
                "start": {
                    "line": 737,
                    "column": 12
                },
                "end": {
                    "line": 737,
                    "column": 24
                }
            },
            "109": {
                "start": {
                    "line": 740,
                    "column": 8
                },
                "end": {
                    "line": 740,
                    "column": 61
                }
            },
            "110": {
                "start": {
                    "line": 780,
                    "column": 8
                },
                "end": {
                    "line": 780,
                    "column": 34
                }
            },
            "111": {
                "start": {
                    "line": 782,
                    "column": 8
                },
                "end": {
                    "line": 785,
                    "column": 53
                }
            },
            "112": {
                "start": {
                    "line": 789,
                    "column": 8
                },
                "end": {
                    "line": 791,
                    "column": 9
                }
            },
            "113": {
                "start": {
                    "line": 790,
                    "column": 12
                },
                "end": {
                    "line": 790,
                    "column": 60
                }
            },
            "114": {
                "start": {
                    "line": 793,
                    "column": 8
                },
                "end": {
                    "line": 793,
                    "column": 43
                }
            },
            "115": {
                "start": {
                    "line": 794,
                    "column": 8
                },
                "end": {
                    "line": 794,
                    "column": 34
                }
            },
            "116": {
                "start": {
                    "line": 796,
                    "column": 8
                },
                "end": {
                    "line": 798,
                    "column": 9
                }
            },
            "117": {
                "start": {
                    "line": 797,
                    "column": 12
                },
                "end": {
                    "line": 797,
                    "column": 41
                }
            },
            "118": {
                "start": {
                    "line": 817,
                    "column": 8
                },
                "end": {
                    "line": 817,
                    "column": 62
                }
            },
            "119": {
                "start": {
                    "line": 870,
                    "column": 16
                },
                "end": {
                    "line": 870,
                    "column": 37
                }
            },
            "120": {
                "start": {
                    "line": 985,
                    "column": 37
                },
                "end": {
                    "line": 985,
                    "column": 64
                }
            },
            "121": {
                "start": {
                    "line": 1036,
                    "column": 0
                },
                "end": {
                    "line": 1036,
                    "column": 34
                }
            },
            "122": {
                "start": {
                    "line": 1071,
                    "column": 0
                },
                "end": {
                    "line": 1071,
                    "column": 62
                }
            },
            "123": {
                "start": {
                    "line": 1082,
                    "column": 0
                },
                "end": {
                    "line": 1085,
                    "column": 2
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 151,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 151,
                            "column": 8
                        },
                        "end": {
                            "line": 151,
                            "column": 14
                        }
                    },
                    {
                        "start": {
                            "line": 151,
                            "column": 19
                        },
                        "end": {
                            "line": 151,
                            "column": 30
                        }
                    }
                ]
            },
            "2": {
                "line": 178,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 178,
                            "column": 8
                        },
                        "end": {
                            "line": 178,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 178,
                            "column": 8
                        },
                        "end": {
                            "line": 178,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 203,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 203,
                            "column": 24
                        },
                        "end": {
                            "line": 203,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 203,
                            "column": 36
                        },
                        "end": {
                            "line": 203,
                            "column": 49
                        }
                    },
                    {
                        "start": {
                            "line": 203,
                            "column": 54
                        },
                        "end": {
                            "line": 203,
                            "column": 58
                        }
                    }
                ]
            },
            "4": {
                "line": 207,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 208,
                            "column": 16
                        },
                        "end": {
                            "line": 208,
                            "column": 52
                        }
                    },
                    {
                        "start": {
                            "line": 208,
                            "column": 55
                        },
                        "end": {
                            "line": 208,
                            "column": 59
                        }
                    }
                ]
            },
            "5": {
                "line": 229,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 229,
                            "column": 8
                        },
                        "end": {
                            "line": 229,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 229,
                            "column": 8
                        },
                        "end": {
                            "line": 229,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 233,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 233,
                            "column": 15
                        },
                        "end": {
                            "line": 233,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 233,
                            "column": 23
                        },
                        "end": {
                            "line": 233,
                            "column": 61
                        }
                    }
                ]
            },
            "7": {
                "line": 290,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 290,
                            "column": 34
                        },
                        "end": {
                            "line": 290,
                            "column": 44
                        }
                    },
                    {
                        "start": {
                            "line": 290,
                            "column": 48
                        },
                        "end": {
                            "line": 290,
                            "column": 75
                        }
                    }
                ]
            },
            "8": {
                "line": 297,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 297,
                            "column": 8
                        },
                        "end": {
                            "line": 297,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 297,
                            "column": 8
                        },
                        "end": {
                            "line": 297,
                            "column": 8
                        }
                    }
                ]
            },
            "9": {
                "line": 297,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 297,
                            "column": 12
                        },
                        "end": {
                            "line": 297,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 297,
                            "column": 26
                        },
                        "end": {
                            "line": 297,
                            "column": 70
                        }
                    }
                ]
            },
            "10": {
                "line": 302,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 302,
                            "column": 8
                        },
                        "end": {
                            "line": 302,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 302,
                            "column": 8
                        },
                        "end": {
                            "line": 302,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 302,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 302,
                            "column": 12
                        },
                        "end": {
                            "line": 302,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 302,
                            "column": 50
                        },
                        "end": {
                            "line": 302,
                            "column": 58
                        }
                    }
                ]
            },
            "12": {
                "line": 378,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 378,
                            "column": 8
                        },
                        "end": {
                            "line": 378,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 378,
                            "column": 20
                        },
                        "end": {
                            "line": 378,
                            "column": 32
                        }
                    }
                ]
            },
            "13": {
                "line": 381,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 381,
                            "column": 8
                        },
                        "end": {
                            "line": 381,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 381,
                            "column": 8
                        },
                        "end": {
                            "line": 381,
                            "column": 8
                        }
                    }
                ]
            },
            "14": {
                "line": 383,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 383,
                            "column": 15
                        },
                        "end": {
                            "line": 383,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 383,
                            "column": 15
                        },
                        "end": {
                            "line": 383,
                            "column": 15
                        }
                    }
                ]
            },
            "15": {
                "line": 387,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 387,
                            "column": 8
                        },
                        "end": {
                            "line": 387,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 387,
                            "column": 8
                        },
                        "end": {
                            "line": 387,
                            "column": 8
                        }
                    }
                ]
            },
            "16": {
                "line": 394,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 394,
                            "column": 12
                        },
                        "end": {
                            "line": 394,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 394,
                            "column": 12
                        },
                        "end": {
                            "line": 394,
                            "column": 12
                        }
                    }
                ]
            },
            "17": {
                "line": 394,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 394,
                            "column": 16
                        },
                        "end": {
                            "line": 394,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 394,
                            "column": 28
                        },
                        "end": {
                            "line": 394,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 394,
                            "column": 49
                        },
                        "end": {
                            "line": 394,
                            "column": 66
                        }
                    }
                ]
            },
            "18": {
                "line": 413,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 413,
                            "column": 8
                        },
                        "end": {
                            "line": 413,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 413,
                            "column": 8
                        },
                        "end": {
                            "line": 413,
                            "column": 8
                        }
                    }
                ]
            },
            "19": {
                "line": 413,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 413,
                            "column": 12
                        },
                        "end": {
                            "line": 413,
                            "column": 26
                        }
                    },
                    {
                        "start": {
                            "line": 413,
                            "column": 30
                        },
                        "end": {
                            "line": 413,
                            "column": 38
                        }
                    }
                ]
            },
            "20": {
                "line": 423,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 423,
                            "column": 8
                        },
                        "end": {
                            "line": 423,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 423,
                            "column": 8
                        },
                        "end": {
                            "line": 423,
                            "column": 8
                        }
                    }
                ]
            },
            "21": {
                "line": 424,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 424,
                            "column": 12
                        },
                        "end": {
                            "line": 424,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 424,
                            "column": 12
                        },
                        "end": {
                            "line": 424,
                            "column": 12
                        }
                    }
                ]
            },
            "22": {
                "line": 427,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 427,
                            "column": 15
                        },
                        "end": {
                            "line": 427,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 427,
                            "column": 15
                        },
                        "end": {
                            "line": 427,
                            "column": 15
                        }
                    }
                ]
            },
            "23": {
                "line": 449,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 449,
                            "column": 8
                        },
                        "end": {
                            "line": 449,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 449,
                            "column": 8
                        },
                        "end": {
                            "line": 449,
                            "column": 8
                        }
                    }
                ]
            },
            "24": {
                "line": 460,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 460,
                            "column": 8
                        },
                        "end": {
                            "line": 460,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 460,
                            "column": 8
                        },
                        "end": {
                            "line": 460,
                            "column": 8
                        }
                    }
                ]
            },
            "25": {
                "line": 471,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 471,
                            "column": 32
                        },
                        "end": {
                            "line": 471,
                            "column": 41
                        }
                    },
                    {
                        "start": {
                            "line": 471,
                            "column": 44
                        },
                        "end": {
                            "line": 471,
                            "column": 52
                        }
                    }
                ]
            },
            "26": {
                "line": 489,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 489,
                            "column": 8
                        },
                        "end": {
                            "line": 489,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 489,
                            "column": 8
                        },
                        "end": {
                            "line": 489,
                            "column": 8
                        }
                    }
                ]
            },
            "27": {
                "line": 496,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 496,
                            "column": 12
                        },
                        "end": {
                            "line": 496,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 496,
                            "column": 12
                        },
                        "end": {
                            "line": 496,
                            "column": 12
                        }
                    }
                ]
            },
            "28": {
                "line": 511,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 511,
                            "column": 8
                        },
                        "end": {
                            "line": 511,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 511,
                            "column": 8
                        },
                        "end": {
                            "line": 511,
                            "column": 8
                        }
                    }
                ]
            },
            "29": {
                "line": 528,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 528,
                            "column": 8
                        },
                        "end": {
                            "line": 528,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 528,
                            "column": 8
                        },
                        "end": {
                            "line": 528,
                            "column": 8
                        }
                    }
                ]
            },
            "30": {
                "line": 532,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 532,
                            "column": 23
                        },
                        "end": {
                            "line": 532,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 532,
                            "column": 49
                        },
                        "end": {
                            "line": 532,
                            "column": 51
                        }
                    }
                ]
            },
            "31": {
                "line": 534,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 534,
                            "column": 8
                        },
                        "end": {
                            "line": 534,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 534,
                            "column": 8
                        },
                        "end": {
                            "line": 534,
                            "column": 8
                        }
                    }
                ]
            },
            "32": {
                "line": 549,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 549,
                            "column": 12
                        },
                        "end": {
                            "line": 549,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 549,
                            "column": 12
                        },
                        "end": {
                            "line": 549,
                            "column": 12
                        }
                    }
                ]
            },
            "33": {
                "line": 571,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 571,
                            "column": 8
                        },
                        "end": {
                            "line": 571,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 571,
                            "column": 8
                        },
                        "end": {
                            "line": 571,
                            "column": 8
                        }
                    }
                ]
            },
            "34": {
                "line": 571,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 571,
                            "column": 12
                        },
                        "end": {
                            "line": 571,
                            "column": 18
                        }
                    },
                    {
                        "start": {
                            "line": 571,
                            "column": 22
                        },
                        "end": {
                            "line": 571,
                            "column": 42
                        }
                    }
                ]
            },
            "35": {
                "line": 600,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 600,
                            "column": 8
                        },
                        "end": {
                            "line": 600,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 600,
                            "column": 8
                        },
                        "end": {
                            "line": 600,
                            "column": 8
                        }
                    }
                ]
            },
            "36": {
                "line": 627,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 627,
                            "column": 8
                        },
                        "end": {
                            "line": 627,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 627,
                            "column": 8
                        },
                        "end": {
                            "line": 627,
                            "column": 8
                        }
                    }
                ]
            },
            "37": {
                "line": 627,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 627,
                            "column": 12
                        },
                        "end": {
                            "line": 627,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 627,
                            "column": 24
                        },
                        "end": {
                            "line": 627,
                            "column": 34
                        }
                    }
                ]
            },
            "38": {
                "line": 653,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 653,
                            "column": 8
                        },
                        "end": {
                            "line": 653,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 653,
                            "column": 8
                        },
                        "end": {
                            "line": 653,
                            "column": 8
                        }
                    }
                ]
            },
            "39": {
                "line": 653,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 653,
                            "column": 12
                        },
                        "end": {
                            "line": 653,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 653,
                            "column": 24
                        },
                        "end": {
                            "line": 653,
                            "column": 33
                        }
                    }
                ]
            },
            "40": {
                "line": 680,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 680,
                            "column": 8
                        },
                        "end": {
                            "line": 680,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 680,
                            "column": 8
                        },
                        "end": {
                            "line": 680,
                            "column": 8
                        }
                    }
                ]
            },
            "41": {
                "line": 717,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 717,
                            "column": 8
                        },
                        "end": {
                            "line": 717,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 717,
                            "column": 8
                        },
                        "end": {
                            "line": 717,
                            "column": 8
                        }
                    }
                ]
            },
            "42": {
                "line": 717,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 717,
                            "column": 12
                        },
                        "end": {
                            "line": 717,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 717,
                            "column": 41
                        },
                        "end": {
                            "line": 717,
                            "column": 59
                        }
                    }
                ]
            },
            "43": {
                "line": 719,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 719,
                            "column": 12
                        },
                        "end": {
                            "line": 719,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 719,
                            "column": 12
                        },
                        "end": {
                            "line": 719,
                            "column": 12
                        }
                    }
                ]
            },
            "44": {
                "line": 726,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 726,
                            "column": 12
                        },
                        "end": {
                            "line": 726,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 726,
                            "column": 12
                        },
                        "end": {
                            "line": 726,
                            "column": 12
                        }
                    }
                ]
            },
            "45": {
                "line": 728,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 728,
                            "column": 37
                        },
                        "end": {
                            "line": 728,
                            "column": 40
                        }
                    },
                    {
                        "start": {
                            "line": 728,
                            "column": 44
                        },
                        "end": {
                            "line": 728,
                            "column": 46
                        }
                    }
                ]
            },
            "46": {
                "line": 730,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 730,
                            "column": 16
                        },
                        "end": {
                            "line": 730,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 730,
                            "column": 16
                        },
                        "end": {
                            "line": 730,
                            "column": 16
                        }
                    }
                ]
            },
            "47": {
                "line": 780,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 780,
                            "column": 8
                        },
                        "end": {
                            "line": 780,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 780,
                            "column": 20
                        },
                        "end": {
                            "line": 780,
                            "column": 32
                        }
                    }
                ]
            },
            "48": {
                "line": 784,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 784,
                            "column": 23
                        },
                        "end": {
                            "line": 784,
                            "column": 31
                        }
                    },
                    {
                        "start": {
                            "line": 784,
                            "column": 35
                        },
                        "end": {
                            "line": 784,
                            "column": 71
                        }
                    }
                ]
            },
            "49": {
                "line": 785,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 785,
                            "column": 23
                        },
                        "end": {
                            "line": 785,
                            "column": 40
                        }
                    },
                    {
                        "start": {
                            "line": 785,
                            "column": 44
                        },
                        "end": {
                            "line": 785,
                            "column": 52
                        }
                    }
                ]
            },
            "50": {
                "line": 789,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 789,
                            "column": 8
                        },
                        "end": {
                            "line": 789,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 789,
                            "column": 8
                        },
                        "end": {
                            "line": 789,
                            "column": 8
                        }
                    }
                ]
            },
            "51": {
                "line": 790,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 790,
                            "column": 19
                        },
                        "end": {
                            "line": 790,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 790,
                            "column": 31
                        },
                        "end": {
                            "line": 790,
                            "column": 59
                        }
                    }
                ]
            },
            "52": {
                "line": 796,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 796,
                            "column": 8
                        },
                        "end": {
                            "line": 796,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 796,
                            "column": 8
                        },
                        "end": {
                            "line": 796,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('app-base', function (Y, NAME) {",
            "",
            "/**",
            "The App Framework provides simple MVC-like building blocks (models, model lists,",
            "views, and URL-based routing) for writing single-page JavaScript applications.",
            "",
            "@main app",
            "@module app",
            "@since 3.4.0",
            "**/",
            "",
            "/**",
            "Provides a top-level application component which manages navigation and views.",
            "",
            "@module app",
            "@submodule app-base",
            "@since 3.5.0",
            "**/",
            "",
            "// TODO: Better handling of lifecycle for registered views:",
            "//",
            "//   * [!] Just redo basically everything with view management so there are no",
            "//     pre-`activeViewChange` side effects and handle the rest of these things:",
            "//",
            "//   * Seems like any view created via `createView` should listen for the view's",
            "//     `destroy` event and use that to remove it from the `_viewsInfoMap`. I",
            "//     should look at what ModelList does for Models as a reference.",
            "//",
            "//   * Should we have a companion `destroyView()` method? Maybe this wouldn't be",
            "//     needed if we have a `getView(name, create)` method, and already doing the",
            "//     above? We could do `app.getView('foo').destroy()` and it would be removed",
            "//     from the `_viewsInfoMap` as well.",
            "//",
            "//   * Should we wait to call a view's `render()` method inside of the",
            "//     `_attachView()` method?",
            "//",
            "//   * Should named views support a collection of instances instead of just one?",
            "//",
            "",
            "var Lang    = Y.Lang,",
            "    YObject = Y.Object,",
            "",
            "    PjaxBase = Y.PjaxBase,",
            "    Router   = Y.Router,",
            "    View     = Y.View,",
            "",
            "    getClassName = Y.ClassNameManager.getClassName,",
            "",
            "    win = Y.config.win,",
            "",
            "    AppBase;",
            "",
            "/**",
            "Provides a top-level application component which manages navigation and views.",
            "",
            "This gives you a foundation and structure on which to build your application; it",
            "combines robust URL navigation with powerful routing and flexible view",
            "management.",
            "",
            "@class App.Base",
            "@param {Object} [config] The following are configuration properties that can be",
            "    specified _in addition_ to default attribute values and the non-attribute",
            "    properties provided by `Y.Base`:",
            "  @param {Object} [config.views] Hash of view-name to metadata used to",
            "    declaratively describe an application's views and their relationship with",
            "    the app and other views. The views specified here will override any defaults",
            "    provided by the `views` object on the `prototype`.",
            "@constructor",
            "@extends Base",
            "@uses View",
            "@uses Router",
            "@uses PjaxBase",
            "@since 3.5.0",
            "**/",
            "AppBase = Y.Base.create('app', Y.Base, [View, Router, PjaxBase], {",
            "    // -- Public Properties ----------------------------------------------------",
            "",
            "    /**",
            "    Hash of view-name to metadata used to declaratively describe an",
            "    application's views and their relationship with the app and its other views.",
            "",
            "    The view metadata is composed of Objects keyed to a view-name that can have",
            "    any or all of the following properties:",
            "",
            "      * `type`: Function or a string representing the view constructor to use to",
            "        create view instances. If a string is used, the constructor function is",
            "        assumed to be on the `Y` object; e.g. `\"SomeView\"` -> `Y.SomeView`.",
            "",
            "      * `preserve`: Boolean for whether the view instance should be retained. By",
            "        default, the view instance will be destroyed when it is no longer the",
            "        `activeView`. If `true` the view instance will simply be `removed()`",
            "        from the DOM when it is no longer active. This is useful when the view",
            "        is frequently used and may be expensive to re-create.",
            "",
            "      * `parent`: String to another named view in this hash that represents the",
            "        parent view within the application's view hierarchy; e.g. a `\"photo\"`",
            "        view could have `\"album\"` has its `parent` view. This parent/child",
            "        relationship is a useful cue for things like transitions.",
            "",
            "      * `instance`: Used internally to manage the current instance of this named",
            "        view. This can be used if your view instance is created up-front, or if",
            "        you would rather manage the View lifecycle, but you probably should just",
            "        let this be handled for you.",
            "",
            "    If `views` are specified at instantiation time, the metadata in the `views`",
            "    Object here will be used as defaults when creating the instance's `views`.",
            "",
            "    Every `Y.App` instance gets its own copy of a `views` object so this Object",
            "    on the prototype will not be polluted.",
            "",
            "    @example",
            "        // Imagine that `Y.UsersView` and `Y.UserView` have been defined.",
            "        var app = new Y.App({",
            "            views: {",
            "                users: {",
            "                    type    : Y.UsersView,",
            "                    preserve: true",
            "                },",
            "",
            "                user: {",
            "                    type  : Y.UserView,",
            "                    parent: 'users'",
            "                }",
            "            }",
            "        });",
            "",
            "    @property views",
            "    @type Object",
            "    @default {}",
            "    @since 3.5.0",
            "    **/",
            "    views: {},",
            "",
            "    // -- Protected Properties -------------------------------------------------",
            "",
            "    /**",
            "    Map of view instance id (via `Y.stamp()`) to view-info object in `views`.",
            "",
            "    This mapping is used to tie a specific view instance back to its metadata by",
            "    adding a reference to the the related view info on the `views` object.",
            "",
            "    @property _viewInfoMap",
            "    @type Object",
            "    @default {}",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "",
            "    // -- Lifecycle Methods ----------------------------------------------------",
            "    initializer: function (config) {",
            "        config || (config = {});",
            "",
            "        var views = {};",
            "",
            "        // Merges-in specified view metadata into local `views` object.",
            "        function mergeViewConfig(view, name) {",
            "            views[name] = Y.merge(views[name], view);",
            "        }",
            "",
            "        // First, each view in the `views` prototype object gets its metadata",
            "        // merged-in, providing the defaults.",
            "        YObject.each(this.views, mergeViewConfig);",
            "",
            "        // Then, each view in the specified `config.views` object gets its",
            "        // metadata merged-in.",
            "        YObject.each(config.views, mergeViewConfig);",
            "",
            "        // The resulting hodgepodge of metadata is then stored as the instance's",
            "        // `views` object, and no one's objects were harmed in the making.",
            "        this.views        = views;",
            "        this._viewInfoMap = {};",
            "",
            "        // Using `bind()` to aid extensibility.",
            "        this.after('activeViewChange', Y.bind('_afterActiveViewChange', this));",
            "",
            "        // PjaxBase will bind click events when `html5` is `true`, so this just",
            "        // forces the binding when `serverRouting` and `html5` are both falsy.",
            "        if (!this.get('serverRouting')) {",
            "            this._pjaxBindUI();",
            "        }",
            "    },",
            "",
            "    // TODO: `destructor` to destroy the `activeView`?",
            "",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Creates and returns a new view instance using the provided `name` to look up",
            "    the view info metadata defined in the `views` object. The passed-in `config`",
            "    object is passed to the view constructor function.",
            "",
            "    This function also maps a view instance back to its view info metadata.",
            "",
            "    @method createView",
            "    @param {String} name The name of a view defined on the `views` object.",
            "    @param {Object} [config] The configuration object passed to the view",
            "      constructor function when creating the new view instance.",
            "    @return {View} The new view instance.",
            "    @since 3.5.0",
            "    **/",
            "    createView: function (name, config) {",
            "        var viewInfo = this.getViewInfo(name),",
            "            type     = (viewInfo && viewInfo.type) || View,",
            "            ViewConstructor, view;",
            "",
            "        // Looks for a namespaced constructor function on `Y`.",
            "        ViewConstructor = Lang.isString(type) ?",
            "                YObject.getValue(Y, type.split('.')) : type;",
            "",
            "        // Create the view instance and map it with its metadata.",
            "        view = new ViewConstructor(config);",
            "        this._viewInfoMap[Y.stamp(view, true)] = viewInfo;",
            "",
            "        return view;",
            "    },",
            "",
            "    /**",
            "    Returns the metadata associated with a view instance or view name defined on",
            "    the `views` object.",
            "",
            "    @method getViewInfo",
            "    @param {View|String} view View instance, or name of a view defined on the",
            "      `views` object.",
            "    @return {Object} The metadata for the view, or `undefined` if the view is",
            "      not registered.",
            "    @since 3.5.0",
            "    **/",
            "    getViewInfo: function (view) {",
            "        if (Lang.isString(view)) {",
            "            return this.views[view];",
            "        }",
            "",
            "        return view && this._viewInfoMap[Y.stamp(view, true)];",
            "    },",
            "",
            "    /**",
            "    Navigates to the specified URL if there is a route handler that matches. In",
            "    browsers capable of using HTML5 history or when `serverRouting` is falsy,",
            "    the navigation will be enhanced by firing the `navigate` event and having",
            "    the app handle the \"request\". When `serverRouting` is `true`, non-HTML5",
            "    browsers will navigate to the new URL via a full page reload.",
            "",
            "    When there is a route handler for the specified URL and it is being",
            "    navigated to, this method will return `true`, otherwise it will return",
            "    `false`.",
            "",
            "    **Note:** The specified URL _must_ be of the same origin as the current URL,",
            "    otherwise an error will be logged and navigation will not occur. This is",
            "    intended as both a security constraint and a purposely imposed limitation as",
            "    it does not make sense to tell the app to navigate to a URL on a",
            "    different scheme, host, or port.",
            "",
            "    @method navigate",
            "    @param {String} url The URL to navigate to. This must be of the same origin",
            "      as the current URL.",
            "    @param {Object} [options] Additional options to configure the navigation.",
            "      These are mixed into the `navigate` event facade.",
            "        @param {Boolean} [options.replace] Whether or not the current history",
            "          entry will be replaced, or a new entry will be created. Will default",
            "          to `true` if the specified `url` is the same as the current URL.",
            "        @param {Boolean} [options.force] Whether the enhanced navigation",
            "          should occur even in browsers without HTML5 history. Will default to",
            "          `true` when `serverRouting` is falsy.",
            "    @see PjaxBase.navigate()",
            "    **/",
            "    // Does not override `navigate()` but does use extra `options`.",
            "",
            "    /**",
            "    Renders this application by appending the `viewContainer` node to the",
            "    `container` node if it isn't already a child of the container, and the",
            "    `activeView` will be appended the view container, if it isn't already.",
            "",
            "    You should call this method at least once, usually after the initialization",
            "    of your app instance so the proper DOM structure is setup and optionally",
            "    append the container to the DOM if it's not there already.",
            "",
            "    You may override this method to customize the app's rendering, but you",
            "    should expect that the `viewContainer`'s contents will be modified by the",
            "    app for the purpose of rendering the `activeView` when it changes.",
            "",
            "    @method render",
            "    @chainable",
            "    @see View.render()",
            "    **/",
            "    render: function () {",
            "        var CLASS_NAMES         = Y.App.CLASS_NAMES,",
            "            container           = this.get('container'),",
            "            viewContainer       = this.get('viewContainer'),",
            "            activeView          = this.get('activeView'),",
            "            activeViewContainer = activeView && activeView.get('container'),",
            "            areSame             = container.compareTo(viewContainer);",
            "",
            "        container.addClass(CLASS_NAMES.app);",
            "        viewContainer.addClass(CLASS_NAMES.views);",
            "",
            "        // Prevents needless shuffling around of nodes and maintains DOM order.",
            "        if (activeView && !viewContainer.contains(activeViewContainer)) {",
            "            viewContainer.appendChild(activeViewContainer);",
            "        }",
            "",
            "        // Prevents needless shuffling around of nodes and maintains DOM order.",
            "        if (!container.contains(viewContainer) && !areSame) {",
            "            container.appendChild(viewContainer);",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Sets which view is active/visible for the application. This will set the",
            "    app's `activeView` attribute to the specified `view`.",
            "",
            "    The `view` will be \"attached\" to this app, meaning it will be both rendered",
            "    into this app's `viewContainer` node and all of its events will bubble to",
            "    the app. The previous `activeView` will be \"detached\" from this app.",
            "",
            "    When a string-name is provided for a view which has been registered on this",
            "    app's `views` object, the referenced metadata will be used and the",
            "    `activeView` will be set to either a preserved view instance, or a new",
            "    instance of the registered view will be created using the specified `config`",
            "    object passed-into this method.",
            "",
            "    A callback function can be specified as either the third or fourth argument,",
            "    and this function will be called after the new `view` becomes the",
            "    `activeView`, is rendered to the `viewContainer`, and is ready to use.",
            "",
            "    @example",
            "        var app = new Y.App({",
            "            views: {",
            "                usersView: {",
            "                    // Imagine that `Y.UsersView` has been defined.",
            "                    type: Y.UsersView",
            "                }",
            "            },",
            "",
            "            users: new Y.ModelList()",
            "        });",
            "",
            "        app.route('/users/', function () {",
            "            this.showView('usersView', {users: this.get('users')});",
            "        });",
            "",
            "        app.render();",
            "        app.navigate('/uses/'); // => Creates a new `Y.UsersView` and shows it.",
            "",
            "    @method showView",
            "    @param {String|View} view The name of a view defined in the `views` object,",
            "        or a view instance which should become this app's `activeView`.",
            "    @param {Object} [config] Optional configuration to use when creating a new",
            "        view instance. This config object can also be used to update an existing",
            "        or preserved view's attributes when `options.update` is `true`.",
            "    @param {Object} [options] Optional object containing any of the following",
            "        properties:",
            "      @param {Function} [options.callback] Optional callback function to call",
            "        after new `activeView` is ready to use, the function will be passed:",
            "          @param {View} options.callback.view A reference to the new",
            "            `activeView`.",
            "      @param {Boolean} [options.prepend=false] Whether the `view` should be",
            "        prepended instead of appended to the `viewContainer`.",
            "      @param {Boolean} [options.render] Whether the `view` should be rendered.",
            "        **Note:** If no value is specified, a view instance will only be",
            "        rendered if it's newly created by this method.",
            "      @param {Boolean} [options.update=false] Whether an existing view should",
            "        have its attributes updated by passing the `config` object to its",
            "        `setAttrs()` method. **Note:** This option does not have an effect if",
            "        the `view` instance is created as a result of calling this method.",
            "    @param {Function} [callback] Optional callback Function to call after the",
            "        new `activeView` is ready to use. **Note:** this will override",
            "        `options.callback` and it can be specified as either the third or fourth",
            "        argument. The function will be passed the following:",
            "      @param {View} callback.view A reference to the new `activeView`.",
            "    @chainable",
            "    @since 3.5.0",
            "    **/",
            "    showView: function (view, config, options, callback) {",
            "        var viewInfo, created;",
            "",
            "        options || (options = {});",
            "",
            "        // Support the callback function being either the third or fourth arg.",
            "        if (callback) {",
            "            options = Y.merge(options, {callback: callback});",
            "        } else if (Lang.isFunction(options)) {",
            "            options = {callback: options};",
            "        }",
            "",
            "        if (Lang.isString(view)) {",
            "            viewInfo = this.getViewInfo(view);",
            "",
            "            // Use the preserved view instance, or create a new view.",
            "            // TODO: Maybe we can remove the strict check for `preserve` and",
            "            // assume we'll use a View instance if it is there, and just check",
            "            // `preserve` when detaching?",
            "            if (viewInfo && viewInfo.preserve && viewInfo.instance) {",
            "                view = viewInfo.instance;",
            "",
            "                // Make sure there's a mapping back to the view metadata.",
            "                this._viewInfoMap[Y.stamp(view, true)] = viewInfo;",
            "            } else {",
            "                // TODO: Add the app as a bubble target during construction, but",
            "                // make sure to check that it isn't already in `bubbleTargets`!",
            "                // This will allow the app to be notified for about _all_ of the",
            "                // view's events. **Note:** This should _only_ happen if the",
            "                // view is created _after_ `activeViewChange`.",
            "",
            "                view    = this.createView(view, config);",
            "                created = true;",
            "            }",
            "        }",
            "",
            "        // Update the specified or preserved `view` when signaled to do so.",
            "        // There's no need to updated a view if it was _just_ created.",
            "        if (options.update && !created) {",
            "            view.setAttrs(config);",
            "        }",
            "",
            "        // TODO: Hold off on rendering the view until after it has been",
            "        // \"attached\", and move the call to render into `_attachView()`.",
            "",
            "        // When a value is specified for `options.render`, prefer it because it",
            "        // represents the developer's intent. When no value is specified, the",
            "        // `view` will only be rendered if it was just created.",
            "        if ('render' in options) {",
            "            if (options.render) {",
            "                view.render();",
            "            }",
            "        } else if (created) {",
            "            view.render();",
            "        }",
            "",
            "        return this._set('activeView', view, {options: options});",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Helper method to attach the view instance to the application by making the",
            "    app a bubble target of the view, append the view to the `viewContainer`, and",
            "    assign it to the `instance` property of the associated view info metadata.",
            "",
            "    @method _attachView",
            "    @param {View} view View to attach.",
            "    @param {Boolean} prepend=false Whether the view should be prepended instead",
            "      of appended to the `viewContainer`.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _attachView: function (view, prepend) {",
            "        if (!view) {",
            "            return;",
            "        }",
            "",
            "        var viewInfo      = this.getViewInfo(view),",
            "            viewContainer = this.get('viewContainer');",
            "",
            "        // Bubble the view's events to this app.",
            "        view.addTarget(this);",
            "",
            "        // Save the view instance in the `views` registry.",
            "        if (viewInfo) {",
            "            viewInfo.instance = view;",
            "        }",
            "",
            "        // TODO: Attach events here for persevered Views?",
            "        // See related TODO in `_detachView`.",
            "",
            "        // TODO: Actually render the view here so that it gets \"attached\" before",
            "        // it gets rendered?",
            "",
            "        // Insert view into the DOM.",
            "        viewContainer[prepend ? 'prepend' : 'append'](view.get('container'));",
            "    },",
            "",
            "    /**",
            "    Overrides View's container destruction to deal with the `viewContainer` and",
            "    checks to make sure not to remove and purge the `<body>`.",
            "",
            "    @method _destroyContainer",
            "    @protected",
            "    @see View._destroyContainer()",
            "    **/",
            "    _destroyContainer: function () {",
            "        var CLASS_NAMES   = Y.App.CLASS_NAMES,",
            "            container     = this.get('container'),",
            "            viewContainer = this.get('viewContainer'),",
            "            areSame       = container.compareTo(viewContainer);",
            "",
            "        // We do not want to remove or destroy the `<body>`.",
            "        if (Y.one('body').compareTo(container)) {",
            "            // Just clean-up our events listeners.",
            "            this.detachEvents();",
            "",
            "            // Clean-up `yui3-app` CSS class on the `container`.",
            "            container.removeClass(CLASS_NAMES.app);",
            "",
            "            if (areSame) {",
            "                // Clean-up `yui3-app-views` CSS class on the `container`.",
            "                container.removeClass(CLASS_NAMES.views);",
            "            } else {",
            "                // Destroy and purge the `viewContainer`.",
            "                viewContainer.remove(true);",
            "            }",
            "",
            "            return;",
            "        }",
            "",
            "        // Remove and purge events from both containers.",
            "",
            "        viewContainer.remove(true);",
            "",
            "        if (!areSame) {",
            "            container.remove(true);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Helper method to detach the view instance from the application by removing",
            "    the application as a bubble target of the view, and either just removing the",
            "    view if it is intended to be preserved, or destroying the instance",
            "    completely.",
            "",
            "    @method _detachView",
            "    @param {View} view View to detach.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _detachView: function (view) {",
            "        if (!view) {",
            "            return;",
            "        }",
            "",
            "        var viewInfo = this.getViewInfo(view) || {};",
            "",
            "        if (viewInfo.preserve) {",
            "            view.remove();",
            "            // TODO: Detach events here for preserved Views? It is possible that",
            "            // some event subscriptions are made on elements other than the",
            "            // View's `container`.",
            "        } else {",
            "            view.destroy({remove: true});",
            "",
            "            // TODO: The following should probably happen automagically from",
            "            // `destroy()` being called! Possibly `removeTarget()` as well.",
            "",
            "            // Remove from view to view-info map.",
            "            delete this._viewInfoMap[Y.stamp(view, true)];",
            "",
            "            // Remove from view-info instance property.",
            "            if (view === viewInfo.instance) {",
            "                delete viewInfo.instance;",
            "            }",
            "        }",
            "",
            "        view.removeTarget(this);",
            "    },",
            "",
            "    /**",
            "    Getter for the `viewContainer` attribute.",
            "",
            "    @method _getViewContainer",
            "    @param {Node|null} value Current attribute value.",
            "    @return {Node} View container node.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _getViewContainer: function (value) {",
            "        // This wackiness is necessary to enable fully lazy creation of the",
            "        // container node both when no container is specified and when one is",
            "        // specified via a valueFn.",
            "",
            "        if (!value && !this._viewContainer) {",
            "            // Create a default container and set that as the new attribute",
            "            // value. The `this._viewContainer` property prevents infinite",
            "            // recursion.",
            "            value = this._viewContainer = this.create();",
            "            this._set('viewContainer', value);",
            "        }",
            "",
            "        return value;",
            "    },",
            "",
            "    /**",
            "    Provides the default value for the `html5` attribute.",
            "",
            "    The value returned is dependent on the value of the `serverRouting`",
            "    attribute. When `serverRouting` is explicit set to `false` (not just falsy),",
            "    the default value for `html5` will be set to `false` for *all* browsers.",
            "",
            "    When `serverRouting` is `true` or `undefined` the returned value will be",
            "    dependent on the browser's capability of using HTML5 history.",
            "",
            "    @method _initHtml5",
            "    @return {Boolean} Whether or not HTML5 history should be used.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _initHtml5: function () {",
            "        // When `serverRouting` is explicitly set to `false` (not just falsy),",
            "        // forcing hash-based URLs in all browsers.",
            "        if (this.get('serverRouting') === false) {",
            "            return false;",
            "        }",
            "",
            "        // Defaults to whether or not the browser supports HTML5 history.",
            "        return Router.html5;",
            "    },",
            "",
            "    /**",
            "    Determines if the specified `view` is configured as a child of the specified",
            "    `parent` view. This requires both views to be either named-views, or view",
            "    instances created using configuration data that exists in the `views`",
            "    object, e.g. created by the `createView()` or `showView()` method.",
            "",
            "    @method _isChildView",
            "    @param {View|String} view The name of a view defined in the `views` object,",
            "      or a view instance.",
            "    @param {View|String} parent The name of a view defined in the `views`",
            "      object, or a view instance.",
            "    @return {Boolean} Whether the view is configured as a child of the parent.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _isChildView: function (view, parent) {",
            "        var viewInfo   = this.getViewInfo(view),",
            "            parentInfo = this.getViewInfo(parent);",
            "",
            "        if (viewInfo && parentInfo) {",
            "            return this.getViewInfo(viewInfo.parent) === parentInfo;",
            "        }",
            "",
            "        return false;",
            "    },",
            "",
            "    /**",
            "    Determines if the specified `view` is configured as the parent of the",
            "    specified `child` view. This requires both views to be either named-views,",
            "    or view instances created using configuration data that exists in the",
            "    `views` object, e.g. created by the `createView()` or `showView()` method.",
            "",
            "    @method _isParentView",
            "    @param {View|String} view The name of a view defined in the `views` object,",
            "      or a view instance.",
            "    @param {View|String} parent The name of a view defined in the `views`",
            "      object, or a view instance.",
            "    @return {Boolean} Whether the view is configured as the parent of the child.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _isParentView: function (view, child) {",
            "        var viewInfo  = this.getViewInfo(view),",
            "            childInfo = this.getViewInfo(child);",
            "",
            "        if (viewInfo && childInfo) {",
            "            return this.getViewInfo(childInfo.parent) === viewInfo;",
            "        }",
            "",
            "        return false;",
            "    },",
            "",
            "    /**",
            "    Underlying implementation for `navigate()`.",
            "",
            "    @method _navigate",
            "    @param {String} url The fully-resolved URL that the app should dispatch to",
            "      its route handlers to fulfill the enhanced navigation \"request\", or use to",
            "      update `window.location` in non-HTML5 history capable browsers when",
            "      `serverRouting` is `true`.",
            "    @param {Object} [options] Additional options to configure the navigation.",
            "      These are mixed into the `navigate` event facade.",
            "        @param {Boolean} [options.replace] Whether or not the current history",
            "          entry will be replaced, or a new entry will be created. Will default",
            "          to `true` if the specified `url` is the same as the current URL.",
            "        @param {Boolean} [options.force] Whether the enhanced navigation",
            "          should occur even in browsers without HTML5 history. Will default to",
            "          `true` when `serverRouting` is falsy.",
            "    @protected",
            "    @see PjaxBase._navigate()",
            "    **/",
            "    _navigate: function (url, options) {",
            "        if (!this.get('serverRouting')) {",
            "            // Force navigation to be enhanced and handled by the app when",
            "            // `serverRouting` is falsy because the server might not be able to",
            "            // properly handle the request.",
            "            options = Y.merge({force: true}, options);",
            "        }",
            "",
            "        return PjaxBase.prototype._navigate.call(this, url, options);",
            "    },",
            "",
            "    /**",
            "    Will either save a history entry using `pushState()` or the location hash,",
            "    or gracefully-degrade to sending a request to the server causing a full-page",
            "    reload.",
            "",
            "    Overrides Router's `_save()` method to preform graceful-degradation when the",
            "    app's `serverRouting` is `true` and `html5` is `false` by updating the full",
            "    URL via standard assignment to `window.location` or by calling",
            "    `window.location.replace()`; both of which will cause a request to the",
            "    server resulting in a full-page reload.",
            "",
            "    Otherwise this will just delegate off to Router's `_save()` method allowing",
            "    the client-side enhanced routing to occur.",
            "",
            "    @method _save",
            "    @param {String} [url] URL for the history entry.",
            "    @param {Boolean} [replace=false] If `true`, the current history entry will",
            "      be replaced instead of a new one being added.",
            "    @chainable",
            "    @protected",
            "    @see Router._save()",
            "    **/",
            "    _save: function (url, replace) {",
            "        var path;",
            "",
            "        // Forces full-path URLs to always be used by modifying",
            "        // `window.location` in non-HTML5 history capable browsers.",
            "        if (this.get('serverRouting') && !this.get('html5')) {",
            "            // Perform same-origin check on the specified URL.",
            "            if (!this._hasSameOrigin(url)) {",
            "                Y.error('Security error: The new URL must be of the same origin as the current URL.');",
            "                return this;",
            "            }",
            "",
            "            // Either replace the current history entry or create a new one",
            "            // while navigating to the `url`.",
            "            if (win) {",
            "                // Results in the URL's full path starting with '/'.",
            "                path = this._joinURL(url || '');",
            "",
            "                if (replace) {",
            "                    win.location.replace(path);",
            "                } else {",
            "                    win.location = path;",
            "                }",
            "            }",
            "",
            "            return this;",
            "        }",
            "",
            "        return Router.prototype._save.apply(this, arguments);",
            "    },",
            "",
            "    /**",
            "    Performs the actual change of this app's `activeView` by attaching the",
            "    `newView` to this app, and detaching the `oldView` from this app using any",
            "    specified `options`.",
            "",
            "    The `newView` is attached to the app by rendering it to the `viewContainer`,",
            "    and making this app a bubble target of its events.",
            "",
            "    The `oldView` is detached from the app by removing it from the",
            "    `viewContainer`, and removing this app as a bubble target for its events.",
            "    The `oldView` will either be preserved or properly destroyed.",
            "",
            "    **Note:** The `activeView` attribute is read-only and can be changed by",
            "    calling the `showView()` method.",
            "",
            "    @method _uiSetActiveView",
            "    @param {View} newView The View which is now this app's `activeView`.",
            "    @param {View} [oldView] The View which was this app's `activeView`.",
            "    @param {Object} [options] Optional object containing any of the following",
            "        properties:",
            "      @param {Function} [options.callback] Optional callback function to call",
            "        after new `activeView` is ready to use, the function will be passed:",
            "          @param {View} options.callback.view A reference to the new",
            "            `activeView`.",
            "      @param {Boolean} [options.prepend=false] Whether the `view` should be",
            "        prepended instead of appended to the `viewContainer`.",
            "      @param {Boolean} [options.render] Whether the `view` should be rendered.",
            "        **Note:** If no value is specified, a view instance will only be",
            "        rendered if it's newly created by this method.",
            "      @param {Boolean} [options.update=false] Whether an existing view should",
            "        have its attributes updated by passing the `config` object to its",
            "        `setAttrs()` method. **Note:** This option does not have an effect if",
            "        the `view` instance is created as a result of calling this method.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _uiSetActiveView: function (newView, oldView, options) {",
            "        options || (options = {});",
            "",
            "        var callback = options.callback,",
            "            isChild  = this._isChildView(newView, oldView),",
            "            isParent = !isChild && this._isParentView(newView, oldView),",
            "            prepend  = !!options.prepend || isParent;",
            "",
            "        // Prevent detaching (thus removing) the view we want to show. Also hard",
            "        // to animate out and in, the same view.",
            "        if (newView === oldView) {",
            "            return callback && callback.call(this, newView);",
            "        }",
            "",
            "        this._attachView(newView, prepend);",
            "        this._detachView(oldView);",
            "",
            "        if (callback) {",
            "            callback.call(this, newView);",
            "        }",
            "    },",
            "",
            "    // -- Protected Event Handlers ---------------------------------------------",
            "",
            "    /**",
            "    Handles the application's `activeViewChange` event (which is fired when the",
            "    `activeView` attribute changes) by detaching the old view, attaching the new",
            "    view.",
            "",
            "    The `activeView` attribute is read-only, so the public API to change its",
            "    value is through the `showView()` method.",
            "",
            "    @method _afterActiveViewChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _afterActiveViewChange: function (e) {",
            "        this._uiSetActiveView(e.newVal, e.prevVal, e.options);",
            "    }",
            "}, {",
            "    ATTRS: {",
            "        /**",
            "        The application's active/visible view.",
            "",
            "        This attribute is read-only, to set the `activeView` use the",
            "        `showView()` method.",
            "",
            "        @attribute activeView",
            "        @type View",
            "        @default null",
            "        @readOnly",
            "        @see App.Base.showView()",
            "        @since 3.5.0",
            "        **/",
            "        activeView: {",
            "            value   : null,",
            "            readOnly: true",
            "        },",
            "",
            "        /**",
            "        Container node which represents the application's bounding-box, into",
            "        which this app's content will be rendered.",
            "",
            "        The container node serves as the host for all DOM events attached by the",
            "        app. Delegation is used to handle events on children of the container,",
            "        allowing the container's contents to be re-rendered at any time without",
            "        losing event subscriptions.",
            "",
            "        The default container is the `<body>` Node, but you can override this in",
            "        a subclass, or by passing in a custom `container` config value at",
            "        instantiation time.",
            "",
            "        When `container` is overridden by a subclass or passed as a config",
            "        option at instantiation time, it may be provided as a selector string, a",
            "        DOM element, or a `Y.Node` instance. During initialization, this app's",
            "        `create()` method will be called to convert the container into a",
            "        `Y.Node` instance if it isn't one already and stamp it with the CSS",
            "        class: `\"yui3-app\"`.",
            "",
            "        The container is not added to the page automatically. This allows you to",
            "        have full control over how and when your app is actually rendered to",
            "        the page.",
            "",
            "        @attribute container",
            "        @type HTMLElement|Node|String",
            "        @default Y.one('body')",
            "        @initOnly",
            "        **/",
            "        container: {",
            "            valueFn: function () {",
            "                return Y.one('body');",
            "            }",
            "        },",
            "",
            "        /**",
            "        Whether or not this browser is capable of using HTML5 history.",
            "",
            "        This value is dependent on the value of `serverRouting` and will default",
            "        accordingly.",
            "",
            "        Setting this to `false` will force the use of hash-based history even on",
            "        HTML5 browsers, but please don't do this unless you understand the",
            "        consequences.",
            "",
            "        @attribute html5",
            "        @type Boolean",
            "        @initOnly",
            "        @see serverRouting",
            "        **/",
            "        html5: {",
            "            valueFn: '_initHtml5'",
            "        },",
            "",
            "        /**",
            "        CSS selector string used to filter link click events so that only the",
            "        links which match it will have the enhanced-navigation behavior of pjax",
            "        applied.",
            "",
            "        When a link is clicked and that link matches this selector, navigating",
            "        to the link's `href` URL using the enhanced, pjax, behavior will be",
            "        attempted; and the browser's default way to navigate to new pages will",
            "        be the fallback.",
            "",
            "        By default this selector will match _all_ links on the page.",
            "",
            "        @attribute linkSelector",
            "        @type String|Function",
            "        @default \"a\"",
            "        **/",
            "        linkSelector: {",
            "            value: 'a'",
            "        },",
            "",
            "        /**",
            "        Whether or not this application's server is capable of properly routing",
            "        all requests and rendering the initial state in the HTML responses.",
            "",
            "        This can have three different values, each having particular",
            "        implications on how the app will handle routing and navigation:",
            "",
            "          * `undefined`: The best form of URLs will be chosen based on the",
            "            capabilities of the browser. Given no information about the server",
            "            environmentm a balanced approach to routing and navigation is",
            "            chosen.",
            "",
            "            The server should be capable of handling full-path requests, since",
            "            full-URLs will be generated by browsers using HTML5 history. If this",
            "            is a client-side-only app the server could handle full-URL requests",
            "            by sending a redirect back to the root with a hash-based URL, e.g:",
            "",
            "                Request:     http://example.com/users/1",
            "                Redirect to: http://example.com/#/users/1",
            "",
            "          * `true`: The server is *fully* capable of properly handling requests",
            "            to all full-path URLs the app can produce.",
            "",
            "            This is the best option for progressive-enhancement because it will",
            "            cause **all URLs to always have full-paths**, which means the server",
            "            will be able to accurately handle all URLs this app produces. e.g.",
            "",
            "                http://example.com/users/1",
            "",
            "            To meet this strict full-URL requirement, browsers which are not",
            "            capable of using HTML5 history will make requests to the server",
            "            resulting in full-page reloads.",
            "",
            "          * `false`: The server is *not* capable of properly handling requests",
            "            to all full-path URLs the app can produce, therefore all routing",
            "            will be handled by this App instance.",
            "",
            "            Be aware that this will cause **all URLs to always be hash-based**,",
            "            even in browsers that are capable of using HTML5 history. e.g.",
            "",
            "                http://example.com/#/users/1",
            "",
            "            A single-page or client-side-only app where the server sends a",
            "            \"shell\" page with JavaScript to the client might have this",
            "            restriction. If you're setting this to `false`, read the following:",
            "",
            "        **Note:** When this is set to `false`, the server will *never* receive",
            "        the full URL because browsers do not send the fragment-part to the",
            "        server, that is everything after and including the \"#\".",
            "",
            "        Consider the following example:",
            "",
            "            URL shown in browser: http://example.com/#/users/1",
            "            URL sent to server:   http://example.com/",
            "",
            "        You should feel bad about hurting our precious web if you forcefully set",
            "        either `serverRouting` or `html5` to `false`, because you're basically",
            "        punching the web in the face here with your lossy URLs! Please make sure",
            "        you know what you're doing and that you understand the implications.",
            "",
            "        Ideally you should always prefer full-path URLs (not /#/foo/), and want",
            "        full-page reloads when the client's browser is not capable of enhancing",
            "        the experience using the HTML5 history APIs. Setting this to `true` is",
            "        the best option for progressive-enhancement (and graceful-degradation).",
            "",
            "        @attribute serverRouting",
            "        @type Boolean",
            "        @default undefined",
            "        @initOnly",
            "        @since 3.5.0",
            "        **/",
            "        serverRouting: {",
            "            valueFn  : function () { return Y.App.serverRouting; },",
            "            writeOnce: 'initOnly'",
            "        },",
            "",
            "        /**",
            "        The node into which this app's `views` will be rendered when they become",
            "        the `activeView`.",
            "",
            "        The view container node serves as the container to hold the app's",
            "        `activeView`. Each time the `activeView` is set via `showView()`, the",
            "        previous view will be removed from this node, and the new active view's",
            "        `container` node will be appended.",
            "",
            "        The default view container is a `<div>` Node, but you can override this",
            "        in a subclass, or by passing in a custom `viewContainer` config value at",
            "        instantiation time. The `viewContainer` may be provided as a selector",
            "        string, DOM element, or a `Y.Node` instance (having the `viewContainer`",
            "        and the `container` be the same node is also supported).",
            "",
            "        The app's `render()` method will stamp the view container with the CSS",
            "        class `\"yui3-app-views\"` and append it to the app's `container` node if",
            "        it isn't already, and any `activeView` will be appended to this node if",
            "        it isn't already.",
            "",
            "        @attribute viewContainer",
            "        @type HTMLElement|Node|String",
            "        @default Y.Node.create(this.containerTemplate)",
            "        @initOnly",
            "        @since 3.5.0",
            "        **/",
            "        viewContainer: {",
            "            getter   : '_getViewContainer',",
            "            setter   : Y.one,",
            "            writeOnce: true",
            "        }",
            "    },",
            "",
            "    /**",
            "    Properties that shouldn't be turned into ad-hoc attributes when passed to",
            "    App's constructor.",
            "",
            "    @property _NON_ATTRS_CFG",
            "    @type Array",
            "    @static",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _NON_ATTRS_CFG: ['views']",
            "});",
            "",
            "// -- Namespace ----------------------------------------------------------------",
            "Y.namespace('App').Base = AppBase;",
            "",
            "/**",
            "Provides a top-level application component which manages navigation and views.",
            "",
            "This gives you a foundation and structure on which to build your application; it",
            "combines robust URL navigation with powerful routing and flexible view",
            "management.",
            "",
            "`Y.App` is both a namespace and constructor function. The `Y.App` class is",
            "special in that any `Y.App` class extensions that are included in the YUI",
            "instance will be **auto-mixed** on to the `Y.App` class. Consider this example:",
            "",
            "    YUI().use('app-base', 'app-transitions', function (Y) {",
            "        // This will create two YUI Apps, `basicApp` will not have transitions,",
            "        // but `fancyApp` will have transitions support included and turn it on.",
            "        var basicApp = new Y.App.Base(),",
            "            fancyApp = new Y.App({transitions: true});",
            "    });",
            "",
            "@class App",
            "@param {Object} [config] The following are configuration properties that can be",
            "    specified _in addition_ to default attribute values and the non-attribute",
            "    properties provided by `Y.Base`:",
            "  @param {Object} [config.views] Hash of view-name to metadata used to",
            "    declaratively describe an application's views and their relationship with",
            "    the app and other views. The views specified here will override any defaults",
            "    provided by the `views` object on the `prototype`.",
            "@constructor",
            "@extends App.Base",
            "@uses App.Content",
            "@uses App.Transitions",
            "@uses PjaxContent",
            "@since 3.5.0",
            "**/",
            "Y.App = Y.mix(Y.Base.create('app', AppBase, []), Y.App, true);",
            "",
            "/**",
            "CSS classes used by `Y.App`.",
            "",
            "@property CLASS_NAMES",
            "@type Object",
            "@default {}",
            "@static",
            "@since 3.6.0",
            "**/",
            "Y.App.CLASS_NAMES = {",
            "    app  : getClassName('app'),",
            "    views: getClassName('app', 'views')",
            "};",
            "",
            "/**",
            "Default `serverRouting` attribute value for all apps.",
            "",
            "@property serverRouting",
            "@type Boolean",
            "@default undefined",
            "@static",
            "@since 3.6.0",
            "**/",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"classnamemanager\", \"pjax-base\", \"router\", \"view\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "40": 1,
            "75": 1,
            "151": 102,
            "153": 102,
            "156": 102,
            "157": 42,
            "162": 102,
            "166": 102,
            "170": 102,
            "171": 102,
            "174": 102,
            "178": 102,
            "179": 95,
            "202": 49,
            "207": 49,
            "211": 49,
            "212": 49,
            "214": 49,
            "229": 519,
            "230": 132,
            "233": 387,
            "286": 9,
            "293": 9,
            "294": 9,
            "297": 9,
            "298": 1,
            "302": 9,
            "303": 5,
            "306": 9,
            "376": 71,
            "378": 71,
            "381": 71,
            "382": 3,
            "383": 68,
            "384": 5,
            "387": 71,
            "388": 36,
            "394": 36,
            "395": 7,
            "398": 7,
            "406": 29,
            "407": 29,
            "413": 71,
            "414": 1,
            "423": 71,
            "424": 24,
            "425": 4,
            "427": 47,
            "428": 9,
            "431": 71,
            "449": 66,
            "450": 3,
            "453": 63,
            "457": 63,
            "460": 63,
            "461": 24,
            "471": 63,
            "483": 18,
            "489": 18,
            "491": 17,
            "494": 17,
            "496": 17,
            "498": 2,
            "501": 15,
            "504": 17,
            "509": 1,
            "511": 1,
            "512": 1,
            "528": 66,
            "529": 42,
            "532": 24,
            "534": 24,
            "535": 3,
            "540": 21,
            "546": 21,
            "549": 21,
            "550": 3,
            "554": 24,
            "571": 122,
            "575": 58,
            "576": 58,
            "579": 122,
            "600": 100,
            "601": 4,
            "605": 96,
            "624": 76,
            "627": 76,
            "628": 7,
            "631": 69,
            "650": 76,
            "653": 76,
            "654": 7,
            "657": 69,
            "680": 15,
            "684": 13,
            "687": 15,
            "713": 8,
            "717": 8,
            "719": 1,
            "720": 1,
            "721": 0,
            "726": 0,
            "728": 0,
            "730": 0,
            "731": 0,
            "733": 0,
            "737": 0,
            "740": 7,
            "780": 70,
            "782": 70,
            "789": 70,
            "790": 4,
            "793": 66,
            "794": 66,
            "796": 66,
            "797": 8,
            "817": 70,
            "870": 96,
            "985": 88,
            "1036": 1,
            "1071": 1,
            "1082": 1
        }
    },
    "build/app-content/app-content.js": {
        "path": "build/app-content/app-content.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 102,
            "5": 1,
            "6": 1,
            "7": 18,
            "8": 18,
            "9": 1,
            "10": 1,
            "11": 18,
            "12": 18,
            "13": 18,
            "14": 18,
            "15": 2,
            "16": 18,
            "17": 12,
            "18": 6,
            "19": 6,
            "20": 6,
            "21": 6,
            "22": 6,
            "23": 18,
            "24": 18,
            "25": 3,
            "26": 3,
            "27": 0,
            "28": 3,
            "29": 2,
            "30": 2,
            "31": 3,
            "32": 3,
            "33": 2,
            "34": 3,
            "35": 1,
            "36": 1,
            "37": 1,
            "38": 1
        },
        "b": {
            "1": [
                1,
                17
            ],
            "2": [
                18,
                12
            ],
            "3": [
                16,
                2
            ],
            "4": [
                2,
                16
            ],
            "5": [
                2,
                16
            ],
            "6": [
                18,
                18,
                6
            ],
            "7": [
                12,
                6
            ],
            "8": [
                18,
                18
            ],
            "9": [
                6,
                1,
                5
            ],
            "10": [
                0,
                6
            ],
            "11": [
                0,
                3
            ],
            "12": [
                3,
                3
            ],
            "13": [
                2,
                1
            ],
            "14": [
                3,
                2
            ],
            "15": [
                2,
                1
            ]
        },
        "f": {
            "1": 1,
            "2": 102,
            "3": 18,
            "4": 3,
            "5": 2
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 23
                    },
                    "end": {
                        "line": 1,
                        "column": 42
                    }
                }
            },
            "2": {
                "name": "AppContent",
                "line": 57,
                "loc": {
                    "start": {
                        "line": 57,
                        "column": 0
                    },
                    "end": {
                        "line": 57,
                        "column": 22
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 116,
                "loc": {
                    "start": {
                        "line": 116,
                        "column": 17
                    },
                    "end": {
                        "line": 116,
                        "column": 55
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 196,
                "loc": {
                    "start": {
                        "line": 196,
                        "column": 19
                    },
                    "end": {
                        "line": 196,
                        "column": 45
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 207,
                "loc": {
                    "start": {
                        "line": 207,
                        "column": 66
                    },
                    "end": {
                        "line": 207,
                        "column": 78
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 234,
                    "column": 60
                }
            },
            "2": {
                "start": {
                    "line": 11,
                    "column": 0
                },
                "end": {
                    "line": 11,
                    "column": 32
                }
            },
            "3": {
                "start": {
                    "line": 57,
                    "column": 0
                },
                "end": {
                    "line": 59,
                    "column": 1
                }
            },
            "4": {
                "start": {
                    "line": 58,
                    "column": 4
                },
                "end": {
                    "line": 58,
                    "column": 39
                }
            },
            "5": {
                "start": {
                    "line": 72,
                    "column": 0
                },
                "end": {
                    "line": 72,
                    "column": 52
                }
            },
            "6": {
                "start": {
                    "line": 74,
                    "column": 0
                },
                "end": {
                    "line": 221,
                    "column": 2
                }
            },
            "7": {
                "start": {
                    "line": 118,
                    "column": 8
                },
                "end": {
                    "line": 118,
                    "column": 33
                }
            },
            "8": {
                "start": {
                    "line": 121,
                    "column": 8
                },
                "end": {
                    "line": 124,
                    "column": 9
                }
            },
            "9": {
                "start": {
                    "line": 122,
                    "column": 12
                },
                "end": {
                    "line": 122,
                    "column": 43
                }
            },
            "10": {
                "start": {
                    "line": 123,
                    "column": 12
                },
                "end": {
                    "line": 123,
                    "column": 28
                }
            },
            "11": {
                "start": {
                    "line": 129,
                    "column": 8
                },
                "end": {
                    "line": 129,
                    "column": 52
                }
            },
            "12": {
                "start": {
                    "line": 131,
                    "column": 8
                },
                "end": {
                    "line": 135,
                    "column": 55
                }
            },
            "13": {
                "start": {
                    "line": 139,
                    "column": 8
                },
                "end": {
                    "line": 139,
                    "column": 28
                }
            },
            "14": {
                "start": {
                    "line": 144,
                    "column": 8
                },
                "end": {
                    "line": 148,
                    "column": 9
                }
            },
            "15": {
                "start": {
                    "line": 147,
                    "column": 12
                },
                "end": {
                    "line": 147,
                    "column": 48
                }
            },
            "16": {
                "start": {
                    "line": 153,
                    "column": 8
                },
                "end": {
                    "line": 170,
                    "column": 9
                }
            },
            "17": {
                "start": {
                    "line": 154,
                    "column": 12
                },
                "end": {
                    "line": 154,
                    "column": 32
                }
            },
            "18": {
                "start": {
                    "line": 156,
                    "column": 12
                },
                "end": {
                    "line": 156,
                    "column": 57
                }
            },
            "19": {
                "start": {
                    "line": 159,
                    "column": 12
                },
                "end": {
                    "line": 160,
                    "column": 65
                }
            },
            "20": {
                "start": {
                    "line": 163,
                    "column": 12
                },
                "end": {
                    "line": 163,
                    "column": 68
                }
            },
            "21": {
                "start": {
                    "line": 164,
                    "column": 12
                },
                "end": {
                    "line": 164,
                    "column": 48
                }
            },
            "22": {
                "start": {
                    "line": 169,
                    "column": 12
                },
                "end": {
                    "line": 169,
                    "column": 38
                }
            },
            "23": {
                "start": {
                    "line": 173,
                    "column": 8
                },
                "end": {
                    "line": 173,
                    "column": 65
                }
            },
            "24": {
                "start": {
                    "line": 177,
                    "column": 8
                },
                "end": {
                    "line": 177,
                    "column": 70
                }
            },
            "25": {
                "start": {
                    "line": 197,
                    "column": 8
                },
                "end": {
                    "line": 199,
                    "column": 29
                }
            },
            "26": {
                "start": {
                    "line": 202,
                    "column": 8
                },
                "end": {
                    "line": 202,
                    "column": 58
                }
            },
            "27": {
                "start": {
                    "line": 202,
                    "column": 42
                },
                "end": {
                    "line": 202,
                    "column": 56
                }
            },
            "28": {
                "start": {
                    "line": 204,
                    "column": 8
                },
                "end": {
                    "line": 210,
                    "column": 9
                }
            },
            "29": {
                "start": {
                    "line": 207,
                    "column": 12
                },
                "end": {
                    "line": 209,
                    "column": 15
                }
            },
            "30": {
                "start": {
                    "line": 208,
                    "column": 16
                },
                "end": {
                    "line": 208,
                    "column": 42
                }
            },
            "31": {
                "start": {
                    "line": 212,
                    "column": 8
                },
                "end": {
                    "line": 212,
                    "column": 39
                }
            },
            "32": {
                "start": {
                    "line": 215,
                    "column": 8
                },
                "end": {
                    "line": 217,
                    "column": 9
                }
            },
            "33": {
                "start": {
                    "line": 216,
                    "column": 12
                },
                "end": {
                    "line": 216,
                    "column": 38
                }
            },
            "34": {
                "start": {
                    "line": 219,
                    "column": 8
                },
                "end": {
                    "line": 219,
                    "column": 15
                }
            },
            "35": {
                "start": {
                    "line": 224,
                    "column": 0
                },
                "end": {
                    "line": 224,
                    "column": 63
                }
            },
            "36": {
                "start": {
                    "line": 227,
                    "column": 0
                },
                "end": {
                    "line": 227,
                    "column": 47
                }
            },
            "37": {
                "start": {
                    "line": 230,
                    "column": 0
                },
                "end": {
                    "line": 230,
                    "column": 27
                }
            },
            "38": {
                "start": {
                    "line": 231,
                    "column": 0
                },
                "end": {
                    "line": 231,
                    "column": 32
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 121,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 121,
                            "column": 8
                        },
                        "end": {
                            "line": 121,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 121,
                            "column": 8
                        },
                        "end": {
                            "line": 121,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 131,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 131,
                            "column": 25
                        },
                        "end": {
                            "line": 131,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 131,
                            "column": 41
                        },
                        "end": {
                            "line": 131,
                            "column": 43
                        }
                    }
                ]
            },
            "3": {
                "line": 132,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 132,
                            "column": 52
                        },
                        "end": {
                            "line": 132,
                            "column": 56
                        }
                    },
                    {
                        "start": {
                            "line": 132,
                            "column": 59
                        },
                        "end": {
                            "line": 132,
                            "column": 68
                        }
                    }
                ]
            },
            "4": {
                "line": 133,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 133,
                            "column": 52
                        },
                        "end": {
                            "line": 133,
                            "column": 63
                        }
                    },
                    {
                        "start": {
                            "line": 133,
                            "column": 66
                        },
                        "end": {
                            "line": 133,
                            "column": 68
                        }
                    }
                ]
            },
            "5": {
                "line": 144,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 144,
                            "column": 8
                        },
                        "end": {
                            "line": 144,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 144,
                            "column": 8
                        },
                        "end": {
                            "line": 144,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 144,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 144,
                            "column": 12
                        },
                        "end": {
                            "line": 144,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 144,
                            "column": 23
                        },
                        "end": {
                            "line": 144,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 145,
                            "column": 16
                        },
                        "end": {
                            "line": 145,
                            "column": 54
                        }
                    }
                ]
            },
            "7": {
                "line": 153,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 153,
                            "column": 8
                        },
                        "end": {
                            "line": 153,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 153,
                            "column": 8
                        },
                        "end": {
                            "line": 153,
                            "column": 8
                        }
                    }
                ]
            },
            "8": {
                "line": 153,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 153,
                            "column": 12
                        },
                        "end": {
                            "line": 153,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 153,
                            "column": 23
                        },
                        "end": {
                            "line": 153,
                            "column": 52
                        }
                    }
                ]
            },
            "9": {
                "line": 156,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 156,
                            "column": 20
                        },
                        "end": {
                            "line": 156,
                            "column": 28
                        }
                    },
                    {
                        "start": {
                            "line": 156,
                            "column": 32
                        },
                        "end": {
                            "line": 156,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 156,
                            "column": 50
                        },
                        "end": {
                            "line": 156,
                            "column": 56
                        }
                    }
                ]
            },
            "10": {
                "line": 159,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 160,
                            "column": 20
                        },
                        "end": {
                            "line": 160,
                            "column": 57
                        }
                    },
                    {
                        "start": {
                            "line": 160,
                            "column": 60
                        },
                        "end": {
                            "line": 160,
                            "column": 64
                        }
                    }
                ]
            },
            "11": {
                "line": 202,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 202,
                            "column": 8
                        },
                        "end": {
                            "line": 202,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 202,
                            "column": 8
                        },
                        "end": {
                            "line": 202,
                            "column": 8
                        }
                    }
                ]
            },
            "12": {
                "line": 202,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 202,
                            "column": 14
                        },
                        "end": {
                            "line": 202,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 202,
                            "column": 25
                        },
                        "end": {
                            "line": 202,
                            "column": 37
                        }
                    }
                ]
            },
            "13": {
                "line": 204,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 204,
                            "column": 8
                        },
                        "end": {
                            "line": 204,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 204,
                            "column": 8
                        },
                        "end": {
                            "line": 204,
                            "column": 8
                        }
                    }
                ]
            },
            "14": {
                "line": 204,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 204,
                            "column": 12
                        },
                        "end": {
                            "line": 204,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 204,
                            "column": 29
                        },
                        "end": {
                            "line": 204,
                            "column": 32
                        }
                    }
                ]
            },
            "15": {
                "line": 215,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 215,
                            "column": 8
                        },
                        "end": {
                            "line": 215,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 215,
                            "column": 8
                        },
                        "end": {
                            "line": 215,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('app-content', function (Y, NAME) {",
            "",
            "/**",
            "`Y.App` extension that provides pjax-style content fetching and handling.",
            "",
            "@module app",
            "@submodule app-content",
            "@since 3.7.0",
            "**/",
            "",
            "var PjaxContent = Y.PjaxContent;",
            "",
            "/**",
            "`Y.App` extension that provides pjax-style content fetching and handling.",
            "",
            "This makes it easy to fetch server rendered content for URLs using Ajax. The",
            "HTML content returned from the server will be view-ified and set as the app's",
            "main content, making it seamless to use a mixture of server and client rendered",
            "views.",
            "",
            "When the `\"app-content\"` module is used, it will automatically mix itself into",
            "`Y.App`, and it provides three main features:",
            "",
            "  - **`Y.App.Content.route`**: A stack of middleware which forms a pjax-style",
            "    content route.",
            "",
            "  - **`loadContent()`**: Route middleware which load content from a server. This",
            "    makes an Ajax request for the requested URL, parses the returned content and",
            "    puts it on the route's response object.",
            "",
            "  - **`showContent()`**: Method which provides an easy way to view-ify HTML",
            "    content which should be shown as an app's active/visible view.",
            "",
            "The following is an example of how these features can be used:",
            "",
            "    // Creates a new app and registers the `\"post\"` view.",
            "    var app = new Y.App({",
            "        views: {",
            "            post: {type: Y.PostView}",
            "        }",
            "    });",
            "",
            "    // Uses a simple server rendered content route for the About page.",
            "    app.route('/about/', Y.App.Content.route);",
            "",
            "    // Uses the `loadContent()` middleware to fetch the contents of the post",
            "    // from the server and shows that content in a `\"post\"` view.",
            "    app.route('/posts/:id/', 'loadContent', function (req, res, next) {",
            "        this.showContent(res.content.node, {view: 'post'});",
            "    });",
            "",
            "@class App.Content",
            "@uses PjaxContent",
            "@extensionfor App",
            "@since 3.7.0",
            "**/",
            "function AppContent() {",
            "    PjaxContent.apply(this, arguments);",
            "}",
            "",
            "/**",
            "A stack of middleware which forms a pjax-style content route.",
            "",
            "This route will load the rendered HTML content from the server, then create and",
            "show a new view using those contents.",
            "",
            "@property route",
            "@type Array",
            "@static",
            "@since 3.7.0",
            "**/",
            "AppContent.route = ['loadContent', '_contentRoute'];",
            "",
            "AppContent.prototype = {",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Sets this app's `activeView` attribute using the specified `content`.",
            "",
            "    This provides an easy way to view-ify HTML content which should be shown as",
            "    this app's active/visible view. This method will determine the appropriate",
            "    view `container` node based on the specified `content`. By default, a new",
            "    `Y.View` instance will be created unless `options.view` is specified.",
            "",
            "    Under the hood, this method calls the `showView()` method, so refer to its",
            "    docs for more information.",
            "",
            "    @method showContent",
            "    @param {HTMLElement|Node|String} content The content to show, it may be",
            "        provided as a selector string, a DOM element, or a `Y.Node` instance.",
            "    @param {Object} [options] Optional objects containing any of the following",
            "        properties in addition to any `showView()` options:",
            "",
            "      @param {Object|String} [options.view] The name of a view defined in this",
            "          app's `views`, or an object with the following properties:",
            "",
            "        @param {String} options.view.name The name of a view defined in this",
            "            app's `views`.",
            "        @param {Object} [options.view.config] Optional configuration to use when",
            "            creating the new view instance. This config object can also be used",
            "            to update an existing or preserved view's attributes when",
            "            `options.update` is `true`. **Note:** If a `container` is specified,",
            "            it will be overridden by the `content` specified in the first",
            "            argument.",
            "",
            "    @param {Function} [callback] Optional callback function to call after the",
            "        new `activeView` is ready to use. **Note:** this will override",
            "        `options.callback` and it can be specified as either the second or third",
            "        argument. The function will be passed the following:",
            "",
            "      @param {View} callback.view A reference to the new `activeView`.",
            "",
            "    @since 3.7.0",
            "    @see App.showView()",
            "    **/",
            "    showContent: function (content, options, callback) {",
            "        // Makes sure we have a node instance, and will query selector strings.",
            "        content = Y.one(content);",
            "",
            "        // Support the callback function being either the second or third arg.",
            "        if (typeof options === 'function') {",
            "            options  = {callback: options};",
            "            callback = null;",
            "        }",
            "",
            "        // Mix in default option to *not* render the view because presumably we",
            "        // have pre-rendered content here. This also creates a copy so we can",
            "        // modify the object.",
            "        options = Y.merge({render: false}, options);",
            "",
            "        var view       = options.view || '',",
            "            viewName   = typeof view === 'string' ? view : view.name,",
            "            viewConfig = typeof view !== 'string' ? view.config : {},",
            "            viewInfo   = this.getViewInfo(viewName),",
            "            container, template, type, ViewConstructor;",
            "",
            "        // Remove `view` from the `options` which will be passed along to the",
            "        // `showView()` method.",
            "        delete options.view;",
            "",
            "        // When the specified `content` is a document fragment, we want to see",
            "        // if it only contains a single node, and use that as the content. This",
            "        // checks `childNodes` which will include text nodes.",
            "        if (content && content.isFragment() &&",
            "                content.get('childNodes').size() === 1) {",
            "",
            "            content = content.get('firstChild');",
            "        }",
            "",
            "        // When the `content` is an element node (`nodeType` 1), we can use it",
            "        // as-is for the `container`. Otherwise, we'll construct a new container",
            "        // based on the `options.view`'s `containerTemplate`.",
            "        if (content && content.get('nodeType') === 1) {",
            "            container = content;",
            "        } else {",
            "            type = (viewInfo && viewInfo.type) || Y.View;",
            "",
            "            // Looks for a namespaced constructor function on `Y`.",
            "            ViewConstructor = typeof type === 'string' ?",
            "                    Y.Object.getValue(Y, type.split('.')) : type;",
            "",
            "            // Find the correct node template for the view.",
            "            template  = ViewConstructor.prototype.containerTemplate;",
            "            container = Y.Node.create(template);",
            "",
            "            // Append the document fragment to the newly created `container`",
            "            // node. This is the worst case where we have to create a wrapper",
            "            // node around the `content`.",
            "            container.append(content);",
            "        }",
            "",
            "        // Makes sure the view is created using _our_ `container` node.",
            "        viewConfig = Y.merge(viewConfig, {container: container});",
            "",
            "        // Finally switch to the new `activeView`. We want to make sure `view`",
            "        // is a string if it's falsy, that way a new view will be created.",
            "        return this.showView(viewName, viewConfig, options, callback);",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Provides a default content route which will show a server rendered view.",
            "",
            "    **Note:** This route callback assumes that it's called after the",
            "    `loadContent()` middleware.",
            "",
            "    @method _contentRoute",
            "    @param {Object} req Request object.",
            "    @param {Object} res Response Object.",
            "    @param {Function} next Function to pass control to the next route callback.",
            "    @protected",
            "    @since 3.7.0",
            "    @see Y.App.Content.route",
            "    **/",
            "    _contentRoute: function (req, res, next) {",
            "        var content = res.content,",
            "            doc     = Y.config.doc,",
            "            activeViewHandle;",
            "",
            "        // We must have some content to work with.",
            "        if (!(content && content.node)) { return next(); }",
            "",
            "        if (content.title && doc) {",
            "            // Make sure the `activeView` does actually change before we go",
            "            // messing with the page title.",
            "            activeViewHandle = this.onceAfter('activeViewChange', function () {",
            "                doc.title = content.title;",
            "            });",
            "        }",
            "",
            "        this.showContent(content.node);",
            "",
            "        // Detach the handle just in case.",
            "        if (activeViewHandle) {",
            "            activeViewHandle.detach();",
            "        }",
            "",
            "        next();",
            "    }",
            "};",
            "",
            "// Mix statics.",
            "AppContent.ATTRS = Y.Attribute.protectAttrs(PjaxContent.ATTRS);",
            "",
            "// Mix prototype.",
            "Y.mix(AppContent, PjaxContent, false, null, 1);",
            "",
            "// -- Namespace ----------------------------------------------------------------",
            "Y.App.Content = AppContent;",
            "Y.Base.mix(Y.App, [AppContent]);",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"app-base\", \"pjax-content\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "11": 1,
            "57": 1,
            "58": 102,
            "72": 1,
            "74": 1,
            "118": 18,
            "121": 18,
            "122": 1,
            "123": 1,
            "129": 18,
            "131": 18,
            "139": 18,
            "144": 18,
            "147": 2,
            "153": 18,
            "154": 12,
            "156": 6,
            "159": 6,
            "163": 6,
            "164": 6,
            "169": 6,
            "173": 18,
            "177": 18,
            "197": 3,
            "202": 3,
            "204": 3,
            "207": 2,
            "208": 2,
            "212": 3,
            "215": 3,
            "216": 2,
            "219": 3,
            "224": 1,
            "227": 1,
            "230": 1,
            "231": 1
        }
    },
    "build/model/model.js": {
        "path": "build/model/model.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 293,
            "5": 1,
            "6": 293,
            "7": 293,
            "8": 293,
            "9": 8,
            "10": 8,
            "11": 1,
            "12": 1,
            "13": 8,
            "14": 8,
            "15": 8,
            "16": 7,
            "17": 3,
            "18": 8,
            "19": 8,
            "20": 4,
            "21": 4,
            "22": 8,
            "23": 295,
            "24": 295,
            "25": 9,
            "26": 9,
            "27": 26,
            "28": 26,
            "29": 5,
            "30": 61,
            "31": 11,
            "32": 11,
            "33": 3,
            "34": 3,
            "35": 11,
            "36": 11,
            "37": 11,
            "38": 11,
            "39": 2,
            "40": 2,
            "41": 2,
            "42": 9,
            "43": 6,
            "44": 9,
            "45": 9,
            "46": 9,
            "47": 9,
            "48": 11,
            "49": 11,
            "50": 19,
            "51": 9,
            "52": 9,
            "53": 3,
            "54": 3,
            "55": 10,
            "56": 31,
            "57": 31,
            "58": 3,
            "59": 3,
            "60": 31,
            "61": 31,
            "62": 31,
            "63": 4,
            "64": 4,
            "65": 27,
            "66": 25,
            "67": 25,
            "68": 2,
            "69": 2,
            "70": 2,
            "71": 23,
            "72": 20,
            "73": 23,
            "74": 8,
            "75": 8,
            "76": 23,
            "77": 23,
            "78": 25,
            "79": 31,
            "80": 1074,
            "81": 1074,
            "82": 1074,
            "83": 1106,
            "84": 1106,
            "85": 1106,
            "86": 1106,
            "87": 109,
            "88": 109,
            "89": 28,
            "90": 81,
            "91": 29,
            "92": 1106,
            "93": 1166,
            "94": 1166,
            "95": 1106,
            "96": 61,
            "97": 61,
            "98": 61,
            "99": 82,
            "100": 82,
            "101": 82,
            "102": 82,
            "103": 61,
            "104": 58,
            "105": 41,
            "106": 58,
            "107": 58,
            "108": 1106,
            "109": 22,
            "110": 22,
            "111": 22,
            "112": 53,
            "113": 53,
            "114": 53,
            "115": 53,
            "116": 53,
            "117": 2,
            "118": 53,
            "119": 5,
            "120": 5,
            "121": 5,
            "122": 8,
            "123": 8,
            "124": 8,
            "125": 8,
            "126": 5,
            "127": 25,
            "128": 2731,
            "129": 2731,
            "130": 532,
            "131": 532,
            "132": 532,
            "133": 453,
            "134": 453,
            "135": 442,
            "136": 532,
            "137": 532,
            "138": 72,
            "139": 72,
            "140": 15,
            "141": 57,
            "142": 2731,
            "143": 10,
            "144": 31,
            "145": 31,
            "146": 31,
            "147": 4,
            "148": 4,
            "149": 4,
            "150": 27,
            "151": 31,
            "152": 2,
            "153": 29,
            "154": 1479,
            "155": 1479,
            "156": 82,
            "157": 1479
        },
        "b": {
            "1": [
                1,
                7
            ],
            "2": [
                7,
                1
            ],
            "3": [
                8,
                4
            ],
            "4": [
                4,
                4
            ],
            "5": [
                8,
                5,
                1
            ],
            "6": [
                295,
                0
            ],
            "7": [
                6,
                3
            ],
            "8": [
                18,
                8
            ],
            "9": [
                5,
                4
            ],
            "10": [
                3,
                8
            ],
            "11": [
                11,
                5
            ],
            "12": [
                2,
                9
            ],
            "13": [
                6,
                3
            ],
            "14": [
                11,
                4
            ],
            "15": [
                9,
                10
            ],
            "16": [
                3,
                28
            ],
            "17": [
                31,
                17
            ],
            "18": [
                4,
                27
            ],
            "19": [
                4,
                1
            ],
            "20": [
                22,
                5
            ],
            "21": [
                2,
                23
            ],
            "22": [
                20,
                3
            ],
            "23": [
                8,
                15
            ],
            "24": [
                25,
                10
            ],
            "25": [
                109,
                997
            ],
            "26": [
                28,
                81
            ],
            "27": [
                29,
                52
            ],
            "28": [
                1166,
                0
            ],
            "29": [
                61,
                1045
            ],
            "30": [
                82,
                0
            ],
            "31": [
                82,
                74
            ],
            "32": [
                58,
                3
            ],
            "33": [
                41,
                17
            ],
            "34": [
                22,
                0
            ],
            "35": [
                2,
                51
            ],
            "36": [
                5,
                4
            ],
            "37": [
                8,
                0
            ],
            "38": [
                1,
                7
            ],
            "39": [
                4,
                1
            ],
            "40": [
                25,
                25
            ],
            "41": [
                532,
                2199
            ],
            "42": [
                2731,
                2731
            ],
            "43": [
                532,
                505
            ],
            "44": [
                259,
                273
            ],
            "45": [
                453,
                79
            ],
            "46": [
                442,
                11
            ],
            "47": [
                442,
                11
            ],
            "48": [
                6,
                436
            ],
            "49": [
                72,
                460
            ],
            "50": [
                15,
                57
            ],
            "51": [
                4,
                27
            ],
            "52": [
                2,
                29
            ],
            "53": [
                1479,
                1163
            ],
            "54": [
                1479,
                1466
            ],
            "55": [
                82,
                1397
            ],
            "56": [
                1479,
                1232,
                916
            ],
            "57": [
                82,
                74
            ]
        },
        "f": {
            "1": 1,
            "2": 293,
            "3": 293,
            "4": 8,
            "5": 8,
            "6": 8,
            "7": 3,
            "8": 295,
            "9": 9,
            "10": 26,
            "11": 5,
            "12": 61,
            "13": 11,
            "14": 11,
            "15": 19,
            "16": 31,
            "17": 31,
            "18": 25,
            "19": 1074,
            "20": 1106,
            "21": 22,
            "22": 53,
            "23": 5,
            "24": 8,
            "25": 25,
            "26": 2731,
            "27": 10,
            "28": 31,
            "29": 31,
            "30": 1479
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 17
                    },
                    "end": {
                        "line": 1,
                        "column": 36
                    }
                }
            },
            "2": {
                "name": "Model",
                "line": 95,
                "loc": {
                    "start": {
                        "line": 95,
                        "column": 0
                    },
                    "end": {
                        "line": 95,
                        "column": 17
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 199,
                "loc": {
                    "start": {
                        "line": 199,
                        "column": 17
                    },
                    "end": {
                        "line": 199,
                        "column": 35
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 232,
                "loc": {
                    "start": {
                        "line": 232,
                        "column": 13
                    },
                    "end": {
                        "line": 232,
                        "column": 42
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 241,
                "loc": {
                    "start": {
                        "line": 241,
                        "column": 34
                    },
                    "end": {
                        "line": 241,
                        "column": 46
                    }
                }
            },
            "6": {
                "name": "finish",
                "line": 242,
                "loc": {
                    "start": {
                        "line": 242,
                        "column": 12
                    },
                    "end": {
                        "line": 242,
                        "column": 33
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 244,
                "loc": {
                    "start": {
                        "line": 244,
                        "column": 53
                    },
                    "end": {
                        "line": 244,
                        "column": 69
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 270,
                "loc": {
                    "start": {
                        "line": 270,
                        "column": 22
                    },
                    "end": {
                        "line": 270,
                        "column": 34
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 314,
                "loc": {
                    "start": {
                        "line": 314,
                        "column": 15
                    },
                    "end": {
                        "line": 314,
                        "column": 31
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 328,
                "loc": {
                    "start": {
                        "line": 328,
                        "column": 14
                    },
                    "end": {
                        "line": 328,
                        "column": 30
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 344,
                "loc": {
                    "start": {
                        "line": 344,
                        "column": 16
                    },
                    "end": {
                        "line": 344,
                        "column": 28
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 360,
                "loc": {
                    "start": {
                        "line": 360,
                        "column": 11
                    },
                    "end": {
                        "line": 360,
                        "column": 23
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 390,
                "loc": {
                    "start": {
                        "line": 390,
                        "column": 10
                    },
                    "end": {
                        "line": 390,
                        "column": 39
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 401,
                "loc": {
                    "start": {
                        "line": 401,
                        "column": 35
                    },
                    "end": {
                        "line": 401,
                        "column": 60
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 453,
                "loc": {
                    "start": {
                        "line": 453,
                        "column": 11
                    },
                    "end": {
                        "line": 453,
                        "column": 31
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 498,
                "loc": {
                    "start": {
                        "line": 498,
                        "column": 10
                    },
                    "end": {
                        "line": 498,
                        "column": 39
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 509,
                "loc": {
                    "start": {
                        "line": 509,
                        "column": 38
                    },
                    "end": {
                        "line": 509,
                        "column": 53
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 515,
                "loc": {
                    "start": {
                        "line": 515,
                        "column": 67
                    },
                    "end": {
                        "line": 515,
                        "column": 92
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 570,
                "loc": {
                    "start": {
                        "line": 570,
                        "column": 9
                    },
                    "end": {
                        "line": 570,
                        "column": 41
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 595,
                "loc": {
                    "start": {
                        "line": 595,
                        "column": 14
                    },
                    "end": {
                        "line": 595,
                        "column": 45
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 683,
                "loc": {
                    "start": {
                        "line": 683,
                        "column": 10
                    },
                    "end": {
                        "line": 683,
                        "column": 53
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 711,
                "loc": {
                    "start": {
                        "line": 711,
                        "column": 12
                    },
                    "end": {
                        "line": 711,
                        "column": 24
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 747,
                "loc": {
                    "start": {
                        "line": 747,
                        "column": 10
                    },
                    "end": {
                        "line": 747,
                        "column": 40
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 755,
                "loc": {
                    "start": {
                        "line": 755,
                        "column": 31
                    },
                    "end": {
                        "line": 755,
                        "column": 47
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 808,
                "loc": {
                    "start": {
                        "line": 808,
                        "column": 14
                    },
                    "end": {
                        "line": 808,
                        "column": 41
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 832,
                "loc": {
                    "start": {
                        "line": 832,
                        "column": 13
                    },
                    "end": {
                        "line": 832,
                        "column": 43
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 883,
                "loc": {
                    "start": {
                        "line": 883,
                        "column": 12
                    },
                    "end": {
                        "line": 883,
                        "column": 32
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 897,
                "loc": {
                    "start": {
                        "line": 897,
                        "column": 15
                    },
                    "end": {
                        "line": 897,
                        "column": 47
                    }
                }
            },
            "29": {
                "name": "handler",
                "line": 900,
                "loc": {
                    "start": {
                        "line": 900,
                        "column": 8
                    },
                    "end": {
                        "line": 900,
                        "column": 30
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 946,
                "loc": {
                    "start": {
                        "line": 946,
                        "column": 18
                    },
                    "end": {
                        "line": 946,
                        "column": 82
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 1007,
                    "column": 70
                }
            },
            "2": {
                "start": {
                    "line": 27,
                    "column": 0
                },
                "end": {
                    "line": 93,
                    "column": 22
                }
            },
            "3": {
                "start": {
                    "line": 95,
                    "column": 0
                },
                "end": {
                    "line": 97,
                    "column": 1
                }
            },
            "4": {
                "start": {
                    "line": 96,
                    "column": 4
                },
                "end": {
                    "line": 96,
                    "column": 56
                }
            },
            "5": {
                "start": {
                    "line": 99,
                    "column": 0
                },
                "end": {
                    "line": 1004,
                    "column": 3
                }
            },
            "6": {
                "start": {
                    "line": 200,
                    "column": 8
                },
                "end": {
                    "line": 200,
                    "column": 29
                }
            },
            "7": {
                "start": {
                    "line": 201,
                    "column": 8
                },
                "end": {
                    "line": 201,
                    "column": 29
                }
            },
            "8": {
                "start": {
                    "line": 202,
                    "column": 8
                },
                "end": {
                    "line": 202,
                    "column": 29
                }
            },
            "9": {
                "start": {
                    "line": 233,
                    "column": 8
                },
                "end": {
                    "line": 233,
                    "column": 24
                }
            },
            "10": {
                "start": {
                    "line": 236,
                    "column": 8
                },
                "end": {
                    "line": 239,
                    "column": 9
                }
            },
            "11": {
                "start": {
                    "line": 237,
                    "column": 12
                },
                "end": {
                    "line": 237,
                    "column": 31
                }
            },
            "12": {
                "start": {
                    "line": 238,
                    "column": 12
                },
                "end": {
                    "line": 238,
                    "column": 28
                }
            },
            "13": {
                "start": {
                    "line": 241,
                    "column": 8
                },
                "end": {
                    "line": 257,
                    "column": 11
                }
            },
            "14": {
                "start": {
                    "line": 242,
                    "column": 12
                },
                "end": {
                    "line": 250,
                    "column": 13
                }
            },
            "15": {
                "start": {
                    "line": 243,
                    "column": 16
                },
                "end": {
                    "line": 247,
                    "column": 17
                }
            },
            "16": {
                "start": {
                    "line": 244,
                    "column": 20
                },
                "end": {
                    "line": 246,
                    "column": 23
                }
            },
            "17": {
                "start": {
                    "line": 245,
                    "column": 24
                },
                "end": {
                    "line": 245,
                    "column": 51
                }
            },
            "18": {
                "start": {
                    "line": 249,
                    "column": 16
                },
                "end": {
                    "line": 249,
                    "column": 60
                }
            },
            "19": {
                "start": {
                    "line": 252,
                    "column": 12
                },
                "end": {
                    "line": 256,
                    "column": 13
                }
            },
            "20": {
                "start": {
                    "line": 253,
                    "column": 16
                },
                "end": {
                    "line": 253,
                    "column": 53
                }
            },
            "21": {
                "start": {
                    "line": 255,
                    "column": 16
                },
                "end": {
                    "line": 255,
                    "column": 25
                }
            },
            "22": {
                "start": {
                    "line": 259,
                    "column": 8
                },
                "end": {
                    "line": 259,
                    "column": 51
                }
            },
            "23": {
                "start": {
                    "line": 271,
                    "column": 8
                },
                "end": {
                    "line": 271,
                    "column": 51
                }
            },
            "24": {
                "start": {
                    "line": 272,
                    "column": 8
                },
                "end": {
                    "line": 272,
                    "column": 69
                }
            },
            "25": {
                "start": {
                    "line": 315,
                    "column": 8
                },
                "end": {
                    "line": 315,
                    "column": 35
                }
            },
            "26": {
                "start": {
                    "line": 316,
                    "column": 8
                },
                "end": {
                    "line": 316,
                    "column": 71
                }
            },
            "27": {
                "start": {
                    "line": 329,
                    "column": 8
                },
                "end": {
                    "line": 329,
                    "column": 35
                }
            },
            "28": {
                "start": {
                    "line": 330,
                    "column": 8
                },
                "end": {
                    "line": 330,
                    "column": 76
                }
            },
            "29": {
                "start": {
                    "line": 345,
                    "column": 8
                },
                "end": {
                    "line": 345,
                    "column": 62
                }
            },
            "30": {
                "start": {
                    "line": 361,
                    "column": 8
                },
                "end": {
                    "line": 361,
                    "column": 45
                }
            },
            "31": {
                "start": {
                    "line": 391,
                    "column": 8
                },
                "end": {
                    "line": 391,
                    "column": 24
                }
            },
            "32": {
                "start": {
                    "line": 394,
                    "column": 8
                },
                "end": {
                    "line": 397,
                    "column": 9
                }
            },
            "33": {
                "start": {
                    "line": 395,
                    "column": 12
                },
                "end": {
                    "line": 395,
                    "column": 31
                }
            },
            "34": {
                "start": {
                    "line": 396,
                    "column": 12
                },
                "end": {
                    "line": 396,
                    "column": 26
                }
            },
            "35": {
                "start": {
                    "line": 399,
                    "column": 8
                },
                "end": {
                    "line": 399,
                    "column": 34
                }
            },
            "36": {
                "start": {
                    "line": 401,
                    "column": 8
                },
                "end": {
                    "line": 431,
                    "column": 11
                }
            },
            "37": {
                "start": {
                    "line": 402,
                    "column": 12
                },
                "end": {
                    "line": 407,
                    "column": 23
                }
            },
            "38": {
                "start": {
                    "line": 409,
                    "column": 12
                },
                "end": {
                    "line": 428,
                    "column": 13
                }
            },
            "39": {
                "start": {
                    "line": 410,
                    "column": 16
                },
                "end": {
                    "line": 410,
                    "column": 35
                }
            },
            "40": {
                "start": {
                    "line": 411,
                    "column": 16
                },
                "end": {
                    "line": 411,
                    "column": 38
                }
            },
            "41": {
                "start": {
                    "line": 413,
                    "column": 16
                },
                "end": {
                    "line": 413,
                    "column": 45
                }
            },
            "42": {
                "start": {
                    "line": 416,
                    "column": 16
                },
                "end": {
                    "line": 420,
                    "column": 17
                }
            },
            "43": {
                "start": {
                    "line": 417,
                    "column": 20
                },
                "end": {
                    "line": 419,
                    "column": 23
                }
            },
            "44": {
                "start": {
                    "line": 422,
                    "column": 16
                },
                "end": {
                    "line": 422,
                    "column": 63
                }
            },
            "45": {
                "start": {
                    "line": 424,
                    "column": 16
                },
                "end": {
                    "line": 424,
                    "column": 47
                }
            },
            "46": {
                "start": {
                    "line": 425,
                    "column": 16
                },
                "end": {
                    "line": 425,
                    "column": 34
                }
            },
            "47": {
                "start": {
                    "line": 427,
                    "column": 16
                },
                "end": {
                    "line": 427,
                    "column": 44
                }
            },
            "48": {
                "start": {
                    "line": 430,
                    "column": 12
                },
                "end": {
                    "line": 430,
                    "column": 56
                }
            },
            "49": {
                "start": {
                    "line": 433,
                    "column": 8
                },
                "end": {
                    "line": 433,
                    "column": 20
                }
            },
            "50": {
                "start": {
                    "line": 454,
                    "column": 8
                },
                "end": {
                    "line": 466,
                    "column": 9
                }
            },
            "51": {
                "start": {
                    "line": 455,
                    "column": 12
                },
                "end": {
                    "line": 465,
                    "column": 13
                }
            },
            "52": {
                "start": {
                    "line": 456,
                    "column": 16
                },
                "end": {
                    "line": 456,
                    "column": 46
                }
            },
            "53": {
                "start": {
                    "line": 458,
                    "column": 16
                },
                "end": {
                    "line": 462,
                    "column": 19
                }
            },
            "54": {
                "start": {
                    "line": 464,
                    "column": 16
                },
                "end": {
                    "line": 464,
                    "column": 28
                }
            },
            "55": {
                "start": {
                    "line": 468,
                    "column": 8
                },
                "end": {
                    "line": 468,
                    "column": 24
                }
            },
            "56": {
                "start": {
                    "line": 499,
                    "column": 8
                },
                "end": {
                    "line": 499,
                    "column": 24
                }
            },
            "57": {
                "start": {
                    "line": 502,
                    "column": 8
                },
                "end": {
                    "line": 505,
                    "column": 9
                }
            },
            "58": {
                "start": {
                    "line": 503,
                    "column": 12
                },
                "end": {
                    "line": 503,
                    "column": 31
                }
            },
            "59": {
                "start": {
                    "line": 504,
                    "column": 12
                },
                "end": {
                    "line": 504,
                    "column": 26
                }
            },
            "60": {
                "start": {
                    "line": 507,
                    "column": 8
                },
                "end": {
                    "line": 507,
                    "column": 34
                }
            },
            "61": {
                "start": {
                    "line": 509,
                    "column": 8
                },
                "end": {
                    "line": 547,
                    "column": 11
                }
            },
            "62": {
                "start": {
                    "line": 510,
                    "column": 12
                },
                "end": {
                    "line": 513,
                    "column": 13
                }
            },
            "63": {
                "start": {
                    "line": 511,
                    "column": 16
                },
                "end": {
                    "line": 511,
                    "column": 53
                }
            },
            "64": {
                "start": {
                    "line": 512,
                    "column": 16
                },
                "end": {
                    "line": 512,
                    "column": 23
                }
            },
            "65": {
                "start": {
                    "line": 515,
                    "column": 12
                },
                "end": {
                    "line": 546,
                    "column": 15
                }
            },
            "66": {
                "start": {
                    "line": 516,
                    "column": 16
                },
                "end": {
                    "line": 521,
                    "column": 27
                }
            },
            "67": {
                "start": {
                    "line": 523,
                    "column": 16
                },
                "end": {
                    "line": 543,
                    "column": 17
                }
            },
            "68": {
                "start": {
                    "line": 524,
                    "column": 20
                },
                "end": {
                    "line": 524,
                    "column": 39
                }
            },
            "69": {
                "start": {
                    "line": 525,
                    "column": 20
                },
                "end": {
                    "line": 525,
                    "column": 42
                }
            },
            "70": {
                "start": {
                    "line": 527,
                    "column": 20
                },
                "end": {
                    "line": 527,
                    "column": 49
                }
            },
            "71": {
                "start": {
                    "line": 530,
                    "column": 20
                },
                "end": {
                    "line": 534,
                    "column": 21
                }
            },
            "72": {
                "start": {
                    "line": 531,
                    "column": 24
                },
                "end": {
                    "line": 533,
                    "column": 27
                }
            },
            "73": {
                "start": {
                    "line": 536,
                    "column": 20
                },
                "end": {
                    "line": 539,
                    "column": 21
                }
            },
            "74": {
                "start": {
                    "line": 537,
                    "column": 24
                },
                "end": {
                    "line": 537,
                    "column": 71
                }
            },
            "75": {
                "start": {
                    "line": 538,
                    "column": 24
                },
                "end": {
                    "line": 538,
                    "column": 55
                }
            },
            "76": {
                "start": {
                    "line": 541,
                    "column": 20
                },
                "end": {
                    "line": 541,
                    "column": 38
                }
            },
            "77": {
                "start": {
                    "line": 542,
                    "column": 20
                },
                "end": {
                    "line": 542,
                    "column": 48
                }
            },
            "78": {
                "start": {
                    "line": 545,
                    "column": 16
                },
                "end": {
                    "line": 545,
                    "column": 60
                }
            },
            "79": {
                "start": {
                    "line": 549,
                    "column": 8
                },
                "end": {
                    "line": 549,
                    "column": 20
                }
            },
            "80": {
                "start": {
                    "line": 571,
                    "column": 8
                },
                "end": {
                    "line": 571,
                    "column": 28
                }
            },
            "81": {
                "start": {
                    "line": 572,
                    "column": 8
                },
                "end": {
                    "line": 572,
                    "column": 33
                }
            },
            "82": {
                "start": {
                    "line": 574,
                    "column": 8
                },
                "end": {
                    "line": 574,
                    "column": 50
                }
            },
            "83": {
                "start": {
                    "line": 596,
                    "column": 8
                },
                "end": {
                    "line": 597,
                    "column": 53
                }
            },
            "84": {
                "start": {
                    "line": 601,
                    "column": 8
                },
                "end": {
                    "line": 601,
                    "column": 39
                }
            },
            "85": {
                "start": {
                    "line": 602,
                    "column": 8
                },
                "end": {
                    "line": 602,
                    "column": 48
                }
            },
            "86": {
                "start": {
                    "line": 606,
                    "column": 8
                },
                "end": {
                    "line": 615,
                    "column": 9
                }
            },
            "87": {
                "start": {
                    "line": 608,
                    "column": 12
                },
                "end": {
                    "line": 608,
                    "column": 45
                }
            },
            "88": {
                "start": {
                    "line": 610,
                    "column": 12
                },
                "end": {
                    "line": 614,
                    "column": 13
                }
            },
            "89": {
                "start": {
                    "line": 611,
                    "column": 16
                },
                "end": {
                    "line": 611,
                    "column": 56
                }
            },
            "90": {
                "start": {
                    "line": 612,
                    "column": 19
                },
                "end": {
                    "line": 614,
                    "column": 13
                }
            },
            "91": {
                "start": {
                    "line": 613,
                    "column": 16
                },
                "end": {
                    "line": 613,
                    "column": 56
                }
            },
            "92": {
                "start": {
                    "line": 617,
                    "column": 8
                },
                "end": {
                    "line": 621,
                    "column": 9
                }
            },
            "93": {
                "start": {
                    "line": 618,
                    "column": 12
                },
                "end": {
                    "line": 620,
                    "column": 13
                }
            },
            "94": {
                "start": {
                    "line": 619,
                    "column": 16
                },
                "end": {
                    "line": 619,
                    "column": 61
                }
            },
            "95": {
                "start": {
                    "line": 623,
                    "column": 8
                },
                "end": {
                    "line": 653,
                    "column": 9
                }
            },
            "96": {
                "start": {
                    "line": 624,
                    "column": 12
                },
                "end": {
                    "line": 624,
                    "column": 38
                }
            },
            "97": {
                "start": {
                    "line": 625,
                    "column": 12
                },
                "end": {
                    "line": 625,
                    "column": 46
                }
            },
            "98": {
                "start": {
                    "line": 627,
                    "column": 12
                },
                "end": {
                    "line": 639,
                    "column": 13
                }
            },
            "99": {
                "start": {
                    "line": 628,
                    "column": 16
                },
                "end": {
                    "line": 638,
                    "column": 17
                }
            },
            "100": {
                "start": {
                    "line": 629,
                    "column": 20
                },
                "end": {
                    "line": 629,
                    "column": 41
                }
            },
            "101": {
                "start": {
                    "line": 631,
                    "column": 20
                },
                "end": {
                    "line": 631,
                    "column": 44
                }
            },
            "102": {
                "start": {
                    "line": 633,
                    "column": 20
                },
                "end": {
                    "line": 637,
                    "column": 22
                }
            },
            "103": {
                "start": {
                    "line": 641,
                    "column": 12
                },
                "end": {
                    "line": 652,
                    "column": 13
                }
            },
            "104": {
                "start": {
                    "line": 643,
                    "column": 16
                },
                "end": {
                    "line": 647,
                    "column": 17
                }
            },
            "105": {
                "start": {
                    "line": 644,
                    "column": 20
                },
                "end": {
                    "line": 646,
                    "column": 23
                }
            },
            "106": {
                "start": {
                    "line": 649,
                    "column": 16
                },
                "end": {
                    "line": 649,
                    "column": 45
                }
            },
            "107": {
                "start": {
                    "line": 651,
                    "column": 16
                },
                "end": {
                    "line": 651,
                    "column": 47
                }
            },
            "108": {
                "start": {
                    "line": 655,
                    "column": 8
                },
                "end": {
                    "line": 655,
                    "column": 20
                }
            },
            "109": {
                "start": {
                    "line": 684,
                    "column": 8
                },
                "end": {
                    "line": 684,
                    "column": 56
                }
            },
            "110": {
                "start": {
                    "line": 686,
                    "column": 8
                },
                "end": {
                    "line": 688,
                    "column": 9
                }
            },
            "111": {
                "start": {
                    "line": 687,
                    "column": 12
                },
                "end": {
                    "line": 687,
                    "column": 23
                }
            },
            "112": {
                "start": {
                    "line": 712,
                    "column": 8
                },
                "end": {
                    "line": 712,
                    "column": 36
                }
            },
            "113": {
                "start": {
                    "line": 714,
                    "column": 8
                },
                "end": {
                    "line": 714,
                    "column": 30
                }
            },
            "114": {
                "start": {
                    "line": 715,
                    "column": 8
                },
                "end": {
                    "line": 715,
                    "column": 31
                }
            },
            "115": {
                "start": {
                    "line": 716,
                    "column": 8
                },
                "end": {
                    "line": 716,
                    "column": 33
                }
            },
            "116": {
                "start": {
                    "line": 718,
                    "column": 8
                },
                "end": {
                    "line": 720,
                    "column": 9
                }
            },
            "117": {
                "start": {
                    "line": 719,
                    "column": 12
                },
                "end": {
                    "line": 719,
                    "column": 28
                }
            },
            "118": {
                "start": {
                    "line": 722,
                    "column": 8
                },
                "end": {
                    "line": 722,
                    "column": 21
                }
            },
            "119": {
                "start": {
                    "line": 748,
                    "column": 8
                },
                "end": {
                    "line": 751,
                    "column": 21
                }
            },
            "120": {
                "start": {
                    "line": 753,
                    "column": 8
                },
                "end": {
                    "line": 753,
                    "column": 60
                }
            },
            "121": {
                "start": {
                    "line": 755,
                    "column": 8
                },
                "end": {
                    "line": 763,
                    "column": 11
                }
            },
            "122": {
                "start": {
                    "line": 756,
                    "column": 12
                },
                "end": {
                    "line": 762,
                    "column": 13
                }
            },
            "123": {
                "start": {
                    "line": 758,
                    "column": 16
                },
                "end": {
                    "line": 758,
                    "column": 58
                }
            },
            "124": {
                "start": {
                    "line": 760,
                    "column": 16
                },
                "end": {
                    "line": 760,
                    "column": 36
                }
            },
            "125": {
                "start": {
                    "line": 761,
                    "column": 16
                },
                "end": {
                    "line": 761,
                    "column": 56
                }
            },
            "126": {
                "start": {
                    "line": 765,
                    "column": 8
                },
                "end": {
                    "line": 765,
                    "column": 64
                }
            },
            "127": {
                "start": {
                    "line": 809,
                    "column": 8
                },
                "end": {
                    "line": 809,
                    "column": 31
                }
            },
            "128": {
                "start": {
                    "line": 833,
                    "column": 8
                },
                "end": {
                    "line": 834,
                    "column": 26
                }
            },
            "129": {
                "start": {
                    "line": 836,
                    "column": 8
                },
                "end": {
                    "line": 864,
                    "column": 9
                }
            },
            "130": {
                "start": {
                    "line": 837,
                    "column": 12
                },
                "end": {
                    "line": 837,
                    "column": 73
                }
            },
            "131": {
                "start": {
                    "line": 838,
                    "column": 12
                },
                "end": {
                    "line": 838,
                    "column": 83
                }
            },
            "132": {
                "start": {
                    "line": 840,
                    "column": 12
                },
                "end": {
                    "line": 850,
                    "column": 13
                }
            },
            "133": {
                "start": {
                    "line": 842,
                    "column": 16
                },
                "end": {
                    "line": 842,
                    "column": 89
                }
            },
            "134": {
                "start": {
                    "line": 844,
                    "column": 16
                },
                "end": {
                    "line": 849,
                    "column": 17
                }
            },
            "135": {
                "start": {
                    "line": 846,
                    "column": 20
                },
                "end": {
                    "line": 848,
                    "column": 47
                }
            },
            "136": {
                "start": {
                    "line": 852,
                    "column": 12
                },
                "end": {
                    "line": 852,
                    "column": 30
                }
            },
            "137": {
                "start": {
                    "line": 855,
                    "column": 12
                },
                "end": {
                    "line": 863,
                    "column": 13
                }
            },
            "138": {
                "start": {
                    "line": 856,
                    "column": 16
                },
                "end": {
                    "line": 856,
                    "column": 37
                }
            },
            "139": {
                "start": {
                    "line": 858,
                    "column": 16
                },
                "end": {
                    "line": 862,
                    "column": 17
                }
            },
            "140": {
                "start": {
                    "line": 859,
                    "column": 20
                },
                "end": {
                    "line": 859,
                    "column": 61
                }
            },
            "141": {
                "start": {
                    "line": 861,
                    "column": 20
                },
                "end": {
                    "line": 861,
                    "column": 55
                }
            },
            "142": {
                "start": {
                    "line": 866,
                    "column": 8
                },
                "end": {
                    "line": 866,
                    "column": 63
                }
            },
            "143": {
                "start": {
                    "line": 884,
                    "column": 8
                },
                "end": {
                    "line": 884,
                    "column": 36
                }
            },
            "144": {
                "start": {
                    "line": 898,
                    "column": 8
                },
                "end": {
                    "line": 898,
                    "column": 24
                }
            },
            "145": {
                "start": {
                    "line": 900,
                    "column": 8
                },
                "end": {
                    "line": 914,
                    "column": 9
                }
            },
            "146": {
                "start": {
                    "line": 901,
                    "column": 12
                },
                "end": {
                    "line": 911,
                    "column": 13
                }
            },
            "147": {
                "start": {
                    "line": 903,
                    "column": 16
                },
                "end": {
                    "line": 907,
                    "column": 19
                }
            },
            "148": {
                "start": {
                    "line": 909,
                    "column": 16
                },
                "end": {
                    "line": 909,
                    "column": 30
                }
            },
            "149": {
                "start": {
                    "line": 910,
                    "column": 16
                },
                "end": {
                    "line": 910,
                    "column": 23
                }
            },
            "150": {
                "start": {
                    "line": 913,
                    "column": 12
                },
                "end": {
                    "line": 913,
                    "column": 23
                }
            },
            "151": {
                "start": {
                    "line": 916,
                    "column": 8
                },
                "end": {
                    "line": 922,
                    "column": 9
                }
            },
            "152": {
                "start": {
                    "line": 919,
                    "column": 12
                },
                "end": {
                    "line": 919,
                    "column": 56
                }
            },
            "153": {
                "start": {
                    "line": 921,
                    "column": 12
                },
                "end": {
                    "line": 921,
                    "column": 47
                }
            },
            "154": {
                "start": {
                    "line": 948,
                    "column": 8
                },
                "end": {
                    "line": 950,
                    "column": 59
                }
            },
            "155": {
                "start": {
                    "line": 953,
                    "column": 8
                },
                "end": {
                    "line": 959,
                    "column": 9
                }
            },
            "156": {
                "start": {
                    "line": 954,
                    "column": 12
                },
                "end": {
                    "line": 958,
                    "column": 14
                }
            },
            "157": {
                "start": {
                    "line": 961,
                    "column": 8
                },
                "end": {
                    "line": 961,
                    "column": 25
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 236,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 236,
                            "column": 8
                        },
                        "end": {
                            "line": 236,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 236,
                            "column": 8
                        },
                        "end": {
                            "line": 236,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 243,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 243,
                            "column": 16
                        },
                        "end": {
                            "line": 243,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 243,
                            "column": 16
                        },
                        "end": {
                            "line": 243,
                            "column": 16
                        }
                    }
                ]
            },
            "3": {
                "line": 249,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 249,
                            "column": 16
                        },
                        "end": {
                            "line": 249,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 249,
                            "column": 28
                        },
                        "end": {
                            "line": 249,
                            "column": 59
                        }
                    }
                ]
            },
            "4": {
                "line": 252,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 252,
                            "column": 12
                        },
                        "end": {
                            "line": 252,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 252,
                            "column": 12
                        },
                        "end": {
                            "line": 252,
                            "column": 12
                        }
                    }
                ]
            },
            "5": {
                "line": 252,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 252,
                            "column": 16
                        },
                        "end": {
                            "line": 252,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 252,
                            "column": 28
                        },
                        "end": {
                            "line": 252,
                            "column": 42
                        }
                    },
                    {
                        "start": {
                            "line": 252,
                            "column": 46
                        },
                        "end": {
                            "line": 252,
                            "column": 63
                        }
                    }
                ]
            },
            "6": {
                "line": 271,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 271,
                            "column": 8
                        },
                        "end": {
                            "line": 271,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 271,
                            "column": 29
                        },
                        "end": {
                            "line": 271,
                            "column": 49
                        }
                    }
                ]
            },
            "7": {
                "line": 316,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 316,
                            "column": 51
                        },
                        "end": {
                            "line": 316,
                            "column": 64
                        }
                    },
                    {
                        "start": {
                            "line": 316,
                            "column": 67
                        },
                        "end": {
                            "line": 316,
                            "column": 69
                        }
                    }
                ]
            },
            "8": {
                "line": 330,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 330,
                            "column": 56
                        },
                        "end": {
                            "line": 330,
                            "column": 69
                        }
                    },
                    {
                        "start": {
                            "line": 330,
                            "column": 72
                        },
                        "end": {
                            "line": 330,
                            "column": 74
                        }
                    }
                ]
            },
            "9": {
                "line": 345,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 345,
                            "column": 15
                        },
                        "end": {
                            "line": 345,
                            "column": 27
                        }
                    },
                    {
                        "start": {
                            "line": 345,
                            "column": 31
                        },
                        "end": {
                            "line": 345,
                            "column": 61
                        }
                    }
                ]
            },
            "10": {
                "line": 394,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 394,
                            "column": 8
                        },
                        "end": {
                            "line": 394,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 394,
                            "column": 8
                        },
                        "end": {
                            "line": 394,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 399,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 399,
                            "column": 8
                        },
                        "end": {
                            "line": 399,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 399,
                            "column": 20
                        },
                        "end": {
                            "line": 399,
                            "column": 32
                        }
                    }
                ]
            },
            "12": {
                "line": 409,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 409,
                            "column": 12
                        },
                        "end": {
                            "line": 409,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 409,
                            "column": 12
                        },
                        "end": {
                            "line": 409,
                            "column": 12
                        }
                    }
                ]
            },
            "13": {
                "line": 416,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 416,
                            "column": 16
                        },
                        "end": {
                            "line": 416,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 416,
                            "column": 16
                        },
                        "end": {
                            "line": 416,
                            "column": 16
                        }
                    }
                ]
            },
            "14": {
                "line": 430,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 430,
                            "column": 12
                        },
                        "end": {
                            "line": 430,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 430,
                            "column": 24
                        },
                        "end": {
                            "line": 430,
                            "column": 55
                        }
                    }
                ]
            },
            "15": {
                "line": 454,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 454,
                            "column": 8
                        },
                        "end": {
                            "line": 454,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 454,
                            "column": 8
                        },
                        "end": {
                            "line": 454,
                            "column": 8
                        }
                    }
                ]
            },
            "16": {
                "line": 502,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 502,
                            "column": 8
                        },
                        "end": {
                            "line": 502,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 502,
                            "column": 8
                        },
                        "end": {
                            "line": 502,
                            "column": 8
                        }
                    }
                ]
            },
            "17": {
                "line": 507,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 507,
                            "column": 8
                        },
                        "end": {
                            "line": 507,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 507,
                            "column": 20
                        },
                        "end": {
                            "line": 507,
                            "column": 32
                        }
                    }
                ]
            },
            "18": {
                "line": 510,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 510,
                            "column": 12
                        },
                        "end": {
                            "line": 510,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 510,
                            "column": 12
                        },
                        "end": {
                            "line": 510,
                            "column": 12
                        }
                    }
                ]
            },
            "19": {
                "line": 511,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 511,
                            "column": 16
                        },
                        "end": {
                            "line": 511,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 511,
                            "column": 28
                        },
                        "end": {
                            "line": 511,
                            "column": 52
                        }
                    }
                ]
            },
            "20": {
                "line": 515,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 515,
                            "column": 37
                        },
                        "end": {
                            "line": 515,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 515,
                            "column": 48
                        },
                        "end": {
                            "line": 515,
                            "column": 56
                        }
                    }
                ]
            },
            "21": {
                "line": 523,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 523,
                            "column": 16
                        },
                        "end": {
                            "line": 523,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 523,
                            "column": 16
                        },
                        "end": {
                            "line": 523,
                            "column": 16
                        }
                    }
                ]
            },
            "22": {
                "line": 530,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 530,
                            "column": 20
                        },
                        "end": {
                            "line": 530,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 530,
                            "column": 20
                        },
                        "end": {
                            "line": 530,
                            "column": 20
                        }
                    }
                ]
            },
            "23": {
                "line": 536,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 536,
                            "column": 20
                        },
                        "end": {
                            "line": 536,
                            "column": 20
                        }
                    },
                    {
                        "start": {
                            "line": 536,
                            "column": 20
                        },
                        "end": {
                            "line": 536,
                            "column": 20
                        }
                    }
                ]
            },
            "24": {
                "line": 545,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 545,
                            "column": 16
                        },
                        "end": {
                            "line": 545,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 545,
                            "column": 28
                        },
                        "end": {
                            "line": 545,
                            "column": 59
                        }
                    }
                ]
            },
            "25": {
                "line": 606,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 606,
                            "column": 8
                        },
                        "end": {
                            "line": 606,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 606,
                            "column": 8
                        },
                        "end": {
                            "line": 606,
                            "column": 8
                        }
                    }
                ]
            },
            "26": {
                "line": 610,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 610,
                            "column": 12
                        },
                        "end": {
                            "line": 610,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 610,
                            "column": 12
                        },
                        "end": {
                            "line": 610,
                            "column": 12
                        }
                    }
                ]
            },
            "27": {
                "line": 612,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 612,
                            "column": 19
                        },
                        "end": {
                            "line": 612,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 612,
                            "column": 19
                        },
                        "end": {
                            "line": 612,
                            "column": 19
                        }
                    }
                ]
            },
            "28": {
                "line": 618,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 618,
                            "column": 12
                        },
                        "end": {
                            "line": 618,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 618,
                            "column": 12
                        },
                        "end": {
                            "line": 618,
                            "column": 12
                        }
                    }
                ]
            },
            "29": {
                "line": 623,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 623,
                            "column": 8
                        },
                        "end": {
                            "line": 623,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 623,
                            "column": 8
                        },
                        "end": {
                            "line": 623,
                            "column": 8
                        }
                    }
                ]
            },
            "30": {
                "line": 628,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 628,
                            "column": 16
                        },
                        "end": {
                            "line": 628,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 628,
                            "column": 16
                        },
                        "end": {
                            "line": 628,
                            "column": 16
                        }
                    }
                ]
            },
            "31": {
                "line": 636,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 636,
                            "column": 33
                        },
                        "end": {
                            "line": 636,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 636,
                            "column": 42
                        },
                        "end": {
                            "line": 636,
                            "column": 46
                        }
                    }
                ]
            },
            "32": {
                "line": 641,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 641,
                            "column": 12
                        },
                        "end": {
                            "line": 641,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 641,
                            "column": 12
                        },
                        "end": {
                            "line": 641,
                            "column": 12
                        }
                    }
                ]
            },
            "33": {
                "line": 643,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 643,
                            "column": 16
                        },
                        "end": {
                            "line": 643,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 643,
                            "column": 16
                        },
                        "end": {
                            "line": 643,
                            "column": 16
                        }
                    }
                ]
            },
            "34": {
                "line": 686,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 686,
                            "column": 8
                        },
                        "end": {
                            "line": 686,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 686,
                            "column": 8
                        },
                        "end": {
                            "line": 686,
                            "column": 8
                        }
                    }
                ]
            },
            "35": {
                "line": 718,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 718,
                            "column": 8
                        },
                        "end": {
                            "line": 718,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 718,
                            "column": 8
                        },
                        "end": {
                            "line": 718,
                            "column": 8
                        }
                    }
                ]
            },
            "36": {
                "line": 753,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 753,
                            "column": 8
                        },
                        "end": {
                            "line": 753,
                            "column": 17
                        }
                    },
                    {
                        "start": {
                            "line": 753,
                            "column": 22
                        },
                        "end": {
                            "line": 753,
                            "column": 58
                        }
                    }
                ]
            },
            "37": {
                "line": 756,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 756,
                            "column": 12
                        },
                        "end": {
                            "line": 756,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 756,
                            "column": 12
                        },
                        "end": {
                            "line": 756,
                            "column": 12
                        }
                    }
                ]
            },
            "38": {
                "line": 758,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 758,
                            "column": 46
                        },
                        "end": {
                            "line": 758,
                            "column": 50
                        }
                    },
                    {
                        "start": {
                            "line": 758,
                            "column": 53
                        },
                        "end": {
                            "line": 758,
                            "column": 57
                        }
                    }
                ]
            },
            "39": {
                "line": 765,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 765,
                            "column": 26
                        },
                        "end": {
                            "line": 765,
                            "column": 56
                        }
                    },
                    {
                        "start": {
                            "line": 765,
                            "column": 59
                        },
                        "end": {
                            "line": 765,
                            "column": 63
                        }
                    }
                ]
            },
            "40": {
                "line": 809,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 809,
                            "column": 8
                        },
                        "end": {
                            "line": 809,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 809,
                            "column": 20
                        },
                        "end": {
                            "line": 809,
                            "column": 30
                        }
                    }
                ]
            },
            "41": {
                "line": 836,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 836,
                            "column": 8
                        },
                        "end": {
                            "line": 836,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 836,
                            "column": 8
                        },
                        "end": {
                            "line": 836,
                            "column": 8
                        }
                    }
                ]
            },
            "42": {
                "line": 836,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 836,
                            "column": 12
                        },
                        "end": {
                            "line": 836,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 836,
                            "column": 27
                        },
                        "end": {
                            "line": 836,
                            "column": 47
                        }
                    }
                ]
            },
            "43": {
                "line": 837,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 837,
                            "column": 24
                        },
                        "end": {
                            "line": 837,
                            "column": 46
                        }
                    },
                    {
                        "start": {
                            "line": 837,
                            "column": 50
                        },
                        "end": {
                            "line": 837,
                            "column": 72
                        }
                    }
                ]
            },
            "44": {
                "line": 838,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 838,
                            "column": 63
                        },
                        "end": {
                            "line": 838,
                            "column": 67
                        }
                    },
                    {
                        "start": {
                            "line": 838,
                            "column": 70
                        },
                        "end": {
                            "line": 838,
                            "column": 82
                        }
                    }
                ]
            },
            "45": {
                "line": 840,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 840,
                            "column": 12
                        },
                        "end": {
                            "line": 840,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 840,
                            "column": 12
                        },
                        "end": {
                            "line": 840,
                            "column": 12
                        }
                    }
                ]
            },
            "46": {
                "line": 842,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 842,
                            "column": 66
                        },
                        "end": {
                            "line": 842,
                            "column": 70
                        }
                    },
                    {
                        "start": {
                            "line": 842,
                            "column": 73
                        },
                        "end": {
                            "line": 842,
                            "column": 88
                        }
                    }
                ]
            },
            "47": {
                "line": 844,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 844,
                            "column": 16
                        },
                        "end": {
                            "line": 844,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 844,
                            "column": 16
                        },
                        "end": {
                            "line": 844,
                            "column": 16
                        }
                    }
                ]
            },
            "48": {
                "line": 846,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 847,
                            "column": 24
                        },
                        "end": {
                            "line": 847,
                            "column": 43
                        }
                    },
                    {
                        "start": {
                            "line": 848,
                            "column": 24
                        },
                        "end": {
                            "line": 848,
                            "column": 46
                        }
                    }
                ]
            },
            "49": {
                "line": 855,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 855,
                            "column": 12
                        },
                        "end": {
                            "line": 855,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 855,
                            "column": 12
                        },
                        "end": {
                            "line": 855,
                            "column": 12
                        }
                    }
                ]
            },
            "50": {
                "line": 858,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 858,
                            "column": 16
                        },
                        "end": {
                            "line": 858,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 858,
                            "column": 16
                        },
                        "end": {
                            "line": 858,
                            "column": 16
                        }
                    }
                ]
            },
            "51": {
                "line": 901,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 901,
                            "column": 12
                        },
                        "end": {
                            "line": 901,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 901,
                            "column": 12
                        },
                        "end": {
                            "line": 901,
                            "column": 12
                        }
                    }
                ]
            },
            "52": {
                "line": 916,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 916,
                            "column": 8
                        },
                        "end": {
                            "line": 916,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 916,
                            "column": 8
                        },
                        "end": {
                            "line": 916,
                            "column": 8
                        }
                    }
                ]
            },
            "53": {
                "line": 949,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 949,
                            "column": 26
                        },
                        "end": {
                            "line": 949,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 949,
                            "column": 34
                        },
                        "end": {
                            "line": 949,
                            "column": 51
                        }
                    }
                ]
            },
            "54": {
                "line": 950,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 950,
                            "column": 27
                        },
                        "end": {
                            "line": 950,
                            "column": 34
                        }
                    },
                    {
                        "start": {
                            "line": 950,
                            "column": 38
                        },
                        "end": {
                            "line": 950,
                            "column": 58
                        }
                    }
                ]
            },
            "55": {
                "line": 953,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 953,
                            "column": 8
                        },
                        "end": {
                            "line": 953,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 953,
                            "column": 8
                        },
                        "end": {
                            "line": 953,
                            "column": 8
                        }
                    }
                ]
            },
            "56": {
                "line": 953,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 953,
                            "column": 12
                        },
                        "end": {
                            "line": 953,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 953,
                            "column": 25
                        },
                        "end": {
                            "line": 953,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 953,
                            "column": 40
                        },
                        "end": {
                            "line": 953,
                            "column": 53
                        }
                    }
                ]
            },
            "57": {
                "line": 957,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 957,
                            "column": 21
                        },
                        "end": {
                            "line": 957,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 957,
                            "column": 33
                        },
                        "end": {
                            "line": 957,
                            "column": 37
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('model', function (Y, NAME) {",
            "",
            "/**",
            "Attribute-based data model with APIs for getting, setting, validating, and",
            "syncing attribute values, as well as events for being notified of model changes.",
            "",
            "@module app",
            "@submodule model",
            "@since 3.4.0",
            "**/",
            "",
            "/**",
            "Attribute-based data model with APIs for getting, setting, validating, and",
            "syncing attribute values, as well as events for being notified of model changes.",
            "",
            "In most cases, you'll want to create your own subclass of `Y.Model` and",
            "customize it to meet your needs. In particular, the `sync()` and `validate()`",
            "methods are meant to be overridden by custom implementations. You may also want",
            "to override the `parse()` method to parse non-generic server responses.",
            "",
            "@class Model",
            "@constructor",
            "@extends Base",
            "@since 3.4.0",
            "**/",
            "",
            "var GlobalEnv = YUI.namespace('Env.Model'),",
            "    Lang      = Y.Lang,",
            "    YArray    = Y.Array,",
            "    YObject   = Y.Object,",
            "",
            "    /**",
            "    Fired when one or more attributes on this model are changed.",
            "",
            "    @event change",
            "    @param {Object} changed Hash of change information for each attribute that",
            "        changed. Each item in the hash has the following properties:",
            "      @param {Any} changed.newVal New value of the attribute.",
            "      @param {Any} changed.prevVal Previous value of the attribute.",
            "      @param {String|null} changed.src Source of the change event, if any.",
            "    **/",
            "    EVT_CHANGE = 'change',",
            "",
            "    /**",
            "    Fired when an error occurs, such as when the model doesn't validate or when",
            "    a sync layer response can't be parsed.",
            "",
            "    @event error",
            "    @param {Any} error Error message, object, or exception generated by the",
            "      error. Calling `toString()` on this should result in a meaningful error",
            "      message.",
            "    @param {String} src Source of the error. May be one of the following (or any",
            "      custom error source defined by a Model subclass):",
            "",
            "      * `load`: An error loading the model from a sync layer. The sync layer's",
            "        response (if any) will be provided as the `response` property on the",
            "        event facade.",
            "",
            "      * `parse`: An error parsing a JSON response. The response in question will",
            "        be provided as the `response` property on the event facade.",
            "",
            "      * `save`: An error saving the model to a sync layer. The sync layer's",
            "        response (if any) will be provided as the `response` property on the",
            "        event facade.",
            "",
            "      * `validate`: The model failed to validate. The attributes being validated",
            "        will be provided as the `attributes` property on the event facade.",
            "    **/",
            "    EVT_ERROR = 'error',",
            "",
            "    /**",
            "    Fired after model attributes are loaded from a sync layer.",
            "",
            "    @event load",
            "    @param {Object} parsed The parsed version of the sync layer's response to",
            "        the load request.",
            "    @param {any} response The sync layer's raw, unparsed response to the load",
            "        request.",
            "    @since 3.5.0",
            "    **/",
            "    EVT_LOAD = 'load',",
            "",
            "    /**",
            "    Fired after model attributes are saved to a sync layer.",
            "",
            "    @event save",
            "    @param {Object} [parsed] The parsed version of the sync layer's response to",
            "        the save request, if there was a response.",
            "    @param {any} [response] The sync layer's raw, unparsed response to the save",
            "        request, if there was one.",
            "    @since 3.5.0",
            "    **/",
            "    EVT_SAVE = 'save';",
            "",
            "function Model() {",
            "    Model.superclass.constructor.apply(this, arguments);",
            "}",
            "",
            "Y.Model = Y.extend(Model, Y.Base, {",
            "    // -- Public Properties ----------------------------------------------------",
            "",
            "    /**",
            "    Hash of attributes that have changed since the last time this model was",
            "    saved.",
            "",
            "    @property changed",
            "    @type Object",
            "    @default {}",
            "    **/",
            "",
            "    /**",
            "    Name of the attribute to use as the unique id (or primary key) for this",
            "    model.",
            "",
            "    The default is `id`, but if your persistence layer uses a different name for",
            "    the primary key (such as `_id` or `uid`), you can specify that here.",
            "",
            "    The built-in `id` attribute will always be an alias for whatever attribute",
            "    name you specify here, so getting and setting `id` will always behave the",
            "    same as getting and setting your custom id attribute.",
            "",
            "    @property idAttribute",
            "    @type String",
            "    @default `'id'`",
            "    **/",
            "    idAttribute: 'id',",
            "",
            "    /**",
            "    Hash of attributes that were changed in the last `change` event. Each item",
            "    in this hash is an object with the following properties:",
            "",
            "      * `newVal`: The new value of the attribute after it changed.",
            "      * `prevVal`: The old value of the attribute before it changed.",
            "      * `src`: The source of the change, or `null` if no source was specified.",
            "",
            "    @property lastChange",
            "    @type Object",
            "    @default {}",
            "    **/",
            "",
            "    /**",
            "    Array of `ModelList` instances that contain this model.",
            "",
            "    When a model is in one or more lists, the model's events will bubble up to",
            "    those lists. You can subscribe to a model event on a list to be notified",
            "    when any model in the list fires that event.",
            "",
            "    This property is updated automatically when this model is added to or",
            "    removed from a `ModelList` instance. You shouldn't alter it manually. When",
            "    working with models in a list, you should always add and remove models using",
            "    the list's `add()` and `remove()` methods.",
            "",
            "    @example Subscribing to model events on a list:",
            "",
            "        // Assuming `list` is an existing Y.ModelList instance.",
            "        list.on('*:change', function (e) {",
            "            // This function will be called whenever any model in the list",
            "            // fires a `change` event.",
            "            //",
            "            // `e.target` will refer to the model instance that fired the",
            "            // event.",
            "        });",
            "",
            "    @property lists",
            "    @type ModelList[]",
            "    @default `[]`",
            "    **/",
            "",
            "    // -- Protected Properties -------------------------------------------------",
            "",
            "    /**",
            "    This tells `Y.Base` that it should create ad-hoc attributes for config",
            "    properties passed to Model's constructor. This makes it possible to",
            "    instantiate a model and set a bunch of attributes without having to subclass",
            "    `Y.Model` and declare all those attributes first.",
            "",
            "    @property _allowAdHocAttrs",
            "    @type Boolean",
            "    @default true",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _allowAdHocAttrs: true,",
            "",
            "    /**",
            "    Total hack to allow us to identify Model instances without using",
            "    `instanceof`, which won't work when the instance was created in another",
            "    window or YUI sandbox.",
            "",
            "    @property _isYUIModel",
            "    @type Boolean",
            "    @default true",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _isYUIModel: true,",
            "",
            "    // -- Lifecycle Methods ----------------------------------------------------",
            "    initializer: function (config) {",
            "        this.changed    = {};",
            "        this.lastChange = {};",
            "        this.lists      = [];",
            "    },",
            "",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Destroys this model instance and removes it from its containing lists, if",
            "    any.",
            "",
            "    The _callback_, if one is provided, will be called after the model is",
            "    destroyed.",
            "",
            "    If `options.remove` is `true`, then this method delegates to the `sync()`",
            "    method to delete the model from the persistence layer, which is an",
            "    asynchronous action. In this case, the _callback_ (if provided) will be",
            "    called after the sync layer indicates success or failure of the delete",
            "    operation.",
            "",
            "    @method destroy",
            "    @param {Object} [options] Sync options. It's up to the custom sync",
            "        implementation to determine what options it supports or requires, if",
            "        any.",
            "      @param {Boolean} [options.remove=false] If `true`, the model will be",
            "        deleted via the sync layer in addition to the instance being destroyed.",
            "    @param {callback} [callback] Called after the model has been destroyed (and",
            "        deleted via the sync layer if `options.remove` is `true`).",
            "      @param {Error|null} callback.err If an error occurred, this parameter will",
            "        contain the error. Otherwise _err_ will be `null`.",
            "    @chainable",
            "    **/",
            "    destroy: function (options, callback) {",
            "        var self = this;",
            "",
            "        // Allow callback as only arg.",
            "        if (typeof options === 'function') {",
            "            callback = options;",
            "            options  = null;",
            "        }",
            "",
            "        self.onceAfter('destroy', function () {",
            "            function finish(err) {",
            "                if (!err) {",
            "                    YArray.each(self.lists.concat(), function (list) {",
            "                        list.remove(self, options);",
            "                    });",
            "                }",
            "",
            "                callback && callback.apply(null, arguments);",
            "            }",
            "",
            "            if (options && (options.remove || options['delete'])) {",
            "                self.sync('delete', options, finish);",
            "            } else {",
            "                finish();",
            "            }",
            "        });",
            "",
            "        return Model.superclass.destroy.call(self);",
            "    },",
            "",
            "    /**",
            "    Returns a clientId string that's unique among all models on the current page",
            "    (even models in other YUI instances). Uniqueness across pageviews is",
            "    unlikely.",
            "",
            "    @method generateClientId",
            "    @return {String} Unique clientId.",
            "    **/",
            "    generateClientId: function () {",
            "        GlobalEnv.lastId || (GlobalEnv.lastId = 0);",
            "        return this.constructor.NAME + '_' + (GlobalEnv.lastId += 1);",
            "    },",
            "",
            "    /**",
            "    Returns the value of the specified attribute.",
            "",
            "    If the attribute's value is an object, _name_ may use dot notation to",
            "    specify the path to a specific property within the object, and the value of",
            "    that property will be returned.",
            "",
            "    @example",
            "        // Set the 'foo' attribute to an object.",
            "        myModel.set('foo', {",
            "            bar: {",
            "                baz: 'quux'",
            "            }",
            "        });",
            "",
            "        // Get the value of 'foo'.",
            "        myModel.get('foo');",
            "        // => {bar: {baz: 'quux'}}",
            "",
            "        // Get the value of 'foo.bar.baz'.",
            "        myModel.get('foo.bar.baz');",
            "        // => 'quux'",
            "",
            "    @method get",
            "    @param {String} name Attribute name or object property path.",
            "    @return {Any} Attribute value, or `undefined` if the attribute doesn't",
            "      exist.",
            "    **/",
            "",
            "    // get() is defined by Y.Attribute.",
            "",
            "    /**",
            "    Returns an HTML-escaped version of the value of the specified string",
            "    attribute. The value is escaped using `Y.Escape.html()`.",
            "",
            "    @method getAsHTML",
            "    @param {String} name Attribute name or object property path.",
            "    @return {String} HTML-escaped attribute value.",
            "    **/",
            "    getAsHTML: function (name) {",
            "        var value = this.get(name);",
            "        return Y.Escape.html(Lang.isValue(value) ? String(value) : '');",
            "    },",
            "",
            "    /**",
            "    Returns a URL-encoded version of the value of the specified string",
            "    attribute. The value is encoded using the native `encodeURIComponent()`",
            "    function.",
            "",
            "    @method getAsURL",
            "    @param {String} name Attribute name or object property path.",
            "    @return {String} URL-encoded attribute value.",
            "    **/",
            "    getAsURL: function (name) {",
            "        var value = this.get(name);",
            "        return encodeURIComponent(Lang.isValue(value) ? String(value) : '');",
            "    },",
            "",
            "    /**",
            "    Returns `true` if any attribute of this model has been changed since the",
            "    model was last saved.",
            "",
            "    New models (models for which `isNew()` returns `true`) are implicitly",
            "    considered to be \"modified\" until the first time they're saved.",
            "",
            "    @method isModified",
            "    @return {Boolean} `true` if this model has changed since it was last saved,",
            "      `false` otherwise.",
            "    **/",
            "    isModified: function () {",
            "        return this.isNew() || !YObject.isEmpty(this.changed);",
            "    },",
            "",
            "    /**",
            "    Returns `true` if this model is \"new\", meaning it hasn't been saved since it",
            "    was created.",
            "",
            "    Newness is determined by checking whether the model's `id` attribute has",
            "    been set. An empty id is assumed to indicate a new model, whereas a",
            "    non-empty id indicates a model that was either loaded or has been saved",
            "    since it was created.",
            "",
            "    @method isNew",
            "    @return {Boolean} `true` if this model is new, `false` otherwise.",
            "    **/",
            "    isNew: function () {",
            "        return !Lang.isValue(this.get('id'));",
            "    },",
            "",
            "    /**",
            "    Loads this model from the server.",
            "",
            "    This method delegates to the `sync()` method to perform the actual load",
            "    operation, which is an asynchronous action. Specify a _callback_ function to",
            "    be notified of success or failure.",
            "",
            "    A successful load operation will fire a `load` event, while an unsuccessful",
            "    load operation will fire an `error` event with the `src` value \"load\".",
            "",
            "    If the load operation succeeds and one or more of the loaded attributes",
            "    differ from this model's current attributes, a `change` event will be fired.",
            "",
            "    @method load",
            "    @param {Object} [options] Options to be passed to `sync()` and to `set()`",
            "      when setting the loaded attributes. It's up to the custom sync",
            "      implementation to determine what options it supports or requires, if any.",
            "    @param {callback} [callback] Called when the sync operation finishes.",
            "      @param {Error|null} callback.err If an error occurred, this parameter will",
            "        contain the error. If the sync operation succeeded, _err_ will be",
            "        `null`.",
            "      @param {Any} callback.response The server's response. This value will",
            "        be passed to the `parse()` method, which is expected to parse it and",
            "        return an attribute hash.",
            "    @chainable",
            "    **/",
            "    load: function (options, callback) {",
            "        var self = this;",
            "",
            "        // Allow callback as only arg.",
            "        if (typeof options === 'function') {",
            "            callback = options;",
            "            options  = {};",
            "        }",
            "",
            "        options || (options = {});",
            "",
            "        self.sync('read', options, function (err, response) {",
            "            var facade = {",
            "                    options : options,",
            "                    response: response",
            "                },",
            "",
            "                parsed;",
            "",
            "            if (err) {",
            "                facade.error = err;",
            "                facade.src   = 'load';",
            "",
            "                self.fire(EVT_ERROR, facade);",
            "            } else {",
            "                // Lazy publish.",
            "                if (!self._loadEvent) {",
            "                    self._loadEvent = self.publish(EVT_LOAD, {",
            "                        preventable: false",
            "                    });",
            "                }",
            "",
            "                parsed = facade.parsed = self._parse(response);",
            "",
            "                self.setAttrs(parsed, options);",
            "                self.changed = {};",
            "",
            "                self.fire(EVT_LOAD, facade);",
            "            }",
            "",
            "            callback && callback.apply(null, arguments);",
            "        });",
            "",
            "        return self;",
            "    },",
            "",
            "    /**",
            "    Called to parse the _response_ when the model is loaded from the server.",
            "    This method receives a server _response_ and is expected to return an",
            "    attribute hash.",
            "",
            "    The default implementation assumes that _response_ is either an attribute",
            "    hash or a JSON string that can be parsed into an attribute hash. If",
            "    _response_ is a JSON string and either `Y.JSON` or the native `JSON` object",
            "    are available, it will be parsed automatically. If a parse error occurs, an",
            "    `error` event will be fired and the model will not be updated.",
            "",
            "    You may override this method to implement custom parsing logic if necessary.",
            "",
            "    @method parse",
            "    @param {Any} response Server response.",
            "    @return {Object} Attribute hash.",
            "    **/",
            "    parse: function (response) {",
            "        if (typeof response === 'string') {",
            "            try {",
            "                return Y.JSON.parse(response);",
            "            } catch (ex) {",
            "                this.fire(EVT_ERROR, {",
            "                    error   : ex,",
            "                    response: response,",
            "                    src     : 'parse'",
            "                });",
            "",
            "                return null;",
            "            }",
            "        }",
            "",
            "        return response;",
            "    },",
            "",
            "    /**",
            "    Saves this model to the server.",
            "",
            "    This method delegates to the `sync()` method to perform the actual save",
            "    operation, which is an asynchronous action. Specify a _callback_ function to",
            "    be notified of success or failure.",
            "",
            "    A successful save operation will fire a `save` event, while an unsuccessful",
            "    save operation will fire an `error` event with the `src` value \"save\".",
            "",
            "    If the save operation succeeds and one or more of the attributes returned in",
            "    the server's response differ from this model's current attributes, a",
            "    `change` event will be fired.",
            "",
            "    @method save",
            "    @param {Object} [options] Options to be passed to `sync()` and to `set()`",
            "      when setting synced attributes. It's up to the custom sync implementation",
            "      to determine what options it supports or requires, if any.",
            "    @param {Function} [callback] Called when the sync operation finishes.",
            "      @param {Error|null} callback.err If an error occurred or validation",
            "        failed, this parameter will contain the error. If the sync operation",
            "        succeeded, _err_ will be `null`.",
            "      @param {Any} callback.response The server's response. This value will",
            "        be passed to the `parse()` method, which is expected to parse it and",
            "        return an attribute hash.",
            "    @chainable",
            "    **/",
            "    save: function (options, callback) {",
            "        var self = this;",
            "",
            "        // Allow callback as only arg.",
            "        if (typeof options === 'function') {",
            "            callback = options;",
            "            options  = {};",
            "        }",
            "",
            "        options || (options = {});",
            "",
            "        self._validate(self.toJSON(), function (err) {",
            "            if (err) {",
            "                callback && callback.call(null, err);",
            "                return;",
            "            }",
            "",
            "            self.sync(self.isNew() ? 'create' : 'update', options, function (err, response) {",
            "                var facade = {",
            "                        options : options,",
            "                        response: response",
            "                    },",
            "",
            "                    parsed;",
            "",
            "                if (err) {",
            "                    facade.error = err;",
            "                    facade.src   = 'save';",
            "",
            "                    self.fire(EVT_ERROR, facade);",
            "                } else {",
            "                    // Lazy publish.",
            "                    if (!self._saveEvent) {",
            "                        self._saveEvent = self.publish(EVT_SAVE, {",
            "                            preventable: false",
            "                        });",
            "                    }",
            "",
            "                    if (response) {",
            "                        parsed = facade.parsed = self._parse(response);",
            "                        self.setAttrs(parsed, options);",
            "                    }",
            "",
            "                    self.changed = {};",
            "                    self.fire(EVT_SAVE, facade);",
            "                }",
            "",
            "                callback && callback.apply(null, arguments);",
            "            });",
            "        });",
            "",
            "        return self;",
            "    },",
            "",
            "    /**",
            "    Sets the value of a single attribute. If model validation fails, the",
            "    attribute will not be set and an `error` event will be fired.",
            "",
            "    Use `setAttrs()` to set multiple attributes at once.",
            "",
            "    @example",
            "        model.set('foo', 'bar');",
            "",
            "    @method set",
            "    @param {String} name Attribute name or object property path.",
            "    @param {any} value Value to set.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `change` event(s) for these attributes.",
            "      @param {Boolean} [options.silent=false] If `true`, no `change` event will",
            "          be fired.",
            "    @chainable",
            "    **/",
            "    set: function (name, value, options) {",
            "        var attributes = {};",
            "        attributes[name] = value;",
            "",
            "        return this.setAttrs(attributes, options);",
            "    },",
            "",
            "    /**",
            "    Sets the values of multiple attributes at once. If model validation fails,",
            "    the attributes will not be set and an `error` event will be fired.",
            "",
            "    @example",
            "        model.setAttrs({",
            "            foo: 'bar',",
            "            baz: 'quux'",
            "        });",
            "",
            "    @method setAttrs",
            "    @param {Object} attributes Hash of attribute names and values to set.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `change` event(s) for these attributes.",
            "      @param {Boolean} [options.silent=false] If `true`, no `change` event will",
            "          be fired.",
            "    @chainable",
            "    **/",
            "    setAttrs: function (attributes, options) {",
            "        var idAttribute = this.idAttribute,",
            "            changed, e, key, lastChange, transaction;",
            "",
            "        // Makes a shallow copy of the `options` object before adding the",
            "        // `_transaction` object to it so we don't modify someone else's object.",
            "        options     = Y.merge(options);",
            "        transaction = options._transaction = {};",
            "",
            "        // When a custom id attribute is in use, always keep the default `id`",
            "        // attribute in sync.",
            "        if (idAttribute !== 'id') {",
            "            // So we don't modify someone else's object.",
            "            attributes = Y.merge(attributes);",
            "",
            "            if (YObject.owns(attributes, idAttribute)) {",
            "                attributes.id = attributes[idAttribute];",
            "            } else if (YObject.owns(attributes, 'id')) {",
            "                attributes[idAttribute] = attributes.id;",
            "            }",
            "        }",
            "",
            "        for (key in attributes) {",
            "            if (YObject.owns(attributes, key)) {",
            "                this._setAttr(key, attributes[key], options);",
            "            }",
            "        }",
            "",
            "        if (!YObject.isEmpty(transaction)) {",
            "            changed    = this.changed;",
            "            lastChange = this.lastChange = {};",
            "",
            "            for (key in transaction) {",
            "                if (YObject.owns(transaction, key)) {",
            "                    e = transaction[key];",
            "",
            "                    changed[key] = e.newVal;",
            "",
            "                    lastChange[key] = {",
            "                        newVal : e.newVal,",
            "                        prevVal: e.prevVal,",
            "                        src    : e.src || null",
            "                    };",
            "                }",
            "            }",
            "",
            "            if (!options.silent) {",
            "                // Lazy publish for the change event.",
            "                if (!this._changeEvent) {",
            "                    this._changeEvent = this.publish(EVT_CHANGE, {",
            "                        preventable: false",
            "                    });",
            "                }",
            "",
            "                options.changed = lastChange;",
            "",
            "                this.fire(EVT_CHANGE, options);",
            "            }",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Override this method to provide a custom persistence implementation for this",
            "    model. The default just calls the callback without actually doing anything.",
            "",
            "    This method is called internally by `load()`, `save()`, and `destroy()`, and",
            "    their implementations rely on the callback being called. This effectively",
            "    means that when a callback is provided, it must be called at some point for",
            "    the class to operate correctly.",
            "",
            "    @method sync",
            "    @param {String} action Sync action to perform. May be one of the following:",
            "",
            "      * `create`: Store a newly-created model for the first time.",
            "      * `delete`: Delete an existing model.",
            "      * `read`  : Load an existing model.",
            "      * `update`: Update an existing model.",
            "",
            "    @param {Object} [options] Sync options. It's up to the custom sync",
            "      implementation to determine what options it supports or requires, if any.",
            "    @param {Function} [callback] Called when the sync operation finishes.",
            "      @param {Error|null} callback.err If an error occurred, this parameter will",
            "        contain the error. If the sync operation succeeded, _err_ will be",
            "        falsy.",
            "      @param {Any} [callback.response] The server's response.",
            "    **/",
            "    sync: function (/* action, options, callback */) {",
            "        var callback = YArray(arguments, 0, true).pop();",
            "",
            "        if (typeof callback === 'function') {",
            "            callback();",
            "        }",
            "    },",
            "",
            "    /**",
            "    Returns a copy of this model's attributes that can be passed to",
            "    `Y.JSON.stringify()` or used for other nefarious purposes.",
            "",
            "    The `clientId` attribute is not included in the returned object.",
            "",
            "    If you've specified a custom attribute name in the `idAttribute` property,",
            "    the default `id` attribute will not be included in the returned object.",
            "",
            "    Note: The ECMAScript 5 specification states that objects may implement a",
            "    `toJSON` method to provide an alternate object representation to serialize",
            "    when passed to `JSON.stringify(obj)`.  This allows class instances to be",
            "    serialized as if they were plain objects.  This is why Model's `toJSON`",
            "    returns an object, not a JSON string.",
            "",
            "    See <http://es5.github.com/#x15.12.3> for details.",
            "",
            "    @method toJSON",
            "    @return {Object} Copy of this model's attributes.",
            "    **/",
            "    toJSON: function () {",
            "        var attrs = this.getAttrs();",
            "",
            "        delete attrs.clientId;",
            "        delete attrs.destroyed;",
            "        delete attrs.initialized;",
            "",
            "        if (this.idAttribute !== 'id') {",
            "            delete attrs.id;",
            "        }",
            "",
            "        return attrs;",
            "    },",
            "",
            "    /**",
            "    Reverts the last change to the model.",
            "",
            "    If an _attrNames_ array is provided, then only the named attributes will be",
            "    reverted (and only if they were modified in the previous change). If no",
            "    _attrNames_ array is provided, then all changed attributes will be reverted",
            "    to their previous values.",
            "",
            "    Note that only one level of undo is available: from the current state to the",
            "    previous state. If `undo()` is called when no previous state is available,",
            "    it will simply do nothing.",
            "",
            "    @method undo",
            "    @param {Array} [attrNames] Array of specific attribute names to revert. If",
            "      not specified, all attributes modified in the last change will be",
            "      reverted.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        change event(s) for these attributes.",
            "      @param {Boolean} [options.silent=false] If `true`, no `change` event will",
            "          be fired.",
            "    @chainable",
            "    **/",
            "    undo: function (attrNames, options) {",
            "        var lastChange  = this.lastChange,",
            "            idAttribute = this.idAttribute,",
            "            toUndo      = {},",
            "            needUndo;",
            "",
            "        attrNames || (attrNames = YObject.keys(lastChange));",
            "",
            "        YArray.each(attrNames, function (name) {",
            "            if (YObject.owns(lastChange, name)) {",
            "                // Don't generate a double change for custom id attributes.",
            "                name = name === idAttribute ? 'id' : name;",
            "",
            "                needUndo     = true;",
            "                toUndo[name] = lastChange[name].prevVal;",
            "            }",
            "        });",
            "",
            "        return needUndo ? this.setAttrs(toUndo, options) : this;",
            "    },",
            "",
            "    /**",
            "    Override this method to provide custom validation logic for this model.",
            "",
            "    While attribute-specific validators can be used to validate individual",
            "    attributes, this method gives you a hook to validate a hash of all",
            "    attributes before the model is saved. This method is called automatically",
            "    before `save()` takes any action. If validation fails, the `save()` call",
            "    will be aborted.",
            "",
            "    In your validation method, call the provided `callback` function with no",
            "    arguments to indicate success. To indicate failure, pass a single argument,",
            "    which may contain an error message, an array of error messages, or any other",
            "    value. This value will be passed along to the `error` event.",
            "",
            "    @example",
            "",
            "        model.validate = function (attrs, callback) {",
            "            if (attrs.pie !== true) {",
            "                // No pie?! Invalid!",
            "                callback('Must provide pie.');",
            "                return;",
            "            }",
            "",
            "            // Success!",
            "            callback();",
            "        };",
            "",
            "    @method validate",
            "    @param {Object} attrs Attribute hash containing all model attributes to",
            "        be validated.",
            "    @param {Function} callback Validation callback. Call this function when your",
            "        validation logic finishes. To trigger a validation failure, pass any",
            "        value as the first argument to the callback (ideally a meaningful",
            "        validation error of some kind).",
            "",
            "        @param {Any} [callback.err] Validation error. Don't provide this",
            "            argument if validation succeeds. If validation fails, set this to an",
            "            error message or some other meaningful value. It will be passed",
            "            along to the resulting `error` event.",
            "    **/",
            "    validate: function (attrs, callback) {",
            "        callback && callback();",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Duckpunches the `addAttr` method provided by `Y.Attribute` to keep the",
            "    `id` attribute’s value and a custom id attribute’s (if provided) value",
            "    in sync when adding the attributes to the model instance object.",
            "",
            "    Marked as protected to hide it from Model's public API docs, even though",
            "    this is a public method in Attribute.",
            "",
            "    @method addAttr",
            "    @param {String} name The name of the attribute.",
            "    @param {Object} config An object with attribute configuration property/value",
            "      pairs, specifying the configuration for the attribute.",
            "    @param {Boolean} lazy (optional) Whether or not to add this attribute lazily",
            "      (on the first call to get/set).",
            "    @return {Object} A reference to the host object.",
            "    @chainable",
            "    @protected",
            "    **/",
            "    addAttr: function (name, config, lazy) {",
            "        var idAttribute = this.idAttribute,",
            "            idAttrCfg, id;",
            "",
            "        if (idAttribute && name === idAttribute) {",
            "            idAttrCfg = this._isLazyAttr('id') || this._getAttrCfg('id');",
            "            id        = config.value === config.defaultValue ? null : config.value;",
            "",
            "            if (!Lang.isValue(id)) {",
            "                // Hunt for the id value.",
            "                id = idAttrCfg.value === idAttrCfg.defaultValue ? null : idAttrCfg.value;",
            "",
            "                if (!Lang.isValue(id)) {",
            "                    // No id value provided on construction, check defaults.",
            "                    id = Lang.isValue(config.defaultValue) ?",
            "                        config.defaultValue :",
            "                        idAttrCfg.defaultValue;",
            "                }",
            "            }",
            "",
            "            config.value = id;",
            "",
            "            // Make sure `id` is in sync.",
            "            if (idAttrCfg.value !== id) {",
            "                idAttrCfg.value = id;",
            "",
            "                if (this._isLazyAttr('id')) {",
            "                    this._state.add('id', 'lazy', idAttrCfg);",
            "                } else {",
            "                    this._state.add('id', 'value', id);",
            "                }",
            "            }",
            "        }",
            "",
            "        return Model.superclass.addAttr.apply(this, arguments);",
            "    },",
            "",
            "    /**",
            "    Calls the public, overrideable `parse()` method and returns the result.",
            "",
            "    Override this method to provide a custom pre-parsing implementation. This",
            "    provides a hook for custom persistence implementations to \"prep\" a response",
            "    before calling the `parse()` method.",
            "",
            "    @method _parse",
            "    @param {Any} response Server response.",
            "    @return {Object} Attribute hash.",
            "    @protected",
            "    @see Model.parse()",
            "    @since 3.7.0",
            "    **/",
            "    _parse: function (response) {",
            "        return this.parse(response);",
            "    },",
            "",
            "    /**",
            "    Calls the public, overridable `validate()` method and fires an `error` event",
            "    if validation fails.",
            "",
            "    @method _validate",
            "    @param {Object} attributes Attribute hash.",
            "    @param {Function} callback Validation callback.",
            "        @param {Any} [callback.err] Value on failure, non-value on success.",
            "    @protected",
            "    **/",
            "    _validate: function (attributes, callback) {",
            "        var self = this;",
            "",
            "        function handler(err) {",
            "            if (Lang.isValue(err)) {",
            "                // Validation failed. Fire an error.",
            "                self.fire(EVT_ERROR, {",
            "                    attributes: attributes,",
            "                    error     : err,",
            "                    src       : 'validate'",
            "                });",
            "",
            "                callback(err);",
            "                return;",
            "            }",
            "",
            "            callback();",
            "        }",
            "",
            "        if (self.validate.length === 1) {",
            "            // Backcompat for 3.4.x-style synchronous validate() functions that",
            "            // don't take a callback argument.",
            "            handler(self.validate(attributes, handler));",
            "        } else {",
            "            self.validate(attributes, handler);",
            "        }",
            "    },",
            "",
            "    // -- Private Methods ----------------------------------------------------",
            "",
            "    /**",
            "     Overrides AttributeCore's `_setAttrVal`, to register the changed value if it's part",
            "     of a Model `setAttrs` transaction.",
            "",
            "     NOTE: AttributeCore's `_setAttrVal` is currently private, but until we support coalesced",
            "     change events in attribute, we need this override.",
            "",
            "     @method _setAttrVal",
            "     @private",
            "     @param {String} attrName The attribute name.",
            "     @param {String} subAttrName The sub-attribute name, if setting a sub-attribute property (\"x.y.z\").",
            "     @param {Any} prevVal The currently stored value of the attribute.",
            "     @param {Any} newVal The value which is going to be stored.",
            "     @param {Object} [opts] Optional data providing the circumstances for the change.",
            "     @param {Object} [attrCfg] Optional config hash for the attribute. This is added for performance along the critical path,",
            "     where the calling method has already obtained the config from state.",
            "",
            "     @return {boolean} true if the new attribute value was stored, false if not.",
            "     **/",
            "    _setAttrVal : function(attrName, subAttrName, prevVal, newVal, opts, attrCfg) {",
            "",
            "        var didChange = Model.superclass._setAttrVal.apply(this, arguments),",
            "            transaction = opts && opts._transaction,",
            "            initializing = attrCfg && attrCfg.initializing;",
            "",
            "        // value actually changed inside a model setAttrs transaction",
            "        if (didChange && transaction && !initializing) {",
            "            transaction[attrName] = {",
            "                newVal: this.get(attrName), // newVal may be impacted by getter",
            "                prevVal: prevVal,",
            "                src: opts.src || null",
            "            };",
            "        }",
            "",
            "        return didChange;",
            "    }",
            "",
            "}, {",
            "    NAME: 'model',",
            "",
            "    ATTRS: {",
            "        /**",
            "        A client-only identifier for this model.",
            "",
            "        Like the `id` attribute, `clientId` may be used to retrieve model",
            "        instances from lists. Unlike the `id` attribute, `clientId` is",
            "        automatically generated, and is only intended to be used on the client",
            "        during the current pageview.",
            "",
            "        @attribute clientId",
            "        @type String",
            "        @readOnly",
            "        **/",
            "        clientId: {",
            "            valueFn : 'generateClientId',",
            "            readOnly: true",
            "        },",
            "",
            "        /**",
            "        A unique identifier for this model. Among other things, this id may be",
            "        used to retrieve model instances from lists, so it should be unique.",
            "",
            "        If the id is empty, this model instance is assumed to represent a new",
            "        item that hasn't yet been saved.",
            "",
            "        If you would prefer to use a custom attribute as this model's id instead",
            "        of using the `id` attribute (for example, maybe you'd rather use `_id`",
            "        or `uid` as the primary id), you may set the `idAttribute` property to",
            "        the name of your custom id attribute. The `id` attribute will then",
            "        act as an alias for your custom attribute.",
            "",
            "        @attribute id",
            "        @type String|Number|null",
            "        @default `null`",
            "        **/",
            "        id: {value: null}",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"base-build\", \"escape\", \"json-parse\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "27": 1,
            "95": 1,
            "96": 293,
            "99": 1,
            "200": 293,
            "201": 293,
            "202": 293,
            "233": 8,
            "236": 8,
            "237": 1,
            "238": 1,
            "241": 8,
            "242": 8,
            "243": 8,
            "244": 7,
            "245": 3,
            "249": 8,
            "252": 8,
            "253": 4,
            "255": 4,
            "259": 8,
            "271": 295,
            "272": 295,
            "315": 9,
            "316": 9,
            "329": 26,
            "330": 26,
            "345": 5,
            "361": 61,
            "391": 11,
            "394": 11,
            "395": 3,
            "396": 3,
            "399": 11,
            "401": 11,
            "402": 11,
            "409": 11,
            "410": 2,
            "411": 2,
            "413": 2,
            "416": 9,
            "417": 6,
            "422": 9,
            "424": 9,
            "425": 9,
            "427": 9,
            "430": 11,
            "433": 11,
            "454": 19,
            "455": 9,
            "456": 9,
            "458": 3,
            "464": 3,
            "468": 10,
            "499": 31,
            "502": 31,
            "503": 3,
            "504": 3,
            "507": 31,
            "509": 31,
            "510": 31,
            "511": 4,
            "512": 4,
            "515": 27,
            "516": 25,
            "523": 25,
            "524": 2,
            "525": 2,
            "527": 2,
            "530": 23,
            "531": 20,
            "536": 23,
            "537": 8,
            "538": 8,
            "541": 23,
            "542": 23,
            "545": 25,
            "549": 31,
            "571": 1074,
            "572": 1074,
            "574": 1074,
            "596": 1106,
            "601": 1106,
            "602": 1106,
            "606": 1106,
            "608": 109,
            "610": 109,
            "611": 28,
            "612": 81,
            "613": 29,
            "617": 1106,
            "618": 1166,
            "619": 1166,
            "623": 1106,
            "624": 61,
            "625": 61,
            "627": 61,
            "628": 82,
            "629": 82,
            "631": 82,
            "633": 82,
            "641": 61,
            "643": 58,
            "644": 41,
            "649": 58,
            "651": 58,
            "655": 1106,
            "684": 22,
            "686": 22,
            "687": 22,
            "712": 53,
            "714": 53,
            "715": 53,
            "716": 53,
            "718": 53,
            "719": 2,
            "722": 53,
            "748": 5,
            "753": 5,
            "755": 5,
            "756": 8,
            "758": 8,
            "760": 8,
            "761": 8,
            "765": 5,
            "809": 25,
            "833": 2731,
            "836": 2731,
            "837": 532,
            "838": 532,
            "840": 532,
            "842": 453,
            "844": 453,
            "846": 442,
            "852": 532,
            "855": 532,
            "856": 72,
            "858": 72,
            "859": 15,
            "861": 57,
            "866": 2731,
            "884": 10,
            "898": 31,
            "900": 31,
            "901": 31,
            "903": 4,
            "909": 4,
            "910": 4,
            "913": 27,
            "916": 31,
            "919": 2,
            "921": 29,
            "948": 1479,
            "953": 1479,
            "954": 82,
            "961": 1479
        }
    },
    "build/model-list/model-list.js": {
        "path": "build/model-list/model-list.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 141,
            "5": 1,
            "6": 141,
            "7": 141,
            "8": 141,
            "9": 2,
            "10": 2,
            "11": 0,
            "12": 141,
            "13": 141,
            "14": 141,
            "15": 141,
            "16": 141,
            "17": 141,
            "18": 6,
            "19": 2,
            "20": 136,
            "21": 136,
            "22": 77,
            "23": 184,
            "24": 184,
            "25": 6,
            "26": 184,
            "27": 59,
            "28": 8,
            "29": 8,
            "30": 2,
            "31": 2,
            "32": 8,
            "33": 8,
            "34": 3,
            "35": 8,
            "36": 8,
            "37": 8,
            "38": 7,
            "39": 8,
            "40": 3,
            "41": 3,
            "42": 3,
            "43": 9,
            "44": 9,
            "45": 3,
            "46": 3,
            "47": 3,
            "48": 2,
            "49": 2,
            "50": 3,
            "51": 9,
            "52": 9,
            "53": 4,
            "54": 3,
            "55": 1,
            "56": 1,
            "57": 1,
            "58": 1,
            "59": 2,
            "60": 152,
            "61": 141,
            "62": 11,
            "63": 2,
            "64": 1,
            "65": 1,
            "66": 2,
            "67": 1,
            "68": 1,
            "69": 2,
            "70": 9,
            "71": 14,
            "72": 14,
            "73": 9,
            "74": 9,
            "75": 4,
            "76": 4,
            "77": 9,
            "78": 9,
            "79": 9,
            "80": 9,
            "81": 1,
            "82": 1,
            "83": 1,
            "84": 8,
            "85": 5,
            "86": 8,
            "87": 8,
            "88": 8,
            "89": 9,
            "90": 5,
            "91": 9,
            "92": 3,
            "93": 13,
            "94": 6,
            "95": 6,
            "96": 1,
            "97": 1,
            "98": 7,
            "99": 24,
            "100": 24,
            "101": 5,
            "102": 10,
            "103": 2,
            "104": 8,
            "105": 5,
            "106": 10,
            "107": 19,
            "108": 19,
            "109": 19,
            "110": 19,
            "111": 19,
            "112": 0,
            "113": 19,
            "114": 28,
            "115": 19,
            "116": 19,
            "117": 2,
            "118": 17,
            "119": 2,
            "120": 17,
            "121": 19,
            "122": 4,
            "123": 4,
            "124": 11,
            "125": 11,
            "126": 1,
            "127": 3,
            "128": 3,
            "129": 0,
            "130": 3,
            "131": 3,
            "132": 3,
            "133": 3,
            "134": 3,
            "135": 0,
            "136": 3,
            "137": 3,
            "138": 5,
            "139": 5,
            "140": 5,
            "141": 7,
            "142": 1,
            "143": 2,
            "144": 204,
            "145": 204,
            "146": 204,
            "147": 118,
            "148": 204,
            "149": 204,
            "150": 2,
            "151": 2,
            "152": 202,
            "153": 202,
            "154": 42,
            "155": 160,
            "156": 202,
            "157": 216,
            "158": 216,
            "159": 140,
            "160": 140,
            "161": 140,
            "162": 140,
            "163": 53,
            "164": 33,
            "165": 33,
            "166": 33,
            "167": 33,
            "168": 234,
            "169": 234,
            "170": 219,
            "171": 15,
            "172": 15,
            "173": 25,
            "174": 25,
            "175": 25,
            "176": 19,
            "177": 6,
            "178": 15,
            "179": 7,
            "180": 29,
            "181": 29,
            "182": 29,
            "183": 3,
            "184": 3,
            "185": 26,
            "186": 29,
            "187": 1,
            "188": 1,
            "189": 28,
            "190": 28,
            "191": 3,
            "192": 25,
            "193": 28,
            "194": 28,
            "195": 28,
            "196": 0,
            "197": 28,
            "198": 6,
            "199": 6,
            "200": 3,
            "201": 2,
            "202": 1,
            "203": 3,
            "204": 1,
            "205": 4,
            "206": 4,
            "207": 201,
            "208": 201,
            "209": 201,
            "210": 11,
            "211": 201,
            "212": 201,
            "213": 24,
            "214": 24,
            "215": 24,
            "216": 24,
            "217": 0,
            "218": 24,
            "219": 24,
            "220": 3,
            "221": 3,
            "222": 21,
            "223": 21,
            "224": 14,
            "225": 1
        },
        "b": {
            "1": [
                141,
                39
            ],
            "2": [
                141,
                50
            ],
            "3": [
                2,
                139
            ],
            "4": [
                0,
                2
            ],
            "5": [
                6,
                135
            ],
            "6": [
                77,
                59
            ],
            "7": [
                136,
                132
            ],
            "8": [
                4,
                73
            ],
            "9": [
                184,
                133
            ],
            "10": [
                6,
                178
            ],
            "11": [
                2,
                6
            ],
            "12": [
                8,
                4
            ],
            "13": [
                3,
                5
            ],
            "14": [
                7,
                1
            ],
            "15": [
                3,
                5
            ],
            "16": [
                9,
                6
            ],
            "17": [
                2,
                1
            ],
            "18": [
                4,
                5
            ],
            "19": [
                1,
                2
            ],
            "20": [
                1,
                0
            ],
            "21": [
                141,
                11
            ],
            "22": [
                1,
                1
            ],
            "23": [
                1,
                1
            ],
            "24": [
                2,
                1
            ],
            "25": [
                9,
                3
            ],
            "26": [
                4,
                5
            ],
            "27": [
                9,
                2
            ],
            "28": [
                1,
                8
            ],
            "29": [
                5,
                3
            ],
            "30": [
                5,
                4
            ],
            "31": [
                6,
                7
            ],
            "32": [
                6,
                0
            ],
            "33": [
                7,
                5
            ],
            "34": [
                5,
                19
            ],
            "35": [
                24,
                23
            ],
            "36": [
                1,
                4
            ],
            "37": [
                2,
                8
            ],
            "38": [
                19,
                1
            ],
            "39": [
                19,
                7
            ],
            "40": [
                0,
                19
            ],
            "41": [
                5,
                23
            ],
            "42": [
                2,
                17
            ],
            "43": [
                2,
                15
            ],
            "44": [
                1,
                10
            ],
            "45": [
                11,
                8
            ],
            "46": [
                0,
                3
            ],
            "47": [
                3,
                1
            ],
            "48": [
                0,
                3
            ],
            "49": [
                5,
                0
            ],
            "50": [
                204,
                33
            ],
            "51": [
                118,
                86
            ],
            "52": [
                2,
                202
            ],
            "53": [
                204,
                203,
                12
            ],
            "54": [
                7,
                195
            ],
            "55": [
                42,
                160
            ],
            "56": [
                33,
                20
            ],
            "57": [
                20,
                0
            ],
            "58": [
                33,
                0
            ],
            "59": [
                219,
                15
            ],
            "60": [
                234,
                19
            ],
            "61": [
                19,
                6
            ],
            "62": [
                29,
                24
            ],
            "63": [
                3,
                26
            ],
            "64": [
                1,
                28
            ],
            "65": [
                29,
                28
            ],
            "66": [
                3,
                25
            ],
            "67": [
                0,
                28
            ],
            "68": [
                6,
                22
            ],
            "69": [
                28,
                12
            ],
            "70": [
                3,
                3
            ],
            "71": [
                2,
                1
            ],
            "72": [
                1,
                2
            ],
            "73": [
                4,
                0
            ],
            "74": [
                11,
                190
            ],
            "75": [
                0,
                24
            ],
            "76": [
                3,
                21
            ],
            "77": [
                14,
                7
            ]
        },
        "f": {
            "1": 1,
            "2": 141,
            "3": 141,
            "4": 2,
            "5": 136,
            "6": 184,
            "7": 8,
            "8": 8,
            "9": 3,
            "10": 3,
            "11": 152,
            "12": 2,
            "13": 2,
            "14": 2,
            "15": 9,
            "16": 14,
            "17": 9,
            "18": 9,
            "19": 3,
            "20": 13,
            "21": 24,
            "22": 10,
            "23": 10,
            "24": 19,
            "25": 28,
            "26": 4,
            "27": 3,
            "28": 5,
            "29": 7,
            "30": 1,
            "31": 2,
            "32": 204,
            "33": 216,
            "34": 140,
            "35": 53,
            "36": 33,
            "37": 234,
            "38": 7,
            "39": 29,
            "40": 28,
            "41": 6,
            "42": 201,
            "43": 24,
            "44": 24
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 22
                    },
                    "end": {
                        "line": 1,
                        "column": 41
                    }
                }
            },
            "2": {
                "name": "ModelList",
                "line": 137,
                "loc": {
                    "start": {
                        "line": 137,
                        "column": 0
                    },
                    "end": {
                        "line": 137,
                        "column": 21
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 177,
                "loc": {
                    "start": {
                        "line": 177,
                        "column": 17
                    },
                    "end": {
                        "line": 177,
                        "column": 35
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 204,
                "loc": {
                    "start": {
                        "line": 204,
                        "column": 16
                    },
                    "end": {
                        "line": 204,
                        "column": 28
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 250,
                "loc": {
                    "start": {
                        "line": 250,
                        "column": 9
                    },
                    "end": {
                        "line": 250,
                        "column": 36
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 254,
                "loc": {
                    "start": {
                        "line": 254,
                        "column": 66
                    },
                    "end": {
                        "line": 254,
                        "column": 90
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 315,
                "loc": {
                    "start": {
                        "line": 315,
                        "column": 12
                    },
                    "end": {
                        "line": 315,
                        "column": 48
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 334,
                "loc": {
                    "start": {
                        "line": 334,
                        "column": 35
                    },
                    "end": {
                        "line": 334,
                        "column": 50
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 365,
                "loc": {
                    "start": {
                        "line": 365,
                        "column": 10
                    },
                    "end": {
                        "line": 365,
                        "column": 39
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 415,
                "loc": {
                    "start": {
                        "line": 415,
                        "column": 12
                    },
                    "end": {
                        "line": 415,
                        "column": 41
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 457,
                "loc": {
                    "start": {
                        "line": 457,
                        "column": 9
                    },
                    "end": {
                        "line": 457,
                        "column": 25
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 479,
                "loc": {
                    "start": {
                        "line": 479,
                        "column": 15
                    },
                    "end": {
                        "line": 479,
                        "column": 31
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 500,
                "loc": {
                    "start": {
                        "line": 500,
                        "column": 14
                    },
                    "end": {
                        "line": 500,
                        "column": 30
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 515,
                "loc": {
                    "start": {
                        "line": 515,
                        "column": 19
                    },
                    "end": {
                        "line": 515,
                        "column": 39
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 530,
                "loc": {
                    "start": {
                        "line": 530,
                        "column": 13
                    },
                    "end": {
                        "line": 530,
                        "column": 27
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 544,
                "loc": {
                    "start": {
                        "line": 544,
                        "column": 12
                    },
                    "end": {
                        "line": 544,
                        "column": 41
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 582,
                "loc": {
                    "start": {
                        "line": 582,
                        "column": 10
                    },
                    "end": {
                        "line": 582,
                        "column": 39
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 593,
                "loc": {
                    "start": {
                        "line": 593,
                        "column": 35
                    },
                    "end": {
                        "line": 593,
                        "column": 60
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 640,
                "loc": {
                    "start": {
                        "line": 640,
                        "column": 9
                    },
                    "end": {
                        "line": 640,
                        "column": 32
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 662,
                "loc": {
                    "start": {
                        "line": 662,
                        "column": 11
                    },
                    "end": {
                        "line": 662,
                        "column": 31
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 697,
                "loc": {
                    "start": {
                        "line": 697,
                        "column": 12
                    },
                    "end": {
                        "line": 697,
                        "column": 39
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 704,
                "loc": {
                    "start": {
                        "line": 704,
                        "column": 68
                    },
                    "end": {
                        "line": 704,
                        "column": 85
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 712,
                "loc": {
                    "start": {
                        "line": 712,
                        "column": 38
                    },
                    "end": {
                        "line": 712,
                        "column": 55
                    }
                }
            },
            "24": {
                "name": "(anonymous_24)",
                "line": 742,
                "loc": {
                    "start": {
                        "line": 742,
                        "column": 11
                    },
                    "end": {
                        "line": 742,
                        "column": 38
                    }
                }
            },
            "25": {
                "name": "(anonymous_25)",
                "line": 751,
                "loc": {
                    "start": {
                        "line": 751,
                        "column": 40
                    },
                    "end": {
                        "line": 751,
                        "column": 57
                    }
                }
            },
            "26": {
                "name": "(anonymous_26)",
                "line": 794,
                "loc": {
                    "start": {
                        "line": 794,
                        "column": 10
                    },
                    "end": {
                        "line": 794,
                        "column": 39
                    }
                }
            },
            "27": {
                "name": "(anonymous_27)",
                "line": 826,
                "loc": {
                    "start": {
                        "line": 826,
                        "column": 10
                    },
                    "end": {
                        "line": 826,
                        "column": 29
                    }
                }
            },
            "28": {
                "name": "(anonymous_28)",
                "line": 882,
                "loc": {
                    "start": {
                        "line": 882,
                        "column": 10
                    },
                    "end": {
                        "line": 882,
                        "column": 53
                    }
                }
            },
            "29": {
                "name": "(anonymous_29)",
                "line": 896,
                "loc": {
                    "start": {
                        "line": 896,
                        "column": 13
                    },
                    "end": {
                        "line": 896,
                        "column": 25
                    }
                }
            },
            "30": {
                "name": "(anonymous_30)",
                "line": 911,
                "loc": {
                    "start": {
                        "line": 911,
                        "column": 12
                    },
                    "end": {
                        "line": 911,
                        "column": 24
                    }
                }
            },
            "31": {
                "name": "(anonymous_31)",
                "line": 912,
                "loc": {
                    "start": {
                        "line": 912,
                        "column": 24
                    },
                    "end": {
                        "line": 912,
                        "column": 41
                    }
                }
            },
            "32": {
                "name": "(anonymous_32)",
                "line": 934,
                "loc": {
                    "start": {
                        "line": 934,
                        "column": 10
                    },
                    "end": {
                        "line": 934,
                        "column": 36
                    }
                }
            },
            "33": {
                "name": "(anonymous_33)",
                "line": 978,
                "loc": {
                    "start": {
                        "line": 978,
                        "column": 17
                    },
                    "end": {
                        "line": 978,
                        "column": 34
                    }
                }
            },
            "34": {
                "name": "(anonymous_34)",
                "line": 991,
                "loc": {
                    "start": {
                        "line": 991,
                        "column": 12
                    },
                    "end": {
                        "line": 991,
                        "column": 24
                    }
                }
            },
            "35": {
                "name": "(anonymous_35)",
                "line": 1013,
                "loc": {
                    "start": {
                        "line": 1013,
                        "column": 14
                    },
                    "end": {
                        "line": 1013,
                        "column": 30
                    }
                }
            },
            "36": {
                "name": "(anonymous_36)",
                "line": 1024,
                "loc": {
                    "start": {
                        "line": 1024,
                        "column": 17
                    },
                    "end": {
                        "line": 1024,
                        "column": 34
                    }
                }
            },
            "37": {
                "name": "(anonymous_37)",
                "line": 1042,
                "loc": {
                    "start": {
                        "line": 1042,
                        "column": 16
                    },
                    "end": {
                        "line": 1042,
                        "column": 33
                    }
                }
            },
            "38": {
                "name": "(anonymous_38)",
                "line": 1084,
                "loc": {
                    "start": {
                        "line": 1084,
                        "column": 12
                    },
                    "end": {
                        "line": 1084,
                        "column": 32
                    }
                }
            },
            "39": {
                "name": "(anonymous_39)",
                "line": 1100,
                "loc": {
                    "start": {
                        "line": 1100,
                        "column": 13
                    },
                    "end": {
                        "line": 1100,
                        "column": 39
                    }
                }
            },
            "40": {
                "name": "(anonymous_40)",
                "line": 1150,
                "loc": {
                    "start": {
                        "line": 1150,
                        "column": 11
                    },
                    "end": {
                        "line": 1150,
                        "column": 36
                    }
                }
            },
            "41": {
                "name": "(anonymous_41)",
                "line": 1171,
                "loc": {
                    "start": {
                        "line": 1171,
                        "column": 20
                    },
                    "end": {
                        "line": 1171,
                        "column": 33
                    }
                }
            },
            "42": {
                "name": "(anonymous_42)",
                "line": 1206,
                "loc": {
                    "start": {
                        "line": 1206,
                        "column": 15
                    },
                    "end": {
                        "line": 1206,
                        "column": 28
                    }
                }
            },
            "43": {
                "name": "(anonymous_43)",
                "line": 1227,
                "loc": {
                    "start": {
                        "line": 1227,
                        "column": 18
                    },
                    "end": {
                        "line": 1227,
                        "column": 31
                    }
                }
            },
            "44": {
                "name": "(anonymous_44)",
                "line": 1248,
                "loc": {
                    "start": {
                        "line": 1248,
                        "column": 17
                    },
                    "end": {
                        "line": 1248,
                        "column": 30
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 1269,
                    "column": 124
                }
            },
            "2": {
                "start": {
                    "line": 35,
                    "column": 0
                },
                "end": {
                    "line": 135,
                    "column": 24
                }
            },
            "3": {
                "start": {
                    "line": 137,
                    "column": 0
                },
                "end": {
                    "line": 139,
                    "column": 1
                }
            },
            "4": {
                "start": {
                    "line": 138,
                    "column": 4
                },
                "end": {
                    "line": 138,
                    "column": 60
                }
            },
            "5": {
                "start": {
                    "line": 141,
                    "column": 0
                },
                "end": {
                    "line": 1264,
                    "column": 3
                }
            },
            "6": {
                "start": {
                    "line": 178,
                    "column": 8
                },
                "end": {
                    "line": 178,
                    "column": 32
                }
            },
            "7": {
                "start": {
                    "line": 180,
                    "column": 8
                },
                "end": {
                    "line": 180,
                    "column": 60
                }
            },
            "8": {
                "start": {
                    "line": 182,
                    "column": 8
                },
                "end": {
                    "line": 189,
                    "column": 9
                }
            },
            "9": {
                "start": {
                    "line": 184,
                    "column": 12
                },
                "end": {
                    "line": 184,
                    "column": 64
                }
            },
            "10": {
                "start": {
                    "line": 186,
                    "column": 12
                },
                "end": {
                    "line": 188,
                    "column": 13
                }
            },
            "11": {
                "start": {
                    "line": 187,
                    "column": 16
                },
                "end": {
                    "line": 187,
                    "column": 70
                }
            },
            "12": {
                "start": {
                    "line": 191,
                    "column": 8
                },
                "end": {
                    "line": 191,
                    "column": 62
                }
            },
            "13": {
                "start": {
                    "line": 192,
                    "column": 8
                },
                "end": {
                    "line": 192,
                    "column": 64
                }
            },
            "14": {
                "start": {
                    "line": 193,
                    "column": 8
                },
                "end": {
                    "line": 193,
                    "column": 65
                }
            },
            "15": {
                "start": {
                    "line": 195,
                    "column": 8
                },
                "end": {
                    "line": 195,
                    "column": 54
                }
            },
            "16": {
                "start": {
                    "line": 197,
                    "column": 8
                },
                "end": {
                    "line": 197,
                    "column": 22
                }
            },
            "17": {
                "start": {
                    "line": 199,
                    "column": 8
                },
                "end": {
                    "line": 201,
                    "column": 9
                }
            },
            "18": {
                "start": {
                    "line": 200,
                    "column": 12
                },
                "end": {
                    "line": 200,
                    "column": 51
                }
            },
            "19": {
                "start": {
                    "line": 205,
                    "column": 8
                },
                "end": {
                    "line": 205,
                    "column": 22
                }
            },
            "20": {
                "start": {
                    "line": 251,
                    "column": 8
                },
                "end": {
                    "line": 251,
                    "column": 44
                }
            },
            "21": {
                "start": {
                    "line": 253,
                    "column": 8
                },
                "end": {
                    "line": 270,
                    "column": 9
                }
            },
            "22": {
                "start": {
                    "line": 254,
                    "column": 12
                },
                "end": {
                    "line": 267,
                    "column": 21
                }
            },
            "23": {
                "start": {
                    "line": 255,
                    "column": 16
                },
                "end": {
                    "line": 255,
                    "column": 49
                }
            },
            "24": {
                "start": {
                    "line": 260,
                    "column": 16
                },
                "end": {
                    "line": 264,
                    "column": 17
                }
            },
            "25": {
                "start": {
                    "line": 261,
                    "column": 20
                },
                "end": {
                    "line": 263,
                    "column": 23
                }
            },
            "26": {
                "start": {
                    "line": 266,
                    "column": 16
                },
                "end": {
                    "line": 266,
                    "column": 54
                }
            },
            "27": {
                "start": {
                    "line": 269,
                    "column": 12
                },
                "end": {
                    "line": 269,
                    "column": 46
                }
            },
            "28": {
                "start": {
                    "line": 316,
                    "column": 8
                },
                "end": {
                    "line": 316,
                    "column": 24
                }
            },
            "29": {
                "start": {
                    "line": 319,
                    "column": 8
                },
                "end": {
                    "line": 322,
                    "column": 9
                }
            },
            "30": {
                "start": {
                    "line": 320,
                    "column": 12
                },
                "end": {
                    "line": 320,
                    "column": 31
                }
            },
            "31": {
                "start": {
                    "line": 321,
                    "column": 12
                },
                "end": {
                    "line": 321,
                    "column": 26
                }
            },
            "32": {
                "start": {
                    "line": 324,
                    "column": 8
                },
                "end": {
                    "line": 324,
                    "column": 34
                }
            },
            "33": {
                "start": {
                    "line": 326,
                    "column": 8
                },
                "end": {
                    "line": 328,
                    "column": 9
                }
            },
            "34": {
                "start": {
                    "line": 327,
                    "column": 12
                },
                "end": {
                    "line": 327,
                    "column": 42
                }
            },
            "35": {
                "start": {
                    "line": 330,
                    "column": 8
                },
                "end": {
                    "line": 332,
                    "column": 12
                }
            },
            "36": {
                "start": {
                    "line": 334,
                    "column": 8
                },
                "end": {
                    "line": 342,
                    "column": 11
                }
            },
            "37": {
                "start": {
                    "line": 335,
                    "column": 12
                },
                "end": {
                    "line": 337,
                    "column": 13
                }
            },
            "38": {
                "start": {
                    "line": 336,
                    "column": 16
                },
                "end": {
                    "line": 336,
                    "column": 41
                }
            },
            "39": {
                "start": {
                    "line": 339,
                    "column": 12
                },
                "end": {
                    "line": 341,
                    "column": 13
                }
            },
            "40": {
                "start": {
                    "line": 340,
                    "column": 16
                },
                "end": {
                    "line": 340,
                    "column": 48
                }
            },
            "41": {
                "start": {
                    "line": 366,
                    "column": 8
                },
                "end": {
                    "line": 367,
                    "column": 25
                }
            },
            "42": {
                "start": {
                    "line": 369,
                    "column": 8
                },
                "end": {
                    "line": 372,
                    "column": 9
                }
            },
            "43": {
                "start": {
                    "line": 370,
                    "column": 12
                },
                "end": {
                    "line": 370,
                    "column": 28
                }
            },
            "44": {
                "start": {
                    "line": 371,
                    "column": 12
                },
                "end": {
                    "line": 371,
                    "column": 58
                }
            },
            "45": {
                "start": {
                    "line": 374,
                    "column": 8
                },
                "end": {
                    "line": 374,
                    "column": 20
                }
            },
            "46": {
                "start": {
                    "line": 416,
                    "column": 8
                },
                "end": {
                    "line": 418,
                    "column": 31
                }
            },
            "47": {
                "start": {
                    "line": 421,
                    "column": 8
                },
                "end": {
                    "line": 424,
                    "column": 9
                }
            },
            "48": {
                "start": {
                    "line": 422,
                    "column": 12
                },
                "end": {
                    "line": 422,
                    "column": 31
                }
            },
            "49": {
                "start": {
                    "line": 423,
                    "column": 12
                },
                "end": {
                    "line": 423,
                    "column": 26
                }
            },
            "50": {
                "start": {
                    "line": 426,
                    "column": 8
                },
                "end": {
                    "line": 432,
                    "column": 9
                }
            },
            "51": {
                "start": {
                    "line": 427,
                    "column": 12
                },
                "end": {
                    "line": 427,
                    "column": 28
                }
            },
            "52": {
                "start": {
                    "line": 429,
                    "column": 12
                },
                "end": {
                    "line": 431,
                    "column": 13
                }
            },
            "53": {
                "start": {
                    "line": 430,
                    "column": 16
                },
                "end": {
                    "line": 430,
                    "column": 36
                }
            },
            "54": {
                "start": {
                    "line": 434,
                    "column": 8
                },
                "end": {
                    "line": 444,
                    "column": 9
                }
            },
            "55": {
                "start": {
                    "line": 435,
                    "column": 12
                },
                "end": {
                    "line": 435,
                    "column": 61
                }
            },
            "56": {
                "start": {
                    "line": 437,
                    "column": 12
                },
                "end": {
                    "line": 439,
                    "column": 13
                }
            },
            "57": {
                "start": {
                    "line": 438,
                    "column": 16
                },
                "end": {
                    "line": 438,
                    "column": 51
                }
            },
            "58": {
                "start": {
                    "line": 441,
                    "column": 12
                },
                "end": {
                    "line": 441,
                    "column": 24
                }
            },
            "59": {
                "start": {
                    "line": 443,
                    "column": 12
                },
                "end": {
                    "line": 443,
                    "column": 28
                }
            },
            "60": {
                "start": {
                    "line": 458,
                    "column": 8
                },
                "end": {
                    "line": 460,
                    "column": 9
                }
            },
            "61": {
                "start": {
                    "line": 459,
                    "column": 12
                },
                "end": {
                    "line": 459,
                    "column": 56
                }
            },
            "62": {
                "start": {
                    "line": 462,
                    "column": 8
                },
                "end": {
                    "line": 462,
                    "column": 40
                }
            },
            "63": {
                "start": {
                    "line": 480,
                    "column": 8
                },
                "end": {
                    "line": 482,
                    "column": 9
                }
            },
            "64": {
                "start": {
                    "line": 481,
                    "column": 12
                },
                "end": {
                    "line": 481,
                    "column": 71
                }
            },
            "65": {
                "start": {
                    "line": 484,
                    "column": 8
                },
                "end": {
                    "line": 484,
                    "column": 46
                }
            },
            "66": {
                "start": {
                    "line": 501,
                    "column": 8
                },
                "end": {
                    "line": 503,
                    "column": 9
                }
            },
            "67": {
                "start": {
                    "line": 502,
                    "column": 12
                },
                "end": {
                    "line": 502,
                    "column": 76
                }
            },
            "68": {
                "start": {
                    "line": 505,
                    "column": 8
                },
                "end": {
                    "line": 505,
                    "column": 45
                }
            },
            "69": {
                "start": {
                    "line": 516,
                    "column": 8
                },
                "end": {
                    "line": 516,
                    "column": 51
                }
            },
            "70": {
                "start": {
                    "line": 531,
                    "column": 8
                },
                "end": {
                    "line": 531,
                    "column": 39
                }
            },
            "71": {
                "start": {
                    "line": 545,
                    "column": 8
                },
                "end": {
                    "line": 545,
                    "column": 74
                }
            },
            "72": {
                "start": {
                    "line": 546,
                    "column": 8
                },
                "end": {
                    "line": 546,
                    "column": 49
                }
            },
            "73": {
                "start": {
                    "line": 583,
                    "column": 8
                },
                "end": {
                    "line": 583,
                    "column": 24
                }
            },
            "74": {
                "start": {
                    "line": 586,
                    "column": 8
                },
                "end": {
                    "line": 589,
                    "column": 9
                }
            },
            "75": {
                "start": {
                    "line": 587,
                    "column": 12
                },
                "end": {
                    "line": 587,
                    "column": 31
                }
            },
            "76": {
                "start": {
                    "line": 588,
                    "column": 12
                },
                "end": {
                    "line": 588,
                    "column": 26
                }
            },
            "77": {
                "start": {
                    "line": 591,
                    "column": 8
                },
                "end": {
                    "line": 591,
                    "column": 34
                }
            },
            "78": {
                "start": {
                    "line": 593,
                    "column": 8
                },
                "end": {
                    "line": 623,
                    "column": 11
                }
            },
            "79": {
                "start": {
                    "line": 594,
                    "column": 12
                },
                "end": {
                    "line": 599,
                    "column": 23
                }
            },
            "80": {
                "start": {
                    "line": 601,
                    "column": 12
                },
                "end": {
                    "line": 618,
                    "column": 13
                }
            },
            "81": {
                "start": {
                    "line": 602,
                    "column": 16
                },
                "end": {
                    "line": 602,
                    "column": 35
                }
            },
            "82": {
                "start": {
                    "line": 603,
                    "column": 16
                },
                "end": {
                    "line": 603,
                    "column": 38
                }
            },
            "83": {
                "start": {
                    "line": 605,
                    "column": 16
                },
                "end": {
                    "line": 605,
                    "column": 45
                }
            },
            "84": {
                "start": {
                    "line": 608,
                    "column": 16
                },
                "end": {
                    "line": 612,
                    "column": 17
                }
            },
            "85": {
                "start": {
                    "line": 609,
                    "column": 20
                },
                "end": {
                    "line": 611,
                    "column": 23
                }
            },
            "86": {
                "start": {
                    "line": 614,
                    "column": 16
                },
                "end": {
                    "line": 614,
                    "column": 63
                }
            },
            "87": {
                "start": {
                    "line": 616,
                    "column": 16
                },
                "end": {
                    "line": 616,
                    "column": 44
                }
            },
            "88": {
                "start": {
                    "line": 617,
                    "column": 16
                },
                "end": {
                    "line": 617,
                    "column": 44
                }
            },
            "89": {
                "start": {
                    "line": 620,
                    "column": 12
                },
                "end": {
                    "line": 622,
                    "column": 13
                }
            },
            "90": {
                "start": {
                    "line": 621,
                    "column": 16
                },
                "end": {
                    "line": 621,
                    "column": 48
                }
            },
            "91": {
                "start": {
                    "line": 625,
                    "column": 8
                },
                "end": {
                    "line": 625,
                    "column": 20
                }
            },
            "92": {
                "start": {
                    "line": 641,
                    "column": 8
                },
                "end": {
                    "line": 641,
                    "column": 52
                }
            },
            "93": {
                "start": {
                    "line": 663,
                    "column": 8
                },
                "end": {
                    "line": 675,
                    "column": 9
                }
            },
            "94": {
                "start": {
                    "line": 664,
                    "column": 12
                },
                "end": {
                    "line": 674,
                    "column": 13
                }
            },
            "95": {
                "start": {
                    "line": 665,
                    "column": 16
                },
                "end": {
                    "line": 665,
                    "column": 52
                }
            },
            "96": {
                "start": {
                    "line": 667,
                    "column": 16
                },
                "end": {
                    "line": 671,
                    "column": 19
                }
            },
            "97": {
                "start": {
                    "line": 673,
                    "column": 16
                },
                "end": {
                    "line": 673,
                    "column": 28
                }
            },
            "98": {
                "start": {
                    "line": 677,
                    "column": 8
                },
                "end": {
                    "line": 677,
                    "column": 30
                }
            },
            "99": {
                "start": {
                    "line": 698,
                    "column": 8
                },
                "end": {
                    "line": 698,
                    "column": 44
                }
            },
            "100": {
                "start": {
                    "line": 700,
                    "column": 8
                },
                "end": {
                    "line": 717,
                    "column": 9
                }
            },
            "101": {
                "start": {
                    "line": 704,
                    "column": 12
                },
                "end": {
                    "line": 710,
                    "column": 21
                }
            },
            "102": {
                "start": {
                    "line": 705,
                    "column": 16
                },
                "end": {
                    "line": 707,
                    "column": 17
                }
            },
            "103": {
                "start": {
                    "line": 706,
                    "column": 20
                },
                "end": {
                    "line": 706,
                    "column": 44
                }
            },
            "104": {
                "start": {
                    "line": 709,
                    "column": 16
                },
                "end": {
                    "line": 709,
                    "column": 29
                }
            },
            "105": {
                "start": {
                    "line": 712,
                    "column": 12
                },
                "end": {
                    "line": 714,
                    "column": 21
                }
            },
            "106": {
                "start": {
                    "line": 713,
                    "column": 16
                },
                "end": {
                    "line": 713,
                    "column": 52
                }
            },
            "107": {
                "start": {
                    "line": 716,
                    "column": 12
                },
                "end": {
                    "line": 716,
                    "column": 49
                }
            },
            "108": {
                "start": {
                    "line": 743,
                    "column": 8
                },
                "end": {
                    "line": 743,
                    "column": 34
                }
            },
            "109": {
                "start": {
                    "line": 744,
                    "column": 8
                },
                "end": {
                    "line": 744,
                    "column": 34
                }
            },
            "110": {
                "start": {
                    "line": 746,
                    "column": 8
                },
                "end": {
                    "line": 746,
                    "column": 54
                }
            },
            "111": {
                "start": {
                    "line": 748,
                    "column": 8
                },
                "end": {
                    "line": 754,
                    "column": 9
                }
            },
            "112": {
                "start": {
                    "line": 749,
                    "column": 12
                },
                "end": {
                    "line": 749,
                    "column": 38
                }
            },
            "113": {
                "start": {
                    "line": 751,
                    "column": 12
                },
                "end": {
                    "line": 753,
                    "column": 21
                }
            },
            "114": {
                "start": {
                    "line": 752,
                    "column": 16
                },
                "end": {
                    "line": 752,
                    "column": 73
                }
            },
            "115": {
                "start": {
                    "line": 756,
                    "column": 8
                },
                "end": {
                    "line": 756,
                    "column": 31
                }
            },
            "116": {
                "start": {
                    "line": 758,
                    "column": 8
                },
                "end": {
                    "line": 767,
                    "column": 9
                }
            },
            "117": {
                "start": {
                    "line": 759,
                    "column": 12
                },
                "end": {
                    "line": 759,
                    "column": 37
                }
            },
            "118": {
                "start": {
                    "line": 762,
                    "column": 12
                },
                "end": {
                    "line": 764,
                    "column": 13
                }
            },
            "119": {
                "start": {
                    "line": 763,
                    "column": 16
                },
                "end": {
                    "line": 763,
                    "column": 54
                }
            },
            "120": {
                "start": {
                    "line": 766,
                    "column": 12
                },
                "end": {
                    "line": 766,
                    "column": 41
                }
            },
            "121": {
                "start": {
                    "line": 769,
                    "column": 8
                },
                "end": {
                    "line": 769,
                    "column": 20
                }
            },
            "122": {
                "start": {
                    "line": 795,
                    "column": 8
                },
                "end": {
                    "line": 796,
                    "column": 25
                }
            },
            "123": {
                "start": {
                    "line": 798,
                    "column": 8
                },
                "end": {
                    "line": 804,
                    "column": 9
                }
            },
            "124": {
                "start": {
                    "line": 799,
                    "column": 12
                },
                "end": {
                    "line": 799,
                    "column": 28
                }
            },
            "125": {
                "start": {
                    "line": 801,
                    "column": 12
                },
                "end": {
                    "line": 803,
                    "column": 13
                }
            },
            "126": {
                "start": {
                    "line": 802,
                    "column": 16
                },
                "end": {
                    "line": 802,
                    "column": 28
                }
            },
            "127": {
                "start": {
                    "line": 806,
                    "column": 8
                },
                "end": {
                    "line": 806,
                    "column": 21
                }
            },
            "128": {
                "start": {
                    "line": 827,
                    "column": 8
                },
                "end": {
                    "line": 829,
                    "column": 9
                }
            },
            "129": {
                "start": {
                    "line": 828,
                    "column": 12
                },
                "end": {
                    "line": 828,
                    "column": 24
                }
            },
            "130": {
                "start": {
                    "line": 831,
                    "column": 8
                },
                "end": {
                    "line": 832,
                    "column": 19
                }
            },
            "131": {
                "start": {
                    "line": 834,
                    "column": 8
                },
                "end": {
                    "line": 834,
                    "column": 34
                }
            },
            "132": {
                "start": {
                    "line": 836,
                    "column": 8
                },
                "end": {
                    "line": 836,
                    "column": 56
                }
            },
            "133": {
                "start": {
                    "line": 838,
                    "column": 8
                },
                "end": {
                    "line": 841,
                    "column": 11
                }
            },
            "134": {
                "start": {
                    "line": 843,
                    "column": 8
                },
                "end": {
                    "line": 847,
                    "column": 9
                }
            },
            "135": {
                "start": {
                    "line": 844,
                    "column": 12
                },
                "end": {
                    "line": 844,
                    "column": 37
                }
            },
            "136": {
                "start": {
                    "line": 846,
                    "column": 12
                },
                "end": {
                    "line": 846,
                    "column": 41
                }
            },
            "137": {
                "start": {
                    "line": 849,
                    "column": 8
                },
                "end": {
                    "line": 849,
                    "column": 20
                }
            },
            "138": {
                "start": {
                    "line": 883,
                    "column": 8
                },
                "end": {
                    "line": 883,
                    "column": 56
                }
            },
            "139": {
                "start": {
                    "line": 885,
                    "column": 8
                },
                "end": {
                    "line": 887,
                    "column": 9
                }
            },
            "140": {
                "start": {
                    "line": 886,
                    "column": 12
                },
                "end": {
                    "line": 886,
                    "column": 23
                }
            },
            "141": {
                "start": {
                    "line": 897,
                    "column": 8
                },
                "end": {
                    "line": 897,
                    "column": 36
                }
            },
            "142": {
                "start": {
                    "line": 912,
                    "column": 8
                },
                "end": {
                    "line": 914,
                    "column": 11
                }
            },
            "143": {
                "start": {
                    "line": 913,
                    "column": 12
                },
                "end": {
                    "line": 913,
                    "column": 34
                }
            },
            "144": {
                "start": {
                    "line": 935,
                    "column": 8
                },
                "end": {
                    "line": 935,
                    "column": 23
                }
            },
            "145": {
                "start": {
                    "line": 937,
                    "column": 8
                },
                "end": {
                    "line": 937,
                    "column": 34
                }
            },
            "146": {
                "start": {
                    "line": 939,
                    "column": 8
                },
                "end": {
                    "line": 941,
                    "column": 9
                }
            },
            "147": {
                "start": {
                    "line": 940,
                    "column": 12
                },
                "end": {
                    "line": 940,
                    "column": 42
                }
            },
            "148": {
                "start": {
                    "line": 943,
                    "column": 8
                },
                "end": {
                    "line": 943,
                    "column": 29
                }
            },
            "149": {
                "start": {
                    "line": 945,
                    "column": 8
                },
                "end": {
                    "line": 955,
                    "column": 9
                }
            },
            "150": {
                "start": {
                    "line": 948,
                    "column": 12
                },
                "end": {
                    "line": 952,
                    "column": 15
                }
            },
            "151": {
                "start": {
                    "line": 954,
                    "column": 12
                },
                "end": {
                    "line": 954,
                    "column": 19
                }
            },
            "152": {
                "start": {
                    "line": 957,
                    "column": 8
                },
                "end": {
                    "line": 960,
                    "column": 11
                }
            },
            "153": {
                "start": {
                    "line": 962,
                    "column": 8
                },
                "end": {
                    "line": 966,
                    "column": 9
                }
            },
            "154": {
                "start": {
                    "line": 963,
                    "column": 12
                },
                "end": {
                    "line": 963,
                    "column": 35
                }
            },
            "155": {
                "start": {
                    "line": 965,
                    "column": 12
                },
                "end": {
                    "line": 965,
                    "column": 39
                }
            },
            "156": {
                "start": {
                    "line": 968,
                    "column": 8
                },
                "end": {
                    "line": 968,
                    "column": 21
                }
            },
            "157": {
                "start": {
                    "line": 980,
                    "column": 8
                },
                "end": {
                    "line": 980,
                    "column": 31
                }
            },
            "158": {
                "start": {
                    "line": 981,
                    "column": 8
                },
                "end": {
                    "line": 981,
                    "column": 30
                }
            },
            "159": {
                "start": {
                    "line": 992,
                    "column": 8
                },
                "end": {
                    "line": 992,
                    "column": 57
                }
            },
            "160": {
                "start": {
                    "line": 994,
                    "column": 8
                },
                "end": {
                    "line": 994,
                    "column": 31
                }
            },
            "161": {
                "start": {
                    "line": 995,
                    "column": 8
                },
                "end": {
                    "line": 995,
                    "column": 31
                }
            },
            "162": {
                "start": {
                    "line": 996,
                    "column": 8
                },
                "end": {
                    "line": 996,
                    "column": 31
                }
            },
            "163": {
                "start": {
                    "line": 1014,
                    "column": 8
                },
                "end": {
                    "line": 1014,
                    "column": 44
                }
            },
            "164": {
                "start": {
                    "line": 1025,
                    "column": 8
                },
                "end": {
                    "line": 1025,
                    "column": 54
                }
            },
            "165": {
                "start": {
                    "line": 1027,
                    "column": 8
                },
                "end": {
                    "line": 1030,
                    "column": 9
                }
            },
            "166": {
                "start": {
                    "line": 1028,
                    "column": 12
                },
                "end": {
                    "line": 1028,
                    "column": 41
                }
            },
            "167": {
                "start": {
                    "line": 1029,
                    "column": 12
                },
                "end": {
                    "line": 1029,
                    "column": 37
                }
            },
            "168": {
                "start": {
                    "line": 1043,
                    "column": 8
                },
                "end": {
                    "line": 1046,
                    "column": 33
                }
            },
            "169": {
                "start": {
                    "line": 1048,
                    "column": 8
                },
                "end": {
                    "line": 1050,
                    "column": 9
                }
            },
            "170": {
                "start": {
                    "line": 1049,
                    "column": 12
                },
                "end": {
                    "line": 1049,
                    "column": 23
                }
            },
            "171": {
                "start": {
                    "line": 1052,
                    "column": 8
                },
                "end": {
                    "line": 1052,
                    "column": 40
                }
            },
            "172": {
                "start": {
                    "line": 1056,
                    "column": 8
                },
                "end": {
                    "line": 1065,
                    "column": 9
                }
            },
            "173": {
                "start": {
                    "line": 1057,
                    "column": 12
                },
                "end": {
                    "line": 1057,
                    "column": 38
                }
            },
            "174": {
                "start": {
                    "line": 1058,
                    "column": 12
                },
                "end": {
                    "line": 1058,
                    "column": 35
                }
            },
            "175": {
                "start": {
                    "line": 1060,
                    "column": 12
                },
                "end": {
                    "line": 1064,
                    "column": 13
                }
            },
            "176": {
                "start": {
                    "line": 1061,
                    "column": 16
                },
                "end": {
                    "line": 1061,
                    "column": 33
                }
            },
            "177": {
                "start": {
                    "line": 1063,
                    "column": 16
                },
                "end": {
                    "line": 1063,
                    "column": 29
                }
            },
            "178": {
                "start": {
                    "line": 1067,
                    "column": 8
                },
                "end": {
                    "line": 1067,
                    "column": 19
                }
            },
            "179": {
                "start": {
                    "line": 1085,
                    "column": 8
                },
                "end": {
                    "line": 1085,
                    "column": 36
                }
            },
            "180": {
                "start": {
                    "line": 1101,
                    "column": 8
                },
                "end": {
                    "line": 1101,
                    "column": 26
                }
            },
            "181": {
                "start": {
                    "line": 1103,
                    "column": 8
                },
                "end": {
                    "line": 1103,
                    "column": 34
                }
            },
            "182": {
                "start": {
                    "line": 1105,
                    "column": 8
                },
                "end": {
                    "line": 1110,
                    "column": 9
                }
            },
            "183": {
                "start": {
                    "line": 1106,
                    "column": 12
                },
                "end": {
                    "line": 1106,
                    "column": 26
                }
            },
            "184": {
                "start": {
                    "line": 1107,
                    "column": 12
                },
                "end": {
                    "line": 1107,
                    "column": 37
                }
            },
            "185": {
                "start": {
                    "line": 1109,
                    "column": 12
                },
                "end": {
                    "line": 1109,
                    "column": 40
                }
            },
            "186": {
                "start": {
                    "line": 1112,
                    "column": 8
                },
                "end": {
                    "line": 1121,
                    "column": 9
                }
            },
            "187": {
                "start": {
                    "line": 1113,
                    "column": 12
                },
                "end": {
                    "line": 1118,
                    "column": 15
                }
            },
            "188": {
                "start": {
                    "line": 1120,
                    "column": 12
                },
                "end": {
                    "line": 1120,
                    "column": 19
                }
            },
            "189": {
                "start": {
                    "line": 1123,
                    "column": 8
                },
                "end": {
                    "line": 1126,
                    "column": 11
                }
            },
            "190": {
                "start": {
                    "line": 1128,
                    "column": 8
                },
                "end": {
                    "line": 1132,
                    "column": 9
                }
            },
            "191": {
                "start": {
                    "line": 1129,
                    "column": 12
                },
                "end": {
                    "line": 1129,
                    "column": 38
                }
            },
            "192": {
                "start": {
                    "line": 1131,
                    "column": 12
                },
                "end": {
                    "line": 1131,
                    "column": 42
                }
            },
            "193": {
                "start": {
                    "line": 1134,
                    "column": 8
                },
                "end": {
                    "line": 1134,
                    "column": 21
                }
            },
            "194": {
                "start": {
                    "line": 1151,
                    "column": 8
                },
                "end": {
                    "line": 1151,
                    "column": 75
                }
            },
            "195": {
                "start": {
                    "line": 1154,
                    "column": 8
                },
                "end": {
                    "line": 1156,
                    "column": 9
                }
            },
            "196": {
                "start": {
                    "line": 1155,
                    "column": 12
                },
                "end": {
                    "line": 1155,
                    "column": 26
                }
            },
            "197": {
                "start": {
                    "line": 1159,
                    "column": 8
                },
                "end": {
                    "line": 1159,
                    "column": 64
                }
            },
            "198": {
                "start": {
                    "line": 1172,
                    "column": 8
                },
                "end": {
                    "line": 1174,
                    "column": 31
                }
            },
            "199": {
                "start": {
                    "line": 1176,
                    "column": 8
                },
                "end": {
                    "line": 1190,
                    "column": 9
                }
            },
            "200": {
                "start": {
                    "line": 1177,
                    "column": 12
                },
                "end": {
                    "line": 1183,
                    "column": 13
                }
            },
            "201": {
                "start": {
                    "line": 1178,
                    "column": 16
                },
                "end": {
                    "line": 1178,
                    "column": 44
                }
            },
            "202": {
                "start": {
                    "line": 1182,
                    "column": 16
                },
                "end": {
                    "line": 1182,
                    "column": 23
                }
            },
            "203": {
                "start": {
                    "line": 1187,
                    "column": 12
                },
                "end": {
                    "line": 1189,
                    "column": 13
                }
            },
            "204": {
                "start": {
                    "line": 1188,
                    "column": 16
                },
                "end": {
                    "line": 1188,
                    "column": 23
                }
            },
            "205": {
                "start": {
                    "line": 1192,
                    "column": 8
                },
                "end": {
                    "line": 1194,
                    "column": 9
                }
            },
            "206": {
                "start": {
                    "line": 1193,
                    "column": 12
                },
                "end": {
                    "line": 1193,
                    "column": 41
                }
            },
            "207": {
                "start": {
                    "line": 1207,
                    "column": 8
                },
                "end": {
                    "line": 1208,
                    "column": 36
                }
            },
            "208": {
                "start": {
                    "line": 1210,
                    "column": 8
                },
                "end": {
                    "line": 1210,
                    "column": 57
                }
            },
            "209": {
                "start": {
                    "line": 1212,
                    "column": 8
                },
                "end": {
                    "line": 1214,
                    "column": 9
                }
            },
            "210": {
                "start": {
                    "line": 1213,
                    "column": 12
                },
                "end": {
                    "line": 1213,
                    "column": 36
                }
            },
            "211": {
                "start": {
                    "line": 1216,
                    "column": 8
                },
                "end": {
                    "line": 1216,
                    "column": 32
                }
            },
            "212": {
                "start": {
                    "line": 1217,
                    "column": 8
                },
                "end": {
                    "line": 1217,
                    "column": 46
                }
            },
            "213": {
                "start": {
                    "line": 1228,
                    "column": 8
                },
                "end": {
                    "line": 1229,
                    "column": 36
                }
            },
            "214": {
                "start": {
                    "line": 1231,
                    "column": 8
                },
                "end": {
                    "line": 1231,
                    "column": 32
                }
            },
            "215": {
                "start": {
                    "line": 1232,
                    "column": 8
                },
                "end": {
                    "line": 1232,
                    "column": 56
                }
            },
            "216": {
                "start": {
                    "line": 1234,
                    "column": 8
                },
                "end": {
                    "line": 1236,
                    "column": 9
                }
            },
            "217": {
                "start": {
                    "line": 1235,
                    "column": 12
                },
                "end": {
                    "line": 1235,
                    "column": 35
                }
            },
            "218": {
                "start": {
                    "line": 1238,
                    "column": 8
                },
                "end": {
                    "line": 1238,
                    "column": 39
                }
            },
            "219": {
                "start": {
                    "line": 1251,
                    "column": 8
                },
                "end": {
                    "line": 1254,
                    "column": 9
                }
            },
            "220": {
                "start": {
                    "line": 1252,
                    "column": 12
                },
                "end": {
                    "line": 1252,
                    "column": 44
                }
            },
            "221": {
                "start": {
                    "line": 1253,
                    "column": 12
                },
                "end": {
                    "line": 1253,
                    "column": 19
                }
            },
            "222": {
                "start": {
                    "line": 1256,
                    "column": 8
                },
                "end": {
                    "line": 1256,
                    "column": 22
                }
            },
            "223": {
                "start": {
                    "line": 1258,
                    "column": 8
                },
                "end": {
                    "line": 1260,
                    "column": 9
                }
            },
            "224": {
                "start": {
                    "line": 1259,
                    "column": 12
                },
                "end": {
                    "line": 1259,
                    "column": 47
                }
            },
            "225": {
                "start": {
                    "line": 1266,
                    "column": 0
                },
                "end": {
                    "line": 1266,
                    "column": 34
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 178,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 178,
                            "column": 8
                        },
                        "end": {
                            "line": 178,
                            "column": 14
                        }
                    },
                    {
                        "start": {
                            "line": 178,
                            "column": 19
                        },
                        "end": {
                            "line": 178,
                            "column": 30
                        }
                    }
                ]
            },
            "2": {
                "line": 180,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 180,
                            "column": 33
                        },
                        "end": {
                            "line": 180,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 180,
                            "column": 49
                        },
                        "end": {
                            "line": 180,
                            "column": 59
                        }
                    }
                ]
            },
            "3": {
                "line": 182,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 182,
                            "column": 8
                        },
                        "end": {
                            "line": 182,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 182,
                            "column": 8
                        },
                        "end": {
                            "line": 182,
                            "column": 8
                        }
                    }
                ]
            },
            "4": {
                "line": 186,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 186,
                            "column": 12
                        },
                        "end": {
                            "line": 186,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 186,
                            "column": 12
                        },
                        "end": {
                            "line": 186,
                            "column": 12
                        }
                    }
                ]
            },
            "5": {
                "line": 199,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 199,
                            "column": 8
                        },
                        "end": {
                            "line": 199,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 199,
                            "column": 8
                        },
                        "end": {
                            "line": 199,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 253,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 253,
                            "column": 8
                        },
                        "end": {
                            "line": 253,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 253,
                            "column": 8
                        },
                        "end": {
                            "line": 253,
                            "column": 8
                        }
                    }
                ]
            },
            "7": {
                "line": 253,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 253,
                            "column": 12
                        },
                        "end": {
                            "line": 253,
                            "column": 18
                        }
                    },
                    {
                        "start": {
                            "line": 253,
                            "column": 22
                        },
                        "end": {
                            "line": 253,
                            "column": 42
                        }
                    }
                ]
            },
            "8": {
                "line": 254,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 254,
                            "column": 39
                        },
                        "end": {
                            "line": 254,
                            "column": 55
                        }
                    },
                    {
                        "start": {
                            "line": 254,
                            "column": 58
                        },
                        "end": {
                            "line": 254,
                            "column": 64
                        }
                    }
                ]
            },
            "9": {
                "line": 255,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 255,
                            "column": 35
                        },
                        "end": {
                            "line": 255,
                            "column": 42
                        }
                    },
                    {
                        "start": {
                            "line": 255,
                            "column": 46
                        },
                        "end": {
                            "line": 255,
                            "column": 48
                        }
                    }
                ]
            },
            "10": {
                "line": 260,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 260,
                            "column": 16
                        },
                        "end": {
                            "line": 260,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 260,
                            "column": 16
                        },
                        "end": {
                            "line": 260,
                            "column": 16
                        }
                    }
                ]
            },
            "11": {
                "line": 319,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 319,
                            "column": 8
                        },
                        "end": {
                            "line": 319,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 319,
                            "column": 8
                        },
                        "end": {
                            "line": 319,
                            "column": 8
                        }
                    }
                ]
            },
            "12": {
                "line": 324,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 324,
                            "column": 8
                        },
                        "end": {
                            "line": 324,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 324,
                            "column": 20
                        },
                        "end": {
                            "line": 324,
                            "column": 32
                        }
                    }
                ]
            },
            "13": {
                "line": 326,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 326,
                            "column": 8
                        },
                        "end": {
                            "line": 326,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 326,
                            "column": 8
                        },
                        "end": {
                            "line": 326,
                            "column": 8
                        }
                    }
                ]
            },
            "14": {
                "line": 335,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 335,
                            "column": 12
                        },
                        "end": {
                            "line": 335,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 335,
                            "column": 12
                        },
                        "end": {
                            "line": 335,
                            "column": 12
                        }
                    }
                ]
            },
            "15": {
                "line": 339,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 339,
                            "column": 12
                        },
                        "end": {
                            "line": 339,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 339,
                            "column": 12
                        },
                        "end": {
                            "line": 339,
                            "column": 12
                        }
                    }
                ]
            },
            "16": {
                "line": 371,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 371,
                            "column": 26
                        },
                        "end": {
                            "line": 371,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 371,
                            "column": 37
                        },
                        "end": {
                            "line": 371,
                            "column": 41
                        }
                    }
                ]
            },
            "17": {
                "line": 421,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 421,
                            "column": 8
                        },
                        "end": {
                            "line": 421,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 421,
                            "column": 8
                        },
                        "end": {
                            "line": 421,
                            "column": 8
                        }
                    }
                ]
            },
            "18": {
                "line": 429,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 429,
                            "column": 12
                        },
                        "end": {
                            "line": 429,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 429,
                            "column": 12
                        },
                        "end": {
                            "line": 429,
                            "column": 12
                        }
                    }
                ]
            },
            "19": {
                "line": 434,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 434,
                            "column": 8
                        },
                        "end": {
                            "line": 434,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 434,
                            "column": 8
                        },
                        "end": {
                            "line": 434,
                            "column": 8
                        }
                    }
                ]
            },
            "20": {
                "line": 437,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 437,
                            "column": 12
                        },
                        "end": {
                            "line": 437,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 437,
                            "column": 12
                        },
                        "end": {
                            "line": 437,
                            "column": 12
                        }
                    }
                ]
            },
            "21": {
                "line": 458,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 458,
                            "column": 8
                        },
                        "end": {
                            "line": 458,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 458,
                            "column": 8
                        },
                        "end": {
                            "line": 458,
                            "column": 8
                        }
                    }
                ]
            },
            "22": {
                "line": 480,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 480,
                            "column": 8
                        },
                        "end": {
                            "line": 480,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 480,
                            "column": 8
                        },
                        "end": {
                            "line": 480,
                            "column": 8
                        }
                    }
                ]
            },
            "23": {
                "line": 501,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 501,
                            "column": 8
                        },
                        "end": {
                            "line": 501,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 501,
                            "column": 8
                        },
                        "end": {
                            "line": 501,
                            "column": 8
                        }
                    }
                ]
            },
            "24": {
                "line": 516,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 516,
                            "column": 15
                        },
                        "end": {
                            "line": 516,
                            "column": 42
                        }
                    },
                    {
                        "start": {
                            "line": 516,
                            "column": 46
                        },
                        "end": {
                            "line": 516,
                            "column": 50
                        }
                    }
                ]
            },
            "25": {
                "line": 531,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 531,
                            "column": 15
                        },
                        "end": {
                            "line": 531,
                            "column": 30
                        }
                    },
                    {
                        "start": {
                            "line": 531,
                            "column": 34
                        },
                        "end": {
                            "line": 531,
                            "column": 38
                        }
                    }
                ]
            },
            "26": {
                "line": 586,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 586,
                            "column": 8
                        },
                        "end": {
                            "line": 586,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 586,
                            "column": 8
                        },
                        "end": {
                            "line": 586,
                            "column": 8
                        }
                    }
                ]
            },
            "27": {
                "line": 591,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 591,
                            "column": 8
                        },
                        "end": {
                            "line": 591,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 591,
                            "column": 20
                        },
                        "end": {
                            "line": 591,
                            "column": 32
                        }
                    }
                ]
            },
            "28": {
                "line": 601,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 601,
                            "column": 12
                        },
                        "end": {
                            "line": 601,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 601,
                            "column": 12
                        },
                        "end": {
                            "line": 601,
                            "column": 12
                        }
                    }
                ]
            },
            "29": {
                "line": 608,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 608,
                            "column": 16
                        },
                        "end": {
                            "line": 608,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 608,
                            "column": 16
                        },
                        "end": {
                            "line": 608,
                            "column": 16
                        }
                    }
                ]
            },
            "30": {
                "line": 620,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 620,
                            "column": 12
                        },
                        "end": {
                            "line": 620,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 620,
                            "column": 12
                        },
                        "end": {
                            "line": 620,
                            "column": 12
                        }
                    }
                ]
            },
            "31": {
                "line": 663,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 663,
                            "column": 8
                        },
                        "end": {
                            "line": 663,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 663,
                            "column": 8
                        },
                        "end": {
                            "line": 663,
                            "column": 8
                        }
                    }
                ]
            },
            "32": {
                "line": 665,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 665,
                            "column": 23
                        },
                        "end": {
                            "line": 665,
                            "column": 45
                        }
                    },
                    {
                        "start": {
                            "line": 665,
                            "column": 49
                        },
                        "end": {
                            "line": 665,
                            "column": 51
                        }
                    }
                ]
            },
            "33": {
                "line": 677,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 677,
                            "column": 15
                        },
                        "end": {
                            "line": 677,
                            "column": 23
                        }
                    },
                    {
                        "start": {
                            "line": 677,
                            "column": 27
                        },
                        "end": {
                            "line": 677,
                            "column": 29
                        }
                    }
                ]
            },
            "34": {
                "line": 700,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 700,
                            "column": 8
                        },
                        "end": {
                            "line": 700,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 700,
                            "column": 8
                        },
                        "end": {
                            "line": 700,
                            "column": 8
                        }
                    }
                ]
            },
            "35": {
                "line": 700,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 700,
                            "column": 12
                        },
                        "end": {
                            "line": 700,
                            "column": 18
                        }
                    },
                    {
                        "start": {
                            "line": 700,
                            "column": 22
                        },
                        "end": {
                            "line": 700,
                            "column": 42
                        }
                    }
                ]
            },
            "36": {
                "line": 704,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 704,
                            "column": 41
                        },
                        "end": {
                            "line": 704,
                            "column": 57
                        }
                    },
                    {
                        "start": {
                            "line": 704,
                            "column": 60
                        },
                        "end": {
                            "line": 704,
                            "column": 66
                        }
                    }
                ]
            },
            "37": {
                "line": 705,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 705,
                            "column": 16
                        },
                        "end": {
                            "line": 705,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 705,
                            "column": 16
                        },
                        "end": {
                            "line": 705,
                            "column": 16
                        }
                    }
                ]
            },
            "38": {
                "line": 743,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 743,
                            "column": 8
                        },
                        "end": {
                            "line": 743,
                            "column": 14
                        }
                    },
                    {
                        "start": {
                            "line": 743,
                            "column": 20
                        },
                        "end": {
                            "line": 743,
                            "column": 32
                        }
                    }
                ]
            },
            "39": {
                "line": 744,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 744,
                            "column": 8
                        },
                        "end": {
                            "line": 744,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 744,
                            "column": 20
                        },
                        "end": {
                            "line": 744,
                            "column": 32
                        }
                    }
                ]
            },
            "40": {
                "line": 748,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 748,
                            "column": 8
                        },
                        "end": {
                            "line": 748,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 748,
                            "column": 8
                        },
                        "end": {
                            "line": 748,
                            "column": 8
                        }
                    }
                ]
            },
            "41": {
                "line": 752,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 752,
                            "column": 43
                        },
                        "end": {
                            "line": 752,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 752,
                            "column": 51
                        },
                        "end": {
                            "line": 752,
                            "column": 72
                        }
                    }
                ]
            },
            "42": {
                "line": 758,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 758,
                            "column": 8
                        },
                        "end": {
                            "line": 758,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 758,
                            "column": 8
                        },
                        "end": {
                            "line": 758,
                            "column": 8
                        }
                    }
                ]
            },
            "43": {
                "line": 762,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 762,
                            "column": 12
                        },
                        "end": {
                            "line": 762,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 762,
                            "column": 12
                        },
                        "end": {
                            "line": 762,
                            "column": 12
                        }
                    }
                ]
            },
            "44": {
                "line": 801,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 801,
                            "column": 12
                        },
                        "end": {
                            "line": 801,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 801,
                            "column": 12
                        },
                        "end": {
                            "line": 801,
                            "column": 12
                        }
                    }
                ]
            },
            "45": {
                "line": 801,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 801,
                            "column": 30
                        },
                        "end": {
                            "line": 801,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 801,
                            "column": 41
                        },
                        "end": {
                            "line": 801,
                            "column": 45
                        }
                    }
                ]
            },
            "46": {
                "line": 827,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 827,
                            "column": 8
                        },
                        "end": {
                            "line": 827,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 827,
                            "column": 8
                        },
                        "end": {
                            "line": 827,
                            "column": 8
                        }
                    }
                ]
            },
            "47": {
                "line": 834,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 834,
                            "column": 8
                        },
                        "end": {
                            "line": 834,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 834,
                            "column": 20
                        },
                        "end": {
                            "line": 834,
                            "column": 32
                        }
                    }
                ]
            },
            "48": {
                "line": 843,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 843,
                            "column": 8
                        },
                        "end": {
                            "line": 843,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 843,
                            "column": 8
                        },
                        "end": {
                            "line": 843,
                            "column": 8
                        }
                    }
                ]
            },
            "49": {
                "line": 885,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 885,
                            "column": 8
                        },
                        "end": {
                            "line": 885,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 885,
                            "column": 8
                        },
                        "end": {
                            "line": 885,
                            "column": 8
                        }
                    }
                ]
            },
            "50": {
                "line": 937,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 937,
                            "column": 8
                        },
                        "end": {
                            "line": 937,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 937,
                            "column": 20
                        },
                        "end": {
                            "line": 937,
                            "column": 32
                        }
                    }
                ]
            },
            "51": {
                "line": 939,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 939,
                            "column": 8
                        },
                        "end": {
                            "line": 939,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 939,
                            "column": 8
                        },
                        "end": {
                            "line": 939,
                            "column": 8
                        }
                    }
                ]
            },
            "52": {
                "line": 945,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 945,
                            "column": 8
                        },
                        "end": {
                            "line": 945,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 945,
                            "column": 8
                        },
                        "end": {
                            "line": 945,
                            "column": 8
                        }
                    }
                ]
            },
            "53": {
                "line": 945,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 945,
                            "column": 12
                        },
                        "end": {
                            "line": 945,
                            "column": 52
                        }
                    },
                    {
                        "start": {
                            "line": 946,
                            "column": 20
                        },
                        "end": {
                            "line": 946,
                            "column": 36
                        }
                    },
                    {
                        "start": {
                            "line": 946,
                            "column": 40
                        },
                        "end": {
                            "line": 946,
                            "column": 55
                        }
                    }
                ]
            },
            "54": {
                "line": 958,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 958,
                            "column": 40
                        },
                        "end": {
                            "line": 958,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 958,
                            "column": 56
                        },
                        "end": {
                            "line": 958,
                            "column": 78
                        }
                    }
                ]
            },
            "55": {
                "line": 962,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 962,
                            "column": 8
                        },
                        "end": {
                            "line": 962,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 962,
                            "column": 8
                        },
                        "end": {
                            "line": 962,
                            "column": 8
                        }
                    }
                ]
            },
            "56": {
                "line": 1014,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1014,
                            "column": 23
                        },
                        "end": {
                            "line": 1014,
                            "column": 25
                        }
                    },
                    {
                        "start": {
                            "line": 1014,
                            "column": 29
                        },
                        "end": {
                            "line": 1014,
                            "column": 42
                        }
                    }
                ]
            },
            "57": {
                "line": 1014,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1014,
                            "column": 37
                        },
                        "end": {
                            "line": 1014,
                            "column": 38
                        }
                    },
                    {
                        "start": {
                            "line": 1014,
                            "column": 41
                        },
                        "end": {
                            "line": 1014,
                            "column": 42
                        }
                    }
                ]
            },
            "58": {
                "line": 1027,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1027,
                            "column": 8
                        },
                        "end": {
                            "line": 1027,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1027,
                            "column": 8
                        },
                        "end": {
                            "line": 1027,
                            "column": 8
                        }
                    }
                ]
            },
            "59": {
                "line": 1048,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1048,
                            "column": 8
                        },
                        "end": {
                            "line": 1048,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1048,
                            "column": 8
                        },
                        "end": {
                            "line": 1048,
                            "column": 8
                        }
                    }
                ]
            },
            "60": {
                "line": 1048,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1048,
                            "column": 12
                        },
                        "end": {
                            "line": 1048,
                            "column": 28
                        }
                    },
                    {
                        "start": {
                            "line": 1048,
                            "column": 32
                        },
                        "end": {
                            "line": 1048,
                            "column": 36
                        }
                    }
                ]
            },
            "61": {
                "line": 1060,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1060,
                            "column": 12
                        },
                        "end": {
                            "line": 1060,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1060,
                            "column": 12
                        },
                        "end": {
                            "line": 1060,
                            "column": 12
                        }
                    }
                ]
            },
            "62": {
                "line": 1103,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1103,
                            "column": 8
                        },
                        "end": {
                            "line": 1103,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 1103,
                            "column": 20
                        },
                        "end": {
                            "line": 1103,
                            "column": 32
                        }
                    }
                ]
            },
            "63": {
                "line": 1105,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1105,
                            "column": 8
                        },
                        "end": {
                            "line": 1105,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1105,
                            "column": 8
                        },
                        "end": {
                            "line": 1105,
                            "column": 8
                        }
                    }
                ]
            },
            "64": {
                "line": 1112,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1112,
                            "column": 8
                        },
                        "end": {
                            "line": 1112,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1112,
                            "column": 8
                        },
                        "end": {
                            "line": 1112,
                            "column": 8
                        }
                    }
                ]
            },
            "65": {
                "line": 1112,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1112,
                            "column": 12
                        },
                        "end": {
                            "line": 1112,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 1112,
                            "column": 28
                        },
                        "end": {
                            "line": 1112,
                            "column": 34
                        }
                    }
                ]
            },
            "66": {
                "line": 1128,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1128,
                            "column": 8
                        },
                        "end": {
                            "line": 1128,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1128,
                            "column": 8
                        },
                        "end": {
                            "line": 1128,
                            "column": 8
                        }
                    }
                ]
            },
            "67": {
                "line": 1154,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1154,
                            "column": 8
                        },
                        "end": {
                            "line": 1154,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1154,
                            "column": 8
                        },
                        "end": {
                            "line": 1154,
                            "column": 8
                        }
                    }
                ]
            },
            "68": {
                "line": 1159,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1159,
                            "column": 47
                        },
                        "end": {
                            "line": 1159,
                            "column": 54
                        }
                    },
                    {
                        "start": {
                            "line": 1159,
                            "column": 57
                        },
                        "end": {
                            "line": 1159,
                            "column": 63
                        }
                    }
                ]
            },
            "69": {
                "line": 1159,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 1159,
                            "column": 15
                        },
                        "end": {
                            "line": 1159,
                            "column": 22
                        }
                    },
                    {
                        "start": {
                            "line": 1159,
                            "column": 26
                        },
                        "end": {
                            "line": 1159,
                            "column": 44
                        }
                    }
                ]
            },
            "70": {
                "line": 1176,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1176,
                            "column": 8
                        },
                        "end": {
                            "line": 1176,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1176,
                            "column": 8
                        },
                        "end": {
                            "line": 1176,
                            "column": 8
                        }
                    }
                ]
            },
            "71": {
                "line": 1177,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1177,
                            "column": 12
                        },
                        "end": {
                            "line": 1177,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1177,
                            "column": 12
                        },
                        "end": {
                            "line": 1177,
                            "column": 12
                        }
                    }
                ]
            },
            "72": {
                "line": 1187,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1187,
                            "column": 12
                        },
                        "end": {
                            "line": 1187,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 1187,
                            "column": 12
                        },
                        "end": {
                            "line": 1187,
                            "column": 12
                        }
                    }
                ]
            },
            "73": {
                "line": 1192,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1192,
                            "column": 8
                        },
                        "end": {
                            "line": 1192,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1192,
                            "column": 8
                        },
                        "end": {
                            "line": 1192,
                            "column": 8
                        }
                    }
                ]
            },
            "74": {
                "line": 1212,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1212,
                            "column": 8
                        },
                        "end": {
                            "line": 1212,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1212,
                            "column": 8
                        },
                        "end": {
                            "line": 1212,
                            "column": 8
                        }
                    }
                ]
            },
            "75": {
                "line": 1234,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1234,
                            "column": 8
                        },
                        "end": {
                            "line": 1234,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1234,
                            "column": 8
                        },
                        "end": {
                            "line": 1234,
                            "column": 8
                        }
                    }
                ]
            },
            "76": {
                "line": 1251,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1251,
                            "column": 8
                        },
                        "end": {
                            "line": 1251,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1251,
                            "column": 8
                        },
                        "end": {
                            "line": 1251,
                            "column": 8
                        }
                    }
                ]
            },
            "77": {
                "line": 1258,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 1258,
                            "column": 8
                        },
                        "end": {
                            "line": 1258,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 1258,
                            "column": 8
                        },
                        "end": {
                            "line": 1258,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('model-list', function (Y, NAME) {",
            "",
            "/**",
            "Provides an API for managing an ordered list of Model instances.",
            "",
            "@module app",
            "@submodule model-list",
            "@since 3.4.0",
            "**/",
            "",
            "/**",
            "Provides an API for managing an ordered list of Model instances.",
            "",
            "In addition to providing convenient `add`, `create`, `reset`, and `remove`",
            "methods for managing the models in the list, ModelLists are also bubble targets",
            "for events on the model instances they contain. This means, for example, that",
            "you can add several models to a list, and then subscribe to the `*:change` event",
            "on the list to be notified whenever any model in the list changes.",
            "",
            "ModelLists also maintain sort order efficiently as models are added and removed,",
            "based on a custom `comparator` function you may define (if no comparator is",
            "defined, models are sorted in insertion order).",
            "",
            "@class ModelList",
            "@extends Base",
            "@uses ArrayList",
            "@constructor",
            "@param {Object} config Config options.",
            "    @param {Model|Model[]|ModelList|Object|Object[]} config.items Model",
            "        instance, array of model instances, or ModelList to add to this list on",
            "        init. The `add` event will not be fired for models added on init.",
            "@since 3.4.0",
            "**/",
            "",
            "var AttrProto = Y.Attribute.prototype,",
            "    Lang      = Y.Lang,",
            "    YArray    = Y.Array,",
            "",
            "    /**",
            "    Fired when a model is added to the list.",
            "",
            "    Listen to the `on` phase of this event to be notified before a model is",
            "    added to the list. Calling `e.preventDefault()` during the `on` phase will",
            "    prevent the model from being added.",
            "",
            "    Listen to the `after` phase of this event to be notified after a model has",
            "    been added to the list.",
            "",
            "    @event add",
            "    @param {Model} model The model being added.",
            "    @param {Number} index The index at which the model will be added.",
            "    @preventable _defAddFn",
            "    **/",
            "    EVT_ADD = 'add',",
            "",
            "    /**",
            "    Fired when a model is created or updated via the `create()` method, but",
            "    before the model is actually saved or added to the list. The `add` event",
            "    will be fired after the model has been saved and added to the list.",
            "",
            "    @event create",
            "    @param {Model} model The model being created/updated.",
            "    @since 3.5.0",
            "    **/",
            "    EVT_CREATE = 'create',",
            "",
            "    /**",
            "    Fired when an error occurs, such as when an attempt is made to add a",
            "    duplicate model to the list, or when a sync layer response can't be parsed.",
            "",
            "    @event error",
            "    @param {Any} error Error message, object, or exception generated by the",
            "      error. Calling `toString()` on this should result in a meaningful error",
            "      message.",
            "    @param {String} src Source of the error. May be one of the following (or any",
            "      custom error source defined by a ModelList subclass):",
            "",
            "      * `add`: Error while adding a model (probably because it's already in the",
            "         list and can't be added again). The model in question will be provided",
            "         as the `model` property on the event facade.",
            "      * `parse`: An error parsing a JSON response. The response in question will",
            "         be provided as the `response` property on the event facade.",
            "      * `remove`: Error while removing a model (probably because it isn't in the",
            "        list and can't be removed). The model in question will be provided as",
            "        the `model` property on the event facade.",
            "    **/",
            "    EVT_ERROR = 'error',",
            "",
            "    /**",
            "    Fired after models are loaded from a sync layer.",
            "",
            "    @event load",
            "    @param {Object} parsed The parsed version of the sync layer's response to",
            "        the load request.",
            "    @param {Mixed} response The sync layer's raw, unparsed response to the load",
            "        request.",
            "    @since 3.5.0",
            "    **/",
            "    EVT_LOAD = 'load',",
            "",
            "    /**",
            "    Fired when a model is removed from the list.",
            "",
            "    Listen to the `on` phase of this event to be notified before a model is",
            "    removed from the list. Calling `e.preventDefault()` during the `on` phase",
            "    will prevent the model from being removed.",
            "",
            "    Listen to the `after` phase of this event to be notified after a model has",
            "    been removed from the list.",
            "",
            "    @event remove",
            "    @param {Model} model The model being removed.",
            "    @param {Number} index The index of the model being removed.",
            "    @preventable _defRemoveFn",
            "    **/",
            "    EVT_REMOVE = 'remove',",
            "",
            "    /**",
            "    Fired when the list is completely reset via the `reset()` method or sorted",
            "    via the `sort()` method.",
            "",
            "    Listen to the `on` phase of this event to be notified before the list is",
            "    reset. Calling `e.preventDefault()` during the `on` phase will prevent",
            "    the list from being reset.",
            "",
            "    Listen to the `after` phase of this event to be notified after the list has",
            "    been reset.",
            "",
            "    @event reset",
            "    @param {Model[]} models Array of the list's new models after the reset.",
            "    @param {String} src Source of the event. May be either `'reset'` or",
            "      `'sort'`.",
            "    @preventable _defResetFn",
            "    **/",
            "    EVT_RESET = 'reset';",
            "",
            "function ModelList() {",
            "    ModelList.superclass.constructor.apply(this, arguments);",
            "}",
            "",
            "Y.ModelList = Y.extend(ModelList, Y.Base, {",
            "    // -- Public Properties ----------------------------------------------------",
            "",
            "    /**",
            "    The `Model` class or subclass of the models in this list.",
            "",
            "    The class specified here will be used to create model instances",
            "    automatically based on attribute hashes passed to the `add()`, `create()`,",
            "    and `reset()` methods.",
            "",
            "    You may specify the class as an actual class reference or as a string that",
            "    resolves to a class reference at runtime (the latter can be useful if the",
            "    specified class will be loaded lazily).",
            "",
            "    @property model",
            "    @type Model|String",
            "    @default Y.Model",
            "    **/",
            "    model: Y.Model,",
            "",
            "    // -- Protected Properties -------------------------------------------------",
            "",
            "    /**",
            "    Total hack to allow us to identify ModelList instances without using",
            "    `instanceof`, which won't work when the instance was created in another",
            "    window or YUI sandbox.",
            "",
            "    @property _isYUIModelList",
            "    @type Boolean",
            "    @default true",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _isYUIModelList: true,",
            "",
            "    // -- Lifecycle Methods ----------------------------------------------------",
            "    initializer: function (config) {",
            "        config || (config = {});",
            "",
            "        var model = this.model = config.model || this.model;",
            "",
            "        if (typeof model === 'string') {",
            "            // Look for a namespaced Model class on `Y`.",
            "            this.model = Y.Object.getValue(Y, model.split('.'));",
            "",
            "            if (!this.model) {",
            "                Y.error('ModelList: Model class not found: ' + model);",
            "            }",
            "        }",
            "",
            "        this.publish(EVT_ADD,    {defaultFn: this._defAddFn});",
            "        this.publish(EVT_RESET,  {defaultFn: this._defResetFn});",
            "        this.publish(EVT_REMOVE, {defaultFn: this._defRemoveFn});",
            "",
            "        this.after('*:idChange', this._afterIdChange);",
            "",
            "        this._clear();",
            "",
            "        if (config.items) {",
            "            this.add(config.items, {silent: true});",
            "        }",
            "    },",
            "",
            "    destructor: function () {",
            "        this._clear();",
            "    },",
            "",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Adds the specified model or array of models to this list. You may also pass",
            "    another ModelList instance, in which case all the models in that list will",
            "    be added to this one as well.",
            "",
            "    @example",
            "",
            "        // Add a single model instance.",
            "        list.add(new Model({foo: 'bar'}));",
            "",
            "        // Add a single model, creating a new instance automatically.",
            "        list.add({foo: 'bar'});",
            "",
            "        // Add multiple models, creating new instances automatically.",
            "        list.add([",
            "            {foo: 'bar'},",
            "            {baz: 'quux'}",
            "        ]);",
            "",
            "        // Add all the models in another ModelList instance.",
            "        list.add(otherList);",
            "",
            "    @method add",
            "    @param {Model|Model[]|ModelList|Object|Object[]} models Model or array of",
            "        models to add. May be existing model instances or hashes of model",
            "        attributes, in which case new model instances will be created from the",
            "        hashes. You may also pass a ModelList instance to add all the models it",
            "        contains.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `add` event(s) for the added models.",
            "",
            "        @param {Number} [options.index] Index at which to insert the added",
            "            models. If not specified, the models will automatically be inserted",
            "            in the appropriate place according to the current sort order as",
            "            dictated by the `comparator()` method, if any.",
            "        @param {Boolean} [options.silent=false] If `true`, no `add` event(s)",
            "            will be fired.",
            "",
            "    @return {Model|Model[]} Added model or array of added models.",
            "    **/",
            "    add: function (models, options) {",
            "        var isList = models._isYUIModelList;",
            "",
            "        if (isList || Lang.isArray(models)) {",
            "            return YArray.map(isList ? models.toArray() : models, function (model, index) {",
            "                var modelOptions = options || {};",
            "",
            "                // When an explicit insertion index is specified, ensure that",
            "                // the index is increased by one for each subsequent item in the",
            "                // array.",
            "                if ('index' in modelOptions) {",
            "                    modelOptions = Y.merge(modelOptions, {",
            "                        index: modelOptions.index + index",
            "                    });",
            "                }",
            "",
            "                return this._add(model, modelOptions);",
            "            }, this);",
            "        } else {",
            "            return this._add(models, options);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Define this method to provide a function that takes a model as a parameter",
            "    and returns a value by which that model should be sorted relative to other",
            "    models in this list.",
            "",
            "    By default, no comparator is defined, meaning that models will not be sorted",
            "    (they'll be stored in the order they're added).",
            "",
            "    @example",
            "        var list = new Y.ModelList({model: Y.Model});",
            "",
            "        list.comparator = function (model) {",
            "            return model.get('id'); // Sort models by id.",
            "        };",
            "",
            "    @method comparator",
            "    @param {Model} model Model being sorted.",
            "    @return {Number|String} Value by which the model should be sorted relative",
            "      to other models in this list.",
            "    **/",
            "",
            "    // comparator is not defined by default",
            "",
            "    /**",
            "    Creates or updates the specified model on the server, then adds it to this",
            "    list if the server indicates success.",
            "",
            "    @method create",
            "    @param {Model|Object} model Model to create. May be an existing model",
            "      instance or a hash of model attributes, in which case a new model instance",
            "      will be created from the hash.",
            "    @param {Object} [options] Options to be passed to the model's `sync()` and",
            "        `set()` methods and mixed into the `create` and `add` event facades.",
            "      @param {Boolean} [options.silent=false] If `true`, no `add` event(s) will",
            "          be fired.",
            "    @param {Function} [callback] Called when the sync operation finishes.",
            "      @param {Error} callback.err If an error occurred, this parameter will",
            "        contain the error. If the sync operation succeeded, _err_ will be",
            "        falsy.",
            "      @param {Any} callback.response The server's response.",
            "    @return {Model} Created model.",
            "    **/",
            "    create: function (model, options, callback) {",
            "        var self = this;",
            "",
            "        // Allow callback as second arg.",
            "        if (typeof options === 'function') {",
            "            callback = options;",
            "            options  = {};",
            "        }",
            "",
            "        options || (options = {});",
            "",
            "        if (!model._isYUIModel) {",
            "            model = new this.model(model);",
            "        }",
            "",
            "        self.fire(EVT_CREATE, Y.merge(options, {",
            "            model: model",
            "        }));",
            "",
            "        return model.save(options, function (err) {",
            "            if (!err) {",
            "                self.add(model, options);",
            "            }",
            "",
            "            if (callback) {",
            "                callback.apply(null, arguments);",
            "            }",
            "        });",
            "    },",
            "",
            "    /**",
            "    Executes the supplied function on each model in this list.",
            "",
            "    By default, the callback function's `this` object will refer to the model",
            "    currently being iterated. Specify a `thisObj` to override the `this` object",
            "    if desired.",
            "",
            "    Note: Iteration is performed on a copy of the internal array of models, so",
            "    it's safe to delete a model from the list during iteration.",
            "",
            "    @method each",
            "    @param {Function} callback Function to execute on each model.",
            "        @param {Model} callback.model Model instance.",
            "        @param {Number} callback.index Index of the current model.",
            "        @param {ModelList} callback.list The ModelList being iterated.",
            "    @param {Object} [thisObj] Object to use as the `this` object when executing",
            "        the callback.",
            "    @chainable",
            "    @since 3.6.0",
            "    **/",
            "    each: function (callback, thisObj) {",
            "        var items = this._items.concat(),",
            "            i, item, len;",
            "",
            "        for (i = 0, len = items.length; i < len; i++) {",
            "            item = items[i];",
            "            callback.call(thisObj || item, item, i, this);",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Executes the supplied function on each model in this list. Returns an array",
            "    containing the models for which the supplied function returned a truthy",
            "    value.",
            "",
            "    The callback function's `this` object will refer to this ModelList. Use",
            "    `Y.bind()` to bind the `this` object to another object if desired.",
            "",
            "    @example",
            "",
            "        // Get an array containing only the models whose \"enabled\" attribute is",
            "        // truthy.",
            "        var filtered = list.filter(function (model) {",
            "            return model.get('enabled');",
            "        });",
            "",
            "        // Get a new ModelList containing only the models whose \"enabled\"",
            "        // attribute is truthy.",
            "        var filteredList = list.filter({asList: true}, function (model) {",
            "            return model.get('enabled');",
            "        });",
            "",
            "    @method filter",
            "    @param {Object} [options] Filter options.",
            "        @param {Boolean} [options.asList=false] If truthy, results will be",
            "            returned as a new ModelList instance rather than as an array.",
            "",
            "    @param {Function} callback Function to execute on each model.",
            "        @param {Model} callback.model Model instance.",
            "        @param {Number} callback.index Index of the current model.",
            "        @param {ModelList} callback.list The ModelList being filtered.",
            "",
            "    @return {Array|ModelList} Array of models for which the callback function",
            "        returned a truthy value (empty if it never returned a truthy value). If",
            "        the `options.asList` option is truthy, a new ModelList instance will be",
            "        returned instead of an array.",
            "    @since 3.5.0",
            "    */",
            "    filter: function (options, callback) {",
            "        var filtered = [],",
            "            items    = this._items,",
            "            i, item, len, list;",
            "",
            "        // Allow options as first arg.",
            "        if (typeof options === 'function') {",
            "            callback = options;",
            "            options  = {};",
            "        }",
            "",
            "        for (i = 0, len = items.length; i < len; ++i) {",
            "            item = items[i];",
            "",
            "            if (callback.call(this, item, i, this)) {",
            "                filtered.push(item);",
            "            }",
            "        }",
            "",
            "        if (options.asList) {",
            "            list = new this.constructor({model: this.model});",
            "",
            "            if (filtered.length) {",
            "                list.add(filtered, {silent: true});",
            "            }",
            "",
            "            return list;",
            "        } else {",
            "            return filtered;",
            "        }",
            "    },",
            "",
            "    /**",
            "    If _name_ refers to an attribute on this ModelList instance, returns the",
            "    value of that attribute. Otherwise, returns an array containing the values",
            "    of the specified attribute from each model in this list.",
            "",
            "    @method get",
            "    @param {String} name Attribute name or object property path.",
            "    @return {Any|Array} Attribute value or array of attribute values.",
            "    @see Model.get()",
            "    **/",
            "    get: function (name) {",
            "        if (this.attrAdded(name)) {",
            "            return AttrProto.get.apply(this, arguments);",
            "        }",
            "",
            "        return this.invoke('get', name);",
            "    },",
            "",
            "    /**",
            "    If _name_ refers to an attribute on this ModelList instance, returns the",
            "    HTML-escaped value of that attribute. Otherwise, returns an array containing",
            "    the HTML-escaped values of the specified attribute from each model in this",
            "    list.",
            "",
            "    The values are escaped using `Escape.html()`.",
            "",
            "    @method getAsHTML",
            "    @param {String} name Attribute name or object property path.",
            "    @return {String|String[]} HTML-escaped value or array of HTML-escaped",
            "      values.",
            "    @see Model.getAsHTML()",
            "    **/",
            "    getAsHTML: function (name) {",
            "        if (this.attrAdded(name)) {",
            "            return Y.Escape.html(AttrProto.get.apply(this, arguments));",
            "        }",
            "",
            "        return this.invoke('getAsHTML', name);",
            "    },",
            "",
            "    /**",
            "    If _name_ refers to an attribute on this ModelList instance, returns the",
            "    URL-encoded value of that attribute. Otherwise, returns an array containing",
            "    the URL-encoded values of the specified attribute from each model in this",
            "    list.",
            "",
            "    The values are encoded using the native `encodeURIComponent()` function.",
            "",
            "    @method getAsURL",
            "    @param {String} name Attribute name or object property path.",
            "    @return {String|String[]} URL-encoded value or array of URL-encoded values.",
            "    @see Model.getAsURL()",
            "    **/",
            "    getAsURL: function (name) {",
            "        if (this.attrAdded(name)) {",
            "            return encodeURIComponent(AttrProto.get.apply(this, arguments));",
            "        }",
            "",
            "        return this.invoke('getAsURL', name);",
            "    },",
            "",
            "    /**",
            "    Returns the model with the specified _clientId_, or `null` if not found.",
            "",
            "    @method getByClientId",
            "    @param {String} clientId Client id.",
            "    @return {Model} Model, or `null` if not found.",
            "    **/",
            "    getByClientId: function (clientId) {",
            "        return this._clientIdMap[clientId] || null;",
            "    },",
            "",
            "    /**",
            "    Returns the model with the specified _id_, or `null` if not found.",
            "",
            "    Note that models aren't expected to have an id until they're saved, so if",
            "    you're working with unsaved models, it may be safer to call",
            "    `getByClientId()`.",
            "",
            "    @method getById",
            "    @param {String|Number} id Model id.",
            "    @return {Model} Model, or `null` if not found.",
            "    **/",
            "    getById: function (id) {",
            "        return this._idMap[id] || null;",
            "    },",
            "",
            "    /**",
            "    Calls the named method on every model in the list. Any arguments provided",
            "    after _name_ will be passed on to the invoked method.",
            "",
            "    @method invoke",
            "    @param {String} name Name of the method to call on each model.",
            "    @param {Any} [args*] Zero or more arguments to pass to the invoked method.",
            "    @return {Array} Array of return values, indexed according to the index of",
            "      the model on which the method was called.",
            "    **/",
            "    invoke: function (name /*, args* */) {",
            "        var args = [this._items, name].concat(YArray(arguments, 1, true));",
            "        return YArray.invoke.apply(YArray, args);",
            "    },",
            "",
            "    /**",
            "    Returns the model at the specified _index_.",
            "",
            "    @method item",
            "    @param {Number} index Index of the model to fetch.",
            "    @return {Model} The model at the specified index, or `undefined` if there",
            "      isn't a model there.",
            "    **/",
            "",
            "    // item() is inherited from ArrayList.",
            "",
            "    /**",
            "    Loads this list of models from the server.",
            "",
            "    This method delegates to the `sync()` method to perform the actual load",
            "    operation, which is an asynchronous action. Specify a _callback_ function to",
            "    be notified of success or failure.",
            "",
            "    If the load operation succeeds, a `reset` event will be fired.",
            "",
            "    @method load",
            "    @param {Object} [options] Options to be passed to `sync()` and to",
            "      `reset()` when adding the loaded models. It's up to the custom sync",
            "      implementation to determine what options it supports or requires, if any.",
            "    @param {Function} [callback] Called when the sync operation finishes.",
            "      @param {Error} callback.err If an error occurred, this parameter will",
            "        contain the error. If the sync operation succeeded, _err_ will be",
            "        falsy.",
            "      @param {Any} callback.response The server's response. This value will",
            "        be passed to the `parse()` method, which is expected to parse it and",
            "        return an array of model attribute hashes.",
            "    @chainable",
            "    **/",
            "    load: function (options, callback) {",
            "        var self = this;",
            "",
            "        // Allow callback as only arg.",
            "        if (typeof options === 'function') {",
            "            callback = options;",
            "            options  = {};",
            "        }",
            "",
            "        options || (options = {});",
            "",
            "        this.sync('read', options, function (err, response) {",
            "            var facade = {",
            "                    options : options,",
            "                    response: response",
            "                },",
            "",
            "                parsed;",
            "",
            "            if (err) {",
            "                facade.error = err;",
            "                facade.src   = 'load';",
            "",
            "                self.fire(EVT_ERROR, facade);",
            "            } else {",
            "                // Lazy publish.",
            "                if (!self._loadEvent) {",
            "                    self._loadEvent = self.publish(EVT_LOAD, {",
            "                        preventable: false",
            "                    });",
            "                }",
            "",
            "                parsed = facade.parsed = self._parse(response);",
            "",
            "                self.reset(parsed, options);",
            "                self.fire(EVT_LOAD, facade);",
            "            }",
            "",
            "            if (callback) {",
            "                callback.apply(null, arguments);",
            "            }",
            "        });",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Executes the specified function on each model in this list and returns an",
            "    array of the function's collected return values.",
            "",
            "    @method map",
            "    @param {Function} fn Function to execute on each model.",
            "      @param {Model} fn.model Current model being iterated.",
            "      @param {Number} fn.index Index of the current model in the list.",
            "      @param {Model[]} fn.models Array of models being iterated.",
            "    @param {Object} [thisObj] `this` object to use when calling _fn_.",
            "    @return {Array} Array of return values from _fn_.",
            "    **/",
            "    map: function (fn, thisObj) {",
            "        return YArray.map(this._items, fn, thisObj);",
            "    },",
            "",
            "    /**",
            "    Called to parse the _response_ when the list is loaded from the server.",
            "    This method receives a server _response_ and is expected to return an array",
            "    of model attribute hashes.",
            "",
            "    The default implementation assumes that _response_ is either an array of",
            "    attribute hashes or a JSON string that can be parsed into an array of",
            "    attribute hashes. If _response_ is a JSON string and either `Y.JSON` or the",
            "    native `JSON` object are available, it will be parsed automatically. If a",
            "    parse error occurs, an `error` event will be fired and the model will not be",
            "    updated.",
            "",
            "    You may override this method to implement custom parsing logic if necessary.",
            "",
            "    @method parse",
            "    @param {Any} response Server response.",
            "    @return {Object[]} Array of model attribute hashes.",
            "    **/",
            "    parse: function (response) {",
            "        if (typeof response === 'string') {",
            "            try {",
            "                return Y.JSON.parse(response) || [];",
            "            } catch (ex) {",
            "                this.fire(EVT_ERROR, {",
            "                    error   : ex,",
            "                    response: response,",
            "                    src     : 'parse'",
            "                });",
            "",
            "                return null;",
            "            }",
            "        }",
            "",
            "        return response || [];",
            "    },",
            "",
            "    /**",
            "    Removes the specified model or array of models from this list. You may also",
            "    pass another ModelList instance to remove all the models that are in both",
            "    that instance and this instance, or pass numerical indices to remove the",
            "    models at those indices.",
            "",
            "    @method remove",
            "    @param {Model|Model[]|ModelList|Number|Number[]} models Models or indices of",
            "        models to remove.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `remove` event(s) for the removed models.",
            "",
            "        @param {Boolean} [options.silent=false] If `true`, no `remove` event(s)",
            "            will be fired.",
            "",
            "    @return {Model|Model[]} Removed model or array of removed models.",
            "    **/",
            "    remove: function (models, options) {",
            "        var isList = models._isYUIModelList;",
            "",
            "        if (isList || Lang.isArray(models)) {",
            "            // We can't remove multiple models by index because the indices will",
            "            // change as we remove them, so we need to get the actual models",
            "            // first.",
            "            models = YArray.map(isList ? models.toArray() : models, function (model) {",
            "                if (Lang.isNumber(model)) {",
            "                    return this.item(model);",
            "                }",
            "",
            "                return model;",
            "            }, this);",
            "",
            "            return YArray.map(models, function (model) {",
            "                return this._remove(model, options);",
            "            }, this);",
            "        } else {",
            "            return this._remove(models, options);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Completely replaces all models in the list with those specified, and fires a",
            "    single `reset` event.",
            "",
            "    Use `reset` when you want to add or remove a large number of items at once",
            "    with less overhead, and without firing `add` or `remove` events for each",
            "    one.",
            "",
            "    @method reset",
            "    @param {Model[]|ModelList|Object[]} [models] Models to add. May be existing",
            "        model instances or hashes of model attributes, in which case new model",
            "        instances will be created from the hashes. If a ModelList is passed, all",
            "        the models in that list will be added to this list. Calling `reset()`",
            "        without passing in any models will clear the list.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `reset` event.",
            "",
            "        @param {Boolean} [options.silent=false] If `true`, no `reset` event will",
            "            be fired.",
            "",
            "    @chainable",
            "    **/",
            "    reset: function (models, options) {",
            "        models  || (models  = []);",
            "        options || (options = {});",
            "",
            "        var facade = Y.merge({src: 'reset'}, options);",
            "",
            "        if (models._isYUIModelList) {",
            "            models = models.toArray();",
            "        } else {",
            "            models = YArray.map(models, function (model) {",
            "                return model._isYUIModel ? model : new this.model(model);",
            "            }, this);",
            "        }",
            "",
            "        facade.models = models;",
            "",
            "        if (options.silent) {",
            "            this._defResetFn(facade);",
            "        } else {",
            "            // Sort the models before firing the reset event.",
            "            if (this.comparator) {",
            "                models.sort(Y.bind(this._sort, this));",
            "            }",
            "",
            "            this.fire(EVT_RESET, facade);",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Executes the supplied function on each model in this list, and stops",
            "    iterating if the callback returns `true`.",
            "",
            "    By default, the callback function's `this` object will refer to the model",
            "    currently being iterated. Specify a `thisObj` to override the `this` object",
            "    if desired.",
            "",
            "    Note: Iteration is performed on a copy of the internal array of models, so",
            "    it's safe to delete a model from the list during iteration.",
            "",
            "    @method some",
            "    @param {Function} callback Function to execute on each model.",
            "        @param {Model} callback.model Model instance.",
            "        @param {Number} callback.index Index of the current model.",
            "        @param {ModelList} callback.list The ModelList being iterated.",
            "    @param {Object} [thisObj] Object to use as the `this` object when executing",
            "        the callback.",
            "    @return {Boolean} `true` if the callback returned `true` for any item,",
            "        `false` otherwise.",
            "    @since 3.6.0",
            "    **/",
            "    some: function (callback, thisObj) {",
            "        var items = this._items.concat(),",
            "            i, item, len;",
            "",
            "        for (i = 0, len = items.length; i < len; i++) {",
            "            item = items[i];",
            "",
            "            if (callback.call(thisObj || item, item, i, this)) {",
            "                return true;",
            "            }",
            "        }",
            "",
            "        return false;",
            "    },",
            "",
            "    /**",
            "    Forcibly re-sorts the list.",
            "",
            "    Usually it shouldn't be necessary to call this method since the list",
            "    maintains its sort order when items are added and removed, but if you change",
            "    the `comparator` function after items are already in the list, you'll need",
            "    to re-sort.",
            "",
            "    @method sort",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `reset` event.",
            "      @param {Boolean} [options.silent=false] If `true`, no `reset` event will",
            "          be fired.",
            "      @param {Boolean} [options.descending=false] If `true`, the sort is",
            "          performed in descending order.",
            "    @chainable",
            "    **/",
            "    sort: function (options) {",
            "        if (!this.comparator) {",
            "            return this;",
            "        }",
            "",
            "        var models = this._items.concat(),",
            "            facade;",
            "",
            "        options || (options = {});",
            "",
            "        models.sort(Y.rbind(this._sort, this, options));",
            "",
            "        facade = Y.merge(options, {",
            "            models: models,",
            "            src   : 'sort'",
            "        });",
            "",
            "        if (options.silent) {",
            "            this._defResetFn(facade);",
            "        } else {",
            "            this.fire(EVT_RESET, facade);",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Override this method to provide a custom persistence implementation for this",
            "    list. The default method just calls the callback without actually doing",
            "    anything.",
            "",
            "    This method is called internally by `load()` and its implementations relies",
            "    on the callback being called. This effectively means that when a callback is",
            "    provided, it must be called at some point for the class to operate correctly.",
            "",
            "    @method sync",
            "    @param {String} action Sync action to perform. May be one of the following:",
            "",
            "      * `create`: Store a list of newly-created models for the first time.",
            "      * `delete`: Delete a list of existing models.",
            "      * `read`  : Load a list of existing models.",
            "      * `update`: Update a list of existing models.",
            "",
            "      Currently, model lists only make use of the `read` action, but other",
            "      actions may be used in future versions.",
            "",
            "    @param {Object} [options] Sync options. It's up to the custom sync",
            "      implementation to determine what options it supports or requires, if any.",
            "    @param {Function} [callback] Called when the sync operation finishes.",
            "      @param {Error} callback.err If an error occurred, this parameter will",
            "        contain the error. If the sync operation succeeded, _err_ will be",
            "        falsy.",
            "      @param {Any} [callback.response] The server's response. This value will",
            "        be passed to the `parse()` method, which is expected to parse it and",
            "        return an array of model attribute hashes.",
            "    **/",
            "    sync: function (/* action, options, callback */) {",
            "        var callback = YArray(arguments, 0, true).pop();",
            "",
            "        if (typeof callback === 'function') {",
            "            callback();",
            "        }",
            "    },",
            "",
            "    /**",
            "    Returns an array containing the models in this list.",
            "",
            "    @method toArray",
            "    @return {Array} Array containing the models in this list.",
            "    **/",
            "    toArray: function () {",
            "        return this._items.concat();",
            "    },",
            "",
            "    /**",
            "    Returns an array containing attribute hashes for each model in this list,",
            "    suitable for being passed to `Y.JSON.stringify()`.",
            "",
            "    Under the hood, this method calls `toJSON()` on each model in the list and",
            "    pushes the results into an array.",
            "",
            "    @method toJSON",
            "    @return {Object[]} Array of model attribute hashes.",
            "    @see Model.toJSON()",
            "    **/",
            "    toJSON: function () {",
            "        return this.map(function (model) {",
            "            return model.toJSON();",
            "        });",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Adds the specified _model_ if it isn't already in this list.",
            "",
            "    If the model's `clientId` or `id` matches that of a model that's already in",
            "    the list, an `error` event will be fired and the model will not be added.",
            "",
            "    @method _add",
            "    @param {Model|Object} model Model or object to add.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `add` event for the added model.",
            "      @param {Boolean} [options.silent=false] If `true`, no `add` event will be",
            "          fired.",
            "    @return {Model} The added model.",
            "    @protected",
            "    **/",
            "    _add: function (model, options) {",
            "        var facade, id;",
            "",
            "        options || (options = {});",
            "",
            "        if (!model._isYUIModel) {",
            "            model = new this.model(model);",
            "        }",
            "",
            "        id = model.get('id');",
            "",
            "        if (this._clientIdMap[model.get('clientId')]",
            "                || (Lang.isValue(id) && this._idMap[id])) {",
            "",
            "            this.fire(EVT_ERROR, {",
            "                error: 'Model is already in the list.',",
            "                model: model,",
            "                src  : 'add'",
            "            });",
            "",
            "            return;",
            "        }",
            "",
            "        facade = Y.merge(options, {",
            "            index: 'index' in options ? options.index : this._findIndex(model),",
            "            model: model",
            "        });",
            "",
            "        if (options.silent) {",
            "            this._defAddFn(facade);",
            "        } else {",
            "            this.fire(EVT_ADD, facade);",
            "        }",
            "",
            "        return model;",
            "    },",
            "",
            "    /**",
            "    Adds this list as a bubble target for the specified model's events.",
            "",
            "    @method _attachList",
            "    @param {Model} model Model to attach to this list.",
            "    @protected",
            "    **/",
            "    _attachList: function (model) {",
            "        // Attach this list and make it a bubble target for the model.",
            "        model.lists.push(this);",
            "        model.addTarget(this);",
            "    },",
            "",
            "    /**",
            "    Clears all internal state and the internal list of models, returning this",
            "    list to an empty state. Automatically detaches all models in the list.",
            "",
            "    @method _clear",
            "    @protected",
            "    **/",
            "    _clear: function () {",
            "        YArray.each(this._items, this._detachList, this);",
            "",
            "        this._clientIdMap = {};",
            "        this._idMap       = {};",
            "        this._items       = [];",
            "    },",
            "",
            "    /**",
            "    Compares the value _a_ to the value _b_ for sorting purposes. Values are",
            "    assumed to be the result of calling a model's `comparator()` method. You can",
            "    override this method to implement custom sorting logic, such as a descending",
            "    sort or multi-field sorting.",
            "",
            "    @method _compare",
            "    @param {Mixed} a First value to compare.",
            "    @param {Mixed} b Second value to compare.",
            "    @return {Number} `-1` if _a_ should come before _b_, `0` if they're",
            "        equivalent, `1` if _a_ should come after _b_.",
            "    @protected",
            "    @since 3.5.0",
            "    **/",
            "    _compare: function (a, b) {",
            "        return a < b ? -1 : (a > b ? 1 : 0);",
            "    },",
            "",
            "    /**",
            "    Removes this list as a bubble target for the specified model's events.",
            "",
            "    @method _detachList",
            "    @param {Model} model Model to detach.",
            "    @protected",
            "    **/",
            "    _detachList: function (model) {",
            "        var index = YArray.indexOf(model.lists, this);",
            "",
            "        if (index > -1) {",
            "            model.lists.splice(index, 1);",
            "            model.removeTarget(this);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Returns the index at which the given _model_ should be inserted to maintain",
            "    the sort order of the list.",
            "",
            "    @method _findIndex",
            "    @param {Model} model The model being inserted.",
            "    @return {Number} Index at which the model should be inserted.",
            "    @protected",
            "    **/",
            "    _findIndex: function (model) {",
            "        var items = this._items,",
            "            max   = items.length,",
            "            min   = 0,",
            "            item, middle, needle;",
            "",
            "        if (!this.comparator || !max) {",
            "            return max;",
            "        }",
            "",
            "        needle = this.comparator(model);",
            "",
            "        // Perform an iterative binary search to determine the correct position",
            "        // based on the return value of the `comparator` function.",
            "        while (min < max) {",
            "            middle = (min + max) >> 1; // Divide by two and discard remainder.",
            "            item   = items[middle];",
            "",
            "            if (this._compare(this.comparator(item), needle) < 0) {",
            "                min = middle + 1;",
            "            } else {",
            "                max = middle;",
            "            }",
            "        }",
            "",
            "        return min;",
            "    },",
            "",
            "    /**",
            "    Calls the public, overrideable `parse()` method and returns the result.",
            "",
            "    Override this method to provide a custom pre-parsing implementation. This",
            "    provides a hook for custom persistence implementations to \"prep\" a response",
            "    before calling the `parse()` method.",
            "",
            "    @method _parse",
            "    @param {Any} response Server response.",
            "    @return {Object[]} Array of model attribute hashes.",
            "    @protected",
            "    @see ModelList.parse()",
            "    @since 3.7.0",
            "    **/",
            "    _parse: function (response) {",
            "        return this.parse(response);",
            "    },",
            "",
            "    /**",
            "    Removes the specified _model_ if it's in this list.",
            "",
            "    @method _remove",
            "    @param {Model|Number} model Model or index of the model to remove.",
            "    @param {Object} [options] Data to be mixed into the event facade of the",
            "        `remove` event for the removed model.",
            "      @param {Boolean} [options.silent=false] If `true`, no `remove` event will",
            "          be fired.",
            "    @return {Model} Removed model.",
            "    @protected",
            "    **/",
            "    _remove: function (model, options) {",
            "        var index, facade;",
            "",
            "        options || (options = {});",
            "",
            "        if (Lang.isNumber(model)) {",
            "            index = model;",
            "            model = this.item(index);",
            "        } else {",
            "            index = this.indexOf(model);",
            "        }",
            "",
            "        if (index === -1 || !model) {",
            "            this.fire(EVT_ERROR, {",
            "                error: 'Model is not in the list.',",
            "                index: index,",
            "                model: model,",
            "                src  : 'remove'",
            "            });",
            "",
            "            return;",
            "        }",
            "",
            "        facade = Y.merge(options, {",
            "            index: index,",
            "            model: model",
            "        });",
            "",
            "        if (options.silent) {",
            "            this._defRemoveFn(facade);",
            "        } else {",
            "            this.fire(EVT_REMOVE, facade);",
            "        }",
            "",
            "        return model;",
            "    },",
            "",
            "    /**",
            "    Array sort function used by `sort()` to re-sort the models in the list.",
            "",
            "    @method _sort",
            "    @param {Model} a First model to compare.",
            "    @param {Model} b Second model to compare.",
            "    @param {Object} [options] Options passed from `sort()` function.",
            "        @param {Boolean} [options.descending=false] If `true`, the sort is",
            "          performed in descending order.",
            "    @return {Number} `-1` if _a_ is less than _b_, `0` if equal, `1` if greater",
            "      (for ascending order, the reverse for descending order).",
            "    @protected",
            "    **/",
            "    _sort: function (a, b, options) {",
            "        var result = this._compare(this.comparator(a), this.comparator(b));",
            "",
            "        // Early return when items are equal in their sort comparison.",
            "        if (result === 0) {",
            "            return result;",
            "        }",
            "",
            "        // Flips sign when the sort is to be peformed in descending order.",
            "        return options && options.descending ? -result : result;",
            "    },",
            "",
            "    // -- Event Handlers -------------------------------------------------------",
            "",
            "    /**",
            "    Updates the model maps when a model's `id` attribute changes.",
            "",
            "    @method _afterIdChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterIdChange: function (e) {",
            "        var newVal  = e.newVal,",
            "            prevVal = e.prevVal,",
            "            target  = e.target;",
            "",
            "        if (Lang.isValue(prevVal)) {",
            "            if (this._idMap[prevVal] === target) {",
            "                delete this._idMap[prevVal];",
            "            } else {",
            "                // The model that changed isn't in this list. Probably just a",
            "                // bubbled change event from a nested Model List.",
            "                return;",
            "            }",
            "        } else {",
            "            // The model had no previous id. Verify that it exists in this list",
            "            // before continuing.",
            "            if (this.indexOf(target) === -1) {",
            "                return;",
            "            }",
            "        }",
            "",
            "        if (Lang.isValue(newVal)) {",
            "            this._idMap[newVal] = target;",
            "        }",
            "    },",
            "",
            "    // -- Default Event Handlers -----------------------------------------------",
            "",
            "    /**",
            "    Default event handler for `add` events.",
            "",
            "    @method _defAddFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defAddFn: function (e) {",
            "        var model = e.model,",
            "            id    = model.get('id');",
            "",
            "        this._clientIdMap[model.get('clientId')] = model;",
            "",
            "        if (Lang.isValue(id)) {",
            "            this._idMap[id] = model;",
            "        }",
            "",
            "        this._attachList(model);",
            "        this._items.splice(e.index, 0, model);",
            "    },",
            "",
            "    /**",
            "    Default event handler for `remove` events.",
            "",
            "    @method _defRemoveFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defRemoveFn: function (e) {",
            "        var model = e.model,",
            "            id    = model.get('id');",
            "",
            "        this._detachList(model);",
            "        delete this._clientIdMap[model.get('clientId')];",
            "",
            "        if (Lang.isValue(id)) {",
            "            delete this._idMap[id];",
            "        }",
            "",
            "        this._items.splice(e.index, 1);",
            "    },",
            "",
            "    /**",
            "    Default event handler for `reset` events.",
            "",
            "    @method _defResetFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defResetFn: function (e) {",
            "        // When fired from the `sort` method, we don't need to clear the list or",
            "        // add any models, since the existing models are sorted in place.",
            "        if (e.src === 'sort') {",
            "            this._items = e.models.concat();",
            "            return;",
            "        }",
            "",
            "        this._clear();",
            "",
            "        if (e.models.length) {",
            "            this.add(e.models, {silent: true});",
            "        }",
            "    }",
            "}, {",
            "    NAME: 'modelList'",
            "});",
            "",
            "Y.augment(ModelList, Y.ArrayList);",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"array-extras\", \"array-invoke\", \"arraylist\", \"base-build\", \"escape\", \"json-parse\", \"model\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "35": 1,
            "137": 1,
            "138": 141,
            "141": 1,
            "178": 141,
            "180": 141,
            "182": 141,
            "184": 2,
            "186": 2,
            "187": 0,
            "191": 141,
            "192": 141,
            "193": 141,
            "195": 141,
            "197": 141,
            "199": 141,
            "200": 6,
            "205": 2,
            "251": 136,
            "253": 136,
            "254": 77,
            "255": 184,
            "260": 184,
            "261": 6,
            "266": 184,
            "269": 59,
            "316": 8,
            "319": 8,
            "320": 2,
            "321": 2,
            "324": 8,
            "326": 8,
            "327": 3,
            "330": 8,
            "334": 8,
            "335": 8,
            "336": 7,
            "339": 8,
            "340": 3,
            "366": 3,
            "369": 3,
            "370": 9,
            "371": 9,
            "374": 3,
            "416": 3,
            "421": 3,
            "422": 2,
            "423": 2,
            "426": 3,
            "427": 9,
            "429": 9,
            "430": 4,
            "434": 3,
            "435": 1,
            "437": 1,
            "438": 1,
            "441": 1,
            "443": 2,
            "458": 152,
            "459": 141,
            "462": 11,
            "480": 2,
            "481": 1,
            "484": 1,
            "501": 2,
            "502": 1,
            "505": 1,
            "516": 2,
            "531": 9,
            "545": 14,
            "546": 14,
            "583": 9,
            "586": 9,
            "587": 4,
            "588": 4,
            "591": 9,
            "593": 9,
            "594": 9,
            "601": 9,
            "602": 1,
            "603": 1,
            "605": 1,
            "608": 8,
            "609": 5,
            "614": 8,
            "616": 8,
            "617": 8,
            "620": 9,
            "621": 5,
            "625": 9,
            "641": 3,
            "663": 13,
            "664": 6,
            "665": 6,
            "667": 1,
            "673": 1,
            "677": 7,
            "698": 24,
            "700": 24,
            "704": 5,
            "705": 10,
            "706": 2,
            "709": 8,
            "712": 5,
            "713": 10,
            "716": 19,
            "743": 19,
            "744": 19,
            "746": 19,
            "748": 19,
            "749": 0,
            "751": 19,
            "752": 28,
            "756": 19,
            "758": 19,
            "759": 2,
            "762": 17,
            "763": 2,
            "766": 17,
            "769": 19,
            "795": 4,
            "798": 4,
            "799": 11,
            "801": 11,
            "802": 1,
            "806": 3,
            "827": 3,
            "828": 0,
            "831": 3,
            "834": 3,
            "836": 3,
            "838": 3,
            "843": 3,
            "844": 0,
            "846": 3,
            "849": 3,
            "883": 5,
            "885": 5,
            "886": 5,
            "897": 7,
            "912": 1,
            "913": 2,
            "935": 204,
            "937": 204,
            "939": 204,
            "940": 118,
            "943": 204,
            "945": 204,
            "948": 2,
            "954": 2,
            "957": 202,
            "962": 202,
            "963": 42,
            "965": 160,
            "968": 202,
            "980": 216,
            "981": 216,
            "992": 140,
            "994": 140,
            "995": 140,
            "996": 140,
            "1014": 53,
            "1025": 33,
            "1027": 33,
            "1028": 33,
            "1029": 33,
            "1043": 234,
            "1048": 234,
            "1049": 219,
            "1052": 15,
            "1056": 15,
            "1057": 25,
            "1058": 25,
            "1060": 25,
            "1061": 19,
            "1063": 6,
            "1067": 15,
            "1085": 7,
            "1101": 29,
            "1103": 29,
            "1105": 29,
            "1106": 3,
            "1107": 3,
            "1109": 26,
            "1112": 29,
            "1113": 1,
            "1120": 1,
            "1123": 28,
            "1128": 28,
            "1129": 3,
            "1131": 25,
            "1134": 28,
            "1151": 28,
            "1154": 28,
            "1155": 0,
            "1159": 28,
            "1172": 6,
            "1176": 6,
            "1177": 3,
            "1178": 2,
            "1182": 1,
            "1187": 3,
            "1188": 1,
            "1192": 4,
            "1193": 4,
            "1207": 201,
            "1210": 201,
            "1212": 201,
            "1213": 11,
            "1216": 201,
            "1217": 201,
            "1228": 24,
            "1231": 24,
            "1232": 24,
            "1234": 24,
            "1235": 0,
            "1238": 24,
            "1251": 24,
            "1252": 3,
            "1253": 3,
            "1256": 21,
            "1258": 21,
            "1259": 14,
            "1266": 1
        }
    },
    "build/model-sync-rest/model-sync-rest.js": {
        "path": "build/model-sync-rest/model-sync-rest.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1,
            "10": 1,
            "11": 38,
            "12": 38,
            "13": 2,
            "14": 38,
            "15": 10,
            "16": 41,
            "17": 41,
            "18": 10,
            "19": 4,
            "20": 6,
            "21": 31,
            "22": 6,
            "23": 25,
            "24": 17,
            "25": 8,
            "26": 6,
            "27": 9,
            "28": 12,
            "29": 12,
            "30": 12,
            "31": 7,
            "32": 5,
            "33": 12,
            "34": 2,
            "35": 2,
            "36": 12,
            "37": 9,
            "38": 12,
            "39": 17,
            "40": 17,
            "41": 5,
            "42": 12,
            "43": 0,
            "44": 12,
            "45": 8,
            "46": 7,
            "47": 8,
            "48": 0,
            "49": 14,
            "50": 0,
            "51": 14,
            "52": 14,
            "53": 57,
            "54": 25,
            "55": 14,
            "56": 1,
            "57": 1,
            "58": 1,
            "59": 10,
            "60": 10,
            "61": 10,
            "62": 1
        },
        "b": {
            "1": [
                38,
                11
            ],
            "2": [
                2,
                36
            ],
            "3": [
                2,
                0
            ],
            "4": [
                10,
                28
            ],
            "5": [
                10,
                0
            ],
            "6": [
                10,
                31
            ],
            "7": [
                4,
                6
            ],
            "8": [
                6,
                25
            ],
            "9": [
                31,
                18,
                14
            ],
            "10": [
                17,
                8
            ],
            "11": [
                17,
                5
            ],
            "12": [
                12,
                0
            ],
            "13": [
                12,
                11
            ],
            "14": [
                12,
                11
            ],
            "15": [
                7,
                5
            ],
            "16": [
                12,
                7
            ],
            "17": [
                2,
                10
            ],
            "18": [
                12,
                2,
                1
            ],
            "19": [
                9,
                3
            ],
            "20": [
                12,
                12,
                5,
                4
            ],
            "21": [
                5,
                12
            ],
            "22": [
                17,
                5
            ],
            "23": [
                0,
                12
            ],
            "24": [
                8,
                4
            ],
            "25": [
                12,
                12
            ],
            "26": [
                7,
                1
            ],
            "27": [
                0,
                14
            ],
            "28": [
                25,
                32
            ],
            "29": [
                57,
                36
            ],
            "30": [
                1,
                0
            ],
            "31": [
                10,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 38,
            "3": 38,
            "4": 41,
            "5": 6,
            "6": 9,
            "7": 12,
            "8": 17,
            "9": 8,
            "10": 0,
            "11": 14,
            "12": 57,
            "13": 0,
            "14": 1,
            "15": 10,
            "16": 0
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 27
                    },
                    "end": {
                        "line": 1,
                        "column": 46
                    }
                }
            },
            "2": {
                "name": "RESTSync",
                "line": 48,
                "loc": {
                    "start": {
                        "line": 48,
                        "column": 0
                    },
                    "end": {
                        "line": 48,
                        "column": 20
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 296,
                "loc": {
                    "start": {
                        "line": 296,
                        "column": 17
                    },
                    "end": {
                        "line": 296,
                        "column": 35
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 332,
                "loc": {
                    "start": {
                        "line": 332,
                        "column": 12
                    },
                    "end": {
                        "line": 332,
                        "column": 39
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 386,
                "loc": {
                    "start": {
                        "line": 386,
                        "column": 21
                    },
                    "end": {
                        "line": 386,
                        "column": 41
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 411,
                "loc": {
                    "start": {
                        "line": 411,
                        "column": 15
                    },
                    "end": {
                        "line": 411,
                        "column": 33
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 448,
                "loc": {
                    "start": {
                        "line": 448,
                        "column": 10
                    },
                    "end": {
                        "line": 448,
                        "column": 47
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 517,
                "loc": {
                    "start": {
                        "line": 517,
                        "column": 14
                    },
                    "end": {
                        "line": 517,
                        "column": 29
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 551,
                "loc": {
                    "start": {
                        "line": 551,
                        "column": 12
                    },
                    "end": {
                        "line": 551,
                        "column": 32
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 581,
                "loc": {
                    "start": {
                        "line": 581,
                        "column": 24
                    },
                    "end": {
                        "line": 581,
                        "column": 42
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 622,
                "loc": {
                    "start": {
                        "line": 622,
                        "column": 20
                    },
                    "end": {
                        "line": 622,
                        "column": 41
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 631,
                "loc": {
                    "start": {
                        "line": 631,
                        "column": 28
                    },
                    "end": {
                        "line": 631,
                        "column": 44
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 658,
                "loc": {
                    "start": {
                        "line": 658,
                        "column": 18
                    },
                    "end": {
                        "line": 658,
                        "column": 43
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 676,
                "loc": {
                    "start": {
                        "line": 676,
                        "column": 22
                    },
                    "end": {
                        "line": 676,
                        "column": 52
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 703,
                "loc": {
                    "start": {
                        "line": 703,
                        "column": 22
                    },
                    "end": {
                        "line": 703,
                        "column": 52
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 725,
                "loc": {
                    "start": {
                        "line": 725,
                        "column": 20
                    },
                    "end": {
                        "line": 725,
                        "column": 45
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 733,
                    "column": 70
                }
            },
            "2": {
                "start": {
                    "line": 12,
                    "column": 0
                },
                "end": {
                    "line": 12,
                    "column": 18
                }
            },
            "3": {
                "start": {
                    "line": 48,
                    "column": 0
                },
                "end": {
                    "line": 48,
                    "column": 22
                }
            },
            "4": {
                "start": {
                    "line": 76,
                    "column": 0
                },
                "end": {
                    "line": 76,
                    "column": 41
                }
            },
            "5": {
                "start": {
                    "line": 92,
                    "column": 0
                },
                "end": {
                    "line": 92,
                    "column": 30
                }
            },
            "6": {
                "start": {
                    "line": 116,
                    "column": 0
                },
                "end": {
                    "line": 119,
                    "column": 2
                }
            },
            "7": {
                "start": {
                    "line": 136,
                    "column": 0
                },
                "end": {
                    "line": 141,
                    "column": 2
                }
            },
            "8": {
                "start": {
                    "line": 155,
                    "column": 0
                },
                "end": {
                    "line": 155,
                    "column": 30
                }
            },
            "9": {
                "start": {
                    "line": 168,
                    "column": 0
                },
                "end": {
                    "line": 168,
                    "column": 42
                }
            },
            "10": {
                "start": {
                    "line": 170,
                    "column": 0
                },
                "end": {
                    "line": 726,
                    "column": 2
                }
            },
            "11": {
                "start": {
                    "line": 297,
                    "column": 8
                },
                "end": {
                    "line": 297,
                    "column": 32
                }
            },
            "12": {
                "start": {
                    "line": 300,
                    "column": 8
                },
                "end": {
                    "line": 302,
                    "column": 9
                }
            },
            "13": {
                "start": {
                    "line": 301,
                    "column": 12
                },
                "end": {
                    "line": 301,
                    "column": 42
                }
            },
            "14": {
                "start": {
                    "line": 305,
                    "column": 8
                },
                "end": {
                    "line": 307,
                    "column": 9
                }
            },
            "15": {
                "start": {
                    "line": 306,
                    "column": 12
                },
                "end": {
                    "line": 306,
                    "column": 40
                }
            },
            "16": {
                "start": {
                    "line": 333,
                    "column": 8
                },
                "end": {
                    "line": 334,
                    "column": 28
                }
            },
            "17": {
                "start": {
                    "line": 339,
                    "column": 8
                },
                "end": {
                    "line": 345,
                    "column": 9
                }
            },
            "18": {
                "start": {
                    "line": 340,
                    "column": 12
                },
                "end": {
                    "line": 342,
                    "column": 13
                }
            },
            "19": {
                "start": {
                    "line": 341,
                    "column": 16
                },
                "end": {
                    "line": 341,
                    "column": 49
                }
            },
            "20": {
                "start": {
                    "line": 344,
                    "column": 12
                },
                "end": {
                    "line": 344,
                    "column": 79
                }
            },
            "21": {
                "start": {
                    "line": 352,
                    "column": 8
                },
                "end": {
                    "line": 354,
                    "column": 9
                }
            },
            "22": {
                "start": {
                    "line": 353,
                    "column": 12
                },
                "end": {
                    "line": 353,
                    "column": 24
                }
            },
            "23": {
                "start": {
                    "line": 359,
                    "column": 8
                },
                "end": {
                    "line": 361,
                    "column": 9
                }
            },
            "24": {
                "start": {
                    "line": 360,
                    "column": 12
                },
                "end": {
                    "line": 360,
                    "column": 60
                }
            },
            "25": {
                "start": {
                    "line": 365,
                    "column": 8
                },
                "end": {
                    "line": 365,
                    "column": 75
                }
            },
            "26": {
                "start": {
                    "line": 387,
                    "column": 8
                },
                "end": {
                    "line": 387,
                    "column": 37
                }
            },
            "27": {
                "start": {
                    "line": 412,
                    "column": 8
                },
                "end": {
                    "line": 412,
                    "column": 38
                }
            },
            "28": {
                "start": {
                    "line": 449,
                    "column": 8
                },
                "end": {
                    "line": 449,
                    "column": 34
                }
            },
            "29": {
                "start": {
                    "line": 451,
                    "column": 8
                },
                "end": {
                    "line": 456,
                    "column": 19
                }
            },
            "30": {
                "start": {
                    "line": 459,
                    "column": 8
                },
                "end": {
                    "line": 464,
                    "column": 9
                }
            },
            "31": {
                "start": {
                    "line": 460,
                    "column": 12
                },
                "end": {
                    "line": 460,
                    "column": 44
                }
            },
            "32": {
                "start": {
                    "line": 463,
                    "column": 12
                },
                "end": {
                    "line": 463,
                    "column": 43
                }
            },
            "33": {
                "start": {
                    "line": 467,
                    "column": 8
                },
                "end": {
                    "line": 475,
                    "column": 9
                }
            },
            "34": {
                "start": {
                    "line": 471,
                    "column": 12
                },
                "end": {
                    "line": 471,
                    "column": 55
                }
            },
            "35": {
                "start": {
                    "line": 474,
                    "column": 12
                },
                "end": {
                    "line": 474,
                    "column": 28
                }
            },
            "36": {
                "start": {
                    "line": 479,
                    "column": 8
                },
                "end": {
                    "line": 483,
                    "column": 9
                }
            },
            "37": {
                "start": {
                    "line": 482,
                    "column": 12
                },
                "end": {
                    "line": 482,
                    "column": 48
                }
            },
            "38": {
                "start": {
                    "line": 485,
                    "column": 8
                },
                "end": {
                    "line": 493,
                    "column": 11
                }
            },
            "39": {
                "start": {
                    "line": 518,
                    "column": 8
                },
                "end": {
                    "line": 518,
                    "column": 29
                }
            },
            "40": {
                "start": {
                    "line": 520,
                    "column": 8
                },
                "end": {
                    "line": 522,
                    "column": 9
                }
            },
            "41": {
                "start": {
                    "line": 521,
                    "column": 12
                },
                "end": {
                    "line": 521,
                    "column": 22
                }
            },
            "42": {
                "start": {
                    "line": 524,
                    "column": 8
                },
                "end": {
                    "line": 526,
                    "column": 9
                }
            },
            "43": {
                "start": {
                    "line": 525,
                    "column": 12
                },
                "end": {
                    "line": 525,
                    "column": 35
                }
            },
            "44": {
                "start": {
                    "line": 530,
                    "column": 8
                },
                "end": {
                    "line": 532,
                    "column": 33
                }
            },
            "45": {
                "start": {
                    "line": 555,
                    "column": 8
                },
                "end": {
                    "line": 557,
                    "column": 9
                }
            },
            "46": {
                "start": {
                    "line": 556,
                    "column": 12
                },
                "end": {
                    "line": 556,
                    "column": 54
                }
            },
            "47": {
                "start": {
                    "line": 559,
                    "column": 8
                },
                "end": {
                    "line": 559,
                    "column": 36
                }
            },
            "48": {
                "start": {
                    "line": 582,
                    "column": 8
                },
                "end": {
                    "line": 601,
                    "column": 11
                }
            },
            "49": {
                "start": {
                    "line": 623,
                    "column": 8
                },
                "end": {
                    "line": 625,
                    "column": 9
                }
            },
            "50": {
                "start": {
                    "line": 624,
                    "column": 12
                },
                "end": {
                    "line": 624,
                    "column": 22
                }
            },
            "51": {
                "start": {
                    "line": 627,
                    "column": 8
                },
                "end": {
                    "line": 627,
                    "column": 24
                }
            },
            "52": {
                "start": {
                    "line": 631,
                    "column": 8
                },
                "end": {
                    "line": 636,
                    "column": 11
                }
            },
            "53": {
                "start": {
                    "line": 632,
                    "column": 12
                },
                "end": {
                    "line": 635,
                    "column": 13
                }
            },
            "54": {
                "start": {
                    "line": 634,
                    "column": 16
                },
                "end": {
                    "line": 634,
                    "column": 50
                }
            },
            "55": {
                "start": {
                    "line": 638,
                    "column": 8
                },
                "end": {
                    "line": 638,
                    "column": 37
                }
            },
            "56": {
                "start": {
                    "line": 677,
                    "column": 8
                },
                "end": {
                    "line": 677,
                    "column": 40
                }
            },
            "57": {
                "start": {
                    "line": 679,
                    "column": 8
                },
                "end": {
                    "line": 684,
                    "column": 9
                }
            },
            "58": {
                "start": {
                    "line": 680,
                    "column": 12
                },
                "end": {
                    "line": 683,
                    "column": 20
                }
            },
            "59": {
                "start": {
                    "line": 704,
                    "column": 8
                },
                "end": {
                    "line": 704,
                    "column": 40
                }
            },
            "60": {
                "start": {
                    "line": 706,
                    "column": 8
                },
                "end": {
                    "line": 708,
                    "column": 9
                }
            },
            "61": {
                "start": {
                    "line": 707,
                    "column": 12
                },
                "end": {
                    "line": 707,
                    "column": 32
                }
            },
            "62": {
                "start": {
                    "line": 730,
                    "column": 0
                },
                "end": {
                    "line": 730,
                    "column": 41
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 297,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 297,
                            "column": 8
                        },
                        "end": {
                            "line": 297,
                            "column": 14
                        }
                    },
                    {
                        "start": {
                            "line": 297,
                            "column": 19
                        },
                        "end": {
                            "line": 297,
                            "column": 30
                        }
                    }
                ]
            },
            "2": {
                "line": 300,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 300,
                            "column": 8
                        },
                        "end": {
                            "line": 300,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 300,
                            "column": 8
                        },
                        "end": {
                            "line": 300,
                            "column": 8
                        }
                    }
                ]
            },
            "3": {
                "line": 301,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 301,
                            "column": 24
                        },
                        "end": {
                            "line": 301,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 301,
                            "column": 39
                        },
                        "end": {
                            "line": 301,
                            "column": 41
                        }
                    }
                ]
            },
            "4": {
                "line": 305,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 305,
                            "column": 8
                        },
                        "end": {
                            "line": 305,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 305,
                            "column": 8
                        },
                        "end": {
                            "line": 305,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 306,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 306,
                            "column": 23
                        },
                        "end": {
                            "line": 306,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 306,
                            "column": 37
                        },
                        "end": {
                            "line": 306,
                            "column": 39
                        }
                    }
                ]
            },
            "6": {
                "line": 339,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 339,
                            "column": 8
                        },
                        "end": {
                            "line": 339,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 339,
                            "column": 8
                        },
                        "end": {
                            "line": 339,
                            "column": 8
                        }
                    }
                ]
            },
            "7": {
                "line": 340,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 340,
                            "column": 12
                        },
                        "end": {
                            "line": 340,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 340,
                            "column": 12
                        },
                        "end": {
                            "line": 340,
                            "column": 12
                        }
                    }
                ]
            },
            "8": {
                "line": 352,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 352,
                            "column": 8
                        },
                        "end": {
                            "line": 352,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 352,
                            "column": 8
                        },
                        "end": {
                            "line": 352,
                            "column": 8
                        }
                    }
                ]
            },
            "9": {
                "line": 352,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 352,
                            "column": 12
                        },
                        "end": {
                            "line": 352,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 352,
                            "column": 21
                        },
                        "end": {
                            "line": 352,
                            "column": 40
                        }
                    },
                    {
                        "start": {
                            "line": 352,
                            "column": 44
                        },
                        "end": {
                            "line": 352,
                            "column": 56
                        }
                    }
                ]
            },
            "10": {
                "line": 359,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 359,
                            "column": 8
                        },
                        "end": {
                            "line": 359,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 359,
                            "column": 8
                        },
                        "end": {
                            "line": 359,
                            "column": 8
                        }
                    }
                ]
            },
            "11": {
                "line": 360,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 360,
                            "column": 33
                        },
                        "end": {
                            "line": 360,
                            "column": 52
                        }
                    },
                    {
                        "start": {
                            "line": 360,
                            "column": 56
                        },
                        "end": {
                            "line": 360,
                            "column": 58
                        }
                    }
                ]
            },
            "12": {
                "line": 449,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 449,
                            "column": 8
                        },
                        "end": {
                            "line": 449,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 449,
                            "column": 20
                        },
                        "end": {
                            "line": 449,
                            "column": 32
                        }
                    }
                ]
            },
            "13": {
                "line": 454,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 454,
                            "column": 24
                        },
                        "end": {
                            "line": 454,
                            "column": 39
                        }
                    },
                    {
                        "start": {
                            "line": 454,
                            "column": 43
                        },
                        "end": {
                            "line": 454,
                            "column": 64
                        }
                    }
                ]
            },
            "14": {
                "line": 455,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 455,
                            "column": 24
                        },
                        "end": {
                            "line": 455,
                            "column": 41
                        }
                    },
                    {
                        "start": {
                            "line": 455,
                            "column": 45
                        },
                        "end": {
                            "line": 455,
                            "column": 64
                        }
                    }
                ]
            },
            "15": {
                "line": 459,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 459,
                            "column": 8
                        },
                        "end": {
                            "line": 459,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 459,
                            "column": 8
                        },
                        "end": {
                            "line": 459,
                            "column": 8
                        }
                    }
                ]
            },
            "16": {
                "line": 459,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 459,
                            "column": 12
                        },
                        "end": {
                            "line": 459,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 459,
                            "column": 33
                        },
                        "end": {
                            "line": 459,
                            "column": 49
                        }
                    }
                ]
            },
            "17": {
                "line": 467,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 467,
                            "column": 8
                        },
                        "end": {
                            "line": 467,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 467,
                            "column": 8
                        },
                        "end": {
                            "line": 467,
                            "column": 8
                        }
                    }
                ]
            },
            "18": {
                "line": 467,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 467,
                            "column": 12
                        },
                        "end": {
                            "line": 467,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 468,
                            "column": 17
                        },
                        "end": {
                            "line": 468,
                            "column": 33
                        }
                    },
                    {
                        "start": {
                            "line": 468,
                            "column": 37
                        },
                        "end": {
                            "line": 468,
                            "column": 56
                        }
                    }
                ]
            },
            "19": {
                "line": 479,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 479,
                            "column": 8
                        },
                        "end": {
                            "line": 479,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 479,
                            "column": 8
                        },
                        "end": {
                            "line": 479,
                            "column": 8
                        }
                    }
                ]
            },
            "20": {
                "line": 479,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 479,
                            "column": 12
                        },
                        "end": {
                            "line": 479,
                            "column": 21
                        }
                    },
                    {
                        "start": {
                            "line": 480,
                            "column": 17
                        },
                        "end": {
                            "line": 480,
                            "column": 34
                        }
                    },
                    {
                        "start": {
                            "line": 480,
                            "column": 38
                        },
                        "end": {
                            "line": 480,
                            "column": 54
                        }
                    },
                    {
                        "start": {
                            "line": 480,
                            "column": 58
                        },
                        "end": {
                            "line": 480,
                            "column": 77
                        }
                    }
                ]
            },
            "21": {
                "line": 520,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 520,
                            "column": 8
                        },
                        "end": {
                            "line": 520,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 520,
                            "column": 8
                        },
                        "end": {
                            "line": 520,
                            "column": 8
                        }
                    }
                ]
            },
            "22": {
                "line": 520,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 520,
                            "column": 14
                        },
                        "end": {
                            "line": 520,
                            "column": 18
                        }
                    },
                    {
                        "start": {
                            "line": 520,
                            "column": 22
                        },
                        "end": {
                            "line": 520,
                            "column": 25
                        }
                    }
                ]
            },
            "23": {
                "line": 524,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 524,
                            "column": 8
                        },
                        "end": {
                            "line": 524,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 524,
                            "column": 8
                        },
                        "end": {
                            "line": 524,
                            "column": 8
                        }
                    }
                ]
            },
            "24": {
                "line": 530,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 531,
                            "column": 16
                        },
                        "end": {
                            "line": 531,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 532,
                            "column": 16
                        },
                        "end": {
                            "line": 532,
                            "column": 32
                        }
                    }
                ]
            },
            "25": {
                "line": 530,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 530,
                            "column": 15
                        },
                        "end": {
                            "line": 530,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 530,
                            "column": 23
                        },
                        "end": {
                            "line": 530,
                            "column": 59
                        }
                    }
                ]
            },
            "26": {
                "line": 555,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 555,
                            "column": 8
                        },
                        "end": {
                            "line": 555,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 555,
                            "column": 8
                        },
                        "end": {
                            "line": 555,
                            "column": 8
                        }
                    }
                ]
            },
            "27": {
                "line": 623,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 623,
                            "column": 8
                        },
                        "end": {
                            "line": 623,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 623,
                            "column": 8
                        },
                        "end": {
                            "line": 623,
                            "column": 8
                        }
                    }
                ]
            },
            "28": {
                "line": 632,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 632,
                            "column": 12
                        },
                        "end": {
                            "line": 632,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 632,
                            "column": 12
                        },
                        "end": {
                            "line": 632,
                            "column": 12
                        }
                    }
                ]
            },
            "29": {
                "line": 632,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 632,
                            "column": 16
                        },
                        "end": {
                            "line": 632,
                            "column": 32
                        }
                    },
                    {
                        "start": {
                            "line": 632,
                            "column": 36
                        },
                        "end": {
                            "line": 632,
                            "column": 52
                        }
                    }
                ]
            },
            "30": {
                "line": 679,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 679,
                            "column": 8
                        },
                        "end": {
                            "line": 679,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 679,
                            "column": 8
                        },
                        "end": {
                            "line": 679,
                            "column": 8
                        }
                    }
                ]
            },
            "31": {
                "line": 706,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 706,
                            "column": 8
                        },
                        "end": {
                            "line": 706,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 706,
                            "column": 8
                        },
                        "end": {
                            "line": 706,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('model-sync-rest', function (Y, NAME) {",
            "",
            "/**",
            "An extension which provides a RESTful XHR sync implementation that can be mixed",
            "into a Model or ModelList subclass.",
            "",
            "@module app",
            "@submodule model-sync-rest",
            "@since 3.6.0",
            "**/",
            "",
            "var Lang = Y.Lang;",
            "",
            "/**",
            "An extension which provides a RESTful XHR sync implementation that can be mixed",
            "into a Model or ModelList subclass.",
            "",
            "This makes it trivial for your Model or ModelList subclasses communicate and",
            "transmit their data via RESTful XHRs. In most cases you'll only need to provide",
            "a value for `root` when sub-classing `Y.Model`.",
            "",
            "    Y.User = Y.Base.create('user', Y.Model, [Y.ModelSync.REST], {",
            "        root: '/users'",
            "    });",
            "",
            "    Y.Users = Y.Base.create('users', Y.ModelList, [Y.ModelSync.REST], {",
            "        // By convention `Y.User`'s `root` will be used for the lists' URL.",
            "        model: Y.User",
            "    });",
            "",
            "    var users = new Y.Users();",
            "",
            "    // GET users list from: \"/users\"",
            "    users.load(function () {",
            "        var firstUser = users.item(0);",
            "",
            "        firstUser.get('id'); // => \"1\"",
            "",
            "        // PUT updated user data at: \"/users/1\"",
            "        firstUser.set('name', 'Eric').save();",
            "    });",
            "",
            "@class ModelSync.REST",
            "@extensionfor Model",
            "@extensionfor ModelList",
            "@since 3.6.0",
            "**/",
            "function RESTSync() {}",
            "",
            "/**",
            "A request authenticity token to validate HTTP requests made by this extension",
            "with the server when the request results in changing persistent state. This",
            "allows you to protect your server from Cross-Site Request Forgery attacks.",
            "",
            "A CSRF token provided by the server can be embedded in the HTML document and",
            "assigned to `YUI.Env.CSRF_TOKEN` like this:",
            "",
            "    <script>",
            "        YUI.Env.CSRF_TOKEN = {{session.authenticityToken}};",
            "    </script>",
            "",
            "The above should come after YUI seed file so that `YUI.Env` will be defined.",
            "",
            "**Note:** This can be overridden on a per-request basis. See `sync()` method.",
            "",
            "When a value for the CSRF token is provided, either statically or via `options`",
            "passed to the `save()` and `destroy()` methods, the applicable HTTP requests",
            "will have a `X-CSRF-Token` header added with the token value.",
            "",
            "@property CSRF_TOKEN",
            "@type String",
            "@default YUI.Env.CSRF_TOKEN",
            "@static",
            "@since 3.6.0",
            "**/",
            "RESTSync.CSRF_TOKEN = YUI.Env.CSRF_TOKEN;",
            "",
            "/**",
            "Static flag to use the HTTP POST method instead of PUT or DELETE.",
            "",
            "If the server-side HTTP framework isn't RESTful, setting this flag to `true`",
            "will cause all PUT and DELETE requests to instead use the POST HTTP method, and",
            "add a `X-HTTP-Method-Override` HTTP header with the value of the method type",
            "which was overridden.",
            "",
            "@property EMULATE_HTTP",
            "@type Boolean",
            "@default false",
            "@static",
            "@since 3.6.0",
            "**/",
            "RESTSync.EMULATE_HTTP = false;",
            "",
            "/**",
            "Default headers used with all XHRs.",
            "",
            "By default the `Accept` and `Content-Type` headers are set to",
            "\"application/json\", this signals to the HTTP server to process the request",
            "bodies as JSON and send JSON responses. If you're sending and receiving content",
            "other than JSON, you can override these headers and the `parse()` and",
            "`serialize()` methods.",
            "",
            "**Note:** These headers will be merged with any request-specific headers, and",
            "the request-specific headers will take precedence.",
            "",
            "@property HTTP_HEADERS",
            "@type Object",
            "@default",
            "    {",
            "        \"Accept\"      : \"application/json\",",
            "        \"Content-Type\": \"application/json\"",
            "    }",
            "@static",
            "@since 3.6.0",
            "**/",
            "RESTSync.HTTP_HEADERS = {",
            "    'Accept'      : 'application/json',",
            "    'Content-Type': 'application/json'",
            "};",
            "",
            "/**",
            "Static mapping of RESTful HTTP methods corresponding to CRUD actions.",
            "",
            "@property HTTP_METHODS",
            "@type Object",
            "@default",
            "    {",
            "        \"create\": \"POST\",",
            "        \"read\"  : \"GET\",",
            "        \"update\": \"PUT\",",
            "        \"delete\": \"DELETE\"",
            "    }",
            "@static",
            "@since 3.6.0",
            "**/",
            "RESTSync.HTTP_METHODS = {",
            "    'create': 'POST',",
            "    'read'  : 'GET',",
            "    'update': 'PUT',",
            "    'delete': 'DELETE'",
            "};",
            "",
            "/**",
            "The number of milliseconds before the XHRs will timeout/abort. This defaults to",
            "30 seconds.",
            "",
            "**Note:** This can be overridden on a per-request basis. See `sync()` method.",
            "",
            "@property HTTP_TIMEOUT",
            "@type Number",
            "@default 30000",
            "@static",
            "@since 3.6.0",
            "**/",
            "RESTSync.HTTP_TIMEOUT = 30000;",
            "",
            "/**",
            "Properties that shouldn't be turned into ad-hoc attributes when passed to a",
            "Model or ModelList constructor.",
            "",
            "@property _NON_ATTRS_CFG",
            "@type Array",
            "@default [\"root\", \"url\"]",
            "@static",
            "@protected",
            "@since 3.6.0",
            "**/",
            "RESTSync._NON_ATTRS_CFG = ['root', 'url'];",
            "",
            "RESTSync.prototype = {",
            "",
            "    // -- Public Properties ----------------------------------------------------",
            "",
            "    /**",
            "    A string which represents the root or collection part of the URL which",
            "    relates to a Model or ModelList. Usually this value should be same for all",
            "    instances of a specific Model/ModelList subclass.",
            "",
            "    When sub-classing `Y.Model`, usually you'll only need to override this",
            "    property, which lets the URLs for the XHRs be generated by convention. If",
            "    the `root` string ends with a trailing-slash, XHR URLs will also end with a",
            "    \"/\", and if the `root` does not end with a slash, neither will the XHR URLs.",
            "",
            "    @example",
            "        Y.User = Y.Base.create('user', Y.Model, [Y.ModelSync.REST], {",
            "            root: '/users'",
            "        });",
            "",
            "        var currentUser, newUser;",
            "",
            "        // GET the user data from: \"/users/123\"",
            "        currentUser = new Y.User({id: '123'}).load();",
            "",
            "        // POST the new user data to: \"/users\"",
            "        newUser = new Y.User({name: 'Eric Ferraiuolo'}).save();",
            "",
            "    When sub-classing `Y.ModelList`, usually you'll want to ignore configuring",
            "    the `root` and simply rely on the build-in convention of the list's",
            "    generated URLs defaulting to the `root` specified by the list's `model`.",
            "",
            "    @property root",
            "    @type String",
            "    @default \"\"",
            "    @since 3.6.0",
            "    **/",
            "    root: '',",
            "",
            "    /**",
            "    A string which specifies the URL to use when making XHRs, if not value is",
            "    provided, the URLs used to make XHRs will be generated by convention.",
            "",
            "    While a `url` can be provided for each Model/ModelList instance, usually",
            "    you'll want to either rely on the default convention or provide a tokenized",
            "    string on the prototype which can be used for all instances.",
            "",
            "    When sub-classing `Y.Model`, you will probably be able to rely on the",
            "    default convention of generating URLs in conjunction with the `root`",
            "    property and whether the model is new or not (i.e. has an `id`). If the",
            "    `root` property ends with a trailing-slash, the generated URL for the",
            "    specific model will also end with a trailing-slash.",
            "",
            "    @example",
            "        Y.User = Y.Base.create('user', Y.Model, [Y.ModelSync.REST], {",
            "            root: '/users/'",
            "        });",
            "",
            "        var currentUser, newUser;",
            "",
            "        // GET the user data from: \"/users/123/\"",
            "        currentUser = new Y.User({id: '123'}).load();",
            "",
            "        // POST the new user data to: \"/users/\"",
            "        newUser = new Y.User({name: 'Eric Ferraiuolo'}).save();",
            "",
            "    If a `url` is specified, it will be processed by `Y.Lang.sub()`, which is",
            "    useful when the URLs for a Model/ModelList subclass match a specific pattern",
            "    and can use simple replacement tokens; e.g.:",
            "",
            "    @example",
            "        Y.User = Y.Base.create('user', Y.Model, [Y.ModelSync.REST], {",
            "            root: '/users',",
            "            url : '/users/{username}'",
            "        });",
            "",
            "    **Note:** String subsitituion of the `url` only use string an number values",
            "    provided by this object's attribute and/or the `options` passed to the",
            "    `getURL()` method. Do not expect something fancy to happen with Object,",
            "    Array, or Boolean values, they will simply be ignored.",
            "",
            "    If your URLs have plural roots or collection URLs, while the specific item",
            "    resources are under a singular name, e.g. \"/users\" (plural) and \"/user/123\"",
            "    (singular), you'll probably want to configure the `root` and `url`",
            "    properties like this:",
            "",
            "    @example",
            "        Y.User = Y.Base.create('user', Y.Model, [Y.ModelSync.REST], {",
            "            root: '/users',",
            "            url : '/user/{id}'",
            "        });",
            "",
            "        var currentUser, newUser;",
            "",
            "        // GET the user data from: \"/user/123\"",
            "        currentUser = new Y.User({id: '123'}).load();",
            "",
            "        // POST the new user data to: \"/users\"",
            "        newUser = new Y.User({name: 'Eric Ferraiuolo'}).save();",
            "",
            "    When sub-classing `Y.ModelList`, usually you'll be able to rely on the",
            "    associated `model` to supply its `root` to be used as the model list's URL.",
            "    If this needs to be customized, you can provide a simple string for the",
            "    `url` property.",
            "",
            "    @example",
            "        Y.Users = Y.Base.create('users', Y.ModelList, [Y.ModelSync.REST], {",
            "            // Leverages `Y.User`'s `root`, which is \"/users\".",
            "            model: Y.User",
            "        });",
            "",
            "        // Or specified explicitly...",
            "",
            "        Y.Users = Y.Base.create('users', Y.ModelList, [Y.ModelSync.REST], {",
            "            model: Y.User,",
            "            url  : '/users'",
            "        });",
            "",
            "    @property url",
            "    @type String",
            "    @default \"\"",
            "    @since 3.6.0",
            "    **/",
            "    url: '',",
            "",
            "    // -- Lifecycle Methods ----------------------------------------------------",
            "",
            "    initializer: function (config) {",
            "        config || (config = {});",
            "",
            "        // Overrides `root` at the instance level.",
            "        if ('root' in config) {",
            "            this.root = config.root || '';",
            "        }",
            "",
            "        // Overrides `url` at the instance level.",
            "        if ('url' in config) {",
            "            this.url = config.url || '';",
            "        }",
            "    },",
            "",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Returns the URL for this model or model list for the given `action` and",
            "    `options`, if specified.",
            "",
            "    This method correctly handles the variations of `root` and `url` values and",
            "    is called by the `sync()` method to get the URLs used to make the XHRs.",
            "",
            "    You can override this method if you need to provide a specific",
            "    implementation for how the URLs of your Model and ModelList subclasses need",
            "    to be generated.",
            "",
            "    @method getURL",
            "    @param {String} [action] Optional `sync()` action for which to generate the",
            "        URL.",
            "    @param {Object} [options] Optional options which may be used to help",
            "        generate the URL.",
            "    @return {String} this model's or model list's URL for the the given",
            "        `action` and `options`.",
            "    @since 3.6.0",
            "    **/",
            "    getURL: function (action, options) {",
            "        var root = this.root,",
            "            url  = this.url;",
            "",
            "        // If this is a model list, use its `url` and substitute placeholders,",
            "        // but default to the `root` of its `model`. By convention a model's",
            "        // `root` is the location to a collection resource.",
            "        if (this._isYUIModelList) {",
            "            if (!url) {",
            "                return this.model.prototype.root;",
            "            }",
            "",
            "            return this._substituteURL(url, Y.merge(this.getAttrs(), options));",
            "        }",
            "",
            "        // Assume `this` is a model.",
            "",
            "        // When a model is new, i.e. has no `id`, the `root` should be used. By",
            "        // convention a model's `root` is the location to a collection resource.",
            "        // The model's `url` will be used as a fallback if `root` isn't defined.",
            "        if (root && (action === 'create' || this.isNew())) {",
            "            return root;",
            "        }",
            "",
            "        // When a model's `url` is not provided, we'll generate a URL to use by",
            "        // convention. This will combine the model's `id` with its configured",
            "        // `root` and add a trailing-slash if the root ends with \"/\".",
            "        if (!url) {",
            "            return this._joinURL(this.getAsURL('id') || '');",
            "        }",
            "",
            "        // Substitute placeholders in the `url` with URL-encoded values from the",
            "        // model's attribute values or the specified `options`.",
            "        return this._substituteURL(url, Y.merge(this.getAttrs(), options));",
            "    },",
            "",
            "    /**",
            "    Called to parse the response object returned from `Y.io()`. This method",
            "    receives the full response object and is expected to \"prep\" a response which",
            "    is suitable to pass to the `parse()` method.",
            "",
            "    By default the response body is returned (`responseText`), because it",
            "    usually represents the entire entity of this model on the server.",
            "",
            "    If you need to parse data out of the response's headers you should do so by",
            "    overriding this method. If you'd like the entire response object from the",
            "    XHR to be passed to your `parse()` method, you can simply assign this",
            "    property to `false`.",
            "",
            "    @method parseIOResponse",
            "    @param {Object} response Response object from `Y.io()`.",
            "    @return {Any} The modified response to pass along to the `parse()` method.",
            "    @since 3.7.0",
            "    **/",
            "    parseIOResponse: function (response) {",
            "        return response.responseText;",
            "    },",
            "",
            "    /**",
            "    Serializes `this` model to be used as the HTTP request entity body.",
            "",
            "    By default this model will be serialized to a JSON string via its `toJSON()`",
            "    method.",
            "",
            "    You can override this method when the HTTP server expects a different",
            "    representation of this model's data that is different from the default JSON",
            "    serialization. If you're sending and receive content other than JSON, be",
            "    sure change the `Accept` and `Content-Type` `HTTP_HEADERS` as well.",
            "",
            "    **Note:** A model's `toJSON()` method can also be overridden. If you only",
            "    need to modify which attributes are serialized to JSON, that's a better",
            "    place to start.",
            "",
            "    @method serialize",
            "    @param {String} [action] Optional `sync()` action for which to generate the",
            "        the serialized representation of this model.",
            "    @return {String} serialized HTTP request entity body.",
            "    @since 3.6.0",
            "    **/",
            "    serialize: function (action) {",
            "        return Y.JSON.stringify(this);",
            "    },",
            "",
            "    /**",
            "    Communicates with a RESTful HTTP server by sending and receiving data via",
            "    XHRs. This method is called internally by load(), save(), and destroy().",
            "",
            "    The URL used for each XHR will be retrieved by calling the `getURL()` method",
            "    and passing it the specified `action` and `options`.",
            "",
            "    This method relies heavily on standard RESTful HTTP conventions",
            "",
            "    @method sync",
            "    @param {String} action Sync action to perform. May be one of the following:",
            "",
            "      * `create`: Store a newly-created model for the first time.",
            "      * `delete`: Delete an existing model.",
            "      * `read`  : Load an existing model.",
            "      * `update`: Update an existing model.",
            "",
            "    @param {Object} [options] Sync options:",
            "      @param {String} [options.csrfToken] The authenticity token used by the",
            "        server to verify the validity of this request and protected against CSRF",
            "        attacks. This overrides the default value provided by the static",
            "        `CSRF_TOKEN` property.",
            "      @param {Object} [options.headers] The HTTP headers to mix with the default",
            "        headers specified by the static `HTTP_HEADERS` property.",
            "      @param {Number} [options.timeout] The number of milliseconds before the",
            "        request will timeout and be aborted. This overrides the default provided",
            "        by the static `HTTP_TIMEOUT` property.",
            "    @param {Function} [callback] Called when the sync operation finishes.",
            "      @param {Error|null} callback.err If an error occurred, this parameter will",
            "        contain the error. If the sync operation succeeded, _err_ will be",
            "        falsy.",
            "      @param {Any} [callback.response] The server's response.",
            "    **/",
            "    sync: function (action, options, callback) {",
            "        options || (options = {});",
            "",
            "        var url       = this.getURL(action, options),",
            "            method    = RESTSync.HTTP_METHODS[action],",
            "            headers   = Y.merge(RESTSync.HTTP_HEADERS, options.headers),",
            "            timeout   = options.timeout || RESTSync.HTTP_TIMEOUT,",
            "            csrfToken = options.csrfToken || RESTSync.CSRF_TOKEN,",
            "            entity;",
            "",
            "        // Prepare the content if we are sending data to the server.",
            "        if (method === 'POST' || method === 'PUT') {",
            "            entity = this.serialize(action);",
            "        } else {",
            "            // Remove header, no content is being sent.",
            "            delete headers['Content-Type'];",
            "        }",
            "",
            "        // Setup HTTP emulation for older servers if we need it.",
            "        if (RESTSync.EMULATE_HTTP &&",
            "                (method === 'PUT' || method === 'DELETE')) {",
            "",
            "            // Pass along original method type in the headers.",
            "            headers['X-HTTP-Method-Override'] = method;",
            "",
            "            // Fall-back to using POST method type.",
            "            method = 'POST';",
            "        }",
            "",
            "        // Add CSRF token to HTTP request headers if one is specified and the",
            "        // request will cause side effects on the server.",
            "        if (csrfToken &&",
            "                (method === 'POST' || method === 'PUT' || method === 'DELETE')) {",
            "",
            "            headers['X-CSRF-Token'] = csrfToken;",
            "        }",
            "",
            "        this._sendSyncIORequest({",
            "            action  : action,",
            "            callback: callback,",
            "            entity  : entity,",
            "            headers : headers,",
            "            method  : method,",
            "            timeout : timeout,",
            "            url     : url",
            "        });",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Joins the `root` URL to the specified `url`, normalizing leading/trailing",
            "    \"/\" characters.",
            "",
            "    @example",
            "        model.root = '/foo'",
            "        model._joinURL('bar');  // => '/foo/bar'",
            "        model._joinURL('/bar'); // => '/foo/bar'",
            "",
            "        model.root = '/foo/'",
            "        model._joinURL('bar');  // => '/foo/bar/'",
            "        model._joinURL('/bar'); // => '/foo/bar/'",
            "",
            "    @method _joinURL",
            "    @param {String} url URL to append to the `root` URL.",
            "    @return {String} Joined URL.",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _joinURL: function (url) {",
            "        var root = this.root;",
            "",
            "        if (!(root || url)) {",
            "            return '';",
            "        }",
            "",
            "        if (url.charAt(0) === '/') {",
            "            url = url.substring(1);",
            "        }",
            "",
            "        // Combines the `root` with the `url` and adds a trailing-slash if the",
            "        // `root` has a trailing-slash.",
            "        return root && root.charAt(root.length - 1) === '/' ?",
            "                root + url + '/' :",
            "                root + '/' + url;",
            "    },",
            "",
            "",
            "    /**",
            "    Calls both public, overrideable methods: `parseIOResponse()`, then `parse()`",
            "    and returns the result.",
            "",
            "    This will call into `parseIOResponse()`, if it's defined as a method,",
            "    passing it the full response object from the XHR and using its return value",
            "    to pass along to the `parse()`. This enables developers to easily parse data",
            "    out of the response headers which should be used by the `parse()` method.",
            "",
            "    @method _parse",
            "    @param {Object} response Response object from `Y.io()`.",
            "    @return {Object|Object[]} Attribute hash or Array of model attribute hashes.",
            "    @protected",
            "    @since 3.7.0",
            "    **/",
            "    _parse: function (response) {",
            "        // When `parseIOResponse` is defined as a method, it will be invoked and",
            "        // the result will become the new response object that the `parse()`",
            "        // will be invoked with.",
            "        if (typeof this.parseIOResponse === 'function') {",
            "            response = this.parseIOResponse(response);",
            "        }",
            "",
            "        return this.parse(response);",
            "    },",
            "",
            "    /**",
            "    Performs the XHR and returns the resulting `Y.io()` request object.",
            "",
            "    This method is called by `sync()`.",
            "",
            "    @method _sendSyncIORequest",
            "    @param {Object} config An object with the following properties:",
            "      @param {String} config.action The `sync()` action being performed.",
            "      @param {Function} [config.callback] Called when the sync operation",
            "        finishes.",
            "      @param {String} [config.entity] The HTTP request entity body.",
            "      @param {Object} config.headers The HTTP request headers.",
            "      @param {String} config.method The HTTP request method.",
            "      @param {Number} [config.timeout] Time until the HTTP request is aborted.",
            "      @param {String} config.url The URL of the HTTP resource.",
            "    @return {Object} The resulting `Y.io()` request object.",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _sendSyncIORequest: function (config) {",
            "        return Y.io(config.url, {",
            "            'arguments': {",
            "                action  : config.action,",
            "                callback: config.callback,",
            "                url     : config.url",
            "            },",
            "",
            "            context: this,",
            "            data   : config.entity,",
            "            headers: config.headers,",
            "            method : config.method,",
            "            timeout: config.timeout,",
            "",
            "            on: {",
            "                start  : this._onSyncIOStart,",
            "                failure: this._onSyncIOFailure,",
            "                success: this._onSyncIOSuccess,",
            "                end    : this._onSyncIOEnd",
            "            }",
            "        });",
            "    },",
            "",
            "    /**",
            "    Utility which takes a tokenized `url` string and substitutes its",
            "    placeholders using a specified `data` object.",
            "",
            "    This method will property URL-encode any values before substituting them.",
            "    Also, only expect it to work with String and Number values.",
            "",
            "    @example",
            "        var url = this._substituteURL('/users/{name}', {id: 'Eric F'});",
            "        // => \"/users/Eric%20F\"",
            "",
            "    @method _substituteURL",
            "    @param {String} url Tokenized URL string to substitute placeholder values.",
            "    @param {Object} data Set of data to fill in the `url`'s placeholders.",
            "    @return {String} Substituted URL.",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _substituteURL: function (url, data) {",
            "        if (!url) {",
            "            return '';",
            "        }",
            "",
            "        var values = {};",
            "",
            "        // Creates a hash of the string and number values only to be used to",
            "        // replace any placeholders in a tokenized `url`.",
            "        Y.Object.each(data, function (v, k) {",
            "            if (Lang.isString(v) || Lang.isNumber(v)) {",
            "                // URL-encode any string or number values.",
            "                values[k] = encodeURIComponent(v);",
            "            }",
            "        });",
            "",
            "        return Lang.sub(url, values);",
            "    },",
            "",
            "    // -- Event Handlers -------------------------------------------------------",
            "",
            "    /**",
            "    Called when the `Y.io` request has finished, after \"success\" or \"failure\"",
            "    has been determined.",
            "",
            "    This is a no-op by default, but provides a hook for overriding.",
            "",
            "    @method _onSyncIOEnd",
            "    @param {String} txId The `Y.io` transaction id.",
            "    @param {Object} details Extra details carried through from `sync()`:",
            "      @param {String} details.action The sync action performed.",
            "      @param {Function} [details.callback] The function to call after syncing.",
            "      @param {String} details.url The URL of the requested resource.",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _onSyncIOEnd: function (txId, details) {},",
            "",
            "    /**",
            "    Called when the `Y.io` request has finished unsuccessfully.",
            "",
            "    By default this calls the `details.callback` function passing it the HTTP",
            "    status code and message as an error object along with the response body.",
            "",
            "    @method _onSyncIOFailure",
            "    @param {String} txId The `Y.io` transaction id.",
            "    @param {Object} res The `Y.io` response object.",
            "    @param {Object} details Extra details carried through from `sync()`:",
            "      @param {String} details.action The sync action performed.",
            "      @param {Function} [details.callback] The function to call after syncing.",
            "      @param {String} details.url The URL of the requested resource.",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _onSyncIOFailure: function (txId, res, details) {",
            "        var callback = details.callback;",
            "",
            "        if (callback) {",
            "            callback({",
            "                code: res.status,",
            "                msg : res.statusText",
            "            }, res);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Called when the `Y.io` request has finished successfully.",
            "",
            "    By default this calls the `details.callback` function passing it the",
            "    response body.",
            "",
            "    @method _onSyncIOSuccess",
            "    @param {String} txId The `Y.io` transaction id.",
            "    @param {Object} res The `Y.io` response object.",
            "    @param {Object} details Extra details carried through from `sync()`:",
            "      @param {String} details.action The sync action performed.",
            "      @param {Function} [details.callback] The function to call after syncing.",
            "      @param {String} details.url The URL of the requested resource.",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _onSyncIOSuccess: function (txId, res, details) {",
            "        var callback = details.callback;",
            "",
            "        if (callback) {",
            "            callback(null, res);",
            "        }",
            "    },",
            "",
            "    /**",
            "    Called when the `Y.io` request is made.",
            "",
            "    This is a no-op by default, but provides a hook for overriding.",
            "",
            "    @method _onSyncIOStart",
            "    @param {String} txId The `Y.io` transaction id.",
            "    @param {Object} details Extra details carried through from `sync()`:",
            "      @param {String} detials.action The sync action performed.",
            "      @param {Function} [details.callback] The function to call after syncing.",
            "      @param {String} details.url The URL of the requested resource.",
            "    @protected",
            "    @since 3.6.0",
            "    **/",
            "    _onSyncIOStart: function (txId, details) {}",
            "};",
            "",
            "// -- Namespace ----------------------------------------------------------------",
            "",
            "Y.namespace('ModelSync').REST = RESTSync;",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"model\", \"io-base\", \"json-stringify\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "12": 1,
            "48": 1,
            "76": 1,
            "92": 1,
            "116": 1,
            "136": 1,
            "155": 1,
            "168": 1,
            "170": 1,
            "297": 38,
            "300": 38,
            "301": 2,
            "305": 38,
            "306": 10,
            "333": 41,
            "339": 41,
            "340": 10,
            "341": 4,
            "344": 6,
            "352": 31,
            "353": 6,
            "359": 25,
            "360": 17,
            "365": 8,
            "387": 6,
            "412": 9,
            "449": 12,
            "451": 12,
            "459": 12,
            "460": 7,
            "463": 5,
            "467": 12,
            "471": 2,
            "474": 2,
            "479": 12,
            "482": 9,
            "485": 12,
            "518": 17,
            "520": 17,
            "521": 5,
            "524": 12,
            "525": 0,
            "530": 12,
            "555": 8,
            "556": 7,
            "559": 8,
            "582": 0,
            "623": 14,
            "624": 0,
            "627": 14,
            "631": 14,
            "632": 57,
            "634": 25,
            "638": 14,
            "677": 1,
            "679": 1,
            "680": 1,
            "704": 10,
            "706": 10,
            "707": 10,
            "730": 1
        }
    },
    "build/view-node-map/view-node-map.js": {
        "path": "build/view-node-map/view-node-map.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 6,
            "8": 6,
            "9": 10,
            "10": 6,
            "11": 1,
            "12": 1,
            "13": 5,
            "14": 5,
            "15": 5,
            "16": 5,
            "17": 1
        },
        "b": {
            "1": [
                1,
                1
            ],
            "2": [
                10,
                5
            ],
            "3": [
                6,
                1
            ],
            "4": [
                5,
                0
            ]
        },
        "f": {
            "1": 1,
            "2": 5,
            "3": 6,
            "4": 10,
            "5": 5,
            "6": 5
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 25
                    },
                    "end": {
                        "line": 1,
                        "column": 44
                    }
                }
            },
            "2": {
                "name": "NodeMap",
                "line": 29,
                "loc": {
                    "start": {
                        "line": 29,
                        "column": 0
                    },
                    "end": {
                        "line": 29,
                        "column": 19
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 54,
                "loc": {
                    "start": {
                        "line": 54,
                        "column": 20
                    },
                    "end": {
                        "line": 54,
                        "column": 36
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 57,
                "loc": {
                    "start": {
                        "line": 57,
                        "column": 25
                    },
                    "end": {
                        "line": 57,
                        "column": 45
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 68,
                "loc": {
                    "start": {
                        "line": 68,
                        "column": 17
                    },
                    "end": {
                        "line": 68,
                        "column": 29
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 72,
                "loc": {
                    "start": {
                        "line": 72,
                        "column": 16
                    },
                    "end": {
                        "line": 72,
                        "column": 28
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 84,
                    "column": 40
                }
            },
            "2": {
                "start": {
                    "line": 13,
                    "column": 0
                },
                "end": {
                    "line": 14,
                    "column": 19
                }
            },
            "3": {
                "start": {
                    "line": 29,
                    "column": 0
                },
                "end": {
                    "line": 29,
                    "column": 21
                }
            },
            "4": {
                "start": {
                    "line": 34,
                    "column": 0
                },
                "end": {
                    "line": 34,
                    "column": 50
                }
            },
            "5": {
                "start": {
                    "line": 35,
                    "column": 0
                },
                "end": {
                    "line": 35,
                    "column": 38
                }
            },
            "6": {
                "start": {
                    "line": 54,
                    "column": 0
                },
                "end": {
                    "line": 62,
                    "column": 2
                }
            },
            "7": {
                "start": {
                    "line": 55,
                    "column": 4
                },
                "end": {
                    "line": 55,
                    "column": 13
                }
            },
            "8": {
                "start": {
                    "line": 57,
                    "column": 4
                },
                "end": {
                    "line": 59,
                    "column": 13
                }
            },
            "9": {
                "start": {
                    "line": 58,
                    "column": 8
                },
                "end": {
                    "line": 58,
                    "column": 68
                }
            },
            "10": {
                "start": {
                    "line": 61,
                    "column": 4
                },
                "end": {
                    "line": 61,
                    "column": 24
                }
            },
            "11": {
                "start": {
                    "line": 65,
                    "column": 0
                },
                "end": {
                    "line": 65,
                    "column": 31
                }
            },
            "12": {
                "start": {
                    "line": 67,
                    "column": 0
                },
                "end": {
                    "line": 79,
                    "column": 2
                }
            },
            "13": {
                "start": {
                    "line": 69,
                    "column": 8
                },
                "end": {
                    "line": 69,
                    "column": 57
                }
            },
            "14": {
                "start": {
                    "line": 73,
                    "column": 8
                },
                "end": {
                    "line": 73,
                    "column": 57
                }
            },
            "15": {
                "start": {
                    "line": 75,
                    "column": 8
                },
                "end": {
                    "line": 77,
                    "column": 9
                }
            },
            "16": {
                "start": {
                    "line": 76,
                    "column": 12
                },
                "end": {
                    "line": 76,
                    "column": 36
                }
            },
            "17": {
                "start": {
                    "line": 81,
                    "column": 0
                },
                "end": {
                    "line": 81,
                    "column": 25
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 34,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 34,
                            "column": 0
                        },
                        "end": {
                            "line": 34,
                            "column": 19
                        }
                    },
                    {
                        "start": {
                            "line": 34,
                            "column": 24
                        },
                        "end": {
                            "line": 34,
                            "column": 48
                        }
                    }
                ]
            },
            "2": {
                "line": 58,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 58,
                            "column": 16
                        },
                        "end": {
                            "line": 58,
                            "column": 57
                        }
                    },
                    {
                        "start": {
                            "line": 58,
                            "column": 62
                        },
                        "end": {
                            "line": 58,
                            "column": 67
                        }
                    }
                ]
            },
            "3": {
                "line": 61,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 61,
                            "column": 11
                        },
                        "end": {
                            "line": 61,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 61,
                            "column": 19
                        },
                        "end": {
                            "line": 61,
                            "column": 23
                        }
                    }
                ]
            },
            "4": {
                "line": 75,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 75,
                            "column": 8
                        },
                        "end": {
                            "line": 75,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 75,
                            "column": 8
                        },
                        "end": {
                            "line": 75,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('view-node-map', function (Y, NAME) {",
            "",
            "/**",
            "View extension that adds a static `getByNode()` method that returns the nearest",
            "View instance associated with the given Node (similar to Widget's `getByNode()`",
            "method).",
            "",
            "@module app",
            "@submodule view-node-map",
            "@since 3.5.0",
            "**/",
            "",
            "var buildCfg  = Y.namespace('View._buildCfg'),",
            "    instances = {};",
            "",
            "/**",
            "View extension that adds a static `getByNode()` method that returns the nearest",
            "View instance associated with the given Node (similar to Widget's `getByNode()`",
            "method).",
            "",
            "Note that it's important to call `destroy()` on a View instance using this",
            "extension when you plan to stop using it. This ensures that all internal",
            "references to that View are cleared to prevent memory leaks.",
            "",
            "@class View.NodeMap",
            "@extensionfor View",
            "@since 3.5.0",
            "**/",
            "function NodeMap() {}",
            "",
            "// Tells Base.create() to mix the static getByNode method into built classes.",
            "// We're cheating and modifying Y.View here, because right now there's no better",
            "// way to do it.",
            "buildCfg.aggregates || (buildCfg.aggregates = []);",
            "buildCfg.aggregates.push('getByNode');",
            "",
            "/**",
            "Returns the nearest View instance associated with the given Node. The Node may",
            "be a View container or any child of a View container.",
            "",
            "Note that only instances of Views that have the Y.View.NodeMap extension mixed",
            "in will be returned. The base View class doesn't provide this functionality by",
            "default due to the additional memory management overhead involved in maintaining",
            "a mapping of Nodes to View instances.",
            "",
            "@method getByNode",
            "@param {Node|HTMLElement|String} node Node instance, selector string, or",
            "    HTMLElement.",
            "@return {View} Closest View instance associated with the given Node, or `null`",
            "    if no associated View instance was found.",
            "@static",
            "@since 3.5.0",
            "**/",
            "NodeMap.getByNode = function (node) {",
            "    var view;",
            "",
            "    Y.one(node).ancestor(function (ancestor) {",
            "        return (view = instances[Y.stamp(ancestor, true)]) || false;",
            "    }, true);",
            "",
            "    return view || null;",
            "};",
            "",
            "// To make this testable.",
            "NodeMap._instances = instances;",
            "",
            "NodeMap.prototype = {",
            "    initializer: function () {",
            "        instances[Y.stamp(this.get('container'))] = this;",
            "    },",
            "",
            "    destructor: function () {",
            "        var stamp = Y.stamp(this.get('container'), true);",
            "",
            "        if (stamp in instances) {",
            "            delete instances[stamp];",
            "        }",
            "    }",
            "};",
            "",
            "Y.View.NodeMap = NodeMap;",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"view\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "13": 1,
            "29": 1,
            "34": 1,
            "35": 1,
            "54": 1,
            "55": 6,
            "57": 6,
            "58": 10,
            "61": 6,
            "65": 1,
            "67": 1,
            "69": 5,
            "73": 5,
            "75": 5,
            "76": 5,
            "81": 1
        }
    },
    "build/lazy-model-list/lazy-model-list.js": {
        "path": "build/lazy-model-list/lazy-model-list.js",
        "s": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 20,
            "5": 3,
            "6": 3,
            "7": 1,
            "8": 1,
            "9": 1,
            "10": 2,
            "11": 3,
            "12": 22,
            "13": 21,
            "14": 1,
            "15": 2,
            "16": 1,
            "17": 0,
            "18": 1,
            "19": 2,
            "20": 1,
            "21": 0,
            "22": 1,
            "23": 2,
            "24": 9,
            "25": 3,
            "26": 3,
            "27": 3,
            "28": 3,
            "29": 3,
            "30": 3,
            "31": 0,
            "32": 3,
            "33": 0,
            "34": 3,
            "35": 3,
            "36": 18,
            "37": 18,
            "38": 17,
            "39": 1,
            "40": 1,
            "41": 2,
            "42": 1,
            "43": 0,
            "44": 39,
            "45": 39,
            "46": 39,
            "47": 39,
            "48": 31,
            "49": 39,
            "50": 0,
            "51": 0,
            "52": 39,
            "53": 39,
            "54": 39,
            "55": 24,
            "56": 24,
            "57": 24,
            "58": 24,
            "59": 24,
            "60": 31,
            "61": 31,
            "62": 41,
            "63": 46,
            "64": 7,
            "65": 7,
            "66": 7,
            "67": 46,
            "68": 3,
            "69": 1,
            "70": 3,
            "71": 19,
            "72": 19,
            "73": 0,
            "74": 19,
            "75": 19,
            "76": 1,
            "77": 18,
            "78": 18,
            "79": 15,
            "80": 15,
            "81": 15,
            "82": 15,
            "83": 18,
            "84": 1,
            "85": 1,
            "86": 1,
            "87": 1,
            "88": 1,
            "89": 39,
            "90": 39,
            "91": 39,
            "92": 0,
            "93": 39,
            "94": 3,
            "95": 3,
            "96": 3,
            "97": 0,
            "98": 3,
            "99": 1,
            "100": 3,
            "101": 3
        },
        "b": {
            "1": [
                1,
                2
            ],
            "2": [
                0,
                1
            ],
            "3": [
                1,
                0
            ],
            "4": [
                21,
                1
            ],
            "5": [
                0,
                1
            ],
            "6": [
                0,
                1
            ],
            "7": [
                4,
                5
            ],
            "8": [
                9,
                9
            ],
            "9": [
                3,
                0
            ],
            "10": [
                3,
                3
            ],
            "11": [
                1,
                2
            ],
            "12": [
                0,
                3
            ],
            "13": [
                0,
                3
            ],
            "14": [
                17,
                1
            ],
            "15": [
                18,
                11
            ],
            "16": [
                15,
                2
            ],
            "17": [
                39,
                13
            ],
            "18": [
                31,
                8
            ],
            "19": [
                0,
                39
            ],
            "20": [
                0,
                39
            ],
            "21": [
                6,
                33
            ],
            "22": [
                31,
                1
            ],
            "23": [
                41,
                40,
                40,
                6
            ],
            "24": [
                7,
                39
            ],
            "25": [
                1,
                2
            ],
            "26": [
                0,
                19
            ],
            "27": [
                1,
                18
            ],
            "28": [
                15,
                3
            ],
            "29": [
                1,
                0
            ],
            "30": [
                1,
                0
            ],
            "31": [
                0,
                39
            ],
            "32": [
                0,
                3
            ],
            "33": [
                1,
                2
            ]
        },
        "f": {
            "1": 1,
            "2": 20,
            "3": 3,
            "4": 22,
            "5": 2,
            "6": 1,
            "7": 2,
            "8": 1,
            "9": 2,
            "10": 9,
            "11": 3,
            "12": 18,
            "13": 0,
            "14": 39,
            "15": 24,
            "16": 31,
            "17": 41,
            "18": 46,
            "19": 3,
            "20": 19,
            "21": 1,
            "22": 39,
            "23": 3
        },
        "fnMap": {
            "1": {
                "name": "(anonymous_1)",
                "line": 1,
                "loc": {
                    "start": {
                        "line": 1,
                        "column": 27
                    },
                    "end": {
                        "line": 1,
                        "column": 46
                    }
                }
            },
            "2": {
                "name": "(anonymous_2)",
                "line": 71,
                "loc": {
                    "start": {
                        "line": 71,
                        "column": 17
                    },
                    "end": {
                        "line": 71,
                        "column": 29
                    }
                }
            },
            "3": {
                "name": "(anonymous_3)",
                "line": 94,
                "loc": {
                    "start": {
                        "line": 94,
                        "column": 10
                    },
                    "end": {
                        "line": 94,
                        "column": 27
                    }
                }
            },
            "4": {
                "name": "(anonymous_4)",
                "line": 127,
                "loc": {
                    "start": {
                        "line": 127,
                        "column": 9
                    },
                    "end": {
                        "line": 127,
                        "column": 25
                    }
                }
            },
            "5": {
                "name": "(anonymous_5)",
                "line": 132,
                "loc": {
                    "start": {
                        "line": 132,
                        "column": 39
                    },
                    "end": {
                        "line": 132,
                        "column": 55
                    }
                }
            },
            "6": {
                "name": "(anonymous_6)",
                "line": 146,
                "loc": {
                    "start": {
                        "line": 146,
                        "column": 15
                    },
                    "end": {
                        "line": 146,
                        "column": 31
                    }
                }
            },
            "7": {
                "name": "(anonymous_7)",
                "line": 151,
                "loc": {
                    "start": {
                        "line": 151,
                        "column": 39
                    },
                    "end": {
                        "line": 151,
                        "column": 55
                    }
                }
            },
            "8": {
                "name": "(anonymous_8)",
                "line": 165,
                "loc": {
                    "start": {
                        "line": 165,
                        "column": 14
                    },
                    "end": {
                        "line": 165,
                        "column": 30
                    }
                }
            },
            "9": {
                "name": "(anonymous_9)",
                "line": 170,
                "loc": {
                    "start": {
                        "line": 170,
                        "column": 39
                    },
                    "end": {
                        "line": 170,
                        "column": 55
                    }
                }
            },
            "10": {
                "name": "(anonymous_10)",
                "line": 184,
                "loc": {
                    "start": {
                        "line": 184,
                        "column": 13
                    },
                    "end": {
                        "line": 184,
                        "column": 30
                    }
                }
            },
            "11": {
                "name": "(anonymous_11)",
                "line": 198,
                "loc": {
                    "start": {
                        "line": 198,
                        "column": 11
                    },
                    "end": {
                        "line": 198,
                        "column": 37
                    }
                }
            },
            "12": {
                "name": "(anonymous_12)",
                "line": 248,
                "loc": {
                    "start": {
                        "line": 248,
                        "column": 12
                    },
                    "end": {
                        "line": 248,
                        "column": 28
                    }
                }
            },
            "13": {
                "name": "(anonymous_13)",
                "line": 273,
                "loc": {
                    "start": {
                        "line": 273,
                        "column": 12
                    },
                    "end": {
                        "line": 273,
                        "column": 24
                    }
                }
            },
            "14": {
                "name": "(anonymous_14)",
                "line": 289,
                "loc": {
                    "start": {
                        "line": 289,
                        "column": 10
                    },
                    "end": {
                        "line": 289,
                        "column": 35
                    }
                }
            },
            "15": {
                "name": "(anonymous_15)",
                "line": 329,
                "loc": {
                    "start": {
                        "line": 329,
                        "column": 12
                    },
                    "end": {
                        "line": 329,
                        "column": 24
                    }
                }
            },
            "16": {
                "name": "(anonymous_16)",
                "line": 345,
                "loc": {
                    "start": {
                        "line": 345,
                        "column": 23
                    },
                    "end": {
                        "line": 345,
                        "column": 35
                    }
                }
            },
            "17": {
                "name": "(anonymous_17)",
                "line": 358,
                "loc": {
                    "start": {
                        "line": 358,
                        "column": 15
                    },
                    "end": {
                        "line": 358,
                        "column": 31
                    }
                }
            },
            "18": {
                "name": "(anonymous_18)",
                "line": 375,
                "loc": {
                    "start": {
                        "line": 375,
                        "column": 20
                    },
                    "end": {
                        "line": 375,
                        "column": 37
                    }
                }
            },
            "19": {
                "name": "(anonymous_19)",
                "line": 395,
                "loc": {
                    "start": {
                        "line": 395,
                        "column": 13
                    },
                    "end": {
                        "line": 395,
                        "column": 38
                    }
                }
            },
            "20": {
                "name": "(anonymous_20)",
                "line": 415,
                "loc": {
                    "start": {
                        "line": 415,
                        "column": 13
                    },
                    "end": {
                        "line": 415,
                        "column": 30
                    }
                }
            },
            "21": {
                "name": "(anonymous_21)",
                "line": 455,
                "loc": {
                    "start": {
                        "line": 455,
                        "column": 23
                    },
                    "end": {
                        "line": 455,
                        "column": 36
                    }
                }
            },
            "22": {
                "name": "(anonymous_22)",
                "line": 478,
                "loc": {
                    "start": {
                        "line": 478,
                        "column": 15
                    },
                    "end": {
                        "line": 478,
                        "column": 28
                    }
                }
            },
            "23": {
                "name": "(anonymous_23)",
                "line": 497,
                "loc": {
                    "start": {
                        "line": 497,
                        "column": 18
                    },
                    "end": {
                        "line": 497,
                        "column": 31
                    }
                }
            }
        },
        "statementMap": {
            "1": {
                "start": {
                    "line": 1,
                    "column": 0
                },
                "end": {
                    "line": 518,
                    "column": 46
                }
            },
            "2": {
                "start": {
                    "line": 60,
                    "column": 0
                },
                "end": {
                    "line": 67,
                    "column": 24
                }
            },
            "3": {
                "start": {
                    "line": 69,
                    "column": 0
                },
                "end": {
                    "line": 515,
                    "column": 3
                }
            },
            "4": {
                "start": {
                    "line": 72,
                    "column": 8
                },
                "end": {
                    "line": 72,
                    "column": 55
                }
            },
            "5": {
                "start": {
                    "line": 95,
                    "column": 8
                },
                "end": {
                    "line": 95,
                    "column": 18
                }
            },
            "6": {
                "start": {
                    "line": 97,
                    "column": 8
                },
                "end": {
                    "line": 113,
                    "column": 9
                }
            },
            "7": {
                "start": {
                    "line": 98,
                    "column": 12
                },
                "end": {
                    "line": 98,
                    "column": 71
                }
            },
            "8": {
                "start": {
                    "line": 100,
                    "column": 12
                },
                "end": {
                    "line": 110,
                    "column": 13
                }
            },
            "9": {
                "start": {
                    "line": 109,
                    "column": 16
                },
                "end": {
                    "line": 109,
                    "column": 43
                }
            },
            "10": {
                "start": {
                    "line": 112,
                    "column": 12
                },
                "end": {
                    "line": 112,
                    "column": 30
                }
            },
            "11": {
                "start": {
                    "line": 115,
                    "column": 8
                },
                "end": {
                    "line": 115,
                    "column": 20
                }
            },
            "12": {
                "start": {
                    "line": 128,
                    "column": 8
                },
                "end": {
                    "line": 130,
                    "column": 9
                }
            },
            "13": {
                "start": {
                    "line": 129,
                    "column": 12
                },
                "end": {
                    "line": 129,
                    "column": 56
                }
            },
            "14": {
                "start": {
                    "line": 132,
                    "column": 8
                },
                "end": {
                    "line": 134,
                    "column": 11
                }
            },
            "15": {
                "start": {
                    "line": 133,
                    "column": 12
                },
                "end": {
                    "line": 133,
                    "column": 30
                }
            },
            "16": {
                "start": {
                    "line": 147,
                    "column": 8
                },
                "end": {
                    "line": 149,
                    "column": 9
                }
            },
            "17": {
                "start": {
                    "line": 148,
                    "column": 12
                },
                "end": {
                    "line": 148,
                    "column": 71
                }
            },
            "18": {
                "start": {
                    "line": 151,
                    "column": 8
                },
                "end": {
                    "line": 153,
                    "column": 11
                }
            },
            "19": {
                "start": {
                    "line": 152,
                    "column": 12
                },
                "end": {
                    "line": 152,
                    "column": 45
                }
            },
            "20": {
                "start": {
                    "line": 166,
                    "column": 8
                },
                "end": {
                    "line": 168,
                    "column": 9
                }
            },
            "21": {
                "start": {
                    "line": 167,
                    "column": 12
                },
                "end": {
                    "line": 167,
                    "column": 76
                }
            },
            "22": {
                "start": {
                    "line": 170,
                    "column": 8
                },
                "end": {
                    "line": 172,
                    "column": 11
                }
            },
            "23": {
                "start": {
                    "line": 171,
                    "column": 12
                },
                "end": {
                    "line": 171,
                    "column": 50
                }
            },
            "24": {
                "start": {
                    "line": 185,
                    "column": 8
                },
                "end": {
                    "line": 186,
                    "column": 47
                }
            },
            "25": {
                "start": {
                    "line": 199,
                    "column": 8
                },
                "end": {
                    "line": 199,
                    "column": 31
                }
            },
            "26": {
                "start": {
                    "line": 200,
                    "column": 8
                },
                "end": {
                    "line": 200,
                    "column": 34
                }
            },
            "27": {
                "start": {
                    "line": 202,
                    "column": 8
                },
                "end": {
                    "line": 202,
                    "column": 54
                }
            },
            "28": {
                "start": {
                    "line": 206,
                    "column": 8
                },
                "end": {
                    "line": 207,
                    "column": 51
                }
            },
            "29": {
                "start": {
                    "line": 209,
                    "column": 8
                },
                "end": {
                    "line": 209,
                    "column": 30
                }
            },
            "30": {
                "start": {
                    "line": 211,
                    "column": 8
                },
                "end": {
                    "line": 220,
                    "column": 9
                }
            },
            "31": {
                "start": {
                    "line": 212,
                    "column": 12
                },
                "end": {
                    "line": 212,
                    "column": 37
                }
            },
            "32": {
                "start": {
                    "line": 215,
                    "column": 12
                },
                "end": {
                    "line": 217,
                    "column": 13
                }
            },
            "33": {
                "start": {
                    "line": 216,
                    "column": 16
                },
                "end": {
                    "line": 216,
                    "column": 53
                }
            },
            "34": {
                "start": {
                    "line": 219,
                    "column": 12
                },
                "end": {
                    "line": 219,
                    "column": 41
                }
            },
            "35": {
                "start": {
                    "line": 222,
                    "column": 8
                },
                "end": {
                    "line": 222,
                    "column": 20
                }
            },
            "36": {
                "start": {
                    "line": 249,
                    "column": 8
                },
                "end": {
                    "line": 249,
                    "column": 27
                }
            },
            "37": {
                "start": {
                    "line": 251,
                    "column": 8
                },
                "end": {
                    "line": 262,
                    "column": 9
                }
            },
            "38": {
                "start": {
                    "line": 252,
                    "column": 12
                },
                "end": {
                    "line": 253,
                    "column": 36
                }
            },
            "39": {
                "start": {
                    "line": 255,
                    "column": 12
                },
                "end": {
                    "line": 255,
                    "column": 24
                }
            },
            "40": {
                "start": {
                    "line": 257,
                    "column": 12
                },
                "end": {
                    "line": 259,
                    "column": 13
                }
            },
            "41": {
                "start": {
                    "line": 258,
                    "column": 16
                },
                "end": {
                    "line": 258,
                    "column": 45
                }
            },
            "42": {
                "start": {
                    "line": 261,
                    "column": 12
                },
                "end": {
                    "line": 261,
                    "column": 26
                }
            },
            "43": {
                "start": {
                    "line": 274,
                    "column": 8
                },
                "end": {
                    "line": 274,
                    "column": 30
                }
            },
            "44": {
                "start": {
                    "line": 290,
                    "column": 8
                },
                "end": {
                    "line": 290,
                    "column": 19
                }
            },
            "45": {
                "start": {
                    "line": 292,
                    "column": 8
                },
                "end": {
                    "line": 292,
                    "column": 34
                }
            },
            "46": {
                "start": {
                    "line": 295,
                    "column": 8
                },
                "end": {
                    "line": 295,
                    "column": 41
                }
            },
            "47": {
                "start": {
                    "line": 298,
                    "column": 8
                },
                "end": {
                    "line": 300,
                    "column": 9
                }
            },
            "48": {
                "start": {
                    "line": 299,
                    "column": 12
                },
                "end": {
                    "line": 299,
                    "column": 53
                }
            },
            "49": {
                "start": {
                    "line": 302,
                    "column": 8
                },
                "end": {
                    "line": 310,
                    "column": 9
                }
            },
            "50": {
                "start": {
                    "line": 303,
                    "column": 12
                },
                "end": {
                    "line": 307,
                    "column": 15
                }
            },
            "51": {
                "start": {
                    "line": 309,
                    "column": 12
                },
                "end": {
                    "line": 309,
                    "column": 19
                }
            },
            "52": {
                "start": {
                    "line": 312,
                    "column": 8
                },
                "end": {
                    "line": 315,
                    "column": 11
                }
            },
            "53": {
                "start": {
                    "line": 317,
                    "column": 8
                },
                "end": {
                    "line": 317,
                    "column": 77
                }
            },
            "54": {
                "start": {
                    "line": 319,
                    "column": 8
                },
                "end": {
                    "line": 319,
                    "column": 20
                }
            },
            "55": {
                "start": {
                    "line": 330,
                    "column": 8
                },
                "end": {
                    "line": 330,
                    "column": 58
                }
            },
            "56": {
                "start": {
                    "line": 332,
                    "column": 8
                },
                "end": {
                    "line": 332,
                    "column": 31
                }
            },
            "57": {
                "start": {
                    "line": 333,
                    "column": 8
                },
                "end": {
                    "line": 333,
                    "column": 31
                }
            },
            "58": {
                "start": {
                    "line": 334,
                    "column": 8
                },
                "end": {
                    "line": 334,
                    "column": 31
                }
            },
            "59": {
                "start": {
                    "line": 335,
                    "column": 8
                },
                "end": {
                    "line": 335,
                    "column": 31
                }
            },
            "60": {
                "start": {
                    "line": 346,
                    "column": 8
                },
                "end": {
                    "line": 346,
                    "column": 51
                }
            },
            "61": {
                "start": {
                    "line": 347,
                    "column": 8
                },
                "end": {
                    "line": 347,
                    "column": 63
                }
            },
            "62": {
                "start": {
                    "line": 359,
                    "column": 8
                },
                "end": {
                    "line": 360,
                    "column": 56
                }
            },
            "63": {
                "start": {
                    "line": 376,
                    "column": 8
                },
                "end": {
                    "line": 380,
                    "column": 9
                }
            },
            "64": {
                "start": {
                    "line": 377,
                    "column": 12
                },
                "end": {
                    "line": 377,
                    "column": 37
                }
            },
            "65": {
                "start": {
                    "line": 378,
                    "column": 12
                },
                "end": {
                    "line": 378,
                    "column": 35
                }
            },
            "66": {
                "start": {
                    "line": 379,
                    "column": 12
                },
                "end": {
                    "line": 379,
                    "column": 37
                }
            },
            "67": {
                "start": {
                    "line": 382,
                    "column": 8
                },
                "end": {
                    "line": 382,
                    "column": 21
                }
            },
            "68": {
                "start": {
                    "line": 399,
                    "column": 8
                },
                "end": {
                    "line": 401,
                    "column": 9
                }
            },
            "69": {
                "start": {
                    "line": 400,
                    "column": 12
                },
                "end": {
                    "line": 400,
                    "column": 38
                }
            },
            "70": {
                "start": {
                    "line": 403,
                    "column": 8
                },
                "end": {
                    "line": 403,
                    "column": 71
                }
            },
            "71": {
                "start": {
                    "line": 416,
                    "column": 8
                },
                "end": {
                    "line": 416,
                    "column": 24
                }
            },
            "72": {
                "start": {
                    "line": 418,
                    "column": 8
                },
                "end": {
                    "line": 420,
                    "column": 9
                }
            },
            "73": {
                "start": {
                    "line": 419,
                    "column": 12
                },
                "end": {
                    "line": 419,
                    "column": 24
                }
            },
            "74": {
                "start": {
                    "line": 422,
                    "column": 8
                },
                "end": {
                    "line": 422,
                    "column": 34
                }
            },
            "75": {
                "start": {
                    "line": 424,
                    "column": 8
                },
                "end": {
                    "line": 426,
                    "column": 9
                }
            },
            "76": {
                "start": {
                    "line": 425,
                    "column": 12
                },
                "end": {
                    "line": 425,
                    "column": 24
                }
            },
            "77": {
                "start": {
                    "line": 428,
                    "column": 8
                },
                "end": {
                    "line": 428,
                    "column": 36
                }
            },
            "78": {
                "start": {
                    "line": 430,
                    "column": 8
                },
                "end": {
                    "line": 440,
                    "column": 9
                }
            },
            "79": {
                "start": {
                    "line": 431,
                    "column": 12
                },
                "end": {
                    "line": 431,
                    "column": 41
                }
            },
            "80": {
                "start": {
                    "line": 436,
                    "column": 12
                },
                "end": {
                    "line": 436,
                    "column": 50
                }
            },
            "81": {
                "start": {
                    "line": 438,
                    "column": 12
                },
                "end": {
                    "line": 438,
                    "column": 36
                }
            },
            "82": {
                "start": {
                    "line": 439,
                    "column": 12
                },
                "end": {
                    "line": 439,
                    "column": 40
                }
            },
            "83": {
                "start": {
                    "line": 442,
                    "column": 8
                },
                "end": {
                    "line": 442,
                    "column": 21
                }
            },
            "84": {
                "start": {
                    "line": 456,
                    "column": 8
                },
                "end": {
                    "line": 458,
                    "column": 17
                }
            },
            "85": {
                "start": {
                    "line": 460,
                    "column": 8
                },
                "end": {
                    "line": 466,
                    "column": 9
                }
            },
            "86": {
                "start": {
                    "line": 461,
                    "column": 12
                },
                "end": {
                    "line": 465,
                    "column": 13
                }
            },
            "87": {
                "start": {
                    "line": 462,
                    "column": 16
                },
                "end": {
                    "line": 464,
                    "column": 17
                }
            },
            "88": {
                "start": {
                    "line": 463,
                    "column": 20
                },
                "end": {
                    "line": 463,
                    "column": 54
                }
            },
            "89": {
                "start": {
                    "line": 479,
                    "column": 8
                },
                "end": {
                    "line": 479,
                    "column": 27
                }
            },
            "90": {
                "start": {
                    "line": 481,
                    "column": 8
                },
                "end": {
                    "line": 481,
                    "column": 48
                }
            },
            "91": {
                "start": {
                    "line": 483,
                    "column": 8
                },
                "end": {
                    "line": 485,
                    "column": 9
                }
            },
            "92": {
                "start": {
                    "line": 484,
                    "column": 12
                },
                "end": {
                    "line": 484,
                    "column": 40
                }
            },
            "93": {
                "start": {
                    "line": 487,
                    "column": 8
                },
                "end": {
                    "line": 487,
                    "column": 45
                }
            },
            "94": {
                "start": {
                    "line": 498,
                    "column": 8
                },
                "end": {
                    "line": 500,
                    "column": 40
                }
            },
            "95": {
                "start": {
                    "line": 502,
                    "column": 8
                },
                "end": {
                    "line": 502,
                    "column": 48
                }
            },
            "96": {
                "start": {
                    "line": 504,
                    "column": 8
                },
                "end": {
                    "line": 506,
                    "column": 9
                }
            },
            "97": {
                "start": {
                    "line": 505,
                    "column": 12
                },
                "end": {
                    "line": 505,
                    "column": 40
                }
            },
            "98": {
                "start": {
                    "line": 508,
                    "column": 8
                },
                "end": {
                    "line": 510,
                    "column": 9
                }
            },
            "99": {
                "start": {
                    "line": 509,
                    "column": 12
                },
                "end": {
                    "line": 509,
                    "column": 36
                }
            },
            "100": {
                "start": {
                    "line": 512,
                    "column": 8
                },
                "end": {
                    "line": 512,
                    "column": 37
                }
            },
            "101": {
                "start": {
                    "line": 513,
                    "column": 8
                },
                "end": {
                    "line": 513,
                    "column": 38
                }
            }
        },
        "branchMap": {
            "1": {
                "line": 97,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 97,
                            "column": 8
                        },
                        "end": {
                            "line": 97,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 97,
                            "column": 8
                        },
                        "end": {
                            "line": 97,
                            "column": 8
                        }
                    }
                ]
            },
            "2": {
                "line": 98,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 98,
                            "column": 43
                        },
                        "end": {
                            "line": 98,
                            "column": 48
                        }
                    },
                    {
                        "start": {
                            "line": 98,
                            "column": 51
                        },
                        "end": {
                            "line": 98,
                            "column": 70
                        }
                    }
                ]
            },
            "3": {
                "line": 100,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 100,
                            "column": 12
                        },
                        "end": {
                            "line": 100,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 100,
                            "column": 12
                        },
                        "end": {
                            "line": 100,
                            "column": 12
                        }
                    }
                ]
            },
            "4": {
                "line": 128,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 128,
                            "column": 8
                        },
                        "end": {
                            "line": 128,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 128,
                            "column": 8
                        },
                        "end": {
                            "line": 128,
                            "column": 8
                        }
                    }
                ]
            },
            "5": {
                "line": 147,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 147,
                            "column": 8
                        },
                        "end": {
                            "line": 147,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 147,
                            "column": 8
                        },
                        "end": {
                            "line": 147,
                            "column": 8
                        }
                    }
                ]
            },
            "6": {
                "line": 166,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 166,
                            "column": 8
                        },
                        "end": {
                            "line": 166,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 166,
                            "column": 8
                        },
                        "end": {
                            "line": 166,
                            "column": 8
                        }
                    }
                ]
            },
            "7": {
                "line": 185,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 186,
                            "column": 12
                        },
                        "end": {
                            "line": 186,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 186,
                            "column": 27
                        },
                        "end": {
                            "line": 186,
                            "column": 38
                        }
                    }
                ]
            },
            "8": {
                "line": 185,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 185,
                            "column": 30
                        },
                        "end": {
                            "line": 185,
                            "column": 35
                        }
                    },
                    {
                        "start": {
                            "line": 185,
                            "column": 39
                        },
                        "end": {
                            "line": 185,
                            "column": 56
                        }
                    }
                ]
            },
            "9": {
                "line": 199,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 199,
                            "column": 8
                        },
                        "end": {
                            "line": 199,
                            "column": 13
                        }
                    },
                    {
                        "start": {
                            "line": 199,
                            "column": 18
                        },
                        "end": {
                            "line": 199,
                            "column": 29
                        }
                    }
                ]
            },
            "10": {
                "line": 200,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 200,
                            "column": 8
                        },
                        "end": {
                            "line": 200,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 200,
                            "column": 20
                        },
                        "end": {
                            "line": 200,
                            "column": 32
                        }
                    }
                ]
            },
            "11": {
                "line": 206,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 206,
                            "column": 40
                        },
                        "end": {
                            "line": 206,
                            "column": 70
                        }
                    },
                    {
                        "start": {
                            "line": 207,
                            "column": 12
                        },
                        "end": {
                            "line": 207,
                            "column": 50
                        }
                    }
                ]
            },
            "12": {
                "line": 211,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 211,
                            "column": 8
                        },
                        "end": {
                            "line": 211,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 211,
                            "column": 8
                        },
                        "end": {
                            "line": 211,
                            "column": 8
                        }
                    }
                ]
            },
            "13": {
                "line": 215,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 215,
                            "column": 12
                        },
                        "end": {
                            "line": 215,
                            "column": 12
                        }
                    },
                    {
                        "start": {
                            "line": 215,
                            "column": 12
                        },
                        "end": {
                            "line": 215,
                            "column": 12
                        }
                    }
                ]
            },
            "14": {
                "line": 251,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 251,
                            "column": 8
                        },
                        "end": {
                            "line": 251,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 251,
                            "column": 8
                        },
                        "end": {
                            "line": 251,
                            "column": 8
                        }
                    }
                ]
            },
            "15": {
                "line": 251,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 251,
                            "column": 12
                        },
                        "end": {
                            "line": 251,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 251,
                            "column": 20
                        },
                        "end": {
                            "line": 251,
                            "column": 30
                        }
                    }
                ]
            },
            "16": {
                "line": 252,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 252,
                            "column": 54
                        },
                        "end": {
                            "line": 252,
                            "column": 58
                        }
                    },
                    {
                        "start": {
                            "line": 253,
                            "column": 16
                        },
                        "end": {
                            "line": 253,
                            "column": 34
                        }
                    }
                ]
            },
            "17": {
                "line": 292,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 292,
                            "column": 8
                        },
                        "end": {
                            "line": 292,
                            "column": 15
                        }
                    },
                    {
                        "start": {
                            "line": 292,
                            "column": 20
                        },
                        "end": {
                            "line": 292,
                            "column": 32
                        }
                    }
                ]
            },
            "18": {
                "line": 298,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 298,
                            "column": 8
                        },
                        "end": {
                            "line": 298,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 298,
                            "column": 8
                        },
                        "end": {
                            "line": 298,
                            "column": 8
                        }
                    }
                ]
            },
            "19": {
                "line": 302,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 302,
                            "column": 8
                        },
                        "end": {
                            "line": 302,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 302,
                            "column": 8
                        },
                        "end": {
                            "line": 302,
                            "column": 8
                        }
                    }
                ]
            },
            "20": {
                "line": 313,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 313,
                            "column": 40
                        },
                        "end": {
                            "line": 313,
                            "column": 53
                        }
                    },
                    {
                        "start": {
                            "line": 313,
                            "column": 56
                        },
                        "end": {
                            "line": 313,
                            "column": 77
                        }
                    }
                ]
            },
            "21": {
                "line": 317,
                "type": "cond-expr",
                "locations": [
                    {
                        "start": {
                            "line": 317,
                            "column": 25
                        },
                        "end": {
                            "line": 317,
                            "column": 47
                        }
                    },
                    {
                        "start": {
                            "line": 317,
                            "column": 50
                        },
                        "end": {
                            "line": 317,
                            "column": 76
                        }
                    }
                ]
            },
            "22": {
                "line": 346,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 346,
                            "column": 8
                        },
                        "end": {
                            "line": 346,
                            "column": 24
                        }
                    },
                    {
                        "start": {
                            "line": 346,
                            "column": 29
                        },
                        "end": {
                            "line": 346,
                            "column": 49
                        }
                    }
                ]
            },
            "23": {
                "line": 359,
                "type": "binary-expr",
                "locations": [
                    {
                        "start": {
                            "line": 359,
                            "column": 19
                        },
                        "end": {
                            "line": 359,
                            "column": 37
                        }
                    },
                    {
                        "start": {
                            "line": 359,
                            "column": 41
                        },
                        "end": {
                            "line": 359,
                            "column": 73
                        }
                    },
                    {
                        "start": {
                            "line": 360,
                            "column": 17
                        },
                        "end": {
                            "line": 360,
                            "column": 29
                        }
                    },
                    {
                        "start": {
                            "line": 360,
                            "column": 33
                        },
                        "end": {
                            "line": 360,
                            "column": 53
                        }
                    }
                ]
            },
            "24": {
                "line": 376,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 376,
                            "column": 8
                        },
                        "end": {
                            "line": 376,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 376,
                            "column": 8
                        },
                        "end": {
                            "line": 376,
                            "column": 8
                        }
                    }
                ]
            },
            "25": {
                "line": 399,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 399,
                            "column": 8
                        },
                        "end": {
                            "line": 399,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 399,
                            "column": 8
                        },
                        "end": {
                            "line": 399,
                            "column": 8
                        }
                    }
                ]
            },
            "26": {
                "line": 418,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 418,
                            "column": 8
                        },
                        "end": {
                            "line": 418,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 418,
                            "column": 8
                        },
                        "end": {
                            "line": 418,
                            "column": 8
                        }
                    }
                ]
            },
            "27": {
                "line": 424,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 424,
                            "column": 8
                        },
                        "end": {
                            "line": 424,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 424,
                            "column": 8
                        },
                        "end": {
                            "line": 424,
                            "column": 8
                        }
                    }
                ]
            },
            "28": {
                "line": 430,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 430,
                            "column": 8
                        },
                        "end": {
                            "line": 430,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 430,
                            "column": 8
                        },
                        "end": {
                            "line": 430,
                            "column": 8
                        }
                    }
                ]
            },
            "29": {
                "line": 460,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 460,
                            "column": 8
                        },
                        "end": {
                            "line": 460,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 460,
                            "column": 8
                        },
                        "end": {
                            "line": 460,
                            "column": 8
                        }
                    }
                ]
            },
            "30": {
                "line": 462,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 462,
                            "column": 16
                        },
                        "end": {
                            "line": 462,
                            "column": 16
                        }
                    },
                    {
                        "start": {
                            "line": 462,
                            "column": 16
                        },
                        "end": {
                            "line": 462,
                            "column": 16
                        }
                    }
                ]
            },
            "31": {
                "line": 483,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 483,
                            "column": 8
                        },
                        "end": {
                            "line": 483,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 483,
                            "column": 8
                        },
                        "end": {
                            "line": 483,
                            "column": 8
                        }
                    }
                ]
            },
            "32": {
                "line": 504,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 504,
                            "column": 8
                        },
                        "end": {
                            "line": 504,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 504,
                            "column": 8
                        },
                        "end": {
                            "line": 504,
                            "column": 8
                        }
                    }
                ]
            },
            "33": {
                "line": 508,
                "type": "if",
                "locations": [
                    {
                        "start": {
                            "line": 508,
                            "column": 8
                        },
                        "end": {
                            "line": 508,
                            "column": 8
                        }
                    },
                    {
                        "start": {
                            "line": 508,
                            "column": 8
                        },
                        "end": {
                            "line": 508,
                            "column": 8
                        }
                    }
                ]
            }
        },
        "code": [
            "(function () { YUI.add('lazy-model-list', function (Y, NAME) {",
            "",
            "/**",
            "Provides the LazyModelList class, which is a ModelList subclass that manages",
            "plain objects instead of fully instantiated model instances.",
            "",
            "@module app",
            "@submodule lazy-model-list",
            "@since 3.6.0",
            "**/",
            "",
            "/**",
            "LazyModelList is a subclass of ModelList that maintains a list of plain",
            "JavaScript objects rather than a list of Model instances. This makes it",
            "well-suited for managing large amounts of data (on the order of thousands of",
            "items) that would tend to bog down a vanilla ModelList.",
            "",
            "The API presented by LazyModelList is the same as that of ModelList, except that",
            "in every case where ModelList would provide a Model instance, LazyModelList",
            "provides a plain JavaScript object. LazyModelList also provides a `revive()`",
            "method that can convert the plain object at a given index into a full Model",
            "instance.",
            "",
            "Since the items stored in a LazyModelList are plain objects and not full Model",
            "instances, there are a few caveats to be aware of:",
            "",
            "  * Since items are plain objects and not Model instances, they contain",
            "    properties rather than Model attributes. To retrieve a property, use",
            "    `item.foo` rather than `item.get('foo')`. To set a property, use",
            "    `item.foo = 'bar'` rather than `item.set('foo', 'bar')`.",
            "",
            "  * Model attribute getters and setters aren't supported, since items in the",
            "    LazyModelList are stored and manipulated as plain objects with simple",
            "    properties rather than YUI attributes.",
            "",
            "  * Changes made to the plain object version of an item will not trigger or",
            "    bubble up Model `change` events. However, once an item is revived into a",
            "    full Model using the `revive()` method, changes to that Model instance",
            "    will trigger and bubble change events as expected.",
            "",
            "  * Custom `idAttribute` fields are not supported.",
            "",
            "  * `id` and `clientId` properties _are_ supported. If an item doesn't have a",
            "    `clientId` property, one will be generated automatically when the item is",
            "    added to a LazyModelList.",
            "",
            "LazyModelList is generally much more memory efficient than ModelList when",
            "managing large numbers of items, and adding/removing items is significantly",
            "faster. However, the tradeoff is that LazyModelList is only well-suited for",
            "storing very simple items without complex attributes, and consumers must",
            "explicitly revive items into full Model instances as needed (this is not done",
            "transparently for performance reasons).",
            "",
            "@class LazyModelList",
            "@extends ModelList",
            "@constructor",
            "@since 3.6.0",
            "**/",
            "",
            "var AttrProto = Y.Attribute.prototype,",
            "    GlobalEnv = YUI.namespace('Env.Model'),",
            "    Lang      = Y.Lang,",
            "    YArray    = Y.Array,",
            "",
            "    EVT_ADD   = 'add',",
            "    EVT_ERROR = 'error',",
            "    EVT_RESET = 'reset';",
            "",
            "Y.LazyModelList = Y.Base.create('lazyModelList', Y.ModelList, [], {",
            "    // -- Lifecycle ------------------------------------------------------------",
            "    initializer: function () {",
            "        this.after('*:change', this._afterModelChange);",
            "    },",
            "",
            "    // -- Public Methods -------------------------------------------------------",
            "",
            "    /**",
            "    Deletes the specified model from the model cache to release memory. The",
            "    model won't be destroyed or removed from the list, just freed from the",
            "    cache; it can still be instantiated again using `revive()`.",
            "",
            "    If no model or model index is specified, all cached models in this list will",
            "    be freed.",
            "",
            "    Note: Specifying an index is faster than specifying a model instance, since",
            "    the latter requires an `indexOf()` call.",
            "",
            "    @method free",
            "    @param {Model|Number} [model] Model or index of the model to free. If not",
            "        specified, all instantiated models in this list will be freed.",
            "    @chainable",
            "    @see revive()",
            "    **/",
            "    free: function (model) {",
            "        var index;",
            "",
            "        if (model) {",
            "            index = Lang.isNumber(model) ? model : this.indexOf(model);",
            "",
            "            if (index >= 0) {",
            "                // We don't detach the model because it's not being removed from",
            "                // the list, just being freed from memory. If something else",
            "                // still holds a reference to it, it may still bubble events to",
            "                // the list, but that's okay.",
            "                //",
            "                // `this._models` is a sparse array, which ensures that the",
            "                // indices of models and items match even if we don't have model",
            "                // instances for all items.",
            "                delete this._models[index];",
            "            }",
            "        } else {",
            "            this._models = [];",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#get() to return a map of property values rather than",
            "    performing attribute lookups.",
            "",
            "    @method get",
            "    @param {String} name Property name.",
            "    @return {String[]} Array of property values.",
            "    @see ModelList.get()",
            "    **/",
            "    get: function (name) {",
            "        if (this.attrAdded(name)) {",
            "            return AttrProto.get.apply(this, arguments);",
            "        }",
            "",
            "        return YArray.map(this._items, function (item) {",
            "            return item[name];",
            "        });",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#getAsHTML() to return a map of HTML-escaped property",
            "    values rather than performing attribute lookups.",
            "",
            "    @method getAsHTML",
            "    @param {String} name Property name.",
            "    @return {String[]} Array of HTML-escaped property values.",
            "    @see ModelList.getAsHTML()",
            "    **/",
            "    getAsHTML: function (name) {",
            "        if (this.attrAdded(name)) {",
            "            return Y.Escape.html(AttrProto.get.apply(this, arguments));",
            "        }",
            "",
            "        return YArray.map(this._items, function (item) {",
            "            return Y.Escape.html(item[name]);",
            "        });",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#getAsURL() to return a map of URL-encoded property",
            "    values rather than performing attribute lookups.",
            "",
            "    @method getAsURL",
            "    @param {String} name Property name.",
            "    @return {String[]} Array of URL-encoded property values.",
            "    @see ModelList.getAsURL()",
            "    **/",
            "    getAsURL: function (name) {",
            "        if (this.attrAdded(name)) {",
            "            return encodeURIComponent(AttrProto.get.apply(this, arguments));",
            "        }",
            "",
            "        return YArray.map(this._items, function (item) {",
            "            return encodeURIComponent(item[name]);",
            "        });",
            "    },",
            "",
            "    /**",
            "    Returns the index of the given object or Model instance in this",
            "    LazyModelList.",
            "",
            "    @method indexOf",
            "    @param {Model|Object} needle The object or Model instance to search for.",
            "    @return {Number} Item index, or `-1` if not found.",
            "    @see ModelList.indexOf()",
            "    **/",
            "    indexOf: function (model) {",
            "        return YArray.indexOf(model && model._isYUIModel ?",
            "            this._models : this._items, model);",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#reset() to work with plain objects.",
            "",
            "    @method reset",
            "    @param {Object[]|Model[]|ModelList} [models] Models to add.",
            "    @param {Object} [options] Options.",
            "    @chainable",
            "    @see ModelList.reset()",
            "    **/",
            "    reset: function (items, options) {",
            "        items || (items  = []);",
            "        options || (options = {});",
            "",
            "        var facade = Y.merge({src: 'reset'}, options);",
            "",
            "        // Convert `items` into an array of plain objects, since we don't want",
            "        // model instances.",
            "        items = items._isYUIModelList ? items.map(this._modelToObject) :",
            "            YArray.map(items, this._modelToObject);",
            "",
            "        facade.models = items;",
            "",
            "        if (options.silent) {",
            "            this._defResetFn(facade);",
            "        } else {",
            "            // Sort the items before firing the reset event.",
            "            if (this.comparator) {",
            "                items.sort(Y.bind(this._sort, this));",
            "            }",
            "",
            "            this.fire(EVT_RESET, facade);",
            "        }",
            "",
            "        return this;",
            "    },",
            "",
            "    /**",
            "    Revives an item (or all items) into a full Model instance. The _item_",
            "    argument may be the index of an object in this list, an actual object (which",
            "    must exist in the list), or may be omitted to revive all items in the list.",
            "",
            "    Once revived, Model instances are attached to this list and cached so that",
            "    reviving them in the future doesn't require another Model instantiation. Use",
            "    the `free()` method to explicitly uncache and detach a previously revived",
            "    Model instance.",
            "",
            "    Note: Specifying an index rather than an object will be faster, since",
            "    objects require an `indexOf()` lookup in order to retrieve the index.",
            "",
            "    @method revive",
            "    @param {Number|Object} [item] Index of the object to revive, or the object",
            "        itself. If an object, that object must exist in this list. If not",
            "        specified, all items in the list will be revived and an array of models",
            "        will be returned.",
            "    @return {Model|Model[]|null} Revived Model instance, array of revived Model",
            "        instances, or `null` if the given index or object was not found in this",
            "        list.",
            "    @see free()",
            "    **/",
            "    revive: function (item) {",
            "        var i, len, models;",
            "",
            "        if (item || item === 0) {",
            "            return this._revive(Lang.isNumber(item) ? item :",
            "                this.indexOf(item));",
            "        } else {",
            "            models = [];",
            "",
            "            for (i = 0, len = this._items.length; i < len; i++) {",
            "                models.push(this._revive(i));",
            "            }",
            "",
            "            return models;",
            "        }",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#toJSON() to use toArray() instead, since it's more",
            "    efficient for LazyModelList.",
            "",
            "    @method toJSON",
            "    @return {Object[]} Array of objects.",
            "    @see ModelList.toJSON()",
            "    **/",
            "    toJSON: function () {",
            "        return this.toArray();",
            "    },",
            "",
            "    // -- Protected Methods ----------------------------------------------------",
            "",
            "    /**",
            "    Overrides ModelList#add() to work with plain objects.",
            "",
            "    @method _add",
            "    @param {Object|Model} item Object or model to add.",
            "    @param {Object} [options] Options.",
            "    @return {Object} Added item.",
            "    @protected",
            "    @see ModelList._add()",
            "    **/",
            "    _add: function (item, options) {",
            "        var facade;",
            "",
            "        options || (options = {});",
            "",
            "        // If the item is a model instance, convert it to a plain object.",
            "        item = this._modelToObject(item);",
            "",
            "        // Ensure that the item has a clientId.",
            "        if (!('clientId' in item)) {",
            "            item.clientId = this._generateClientId();",
            "        }",
            "",
            "        if (this._isInList(item)) {",
            "            this.fire(EVT_ERROR, {",
            "                error: 'Model is already in the list.',",
            "                model: item,",
            "                src  : 'add'",
            "            });",
            "",
            "            return;",
            "        }",
            "",
            "        facade = Y.merge(options, {",
            "            index: 'index' in options ? options.index : this._findIndex(item),",
            "            model: item",
            "        });",
            "",
            "        options.silent ? this._defAddFn(facade) : this.fire(EVT_ADD, facade);",
            "",
            "        return item;",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#clear() to support `this._models`.",
            "",
            "    @method _clear",
            "    @protected",
            "    @see ModelList.clear()",
            "    **/",
            "    _clear: function () {",
            "        YArray.each(this._models, this._detachList, this);",
            "",
            "        this._clientIdMap = {};",
            "        this._idMap       = {};",
            "        this._items       = [];",
            "        this._models      = [];",
            "    },",
            "",
            "    /**",
            "    Generates an ad-hoc clientId for a non-instantiated Model.",
            "",
            "    @method _generateClientId",
            "    @return {String} Unique clientId.",
            "    @protected",
            "    **/",
            "    _generateClientId: function () {",
            "        GlobalEnv.lastId || (GlobalEnv.lastId = 0);",
            "        return this.model.NAME + '_' + (GlobalEnv.lastId += 1);",
            "    },",
            "",
            "    /**",
            "    Returns `true` if the given item is in this list, `false` otherwise.",
            "",
            "    @method _isInList",
            "    @param {Object} item Plain object item.",
            "    @return {Boolean} `true` if the item is in this list, `false` otherwise.",
            "    @protected",
            "    **/",
            "    _isInList: function (item) {",
            "        return !!(('clientId' in item && this._clientIdMap[item.clientId]) ||",
            "                ('id' in item && this._idMap[item.id]));",
            "    },",
            "",
            "    /**",
            "    Converts a Model instance into a plain object. If _model_ is not a Model",
            "    instance, it will be returned as is.",
            "",
            "    This method differs from Model#toJSON() in that it doesn't delete the",
            "    `clientId` property.",
            "",
            "    @method _modelToObject",
            "    @param {Model|Object} model Model instance to convert.",
            "    @return {Object} Plain object.",
            "    @protected",
            "    **/",
            "    _modelToObject: function (model) {",
            "        if (model._isYUIModel) {",
            "            model = model.getAttrs();",
            "            delete model.destroyed;",
            "            delete model.initialized;",
            "        }",
            "",
            "        return model;",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#_remove() to convert Model instances to indices",
            "    before removing to ensure consistency in the `remove` event facade.",
            "",
            "    @method _remove",
            "    @param {Object|Model} item Object or model to remove.",
            "    @param {Object} [options] Options.",
            "    @return {Object} Removed object.",
            "    @protected",
            "    **/",
            "    _remove: function (item, options) {",
            "        // If the given item is a model instance, turn it into an index before",
            "        // calling the parent _remove method, since we only want to deal with",
            "        // the plain object version.",
            "        if (item._isYUIModel) {",
            "            item = this.indexOf(item);",
            "        }",
            "",
            "        return Y.ModelList.prototype._remove.call(this, item, options);",
            "    },",
            "",
            "    /**",
            "    Revives a single model at the specified index and returns it. This is the",
            "    underlying implementation for `revive()`.",
            "",
            "    @method _revive",
            "    @param {Number} index Index of the item to revive.",
            "    @return {Model} Revived model.",
            "    @protected",
            "    **/",
            "    _revive: function (index) {",
            "        var item, model;",
            "",
            "        if (index < 0) {",
            "            return null;",
            "        }",
            "",
            "        item = this._items[index];",
            "",
            "        if (!item) {",
            "            return null;",
            "        }",
            "",
            "        model = this._models[index];",
            "",
            "        if (!model) {",
            "            model = new this.model(item);",
            "",
            "            // The clientId attribute is read-only, but revived models should",
            "            // have the same clientId as the original object, so we need to set",
            "            // it manually.",
            "            model._set('clientId', item.clientId);",
            "",
            "            this._attachList(model);",
            "            this._models[index] = model;",
            "        }",
            "",
            "        return model;",
            "    },",
            "",
            "    // -- Event Handlers -------------------------------------------------------",
            "",
            "    /**",
            "    Handles `change` events on revived models and updates the original objects",
            "    with the changes.",
            "",
            "    @method _afterModelChange",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _afterModelChange: function (e) {",
            "        var changed = e.changed,",
            "            item    = this._clientIdMap[e.target.get('clientId')],",
            "            name;",
            "",
            "        if (item) {",
            "            for (name in changed) {",
            "                if (changed.hasOwnProperty(name)) {",
            "                    item[name] = changed[name].newVal;",
            "                }",
            "            }",
            "        }",
            "    },",
            "",
            "    // -- Default Event Handlers -----------------------------------------------",
            "",
            "    /**",
            "    Overrides ModelList#_defAddFn() to support plain objects.",
            "",
            "    @method _defAddFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defAddFn: function (e) {",
            "        var item = e.model;",
            "",
            "        this._clientIdMap[item.clientId] = item;",
            "",
            "        if (Lang.isValue(item.id)) {",
            "            this._idMap[item.id] = item;",
            "        }",
            "",
            "        this._items.splice(e.index, 0, item);",
            "    },",
            "",
            "    /**",
            "    Overrides ModelList#_defRemoveFn() to support plain objects.",
            "",
            "    @method _defRemoveFn",
            "    @param {EventFacade} e",
            "    @protected",
            "    **/",
            "    _defRemoveFn: function (e) {",
            "        var index = e.index,",
            "            item  = e.model,",
            "            model = this._models[index];",
            "",
            "        delete this._clientIdMap[item.clientId];",
            "",
            "        if ('id' in item) {",
            "            delete this._idMap[item.id];",
            "        }",
            "",
            "        if (model) {",
            "            this._detachList(model);",
            "        }",
            "",
            "        this._items.splice(index, 1);",
            "        this._models.splice(index, 1);",
            "    }",
            "});",
            "",
            "",
            "}, '@VERSION@', {\"requires\": [\"model-list\"]});",
            "",
            "}());"
        ],
        "l": {
            "1": 1,
            "60": 1,
            "69": 1,
            "72": 20,
            "95": 3,
            "97": 3,
            "98": 1,
            "100": 1,
            "109": 1,
            "112": 2,
            "115": 3,
            "128": 22,
            "129": 21,
            "132": 1,
            "133": 2,
            "147": 1,
            "148": 0,
            "151": 1,
            "152": 2,
            "166": 1,
            "167": 0,
            "170": 1,
            "171": 2,
            "185": 9,
            "199": 3,
            "200": 3,
            "202": 3,
            "206": 3,
            "209": 3,
            "211": 3,
            "212": 0,
            "215": 3,
            "216": 0,
            "219": 3,
            "222": 3,
            "249": 18,
            "251": 18,
            "252": 17,
            "255": 1,
            "257": 1,
            "258": 2,
            "261": 1,
            "274": 0,
            "290": 39,
            "292": 39,
            "295": 39,
            "298": 39,
            "299": 31,
            "302": 39,
            "303": 0,
            "309": 0,
            "312": 39,
            "317": 39,
            "319": 39,
            "330": 24,
            "332": 24,
            "333": 24,
            "334": 24,
            "335": 24,
            "346": 31,
            "347": 31,
            "359": 41,
            "376": 46,
            "377": 7,
            "378": 7,
            "379": 7,
            "382": 46,
            "399": 3,
            "400": 1,
            "403": 3,
            "416": 19,
            "418": 19,
            "419": 0,
            "422": 19,
            "424": 19,
            "425": 1,
            "428": 18,
            "430": 18,
            "431": 15,
            "436": 15,
            "438": 15,
            "439": 15,
            "442": 18,
            "456": 1,
            "460": 1,
            "461": 1,
            "462": 1,
            "463": 1,
            "479": 39,
            "481": 39,
            "483": 39,
            "484": 0,
            "487": 39,
            "498": 3,
            "502": 3,
            "504": 3,
            "505": 0,
            "508": 3,
            "509": 1,
            "512": 3,
            "513": 3
        }
    }
}