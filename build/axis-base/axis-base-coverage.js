if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/axis-base/axis-base.js']) {
   __coverage__['build/axis-base/axis-base.js'] = {"path":"build/axis-base/axis-base.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":21},"end":{"line":1,"column":40}}},"2":{"name":"Renderer","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":19}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":20},"end":{"line":39,"column":12}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":20},"end":{"line":45,"column":12}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":13},"end":{"line":79,"column":1}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":18},"end":{"line":95,"column":4}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":25},"end":{"line":102,"column":8}}},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":17},"end":{"line":123,"column":31}}},"9":{"name":"(anonymous_9)","line":152,"loc":{"start":{"line":152,"column":23},"end":{"line":153,"column":4}}},"10":{"name":"(anonymous_10)","line":197,"loc":{"start":{"line":197,"column":17},"end":{"line":198,"column":4}}},"11":{"name":"(anonymous_11)","line":212,"loc":{"start":{"line":212,"column":32},"end":{"line":213,"column":4}}},"12":{"name":"(anonymous_12)","line":239,"loc":{"start":{"line":239,"column":22},"end":{"line":239,"column":33}}},"13":{"name":"(anonymous_13)","line":314,"loc":{"start":{"line":314,"column":12},"end":{"line":315,"column":1}}},"14":{"name":"(anonymous_14)","line":328,"loc":{"start":{"line":328,"column":18},"end":{"line":329,"column":4}}},"15":{"name":"(anonymous_15)","line":348,"loc":{"start":{"line":348,"column":22},"end":{"line":349,"column":4}}},"16":{"name":"(anonymous_16)","line":370,"loc":{"start":{"line":370,"column":15},"end":{"line":371,"column":4}}},"17":{"name":"(anonymous_17)","line":388,"loc":{"start":{"line":388,"column":19},"end":{"line":389,"column":4}}},"18":{"name":"(anonymous_18)","line":430,"loc":{"start":{"line":430,"column":18},"end":{"line":431,"column":4}}},"19":{"name":"(anonymous_19)","line":467,"loc":{"start":{"line":467,"column":24},"end":{"line":468,"column":4}}},"20":{"name":"(anonymous_20)","line":484,"loc":{"start":{"line":484,"column":19},"end":{"line":485,"column":4}}},"21":{"name":"(anonymous_21)","line":502,"loc":{"start":{"line":502,"column":23},"end":{"line":503,"column":4}}},"22":{"name":"(anonymous_22)","line":517,"loc":{"start":{"line":517,"column":23},"end":{"line":518,"column":4}}},"23":{"name":"(anonymous_23)","line":536,"loc":{"start":{"line":536,"column":20},"end":{"line":537,"column":4}}},"24":{"name":"(anonymous_24)","line":560,"loc":{"start":{"line":560,"column":20},"end":{"line":561,"column":4}}},"25":{"name":"(anonymous_25)","line":573,"loc":{"start":{"line":573,"column":20},"end":{"line":574,"column":4}}},"26":{"name":"(anonymous_26)","line":590,"loc":{"start":{"line":590,"column":20},"end":{"line":591,"column":4}}},"27":{"name":"(anonymous_27)","line":603,"loc":{"start":{"line":603,"column":16},"end":{"line":604,"column":4}}},"28":{"name":"(anonymous_28)","line":615,"loc":{"start":{"line":615,"column":16},"end":{"line":616,"column":4}}},"29":{"name":"(anonymous_29)","line":632,"loc":{"start":{"line":632,"column":21},"end":{"line":632,"column":32}}},"30":{"name":"(anonymous_30)","line":646,"loc":{"start":{"line":646,"column":20},"end":{"line":647,"column":12}}},"31":{"name":"(anonymous_31)","line":697,"loc":{"start":{"line":697,"column":20},"end":{"line":698,"column":12}}},"32":{"name":"(anonymous_32)","line":711,"loc":{"start":{"line":711,"column":20},"end":{"line":712,"column":12}}},"33":{"name":"(anonymous_33)","line":725,"loc":{"start":{"line":725,"column":20},"end":{"line":726,"column":12}}},"34":{"name":"(anonymous_34)","line":757,"loc":{"start":{"line":757,"column":20},"end":{"line":758,"column":12}}},"35":{"name":"(anonymous_35)","line":814,"loc":{"start":{"line":814,"column":20},"end":{"line":815,"column":12}}},"36":{"name":"(anonymous_36)","line":831,"loc":{"start":{"line":831,"column":20},"end":{"line":832,"column":12}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":859,"column":112}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":20}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":21}},"4":{"start":{"line":29,"column":0},"end":{"line":57,"column":2}},"5":{"start":{"line":40,"column":16},"end":{"line":40,"column":72}},"6":{"start":{"line":41,"column":16},"end":{"line":41,"column":36}},"7":{"start":{"line":46,"column":16},"end":{"line":46,"column":52}},"8":{"start":{"line":58,"column":0},"end":{"line":58,"column":27}},"9":{"start":{"line":60,"column":0},"end":{"line":161,"column":2}},"10":{"start":{"line":80,"column":2},"end":{"line":80,"column":34}},"11":{"start":{"line":81,"column":8},"end":{"line":81,"column":52}},"12":{"start":{"line":96,"column":8},"end":{"line":99,"column":9}},"13":{"start":{"line":98,"column":12},"end":{"line":98,"column":19}},"14":{"start":{"line":100,"column":8},"end":{"line":100,"column":39}},"15":{"start":{"line":101,"column":8},"end":{"line":111,"column":17}},"16":{"start":{"line":103,"column":12},"end":{"line":110,"column":13}},"17":{"start":{"line":105,"column":16},"end":{"line":105,"column":66}},"18":{"start":{"line":109,"column":16},"end":{"line":109,"column":39}},"19":{"start":{"line":112,"column":8},"end":{"line":112,"column":25}},"20":{"start":{"line":124,"column":8},"end":{"line":126,"column":16}},"21":{"start":{"line":127,"column":8},"end":{"line":141,"column":9}},"22":{"start":{"line":129,"column":12},"end":{"line":140,"column":13}},"23":{"start":{"line":131,"column":16},"end":{"line":131,"column":31}},"24":{"start":{"line":132,"column":16},"end":{"line":139,"column":17}},"25":{"start":{"line":134,"column":20},"end":{"line":134,"column":56}},"26":{"start":{"line":138,"column":20},"end":{"line":138,"column":38}},"27":{"start":{"line":142,"column":8},"end":{"line":142,"column":22}},"28":{"start":{"line":154,"column":8},"end":{"line":159,"column":11}},"29":{"start":{"line":163,"column":0},"end":{"line":163,"column":33}},"30":{"start":{"line":164,"column":0},"end":{"line":164,"column":22}},"31":{"start":{"line":192,"column":0},"end":{"line":856,"column":3}},"32":{"start":{"line":199,"column":8},"end":{"line":199,"column":74}},"33":{"start":{"line":200,"column":8},"end":{"line":200,"column":74}},"34":{"start":{"line":201,"column":8},"end":{"line":201,"column":57}},"35":{"start":{"line":202,"column":8},"end":{"line":202,"column":74}},"36":{"start":{"line":214,"column":8},"end":{"line":216,"column":14}},"37":{"start":{"line":217,"column":8},"end":{"line":226,"column":9}},"38":{"start":{"line":219,"column":12},"end":{"line":225,"column":13}},"39":{"start":{"line":221,"column":16},"end":{"line":224,"column":17}},"40":{"start":{"line":223,"column":20},"end":{"line":223,"column":35}},"41":{"start":{"line":227,"column":8},"end":{"line":230,"column":9}},"42":{"start":{"line":229,"column":12},"end":{"line":229,"column":44}},"43":{"start":{"line":316,"column":8},"end":{"line":316,"column":32}},"44":{"start":{"line":330,"column":8},"end":{"line":333,"column":30}},"45":{"start":{"line":334,"column":8},"end":{"line":338,"column":9}},"46":{"start":{"line":336,"column":12},"end":{"line":336,"column":26}},"47":{"start":{"line":337,"column":12},"end":{"line":337,"column":35}},"48":{"start":{"line":339,"column":8},"end":{"line":339,"column":24}},"49":{"start":{"line":350,"column":2},"end":{"line":351,"column":14}},"50":{"start":{"line":352,"column":8},"end":{"line":352,"column":24}},"51":{"start":{"line":353,"column":8},"end":{"line":359,"column":9}},"52":{"start":{"line":355,"column":12},"end":{"line":358,"column":13}},"53":{"start":{"line":357,"column":16},"end":{"line":357,"column":56}},"54":{"start":{"line":360,"column":8},"end":{"line":360,"column":42}},"55":{"start":{"line":372,"column":8},"end":{"line":372,"column":36}},"56":{"start":{"line":373,"column":8},"end":{"line":377,"column":9}},"57":{"start":{"line":375,"column":12},"end":{"line":375,"column":31}},"58":{"start":{"line":376,"column":12},"end":{"line":376,"column":37}},"59":{"start":{"line":390,"column":8},"end":{"line":393,"column":16}},"60":{"start":{"line":394,"column":8},"end":{"line":417,"column":9}},"61":{"start":{"line":396,"column":12},"end":{"line":396,"column":29}},"62":{"start":{"line":397,"column":12},"end":{"line":397,"column":23}},"63":{"start":{"line":398,"column":12},"end":{"line":408,"column":13}},"64":{"start":{"line":400,"column":16},"end":{"line":407,"column":17}},"65":{"start":{"line":402,"column":20},"end":{"line":402,"column":64}},"66":{"start":{"line":406,"column":20},"end":{"line":406,"column":36}},"67":{"start":{"line":412,"column":12},"end":{"line":416,"column":13}},"68":{"start":{"line":414,"column":16},"end":{"line":414,"column":41}},"69":{"start":{"line":415,"column":16},"end":{"line":415,"column":42}},"70":{"start":{"line":418,"column":8},"end":{"line":418,"column":21}},"71":{"start":{"line":432,"column":8},"end":{"line":436,"column":36}},"72":{"start":{"line":437,"column":8},"end":{"line":457,"column":9}},"73":{"start":{"line":439,"column":12},"end":{"line":439,"column":21}},"74":{"start":{"line":440,"column":12},"end":{"line":440,"column":31}},"75":{"start":{"line":441,"column":12},"end":{"line":448,"column":13}},"76":{"start":{"line":443,"column":16},"end":{"line":443,"column":31}},"77":{"start":{"line":444,"column":16},"end":{"line":447,"column":17}},"78":{"start":{"line":446,"column":20},"end":{"line":446,"column":54}},"79":{"start":{"line":450,"column":13},"end":{"line":457,"column":9}},"80":{"start":{"line":452,"column":12},"end":{"line":452,"column":30}},"81":{"start":{"line":456,"column":12},"end":{"line":456,"column":23}},"82":{"start":{"line":458,"column":8},"end":{"line":458,"column":19}},"83":{"start":{"line":469,"column":8},"end":{"line":470,"column":53}},"84":{"start":{"line":471,"column":8},"end":{"line":471,"column":32}},"85":{"start":{"line":472,"column":8},"end":{"line":472,"column":21}},"86":{"start":{"line":486,"column":8},"end":{"line":486,"column":23}},"87":{"start":{"line":487,"column":8},"end":{"line":491,"column":9}},"88":{"start":{"line":488,"column":12},"end":{"line":488,"column":34}},"89":{"start":{"line":490,"column":12},"end":{"line":490,"column":27}},"90":{"start":{"line":492,"column":8},"end":{"line":492,"column":26}},"91":{"start":{"line":504,"column":8},"end":{"line":504,"column":32}},"92":{"start":{"line":505,"column":8},"end":{"line":505,"column":41}},"93":{"start":{"line":506,"column":8},"end":{"line":506,"column":32}},"94":{"start":{"line":519,"column":8},"end":{"line":525,"column":10}},"95":{"start":{"line":526,"column":8},"end":{"line":526,"column":26}},"96":{"start":{"line":538,"column":8},"end":{"line":539,"column":38}},"97":{"start":{"line":542,"column":8},"end":{"line":545,"column":9}},"98":{"start":{"line":544,"column":12},"end":{"line":544,"column":21}},"99":{"start":{"line":546,"column":8},"end":{"line":549,"column":9}},"100":{"start":{"line":548,"column":12},"end":{"line":548,"column":35}},"101":{"start":{"line":550,"column":8},"end":{"line":550,"column":31}},"102":{"start":{"line":562,"column":8},"end":{"line":562,"column":45}},"103":{"start":{"line":563,"column":8},"end":{"line":563,"column":21}},"104":{"start":{"line":575,"column":8},"end":{"line":575,"column":42}},"105":{"start":{"line":576,"column":8},"end":{"line":579,"column":9}},"106":{"start":{"line":578,"column":12},"end":{"line":578,"column":35}},"107":{"start":{"line":580,"column":8},"end":{"line":580,"column":31}},"108":{"start":{"line":592,"column":8},"end":{"line":592,"column":43}},"109":{"start":{"line":593,"column":8},"end":{"line":593,"column":19}},"110":{"start":{"line":605,"column":8},"end":{"line":605,"column":49}},"111":{"start":{"line":617,"column":8},"end":{"line":617,"column":49}},"112":{"start":{"line":633,"column":16},"end":{"line":633,"column":40}},"113":{"start":{"line":648,"column":16},"end":{"line":651,"column":52}},"114":{"start":{"line":652,"column":16},"end":{"line":675,"column":17}},"115":{"start":{"line":654,"column":20},"end":{"line":654,"column":37}},"116":{"start":{"line":655,"column":20},"end":{"line":658,"column":21}},"117":{"start":{"line":657,"column":24},"end":{"line":657,"column":71}},"118":{"start":{"line":661,"column":21},"end":{"line":675,"column":17}},"119":{"start":{"line":663,"column":20},"end":{"line":663,"column":44}},"120":{"start":{"line":664,"column":20},"end":{"line":664,"column":61}},"121":{"start":{"line":668,"column":20},"end":{"line":674,"column":21}},"122":{"start":{"line":670,"column":24},"end":{"line":673,"column":25}},"123":{"start":{"line":672,"column":28},"end":{"line":672,"column":65}},"124":{"start":{"line":676,"column":16},"end":{"line":676,"column":49}},"125":{"start":{"line":677,"column":16},"end":{"line":677,"column":28}},"126":{"start":{"line":699,"column":16},"end":{"line":699,"column":34}},"127":{"start":{"line":713,"column":16},"end":{"line":713,"column":29}},"128":{"start":{"line":727,"column":16},"end":{"line":730,"column":17}},"129":{"start":{"line":729,"column":20},"end":{"line":729,"column":44}},"130":{"start":{"line":731,"column":16},"end":{"line":731,"column":41}},"131":{"start":{"line":759,"column":16},"end":{"line":762,"column":17}},"132":{"start":{"line":761,"column":20},"end":{"line":761,"column":44}},"133":{"start":{"line":763,"column":16},"end":{"line":763,"column":41}},"134":{"start":{"line":816,"column":16},"end":{"line":819,"column":17}},"135":{"start":{"line":818,"column":20},"end":{"line":818,"column":44}},"136":{"start":{"line":820,"column":16},"end":{"line":820,"column":34}},"137":{"start":{"line":833,"column":16},"end":{"line":835,"column":29}},"138":{"start":{"line":836,"column":16},"end":{"line":842,"column":17}},"139":{"start":{"line":838,"column":20},"end":{"line":841,"column":21}},"140":{"start":{"line":840,"column":24},"end":{"line":840,"column":36}},"141":{"start":{"line":843,"column":16},"end":{"line":843,"column":27}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":31},"end":{"line":40,"column":43}},{"start":{"line":40,"column":47},"end":{"line":40,"column":71}}]},"2":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"3":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]},"4":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":15},"end":{"line":103,"column":36}},{"start":{"line":103,"column":40},"end":{"line":103,"column":62}},{"start":{"line":103,"column":66},"end":{"line":103,"column":91}},{"start":{"line":103,"column":95},"end":{"line":103,"column":117}}]},"5":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":12}},{"start":{"line":129,"column":12},"end":{"line":129,"column":12}}]},"6":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":132,"column":16}},{"start":{"line":132,"column":16},"end":{"line":132,"column":16}}]},"7":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":19},"end":{"line":132,"column":39}},{"start":{"line":132,"column":43},"end":{"line":132,"column":66}},{"start":{"line":132,"column":70},"end":{"line":132,"column":90}}]},"8":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":8}},{"start":{"line":217,"column":8},"end":{"line":217,"column":8}}]},"9":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":16},"end":{"line":221,"column":16}},{"start":{"line":221,"column":16},"end":{"line":221,"column":16}}]},"10":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":8}},{"start":{"line":227,"column":8},"end":{"line":227,"column":8}}]},"11":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":11},"end":{"line":227,"column":24}},{"start":{"line":227,"column":28},"end":{"line":227,"column":48}}]},"12":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":12},"end":{"line":355,"column":12}},{"start":{"line":355,"column":12},"end":{"line":355,"column":12}}]},"13":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":8},"end":{"line":373,"column":8}},{"start":{"line":373,"column":8},"end":{"line":373,"column":8}}]},"14":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":8},"end":{"line":394,"column":8}},{"start":{"line":394,"column":8},"end":{"line":394,"column":8}}]},"15":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":16},"end":{"line":400,"column":16}},{"start":{"line":400,"column":16},"end":{"line":400,"column":16}}]},"16":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":19},"end":{"line":400,"column":31}},{"start":{"line":400,"column":35},"end":{"line":400,"column":83}}]},"17":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":12},"end":{"line":412,"column":12}},{"start":{"line":412,"column":12},"end":{"line":412,"column":12}}]},"18":{"line":412,"type":"binary-expr","locations":[{"start":{"line":412,"column":15},"end":{"line":412,"column":24}},{"start":{"line":412,"column":28},"end":{"line":412,"column":73}}]},"19":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":8},"end":{"line":437,"column":8}},{"start":{"line":437,"column":8},"end":{"line":437,"column":8}}]},"20":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":16},"end":{"line":444,"column":16}},{"start":{"line":444,"column":16},"end":{"line":444,"column":16}}]},"21":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":13},"end":{"line":450,"column":13}},{"start":{"line":450,"column":13},"end":{"line":450,"column":13}}]},"22":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":8},"end":{"line":487,"column":8}},{"start":{"line":487,"column":8},"end":{"line":487,"column":8}}]},"23":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":8},"end":{"line":542,"column":8}},{"start":{"line":542,"column":8},"end":{"line":542,"column":8}}]},"24":{"line":542,"type":"binary-expr","locations":[{"start":{"line":542,"column":11},"end":{"line":542,"column":20}},{"start":{"line":542,"column":24},"end":{"line":542,"column":33}}]},"25":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":8},"end":{"line":546,"column":8}},{"start":{"line":546,"column":8},"end":{"line":546,"column":8}}]},"26":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":8},"end":{"line":576,"column":8}},{"start":{"line":576,"column":8},"end":{"line":576,"column":8}}]},"27":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":16},"end":{"line":652,"column":16}},{"start":{"line":652,"column":16},"end":{"line":652,"column":16}}]},"28":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":21},"end":{"line":661,"column":21}},{"start":{"line":661,"column":21},"end":{"line":661,"column":21}}]},"29":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":24},"end":{"line":670,"column":24}},{"start":{"line":670,"column":24},"end":{"line":670,"column":24}}]},"30":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":16},"end":{"line":727,"column":16}},{"start":{"line":727,"column":16},"end":{"line":727,"column":16}}]},"31":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":16},"end":{"line":759,"column":16}},{"start":{"line":759,"column":16},"end":{"line":759,"column":16}}]},"32":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":16},"end":{"line":816,"column":16}},{"start":{"line":816,"column":16},"end":{"line":816,"column":16}}]},"33":{"line":816,"type":"binary-expr","locations":[{"start":{"line":816,"column":19},"end":{"line":816,"column":30}},{"start":{"line":816,"column":34},"end":{"line":816,"column":59}}]},"34":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":20},"end":{"line":838,"column":20}},{"start":{"line":838,"column":20},"end":{"line":838,"column":20}}]}},"code":["(function () { YUI.add('axis-base', function (Y, NAME) {","","/**"," * The Charts widget provides an api for displaying data"," * graphically."," *"," * @module charts"," * @main charts"," */","","/**"," * Provides functionality for the handling of axis data in a chart."," *"," * @module charts"," * @submodule axis-base"," */","var Y_Lang = Y.Lang;","","/**"," * The Renderer class is a base class for chart components that use the `styles`"," * attribute."," *"," * @module charts"," * @class Renderer"," * @constructor"," */","function Renderer(){}","","Renderer.ATTRS = {","        /**","         * Style properties for class","         *","         * @attribute styles","         * @type Object","         */","        styles:","        {","            getter: function()","            {","                this._styles = this._styles || this._getDefaultStyles();","                return this._styles;","            },","","            setter: function(val)","            {","                this._styles = this._setStyles(val);","            }","        },","","        /**","         * The graphic in which drawings will be rendered.","         *","         * @attribute graphic","         * @type Graphic","         */","        graphic: {}","};","Renderer.NAME = \"renderer\";","","Renderer.prototype = {","    /**","     * Storage for `styles` attribute.","     *","     * @property _styles","     * @type Object","     * @private","     */","\t_styles: null,","","    /**","     * Method used by `styles` setter.","     *","     * @method _setStyles","     * @param {Object} newStyles Hash of properties to update.","     * @return Object","     * @protected","     */","\t_setStyles: function(newstyles)","\t{","\t\tvar styles = this.get(\"styles\");","        return this._mergeStyles(newstyles, styles);","\t},","","    /**","     * Merges to object literals so that only specified properties are","     * overwritten.","     *","     * @method _mergeStyles","     * @param {Object} a Hash of new styles","     * @param {Object} b Hash of original styles","     * @return Object","     * @protected","     */","    _mergeStyles: function(a, b)","    {","        if(!b)","        {","            b = {};","        }","        var newstyles = Y.merge(b, {});","        Y.Object.each(a, function(value, key)","        {","            if(b.hasOwnProperty(key) && Y_Lang.isObject(value) && !Y_Lang.isFunction(value) && !Y_Lang.isArray(value))","            {","                newstyles[key] = this._mergeStyles(value, b[key]);","            }","            else","            {","                newstyles[key] = value;","            }","        }, this);","        return newstyles;","    },","","    /**","     * Copies an object literal.","     *","     * @method _copyObject","     * @param {Object} obj Object literal to be copied.","     * @return Object","     * @private","     */","    _copyObject: function(obj) {","        var newObj = {},","            key,","            val;","        for(key in obj)","        {","            if(obj.hasOwnProperty(key))","            {","                val = obj[key];","                if(Y_Lang.isObject(val) && !Y_Lang.isFunction(val) && !Y_Lang.isArray(val))","                {","                    newObj[key] = this._copyObject(val);","                }","                else","                {","                    newObj[key] = val;","                }","            }","        }","        return newObj;","    },","","    /**","     * Gets the default value for the `styles` attribute.","     *","     * @method _getDefaultStyles","     * @return Object","     * @protected","     */","    _getDefaultStyles: function()","    {","        return {padding:{","            top:0,","            right: 0,","            bottom: 0,","            left: 0","        }};","    }","};","","Y.augment(Renderer, Y.Attribute);","Y.Renderer = Renderer;","","/**"," * The axis-base submodule contains functionality for the handling of axis data in a chart."," *"," * @module charts"," * @submodule axis-base"," */","/**"," * An abstract class that provides the core functionality used by the following classes:"," * <ul>"," *      <li>{{#crossLink \"CategoryAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"NumericAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"StackedAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"TimeAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"CategoryAxis\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"NumericAxis\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"StackedAxis\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"TimeAxis\"}}{{/crossLink}}</li>"," *  </ul>"," *"," * @class AxisBase"," * @constructor"," * @extends Base"," * @uses Renderer"," * @param {Object} config (optional) Configuration parameters."," * @submodule axis-base"," */","Y.AxisBase = Y.Base.create(\"axisBase\", Y.Base, [Y.Renderer], {","    /**","     * @method initializer","     * @private","     */","    initializer: function()","    {","        this.after(\"minimumChange\", Y.bind(this._keyChangeHandler, this));","        this.after(\"maximumChange\", Y.bind(this._keyChangeHandler, this));","        this.after(\"keysChange\", this._keyChangeHandler);","        this.after(\"dataProviderChange\", this._dataProviderChangeHandler);","    },","","    /**","     * Handles changes to `dataProvider`.","     *","     * @method _dataProviderChangeHandler","     * @param {Object} e Event object.","     * @private","     */","    _dataProviderChangeHandler: function()","    {","        var keyCollection = this.get(\"keyCollection\").concat(),","            keys = this.get(\"keys\"),","            i;","        if(keys)","        {","            for(i in keys)","            {","                if(keys.hasOwnProperty(i))","                {","                    delete keys[i];","                }","            }","        }","        if(keyCollection && keyCollection.length)","        {","            this.set(\"keys\", keyCollection);","        }","    },","","    /**","     * Calculates the maximum and minimum values for the `Data`.","     *","     * @method _updateMinAndMax","     * @private","     */","    _updateMinAndMax: function() {","    },","","    /**","     * Constant used to generate unique id.","     *","     * @property GUID","     * @type String","     * @private","     */","    GUID: \"yuibaseaxis\",","","    /**","     * Type of data used in `Axis`.","     *","     * @property _type","     * @type String","     * @readOnly","     * @private","     */","    _type: null,","","    /**","     * Storage for `setMaximum` attribute.","     *","     * @property _setMaximum","     * @type Object","     * @private","     */","    _setMaximum: null,","","    /**","     * Storage for `setMinimum` attribute.","     *","     * @property _setMinimum","     * @type Object","     * @private","     */","    _setMinimum: null,","","    /**","     * Reference to data array.","     *","     * @property _data","     * @type Array","     * @private","     */","    _data: null,","","    /**","     * Indicates whether the all data is up to date.","     *","     * @property _updateTotalDataFlag","     * @type Boolean","     * @private","     */","    _updateTotalDataFlag: true,","","    /**","     * Storage for `dataReady` attribute.","     *","     * @property _dataReady","     * @type Boolean","     * @readOnly","     * @private","     */","    _dataReady: false,","","    /**","     * Adds an array to the key hash.","     *","     * @method addKey","     * @param value Indicates what key to use in retrieving","     * the array.","     */","    addKey: function (value)","\t{","        this.set(\"keys\", value);","\t},","","    /**","     * Gets an array of values based on a key.","     *","     * @method _getKeyArray","     * @param {String} key Value key associated with the data array.","     * @param {Array} data Array in which the data resides.","     * @return Array","     * @private","     */","    _getKeyArray: function(key, data)","    {","        var i = 0,","            obj,","            keyArray = [],","            len = data.length;","        for(; i < len; ++i)","        {","            obj = data[i];","            keyArray[i] = obj[key];","        }","        return keyArray;","    },","","    /**","     * Updates the total data array.","     *","     * @method _updateTotalData","     * @private","     */","    _updateTotalData: function()","    {","\t\tvar keys = this.get(\"keys\"),","            i;","        this._data = [];","        for(i in keys)","        {","            if(keys.hasOwnProperty(i))","            {","                this._data = this._data.concat(keys[i]);","            }","        }","        this._updateTotalDataFlag = false;","    },","","    /**","     * Removes an array from the key hash.","     *","     * @method removeKey","     * @param {String} value Indicates what key to use in removing from","     * the hash.","     */","    removeKey: function(value)","    {","        var keys = this.get(\"keys\");","        if(keys.hasOwnProperty(value))","        {","            delete keys[value];","            this._keyChangeHandler();","        }","    },","","    /**","     * Returns a value based of a key value and an index.","     *","     * @method getKeyValueAt","     * @param {String} key value used to look up the correct array","     * @param {Number} index within the array","     * @return Number","     */","    getKeyValueAt: function(key, index)","    {","        var value = NaN,","            keys = this.get(\"keys\"),","            i,","            len;","        if(Y.Lang.isArray(key))","        {","            len = key.length;","            value = [];","            for(i = 0; i < len; i = i + 1)","            {","                if(keys[key[i]] && Y_Lang.isNumber(parseFloat(keys[key[i]][index])))","                {","                    value.push(parseFloat(keys[key[i]][index]));","                }","                else","                {","                    value.push(NaN);","                }","            }","        }","        else","        {","            if(keys[key] && Y_Lang.isNumber(parseFloat(keys[key][index])))","            {","                value = keys[key][index];","                value = parseFloat(value);","            }","        }","        return value;","    },","","    /**","     * Returns values based on key identifiers. When a string is passed as an argument, an array of values is returned.","     * When an array of keys is passed as an argument, an object literal with an array of values mapped to each key is","     * returned.","     *","     * @method getDataByKey","     * @param {String|Array} value value used to identify the array","     * @return Array|Object","     */","    getDataByKey: function (value)","    {","        var obj,","            i,","            len,","            key,","            keys = this.get(\"keys\");","        if(Y_Lang.isArray(value))","        {","            obj = {};","            len = value.length;","            for(i = 0; i < len; i = i + 1)","            {","                key = value[i];","                if(keys[key])","                {","                    obj[key] = this.getDataByKey(key);","                }","            }","        }","        else if(keys[value])","        {","            obj = keys[value];","        }","        else","        {","            obj = null;","        }","        return obj;","    },","","    /**","     * Returns the total number of majorUnits that will appear on an axis.","     *","     * @method getTotalMajorUnits","     * @return Number","     */","    getTotalMajorUnits: function()","    {","        var units,","            majorUnit = this.get(\"styles\").majorUnit;","        units = majorUnit.count;","        return units;","    },","","    /**","     * Gets the distance that the first and last ticks are offset from there respective","     * edges.","     *","     * @method getEdgeOffset","     * @param {Number} ct Number of ticks on the axis.","     * @param {Number} l Length (in pixels) of the axis.","     * @return Number","     */","    getEdgeOffset: function(ct, l)","    {","        var edgeOffset;","        if(this.get(\"calculateEdgeOffset\")) {","            edgeOffset = (l/ct)/2;","        } else {","            edgeOffset = 0;","        }","        return edgeOffset;","    },","","    /**","     * Updates the `Axis` after a change in keys.","     *","     * @method _keyChangeHandler","     * @param {Object} e Event object.","     * @private","     */","    _keyChangeHandler: function()","    {","        this._updateMinAndMax();","        this._updateTotalDataFlag = true;","        this.fire(\"dataUpdate\");","    },","","    /**","     * Gets the default value for the `styles` attribute. Overrides","     * base implementation.","     *","     * @method _getDefaultStyles","     * @return Object","     * @protected","     */","    _getDefaultStyles: function()","    {","        var axisstyles = {","            majorUnit: {","                determinant:\"count\",","                count:11,","                distance:75","            }","        };","        return axisstyles;","    },","","    /**","     * Getter method for maximum attribute.","     *","     * @method _maximumGetter","     * @return Number","     * @private","     */","    _maximumGetter: function ()","    {","        var max = this.get(\"dataMaximum\"),","            min = this.get(\"minimum\");","        //If all values are zero, force a range so that the Axis and related series","        //will still render.","        if(min === 0 && max === 0)","        {","            max = 10;","        }","        if(Y_Lang.isNumber(this._setMaximum))","        {","            max = this._setMaximum;","        }","        return parseFloat(max);","    },","","    /**","     * Setter method for maximum attribute.","     *","     * @method _maximumSetter","     * @param {Object} value","     * @private","     */","    _maximumSetter: function (value)","    {","        this._setMaximum = parseFloat(value);","        return value;","    },","","    /**","     * Getter method for minimum attribute.","     *","     * @method _minimumGetter","     * @return Number","     * @private","     */","    _minimumGetter: function ()","    {","        var min = this.get(\"dataMinimum\");","        if(Y_Lang.isNumber(this._setMinimum))","        {","            min = this._setMinimum;","        }","        return parseFloat(min);","    },","","    /**","     * Setter method for minimum attribute.","     *","     * @method _minimumSetter","     * @param {Object} value","     * @private","     */","    _minimumSetter: function(val)","    {","        this._setMinimum = parseFloat(val);","        return val;","    },","","    /**","     * Indicates whether or not the maximum attribute has been explicitly set.","     *","     * @method _getSetMax","     * @return Boolean","     * @private","     */","    _getSetMax: function()","    {","        return Y_Lang.isNumber(this._setMaximum);","    },","","    /**","     * Indicates whether or not the minimum attribute has been explicitly set.","     *","     * @method _getSetMin","     * @return Boolean","     * @private","     */","    _getSetMin: function()","    {","        return Y_Lang.isNumber(this._setMinimum);","    }","}, {","    ATTRS: {","        /**","         * Determines whether and offset is automatically calculated for the edges of the axis.","         *","         * @attribute calculateEdgeOffset","         * @type Boolean","         */","        calculateEdgeOffset: {","            value: false","        },","","        labelFunction: {","            valueFn: function() {","                return this.formatLabel;","            }","        },","","        /**","         * Hash of array identifed by a string value.","         *","         * @attribute keys","         * @type Object","         */","        keys: {","            value: {},","","            setter: function(val)","            {","                var keys = {},","                    i,","                    len,","                    data = this.get(\"dataProvider\");","                if(Y_Lang.isArray(val))","                {","                    len = val.length;","                    for(i = 0; i < len; ++i)","                    {","                        keys[val[i]] = this._getKeyArray(val[i], data);","                    }","","                }","                else if(Y_Lang.isString(val))","                {","                    keys = this.get(\"keys\");","                    keys[val] = this._getKeyArray(val, data);","                }","                else","                {","                    for(i in val)","                    {","                        if(val.hasOwnProperty(i))","                        {","                            keys[i] = this._getKeyArray(i, data);","                        }","                    }","                }","                this._updateTotalDataFlag = true;","                return keys;","            }","        },","","        /**","         *Returns the type of axis data","         *  <dl>","         *      <dt>time</dt><dd>Manages time data</dd>","         *      <dt>stacked</dt><dd>Manages stacked numeric data</dd>","         *      <dt>numeric</dt><dd>Manages numeric data</dd>","         *      <dt>category</dt><dd>Manages categorical data</dd>","         *  </dl>","         *","         * @attribute type","         * @type String","         */","        type:","        {","            readOnly: true,","","            getter: function ()","            {","                return this._type;","            }","        },","","        /**","         * Instance of `ChartDataProvider` that the class uses","         * to build its own data.","         *","         * @attribute dataProvider","         * @type Array","         */","        dataProvider:{","            setter: function (value)","            {","                return value;","            }","        },","","        /**","         * The maximum value contained in the `data` array. Used for","         * `maximum` when `autoMax` is true.","         *","         * @attribute dataMaximum","         * @type Number","         */","        dataMaximum: {","            getter: function ()","            {","                if(!Y_Lang.isNumber(this._dataMaximum))","                {","                    this._updateMinAndMax();","                }","                return this._dataMaximum;","            }","        },","","        /**","         * The maximum value that will appear on an axis.","         *","         * @attribute maximum","         * @type Number","         */","        maximum: {","            lazyAdd: false,","","            getter: \"_maximumGetter\",","","            setter: \"_maximumSetter\"","        },","","        /**","         * The minimum value contained in the `data` array. Used for","         * `minimum` when `autoMin` is true.","         *","         * @attribute dataMinimum","         * @type Number","         */","        dataMinimum: {","            getter: function ()","            {","                if(!Y_Lang.isNumber(this._dataMinimum))","                {","                    this._updateMinAndMax();","                }","                return this._dataMinimum;","            }","        },","","        /**","         * The minimum value that will appear on an axis.","         *","         * @attribute minimum","         * @type Number","         */","        minimum: {","            lazyAdd: false,","","            getter: \"_minimumGetter\",","","            setter: \"_minimumSetter\"","        },","","        /**","         * Determines whether the maximum is calculated or explicitly","         * set by the user.","         *","         * @attribute setMax","         * @type Boolean","         */","        setMax: {","            readOnly: true,","","            getter: \"_getSetMax\"","        },","","        /**","         * Determines whether the minimum is calculated or explicitly","         * set by the user.","         *","         * @attribute setMin","         * @type Boolean","         */","        setMin: {","            readOnly: true,","","            getter: \"_getSetMin\"","        },","","        /**","         * Array of axis data","         *","         * @attribute data","         * @type Array","         */","        data: {","            getter: function ()","            {","                if(!this._data || this._updateTotalDataFlag)","                {","                    this._updateTotalData();","                }","                return this._data;","            }","        },","","        /**","         * Array containing all the keys in the axis.","","         * @attribute keyCollection","         * @type Array","         */","        keyCollection: {","            getter: function()","            {","                var keys = this.get(\"keys\"),","                    i,","                    col = [];","                for(i in keys)","                {","                    if(keys.hasOwnProperty(i))","                    {","                        col.push(i);","                    }","                }","                return col;","            },","            readOnly: true","        },","","        /**","         * Object which should have by the labelFunction","         *","         * @attribute labelFunctionScope","         * @type Object","         */","        labelFunctionScope: {}","    }","});","","","}, '@VERSION@', {\"requires\": [\"classnamemanager\", \"datatype-number\", \"datatype-date\", \"base\", \"event-custom\"]});","","}());"]};
}
var __cov_wclOkU_OVk6DW$rAimWqSA = __coverage__['build/axis-base/axis-base.js'];
__cov_wclOkU_OVk6DW$rAimWqSA.s['1']++;YUI.add('axis-base',function(Y,NAME){__cov_wclOkU_OVk6DW$rAimWqSA.f['1']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['2']++;var Y_Lang=Y.Lang;__cov_wclOkU_OVk6DW$rAimWqSA.s['3']++;function Renderer(){__cov_wclOkU_OVk6DW$rAimWqSA.f['2']++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['4']++;Renderer.ATTRS={styles:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['3']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['5']++;this._styles=(__cov_wclOkU_OVk6DW$rAimWqSA.b['1'][0]++,this._styles)||(__cov_wclOkU_OVk6DW$rAimWqSA.b['1'][1]++,this._getDefaultStyles());__cov_wclOkU_OVk6DW$rAimWqSA.s['6']++;return this._styles;},setter:function(val){__cov_wclOkU_OVk6DW$rAimWqSA.f['4']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['7']++;this._styles=this._setStyles(val);}},graphic:{}};__cov_wclOkU_OVk6DW$rAimWqSA.s['8']++;Renderer.NAME='renderer';__cov_wclOkU_OVk6DW$rAimWqSA.s['9']++;Renderer.prototype={_styles:null,_setStyles:function(newstyles){__cov_wclOkU_OVk6DW$rAimWqSA.f['5']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['10']++;var styles=this.get('styles');__cov_wclOkU_OVk6DW$rAimWqSA.s['11']++;return this._mergeStyles(newstyles,styles);},_mergeStyles:function(a,b){__cov_wclOkU_OVk6DW$rAimWqSA.f['6']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['12']++;if(!b){__cov_wclOkU_OVk6DW$rAimWqSA.b['2'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['13']++;b={};}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['2'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['14']++;var newstyles=Y.merge(b,{});__cov_wclOkU_OVk6DW$rAimWqSA.s['15']++;Y.Object.each(a,function(value,key){__cov_wclOkU_OVk6DW$rAimWqSA.f['7']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['16']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][0]++,b.hasOwnProperty(key))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][1]++,Y_Lang.isObject(value))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][2]++,!Y_Lang.isFunction(value))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][3]++,!Y_Lang.isArray(value))){__cov_wclOkU_OVk6DW$rAimWqSA.b['3'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['17']++;newstyles[key]=this._mergeStyles(value,b[key]);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['3'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['18']++;newstyles[key]=value;}},this);__cov_wclOkU_OVk6DW$rAimWqSA.s['19']++;return newstyles;},_copyObject:function(obj){__cov_wclOkU_OVk6DW$rAimWqSA.f['8']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['20']++;var newObj={},key,val;__cov_wclOkU_OVk6DW$rAimWqSA.s['21']++;for(key in obj){__cov_wclOkU_OVk6DW$rAimWqSA.s['22']++;if(obj.hasOwnProperty(key)){__cov_wclOkU_OVk6DW$rAimWqSA.b['5'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['23']++;val=obj[key];__cov_wclOkU_OVk6DW$rAimWqSA.s['24']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['7'][0]++,Y_Lang.isObject(val))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['7'][1]++,!Y_Lang.isFunction(val))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['7'][2]++,!Y_Lang.isArray(val))){__cov_wclOkU_OVk6DW$rAimWqSA.b['6'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['25']++;newObj[key]=this._copyObject(val);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['6'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['26']++;newObj[key]=val;}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['5'][1]++;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['27']++;return newObj;},_getDefaultStyles:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['9']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['28']++;return{padding:{top:0,right:0,bottom:0,left:0}};}};__cov_wclOkU_OVk6DW$rAimWqSA.s['29']++;Y.augment(Renderer,Y.Attribute);__cov_wclOkU_OVk6DW$rAimWqSA.s['30']++;Y.Renderer=Renderer;__cov_wclOkU_OVk6DW$rAimWqSA.s['31']++;Y.AxisBase=Y.Base.create('axisBase',Y.Base,[Y.Renderer],{initializer:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['10']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['32']++;this.after('minimumChange',Y.bind(this._keyChangeHandler,this));__cov_wclOkU_OVk6DW$rAimWqSA.s['33']++;this.after('maximumChange',Y.bind(this._keyChangeHandler,this));__cov_wclOkU_OVk6DW$rAimWqSA.s['34']++;this.after('keysChange',this._keyChangeHandler);__cov_wclOkU_OVk6DW$rAimWqSA.s['35']++;this.after('dataProviderChange',this._dataProviderChangeHandler);},_dataProviderChangeHandler:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['11']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['36']++;var keyCollection=this.get('keyCollection').concat(),keys=this.get('keys'),i;__cov_wclOkU_OVk6DW$rAimWqSA.s['37']++;if(keys){__cov_wclOkU_OVk6DW$rAimWqSA.b['8'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['38']++;for(i in keys){__cov_wclOkU_OVk6DW$rAimWqSA.s['39']++;if(keys.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['9'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['40']++;delete keys[i];}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['9'][1]++;}}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['8'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['41']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['11'][0]++,keyCollection)&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['11'][1]++,keyCollection.length)){__cov_wclOkU_OVk6DW$rAimWqSA.b['10'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['42']++;this.set('keys',keyCollection);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['10'][1]++;}},_updateMinAndMax:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['12']++;},GUID:'yuibaseaxis',_type:null,_setMaximum:null,_setMinimum:null,_data:null,_updateTotalDataFlag:true,_dataReady:false,addKey:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['13']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['43']++;this.set('keys',value);},_getKeyArray:function(key,data){__cov_wclOkU_OVk6DW$rAimWqSA.f['14']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['44']++;var i=0,obj,keyArray=[],len=data.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['45']++;for(;i<len;++i){__cov_wclOkU_OVk6DW$rAimWqSA.s['46']++;obj=data[i];__cov_wclOkU_OVk6DW$rAimWqSA.s['47']++;keyArray[i]=obj[key];}__cov_wclOkU_OVk6DW$rAimWqSA.s['48']++;return keyArray;},_updateTotalData:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['15']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['49']++;var keys=this.get('keys'),i;__cov_wclOkU_OVk6DW$rAimWqSA.s['50']++;this._data=[];__cov_wclOkU_OVk6DW$rAimWqSA.s['51']++;for(i in keys){__cov_wclOkU_OVk6DW$rAimWqSA.s['52']++;if(keys.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['12'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['53']++;this._data=this._data.concat(keys[i]);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['12'][1]++;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['54']++;this._updateTotalDataFlag=false;},removeKey:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['16']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['55']++;var keys=this.get('keys');__cov_wclOkU_OVk6DW$rAimWqSA.s['56']++;if(keys.hasOwnProperty(value)){__cov_wclOkU_OVk6DW$rAimWqSA.b['13'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['57']++;delete keys[value];__cov_wclOkU_OVk6DW$rAimWqSA.s['58']++;this._keyChangeHandler();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['13'][1]++;}},getKeyValueAt:function(key,index){__cov_wclOkU_OVk6DW$rAimWqSA.f['17']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['59']++;var value=NaN,keys=this.get('keys'),i,len;__cov_wclOkU_OVk6DW$rAimWqSA.s['60']++;if(Y.Lang.isArray(key)){__cov_wclOkU_OVk6DW$rAimWqSA.b['14'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['61']++;len=key.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['62']++;value=[];__cov_wclOkU_OVk6DW$rAimWqSA.s['63']++;for(i=0;i<len;i=i+1){__cov_wclOkU_OVk6DW$rAimWqSA.s['64']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['16'][0]++,keys[key[i]])&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['16'][1]++,Y_Lang.isNumber(parseFloat(keys[key[i]][index])))){__cov_wclOkU_OVk6DW$rAimWqSA.b['15'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['65']++;value.push(parseFloat(keys[key[i]][index]));}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['15'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['66']++;value.push(NaN);}}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['14'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['67']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['18'][0]++,keys[key])&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['18'][1]++,Y_Lang.isNumber(parseFloat(keys[key][index])))){__cov_wclOkU_OVk6DW$rAimWqSA.b['17'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['68']++;value=keys[key][index];__cov_wclOkU_OVk6DW$rAimWqSA.s['69']++;value=parseFloat(value);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['17'][1]++;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['70']++;return value;},getDataByKey:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['18']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['71']++;var obj,i,len,key,keys=this.get('keys');__cov_wclOkU_OVk6DW$rAimWqSA.s['72']++;if(Y_Lang.isArray(value)){__cov_wclOkU_OVk6DW$rAimWqSA.b['19'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['73']++;obj={};__cov_wclOkU_OVk6DW$rAimWqSA.s['74']++;len=value.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['75']++;for(i=0;i<len;i=i+1){__cov_wclOkU_OVk6DW$rAimWqSA.s['76']++;key=value[i];__cov_wclOkU_OVk6DW$rAimWqSA.s['77']++;if(keys[key]){__cov_wclOkU_OVk6DW$rAimWqSA.b['20'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['78']++;obj[key]=this.getDataByKey(key);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['20'][1]++;}}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['19'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['79']++;if(keys[value]){__cov_wclOkU_OVk6DW$rAimWqSA.b['21'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['80']++;obj=keys[value];}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['21'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['81']++;obj=null;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['82']++;return obj;},getTotalMajorUnits:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['19']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['83']++;var units,majorUnit=this.get('styles').majorUnit;__cov_wclOkU_OVk6DW$rAimWqSA.s['84']++;units=majorUnit.count;__cov_wclOkU_OVk6DW$rAimWqSA.s['85']++;return units;},getEdgeOffset:function(ct,l){__cov_wclOkU_OVk6DW$rAimWqSA.f['20']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['86']++;var edgeOffset;__cov_wclOkU_OVk6DW$rAimWqSA.s['87']++;if(this.get('calculateEdgeOffset')){__cov_wclOkU_OVk6DW$rAimWqSA.b['22'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['88']++;edgeOffset=l/ct/2;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['22'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['89']++;edgeOffset=0;}__cov_wclOkU_OVk6DW$rAimWqSA.s['90']++;return edgeOffset;},_keyChangeHandler:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['21']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['91']++;this._updateMinAndMax();__cov_wclOkU_OVk6DW$rAimWqSA.s['92']++;this._updateTotalDataFlag=true;__cov_wclOkU_OVk6DW$rAimWqSA.s['93']++;this.fire('dataUpdate');},_getDefaultStyles:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['22']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['94']++;var axisstyles={majorUnit:{determinant:'count',count:11,distance:75}};__cov_wclOkU_OVk6DW$rAimWqSA.s['95']++;return axisstyles;},_maximumGetter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['23']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['96']++;var max=this.get('dataMaximum'),min=this.get('minimum');__cov_wclOkU_OVk6DW$rAimWqSA.s['97']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['24'][0]++,min===0)&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['24'][1]++,max===0)){__cov_wclOkU_OVk6DW$rAimWqSA.b['23'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['98']++;max=10;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['23'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['99']++;if(Y_Lang.isNumber(this._setMaximum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['25'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['100']++;max=this._setMaximum;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['25'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['101']++;return parseFloat(max);},_maximumSetter:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['24']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['102']++;this._setMaximum=parseFloat(value);__cov_wclOkU_OVk6DW$rAimWqSA.s['103']++;return value;},_minimumGetter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['25']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['104']++;var min=this.get('dataMinimum');__cov_wclOkU_OVk6DW$rAimWqSA.s['105']++;if(Y_Lang.isNumber(this._setMinimum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['26'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['106']++;min=this._setMinimum;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['26'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['107']++;return parseFloat(min);},_minimumSetter:function(val){__cov_wclOkU_OVk6DW$rAimWqSA.f['26']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['108']++;this._setMinimum=parseFloat(val);__cov_wclOkU_OVk6DW$rAimWqSA.s['109']++;return val;},_getSetMax:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['27']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['110']++;return Y_Lang.isNumber(this._setMaximum);},_getSetMin:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['28']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['111']++;return Y_Lang.isNumber(this._setMinimum);}},{ATTRS:{calculateEdgeOffset:{value:false},labelFunction:{valueFn:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['29']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['112']++;return this.formatLabel;}},keys:{value:{},setter:function(val){__cov_wclOkU_OVk6DW$rAimWqSA.f['30']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['113']++;var keys={},i,len,data=this.get('dataProvider');__cov_wclOkU_OVk6DW$rAimWqSA.s['114']++;if(Y_Lang.isArray(val)){__cov_wclOkU_OVk6DW$rAimWqSA.b['27'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['115']++;len=val.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['116']++;for(i=0;i<len;++i){__cov_wclOkU_OVk6DW$rAimWqSA.s['117']++;keys[val[i]]=this._getKeyArray(val[i],data);}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['27'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['118']++;if(Y_Lang.isString(val)){__cov_wclOkU_OVk6DW$rAimWqSA.b['28'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['119']++;keys=this.get('keys');__cov_wclOkU_OVk6DW$rAimWqSA.s['120']++;keys[val]=this._getKeyArray(val,data);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['28'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['121']++;for(i in val){__cov_wclOkU_OVk6DW$rAimWqSA.s['122']++;if(val.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['29'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['123']++;keys[i]=this._getKeyArray(i,data);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['29'][1]++;}}}}__cov_wclOkU_OVk6DW$rAimWqSA.s['124']++;this._updateTotalDataFlag=true;__cov_wclOkU_OVk6DW$rAimWqSA.s['125']++;return keys;}},type:{readOnly:true,getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['31']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['126']++;return this._type;}},dataProvider:{setter:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['32']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['127']++;return value;}},dataMaximum:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['33']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['128']++;if(!Y_Lang.isNumber(this._dataMaximum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['30'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['129']++;this._updateMinAndMax();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['30'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['130']++;return this._dataMaximum;}},maximum:{lazyAdd:false,getter:'_maximumGetter',setter:'_maximumSetter'},dataMinimum:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['34']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['131']++;if(!Y_Lang.isNumber(this._dataMinimum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['31'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['132']++;this._updateMinAndMax();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['31'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['133']++;return this._dataMinimum;}},minimum:{lazyAdd:false,getter:'_minimumGetter',setter:'_minimumSetter'},setMax:{readOnly:true,getter:'_getSetMax'},setMin:{readOnly:true,getter:'_getSetMin'},data:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['35']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['134']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['33'][0]++,!this._data)||(__cov_wclOkU_OVk6DW$rAimWqSA.b['33'][1]++,this._updateTotalDataFlag)){__cov_wclOkU_OVk6DW$rAimWqSA.b['32'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['135']++;this._updateTotalData();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['32'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['136']++;return this._data;}},keyCollection:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['36']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['137']++;var keys=this.get('keys'),i,col=[];__cov_wclOkU_OVk6DW$rAimWqSA.s['138']++;for(i in keys){__cov_wclOkU_OVk6DW$rAimWqSA.s['139']++;if(keys.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['34'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['140']++;col.push(i);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['34'][1]++;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['141']++;return col;},readOnly:true},labelFunctionScope:{}}});},'@VERSION@',{'requires':['classnamemanager','datatype-number','datatype-date','base','event-custom']});
